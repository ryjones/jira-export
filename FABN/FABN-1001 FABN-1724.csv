Summary,Issue key,Issue id,Parent id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Inward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Blocks),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Inward issue link (Duplicate),Inward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Git Code Review),Outward issue link (Git Code Review),Inward issue link (Issue split),Outward issue link (Issue split),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Authorized Watchers),Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
TypeScript definitions for fabric-network classes,FABN-1001,35139,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,07/Nov/18 1:48 AM,21/Nov/18 12:45 AM,28/Oct/23 3:25 AM,20/Nov/18 7:43 PM,,,,,,,,,,0,,,,,,"Some TypeScript definitions are obviously missing, for example the Transaction class. Others are likely out of step with the current state of the code.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxpr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
JSDoc for fabric-network,FABN-1002,35140,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,07/Nov/18 1:51 AM,21/Dec/18 1:45 AM,28/Oct/23 3:25 AM,21/Dec/18 1:45 AM,,,,,,,,,,0,,,,,,"Several issues with the current JSDoc:
 * No module scoping so the generated docs are a confusing mash-up of fabric-client and fabric-network classes.
 * The fabric-network module documentation is an empty page.
 * Gateway.connect() does not correctly describe the possible parameter types: should be string (qualified file path), JSON object (connection profile), or Client. Maybe need an integration test to ensure Client works.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxpz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Add callback on ChannelEventHub connect,FABN-1003,35167,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,07/Nov/18 9:13 PM,15/Nov/18 1:51 AM,28/Oct/23 3:25 AM,15/Nov/18 1:51 AM,,,,,,v1.4.0,,,,0,,,,,,"Allow users to pass in a callback for good connection and for an error on connection.

These will allow the connection to run before a registration of an event listener.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxuf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Programming model - Node.js SDK (additional enhancements),FABN-1004,35174,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,andrew-coleman,andrew-coleman,andrew-coleman,08/Nov/18 12:46 AM,07/Aug/19 9:29 PM,28/Oct/23 3:25 AM,20/Feb/19 6:50 PM,Future,,,,,,,,,0,,,,,,"Continuing enhancement of the fabric-network high level node SDK.

Areas of attention:
 * Operational SDK - simplified install/instantiate, add Org, add Peer, assign anchor peer, etc.
 * Support for chaincode events - ability to register a callback
 * Replay of events
 * Wallet enhancements - including CLI to manage wallet entries
 * Improved discovery support: 
 ** Mapping of hostnames/port numbers for discovery results using declarative format (config file, env vars, etc)
 ** support for discovery of chaincode to chaincode & collections
 * Pluggable query handler
 ** Round-robin handler
 ** Strong query (seeking agreement from multiple peers)",,andrew-coleman,bestbeforetoday,MichaelWang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-14,,Programming model - Node.js SDK (additional enhancements),To Do,No,,Unset,No,,,"1|hzzxvj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,MichaelWang,,,,,,,,,,,,,,,,,,,"20/Feb/19 6:50 PM;andrew-coleman;This epic has been broken out into separate epics for each item listed in the description.  Closing this 'placeholder' epic;;;",,,,,,,,,,,,,,,,
gulp doc is failing consistently to generate the node-API docs,FABN-1005,35182,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,08/Nov/18 3:33 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,09/Nov/18 12:26 AM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"The gulp doc is failing consistently on fabric-sdk-node builds to generate the node-API docs


{code:java}
00:03:55.269 [16:19:16] undefined:35
00:03:55.269 }
00:03:55.269 ^
00:03:55.269 
00:03:55.269 SyntaxError: Unexpected token } in JSON at position 1038
00:03:55.269     at JSON.parse (<anonymous>)
00:03:55.269     at /w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/lib/jsdoc/tutorial/resolver.js:134:37
00:03:55.269     at Array.forEach (<anonymous>)
00:03:55.269     at Object.exports.load (/w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/lib/jsdoc/tutorial/resolver.js:109:11)
00:03:55.269     at Object.module.exports.cli.resolveTutorials (/w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/cli.js:413:18)
00:03:55.269     at Object.module.exports.cli.processParseResults (/w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/cli.js:397:13)
00:03:55.269     at module.exports.cli.main (/w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/cli.js:240:14)
00:03:55.269     at Object.module.exports.cli.runCommand (/w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/cli.js:189:5)
00:03:55.269     at /w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/jsdoc.js:105:9
00:03:55.269     at Object.<anonymous> (/w/workspace/fabric-sdk-node-docs-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/jsdoc/jsdoc.js:106:3)
00:03:55.269     at Module._compile (module.js:652:30)
00:03:55.269     at Object.Module._extensions..js (module.js:663:10)
00:03:55.269     at Module.load (module.js:565:32)
00:03:55.269     at tryModuleLoad (module.js:505:12)
00:03:55.269     at Function.Module._load (module.js:497:3)
00:03:55.269     at Function.Module.runMain (module.js:693:10)
00:03:55.269 
00:03:55.276 [16:19:16] JSDoc returned with error code: 1
{code}

*Build Logs*

https://jenkins.hyperledger.org/me/my-views/view/all/job/fabric-sdk-node-docs-x86_64/1/console

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-sdk-node-docs-x86_64/1/",,harrisob@us.ibm.com,mbwhite,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,9fe23549211c63d7da532267067d0510c2e94d55,Unset,No,,,"1|hzzxx3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,mbwhite,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update API docs script,FABN-1006,35191,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,08/Nov/18 5:46 AM,13/Nov/18 3:50 AM,28/Oct/23 3:25 AM,13/Nov/18 3:49 AM,,,,,,,,,,0,,,,,,"Update ""gulp doc"" to ""gulp docs"" only in master branch",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzxz3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,dev,main,,,,,,,,,true,"13/Nov/18 3:49 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27448/;;;",,,,,,,,,,,,,,,,
DefineSupportCode is deprecated in run-test-cucumber fails the fabric-sdk-node-merge job,FABN-1007,35222,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,08/Nov/18 11:03 PM,14/Nov/18 11:14 PM,28/Oct/23 3:25 AM,14/Nov/18 11:14 PM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"DefineSupportCode is deprecated in the cucumber.js feature in run-test-cucumber fails the fabric-sdk-node-merge-x86_64 job.

 
{code:java}
/16:22:15 [21:22:15] Starting 'run-test-cucumber'...
16:22:16 
16:22:16 > fabric-sdk-node@1.4.0-snapshot test:cucumber /w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node
16:22:16 > cucumber-js ./test/scenario/features/*.feature
16:22:16 
16:22:18 (node:8082) DeprecationWarning: cucumber: defineSupportCode is deprecated. Please require/import the individual methods instead./
{code}
 *Build log:*

[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/32/consoleFull]

 ",,andrew-coleman,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy3z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,"14/Nov/18 11:14 PM;andrew-coleman;no longer failing;;;",,,,,,,,,,,,,,,,
Update version in npm modules package.json to unstable,FABN-1008,35225,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,08/Nov/18 11:06 PM,15/Jan/19 4:40 AM,28/Oct/23 3:25 AM,15/Jan/19 4:40 AM,v1.4.0,,,,,v1.4.1,,,,0,,,,,,"In both release-1.2 and release-1.3 branches, the npm modules current release version still pointing to latest and latest-1.2. As a best practice it's always keep it as unstable after the release. With that, change the version and tag to unstable-1.3 and unstable-1.2

and appropriate versions. 

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.3/fabric-ca-client/package.json#L4]
[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.2/fabric-client/package.json]",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzy4f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing Client.queryPeers in index.d.ts,FABN-1009,35257,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Invalid: Works as Expected,vieiramanoel,vieiramanoel,vieiramanoel,10/Nov/18 1:18 AM,10/Nov/18 1:25 AM,28/Oct/23 3:25 AM,10/Nov/18 1:25 AM,v1.3.0,,,,,,,,,0,,,,,,"Client.queryPeers(), Client.PeerQueryRequest and Client.PeerQueryResponse missing in index.d.ts, then tsc reports:

{code:java}
 src/fabric-artifacts/ChannelOps.ts(59,19): error TS2339: Property 'queryPeers' does not exist on type 'Client'
{code}
",,vieiramanoel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,https://github.com/hyperledger/fabric-sdk-node/commit/ddbb8604c8d60fa30d01130e20e9f19d31436b7d,Unset,No,,,"1|hzzybj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vieiramanoel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK queryCollectionsConfig function is not documented in the API reference,FABN-1010,35292,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,zhaochy,denyeart,denyeart,13/Nov/18 1:00 AM,27/Nov/18 1:58 PM,28/Oct/23 3:25 AM,27/Nov/18 1:58 PM,,,,,,v1.3.0,v1.4.0,,,0,,,,,,"Need to document this function:

https://github.com/hyperledger/fabric-sdk-node/blob/release-1.3/fabric-client/lib/Channel.js#L2313",,denyeart,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyhz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,zhaochy,,,,,,,,,dev,main,,,,,,,,,true,"13/Nov/18 1:01 AM;denyeart;[~zhaochy] Could you add the API documentation related to:

[https://gerrit.hyperledger.org/r/#/c/25753/]

 ;;;","14/Nov/18 2:04 PM;zhaochy;master: https://gerrit.hyperledger.org/r/#/c/27536/
release-1.3: https://gerrit.hyperledger.org/r/#/c/27537/;;;","22/Nov/18 2:49 PM;denyeart;Need one more fix to indicate the response is an array of {color:#444444}CollectionQueryResponse{color}.;;;","22/Nov/18 3:23 PM;zhaochy;doc fix at
master: https://gerrit.hyperledger.org/r/#/c/27567/
release-1.3: https://gerrit.hyperledger.org/r/#/c/27701/;;;",,,,,,,,,,,,,
fabric-sdk-node verify jobs are running into STDERR error response,FABN-1011,35288,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,nkl199,sambhavdutt,sambhavdutt,13/Nov/18 12:17 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,19/Nov/18 11:43 PM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"There are STDERR error messages observed in fabric-sdk-node jobs on x and z platforms after 'run-test-cucumber'

{code:java}
19:35:36 > fabric-sdk-node@1.4.0-snapshot test:cucumber /w/workspace/fabric-sdk-node-verify-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node
19:35:36 > cucumber-js ./test/scenario/features/*.feature
19:35:36 
19:35:37 (node:41328) DeprecationWarning: cucumber: defineSupportCode is deprecated. Please require/import the individual methods instead.
19:35:37 STDERR:  Error response from daemon: Cannot kill container: 0e3bcb8633f0: Container 0e3bcb8633f04fd94dfd9826ebb35a9fd8ccbc8c8112d0549ac40cfe9d9e6cf7 is not running
19:35:37 
19:35:37 STDOUT:  0e3bcb8633f0
19:35:37 
19:35:43 .STDERR:  ""docker kill"" requires at least 1 argument.
19:35:43 See 'docker kill --help'.
19:35:43 
19:35:43 Usage:  docker kill [OPTIONS] CONTAINER [CONTAINER...] [flags]
19:35:43 
19:35:43 Kill one or more running containers
19:35:43 
19:35:43 STDERR:  ""docker rm"" requires at least 1 argument.
19:35:43 See 'docker rm --help'.
19:35:43 
19:35:43 Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...] [flags]
19:35:43 
19:35:43 Remove one or more containers
19:35:43 
19:35:43 STDERR:  Creating couchdb.org2.example.com ... 
19:35:43 
19:35:43 STDERR:  Creating ca0.example.com ... 
19:35:43 
19:35:43 STDERR:  Creating couchdb.org1.example.com ... 
19:35:43 
19:35:43 STDERR:  Creating couchdb.org2.example.com
19:35:43 Creating ca0.example.com
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-verify-s390x/144/consoleFull",,andrew-coleman,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,434843864e36c91bb29d8e86e97571df92e9df91,Unset,No,,,"1|hzzyh3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,"14/Nov/18 11:35 PM;andrew-coleman;[~sambhavdutt] why is it a problem to be writing to stderr?;;;",,,,,,,,,,,,,,,,
test enhance: requiredPeerCount>=2,FABN-1012,35305,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Won't Do,davidkhala,davidkhala,davidkhala,13/Nov/18 3:11 PM,22/Nov/18 1:06 PM,28/Oct/23 3:25 AM,22/Nov/18 1:06 PM,v1.3.0,,,,,,,,,0,,,,,,"change privateData configuration sample => requiredPeerCount==2, and make sure all tests passed still. 

",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12096,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzykn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Interoperability Test,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,,,,,,,"13/Nov/18 3:17 PM;davidkhala; https://gerrit.hyperledger.org/r/27519 ;;;","22/Nov/18 1:06 PM;davidkhala;It is not required anymore;;;",,,,,,,,,,,,,,,
Artifact the build logs in fabric-sdk-node CI jobs,FABN-1013,35316,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,sambhavdutt,rameshthoomu,rameshthoomu,14/Nov/18 12:13 AM,20/Nov/18 6:30 AM,28/Oct/23 3:25 AM,20/Nov/18 6:30 AM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"We have to capture the docker container logs for every build failure and post the same as build artifacts in Jenkins.

See this reference to implement https://gerrit.hyperledger.org/r/#/c/27475/20/scripts/Jenkins_Scripts/CI_Script.sh",,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzymv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,"14/Nov/18 4:46 AM;harrisob@us.ibm.com;This is fixed now ?;;;","15/Nov/18 3:53 AM;rameshthoomu;No.. We will submit patch soon;;;",,,,,,,,,,,,,,,
Use ChannelEventHub.connect() callback in EventHubFactory,FABN-1014,35323,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Nov/18 2:49 AM,16/Nov/18 1:26 AM,28/Oct/23 3:25 AM,16/Nov/18 1:26 AM,,,,,,,,,,0,,,,,,The code in EventHubFactory currently listens for a block event to know when a ChannelEventHub connect() completes. This can now use the optional callback parameter to ChannelEventHub.connect().,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyof:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Update API docs script,FABN-1015,35326,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,rameshthoomu,rameshthoomu,14/Nov/18 5:23 AM,24/Apr/19 11:40 PM,28/Oct/23 3:25 AM,24/Apr/19 11:40 PM,,,,,,,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyp3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Change the tag to unstable in all the release branches,FABN-1016,35343,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,14/Nov/18 11:29 PM,16/Nov/18 5:38 PM,28/Oct/23 3:25 AM,16/Nov/18 5:38 PM,v1.1.0,v1.2.0,v1.3.0,,,v1.1.0,v1.2.0,v1.3.0,,0,,,,,,"In all the release branches, I see ""tag"" value is now pointing to ""latest"" or ""latest-1.1"" or ""latest-1.2"" as we are on release branches, the tag version should point to ""unstable""

 

Ex:

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.3/fabric-ca-client/package.json#L4]

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.2/fabric-ca-client/package.json#L4]

https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/fabric-ca-client/package.json#L4",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzysn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nodesdk build status badge issue,FABN-1017,35345,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sambhavdutt,rameshthoomu,rameshthoomu,15/Nov/18 12:50 AM,05/Sep/20 10:46 AM,28/Oct/23 3:25 AM,05/Sep/20 10:46 AM,v1.4.0,,,,,v1.4.0,,,,0,external,sdk-triaged,,,,"fabric-sdk-node CI jobs was renamed after the pipeline changes merged. The job names are not pointing fabric-sdk-node-verify-x86_64 and fabric-sdk-node-merge-x86_64.. But the Build Status badge on README is still pointing to ""fabric-sdk-node8-merge-master-x86_64"" which was renamed recently after pipeline changes.

Remove the badge details from all the branches

This change has to apply on the all the branches.",,davidkhala,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhp",,,,Unset,Unset,7 Aug to 14 Aug,4 Sep to 11 Sep 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,rameshthoomu,sambhavdutt,,,,,,,,dev,main,,,,,,,,,true,"16/Nov/18 6:00 AM;sambhavdutt;https://gerrit.hyperledger.org/r/#/c/27581/ - Merged                      (master)
https://gerrit.hyperledger.org/r/#/c/27587/  - Merged.   (release-1.3)
https://gerrit.hyperledger.org/r/#/c/27589/  - Merged.   (release-1.1);;;","12/Aug/20 4:27 PM;davidkhala;I would like to reopen this JIRA ticket for new issues on same topic: node-sdk build badge. 

Quoted from Mark Lewis:

How about adding build status badges for all the current release branches (release-1.4, release-2.2, master) to either the README.md or some status page in the master branch? It would be really useful to have them all easily visible in one place.

We could have also have build status badges for individual branches in their respective README but this seems less useful as people typically only see the master branch README when visiting the GitHub pages.

The other consideration is that the useful build status is the last Scheduled or Individual CI builds so we can monitor whether things like changes in other Fabric components have broken the SDK. It is not useful to flag up failures in PR builds.;;;","05/Sep/20 10:46 AM;davidkhala;Done by https://github.com/hyperledger/fabric-sdk-node/pull/298
;;;",,,,,,,,,,,,,,
Add discovery to Chaincode queries (NodeSDK),FABN-1018,35351,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Nov/18 1:55 AM,25/Oct/19 2:51 AM,28/Oct/23 3:25 AM,25/Oct/19 2:51 AM,,,,,,,,,,0,sdk-triaged,,,,," 

Add a chaincode query handler similar to the DiscoveryEndorsementHandler that consider discovery results when doing a chaincode query. The new programming model will want to leverage this API when doing a 'contract.evaluateTransaction()' which is a ==>transaction.evaluate(). How many peers to use and which organizations will have to be passed as arguments or as yet to be defined default behavior will be used.",,angelo.decaro,harrisob@us.ibm.com,MichaelWang,yacovm,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,FABN-840,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,No,,,FAB-11374,,,,,,,,,"1|hzzyuf:",,,,Unset,,,,,,,,,,,,,,No,,,,,,,,,,,angelo.decaro,harrisob@us.ibm.com,MichaelWang,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add required orgs and preferred orgs to discovery endorsement,FABN-1019,35355,34887,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Nov/18 2:26 AM,07/Dec/18 6:30 AM,28/Oct/23 3:25 AM,07/Dec/18 6:30 AM,v1.4.0,,,,,,,,,0,,,,,,"The application should be able to have specific peers endorse a proposal by specifying organization names.  Add the following new arguments to the discovery handler
requiredOrgs: An array of strings that represent the names of organizations that will be given priority by the endorsement handler and must be included in the successful endorsements collected or the endorsement call will fail.
preferredOrgs: An array of strings that represent the names of organizations that should be given priority by the endorsement handler if their block height is up to date.
ignoredOrgs: An array of strings that represent the names of organizations that should be ignored by the endorsement handler.
preferredHeightGap: An integer representing the maximum difference in the block height of a peer and the highest block height found in a group of peers within an endorsement plan to be allowed to be a priority peer. A peer will not be given priority if it's block height is too far behind the peer with the highest block height. The default will be 0 if not provided.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyvb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,"29/Nov/18 12:32 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/27795/;;;",,,,,,,,,,,,,,,,
Metadata files packaged with Windows path sep on Windows systems,FABN-1020,35380,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,15/Nov/18 8:52 PM,15/Nov/18 11:43 PM,28/Oct/23 3:25 AM,15/Nov/18 11:43 PM,,,,,,,,,,0,,,,,,"On Windows, the SDK packages metadata files into the tarball with the Windows path separator ""\"", instead of the required Unix path separator ""/"". There is code in the SDK to handle this, but this code is incorrect and needs correcting.",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzyzb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,dev,main,,,,,,,,,true,"15/Nov/18 8:56 PM;sstone1;https://gerrit.hyperledger.org/r/c/27574/;;;",,,,,,,,,,,,,,,,
Gulp-shell plugin error fails to run gulp run-test in node SDK,FABN-1021,35386,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,15/Nov/18 11:23 PM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,16/Nov/18 4:59 AM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"Gulp-shell plugin error fails to run gulp run-test in node SDK merge jobs on the master branch for both X86_64 & s390x platforms.
{code:java}
/04:17:10 [04:17:05] 'test' errored after 23 min
04:17:10 [04:17:05] Error in plugin ""gulp-shell""
04:17:10 Message:
04:17:10     Command `./node_modules/nyc/bin/nyc.js gulp run-test` failed with exit code 1/ code placeholder
{code}
Build log:

[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-s390x/41/consoleFull]

 

 ",,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,ab11815cc079d0cf226aa5c2f3702525f630e46e,Unset,No,,,"1|hzzz07:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,"16/Nov/18 4:59 AM;vijaypunugubati;Irrelevant error no need to create the bug on this it's warning only. ;;;",,,,,,,,,,,,,,,,
fix unstable build failure in release-1.1 branch,FABN-1022,35400,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Nov/18 3:29 AM,16/Nov/18 12:56 PM,28/Oct/23 3:25 AM,16/Nov/18 12:56 PM,,,,,,,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzz33:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"16/Nov/18 12:56 PM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27586/;;;",,,,,,,,,,,,,,,,
fix version reference issue in package.json,FABN-1023,35406,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Nov/18 6:13 AM,18/Nov/18 5:33 AM,28/Oct/23 3:25 AM,16/Nov/18 8:11 PM,,,,,,,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzz4v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"18/Nov/18 5:33 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/27593/;;;",,,,,,,,,,,,,,,,
Update pipeline scripts in fabric-sdk-node project,FABN-1024,35409,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Nov/18 12:57 PM,20/Nov/18 3:42 AM,28/Oct/23 3:25 AM,20/Nov/18 3:42 AM,,,,,,,,,,0,,,,,,"Update pipeline scripts in fabric-sdk-node (master, release-1.3, release-1.2 and release-1.1) branches. Below changes should made in the pipeline scripts
 * Send Messages to RocketChat jenkins-robot channel
 * Update nodejs tool in jenkins pipeline
 * Modify publish and api docs script.",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzz5b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,dev,main,,,,,,,,,true,"18/Nov/18 5:35 AM;rameshthoomu;[https://gerrit.hyperledger.org/r/#/c/27598/]
[https://gerrit.hyperledger.org/r/#/c/27596/]
[https://gerrit.hyperledger.org/r/#/c/27613/]
https://gerrit.hyperledger.org/r/#/c/27611/;;;",,,,,,,,,,,,,,,,
false positive build results on npm publish failure,FABN-1025,35413,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,16/Nov/18 9:58 PM,30/Nov/18 1:38 PM,28/Oct/23 3:25 AM,30/Nov/18 1:38 PM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"After the pipeline changes made in fabric-sdk-node, observing false positives when npm publish script is failed to execute. https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/50/console",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzz67:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"30/Nov/18 1:37 PM;rameshthoomu;Not seeing these issues now after adding -e (exit on the first error) condition in the npm publish build script. Closing this issue for now.;;;",,,,,,,,,,,,,,,,
Add transientMap example to node sdk private data tutorial,FABN-1026,35416,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,denyeart,denyeart,17/Nov/18 12:16 AM,24/Nov/18 6:55 AM,28/Oct/23 3:25 AM,23/Nov/18 6:24 PM,,,,,,v1.3.0,v1.4.0,,,0,,,,,,"Add transientMap example to node sdk private data tutorial.

May want to mention how to pass using both low level API and new programming model API.",,bestbeforetoday,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-5108,,,No,,Unset,No,,,"1|hzzz6v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,harrisob@us.ibm.com,,,,,,,,dev,main,,,,,,,,,true,"20/Nov/18 2:00 AM;harrisob@us.ibm.com;For NodeSDK Base https://gerrit.hyperledger.org/r/#/c/27618/;;;","20/Nov/18 2:06 AM;harrisob@us.ibm.com;Mark please add some a section to the tutorial on private data on how to use the new programming model transient data  for 1.4 (master). Please model it after the section I created on the low level (NodeSDK Base) for 1.3 once it has been reviewed by [~denyeart].;;;","21/Nov/18 10:39 PM;bestbeforetoday;[~harrisob@us.ibm.com] Do you just want me to add an example to the existing tutorial of using the fabric-network API to send transient data as part of a transaction invocation? That will make it not a fabric-client specific tutorial so I'll rename it appropriately.

If not, what needs be done?;;;","21/Nov/18 11:31 PM;harrisob@us.ibm.com;I was thinking that we could have both in the same document. What do you think, is that too much ?;;;","22/Nov/18 1:45 AM;bestbeforetoday;Having the fabric-network client code example in the same document seems reasonable to me. Otherwise we'll have a fabric-network specific document that is either very short or duplicates lots of the information in the existing tutorial.;;;","22/Nov/18 1:09 PM;denyeart;[~harrisob@us.ibm.com] The updated doc in release-1.3 looks good.  Do you want to cherry pick to master?;;;","24/Nov/18 6:55 AM;harrisob@us.ibm.com;Mark has done that, plus added info on the programming model;;;",,,,,,,,,,
README.md: Broken Markup,FABN-1027,35437,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,ynamiki,ynamiki,ynamiki,19/Nov/18 10:17 AM,18/Jan/19 1:09 PM,28/Oct/23 3:25 AM,18/Jan/19 1:09 PM,v1.3.0,,,,,,,,,0,,,,,,"In README.md, the following code span is not closed:

{code}
* build fabric-ca docker image (new membership service)
  * cd `$GOPATH/src/github.com/hyperledger/fabric-ca
{code}",,ynamiki,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzzc7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ynamiki,,,,,,,,,,dev,main,,,,,,,,,true,"19/Nov/18 10:22 AM;ynamiki;https://gerrit.hyperledger.org/r/27633;;;",,,,,,,,,,,,,,,,
only run shouldRunPKCS11Tests gulp test once,FABN-1028,35480,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,20/Nov/18 4:13 AM,27/Nov/18 10:45 PM,28/Oct/23 3:25 AM,27/Nov/18 10:45 PM,,,,,,,,,,0,,,,,,"the check '{color:#dcdcaa}shouldRunPKCS11Tests{color}' is run many times, it should only be run once",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzzjz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
type definition and jsdoc should have same name,FABN-1029,35491,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Invalid,andrew-coleman,zhaochy,zhaochy,20/Nov/18 4:52 PM,28/Nov/18 2:38 AM,28/Oct/23 3:25 AM,28/Nov/18 2:38 AM,,,,,,,,,,0,,,,,,"in fabric-network project,
the Gateway.connect(config, options) have 

options - GatewayOptions       at jsdoc
options - InitOptions                at type definition

there should be a same name for this options.
I recommend to change the type definition as GatewayOptions is more meaningful",,bestbeforetoday,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzzmf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,zhaochy,,,,,,,,,,,,,,,,,,,,"28/Nov/18 2:35 AM;bestbeforetoday;I think this has already been fixed. The TypeScript definition for Gateway.connect is currently:
{code:javascript}
public connect(config: Client | string | object, options: GatewayOptions): Promise<void>;{code};;;",,,,,,,,,,,,,,,,
TS defs for fabric-network package missing discovery opt asLocalhost,FABN-1030,35494,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,sstone1,sstone1,20/Nov/18 7:54 PM,22/Nov/18 6:48 PM,28/Oct/23 3:25 AM,22/Nov/18 6:48 PM,,,,,,,,,,0,,,,,,"export interface GatewayOptions {
	wallet: Wallet;
	identity: string;
	clientTlsIdentity?: string;
	discovery?: DiscoveryOptions;
	eventHandlerOptions?: DefaultEventHandlerOptions;
}

export interface DiscoveryOptions {
	enabled?: boolean;
}

The DiscoveryOptions interface should have an optional ""asLocalhost"" property.",,bestbeforetoday,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzzn3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,sstone1,,,,,,,,,,,,,,,,,,,,"22/Nov/18 6:48 PM;bestbeforetoday;Fixed in this change but I typo'd the Jira number in the commit message: https://gerrit.hyperledger.org/r/27686;;;",,,,,,,,,,,,,,,,
nodejs 10 compatibility ,FABN-1031,35543,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,davidkhala,davidkhala,22/Nov/18 1:19 PM,12/Oct/19 4:33 PM,28/Oct/23 3:25 AM,09/Aug/19 9:57 PM,,,,,,Future,,,,0,,,,,,"nodejs 10 has been released from April as LTS version.
we could make sdk compatible to it

Per conversion in 11 Nov TWGC meeting, node 9 compatibility can be skipped as a non-LTS version. 

[Design document is under discussion]",,davidkhala,mbwhite,MichaelWang,sheetal-hlf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1325,FABN-663,,FABCN-88,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-7,,node10Support,To Do,No,,Unset,No,,,"1|hzzzwn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,mbwhite,MichaelWang,sheetal-hlf,,,,,,,dev,main,,,,,,,,,true,"22/Nov/18 5:59 PM;mbwhite;The matching Jira for the node chaincode https://jira.hyperledger.org/browse/FAB-12662

The x509 library that is used can't be compiled yet on Node 10; progress on that is slow.;;;","22/Nov/18 7:13 PM;davidkhala;quoted: Recently jenkins configuration was changed from freestyle to pipeline, which can execute job on node 6 or node 8 given accordingly in the scripts.
https://github.com/hyperledger/fabric-sdk-node/blob/ca9b9d10fcb13a16353aed12dd75d7bda023d55e/Jenkinsfile.x#L10;;;",,,,,,,,,,,,,,,
Missing fabric-ca-client jsdocs,FABN-1033,35624,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,zhaochy,zhaochy,zhaochy,27/Nov/18 5:25 PM,28/Nov/18 10:52 AM,28/Oct/23 3:25 AM,28/Nov/18 10:52 AM,,,,,,,,,,0,,,,,,"Missing fabric-ca-client documents
",,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000an:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,dev,main,,,,,,,,,true,"27/Nov/18 5:28 PM;zhaochy;master: https://gerrit.hyperledger.org/r/27755
release-1.3: https://gerrit.hyperledger.org/r/27756;;;",,,,,,,,,,,,,,,,
Concurrent transaction invocations can block on event hub connection,FABN-1034,35633,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,27/Nov/18 11:55 PM,28/Nov/18 6:34 PM,28/Oct/23 3:25 AM,28/Nov/18 6:34 PM,,,,,,,,,,0,,,,,,"The fabric-network API attempts to wait for event hub connections to complete (using the callback parameter to EventHub.connect) before registering listeners and sending a successful proposal to the orderer. When multiple transactions are sent concurrently, multiple calls to EventHub.connect can be in flight concurrently. In this scenario, some event hub connection callbacks are never invoked and the client transaction invocation hangs indefinitely waiting on the callback.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000bz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"[Fabric-Network] When querying a transaction, the transaction id changes",FABN-1035,35647,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,andrew-coleman,davidkel,davidkel,28/Nov/18 5:09 PM,29/Nov/18 3:14 AM,28/Oct/23 3:25 AM,29/Nov/18 3:14 AM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"In defaultQueryHandler, the call 
{code}
const payloads = await this.channel.queryByChaincode(request);
{code}
passes a txid in the request, but queryByChaincode ignores the txid and creates a new one which will cause confusion when trying to trace via logs the behaviour as the context identifier has now been changed. 
There is a JIRA (FABN-985) to address the queryByChaincode, or you can implement your own version of queryByChaincode in the defaultQueryHandler in a similar manner to how hyperledger composer does it. ",,bestbeforetoday,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-985,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000f3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,,,,,,,,,,,,,,,,,,,,"29/Nov/18 3:14 AM;bestbeforetoday;Fixed by FABN-985.;;;",,,,,,,,,,,,,,,,
Docker_ca_image_tag to pull images for fabric-ca in release-1.2,FABN-1036,35674,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,29/Nov/18 5:45 AM,30/Mar/19 12:08 AM,28/Oct/23 3:25 AM,02/Feb/19 5:29 AM,,,,,,,,,,0,,,,,,"Add in the package settings for node chaincode to support fabric & fabric-ca version docker images in release-1.2 

 ",,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000kn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vijaypunugubati,,,,,,,,,,,,,,,,,,,,,"02/Feb/19 5:29 AM;vijaypunugubati;Not required;;;","30/Mar/19 12:07 AM;vijaypunugubati;No releases for the version update is happening, not required to change this in the sdk--node release-1.2 branch.-;;;",,,,,,,,,,,,,,,
Docker_ca_image_tag to pull images for fabric-ca in release-1.3,FABN-1037,35675,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,29/Nov/18 5:47 AM,30/Mar/19 12:08 AM,28/Oct/23 3:25 AM,02/Feb/19 5:29 AM,,,,,,,,,,0,,,,,,"Add in the package settings for node chaincode to support fabric & fabric-ca version docker images in release-1.3

 ",,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000kv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vijaypunugubati,,,,,,,,,,,,,,,,,,,,,"02/Feb/19 5:29 AM;vijaypunugubati;Not required;;;",,,,,,,,,,,,,,,,
Docker_ca_image_tag to pull images for fabric-ca in master branch.,FABN-1038,35676,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,29/Nov/18 5:48 AM,30/Oct/19 1:46 AM,28/Oct/23 3:25 AM,30/Oct/19 1:46 AM,,,,,,,,,,0,sdk-triaged,,,,,"Add in the package settings for node chaincode to support fabric & fabric-ca version docker images in master branch

 ",,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1091,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000l3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vijaypunugubati,,,,,,,,,,,,,,,,,,,,,"30/Oct/19 1:46 AM;vijaypunugubati;As moving the CI to the new build system, closing these old tasks which are not required. ;;;",,,,,,,,,,,,,,,,
"Use best practice npm techniques (including audit, package-lock, and shrinkwrap)",FABN-1039,35704,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,sstone1,sstone1,29/Nov/18 10:04 PM,07/Feb/20 6:55 PM,28/Oct/23 3:25 AM,07/Feb/20 6:55 PM,,,,,,,,,,0,sdk-triaged,,,,,"This is for the fabric-client, fabric-ca-client, and fabric-network packages.

- The build should fail if `npm audit` finds any vulnerabilities

- We should check in the package-lock.json file as per the official guidance from npm:

https://docs.npmjs.com/files/package-locks#using-locked-packages
> It is highly recommended you commit the generated package lock to source control: this will allow anyone else on your team, your deployments, your CI/continuous integration, and anyone else who runs npm install in your package source to get the exact same dependency tree that you were developing on. Additionally, the diffs from these changes are human-readable and will inform you of any changes npm has made to your node_modules, so you can notice if any transitive dependencies were updated, hoisted, etc.

This will stop us being taken out by breaking downstream package changes such as the recent changes to the sinon module.

- We should run `npm shrinkwrap` before publishing the code.",,heatherp,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1291,FABN-1299,FABN-1290,FABN-1289,FABN-1298,FABN-1287,FABN-1297,FABN-1293,FABN-1296,FABN-1292,FABN-1294,FABN-1295,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s79",,,,Unset,Unset,20-27 Jan 20,31st-7th Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,sstone1,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"21/Dec/19 12:09 AM;heatherp;This PR got rid of a lot of the dependency issues: [https://github.com/hyperledger/fabric-sdk-node/commit/6e398bcfee72da097e7a6142351de59ea0cbafbd]

Remaining stuff I need to do before I can close this out:
 - 4 vulnerabilities on the master branch left to fix
 - enable npm install and shrinkwrap in the builds
 - check that locally installing each module doesn't result in npm audit failures
 - do all of the above for the 1.4 branch (if we think it's applicable) currently 55 hits when I run npm audit on the 1.4 branch

Links I want to keep reference to:
 [https://npm.community/t/npm-update-crashes-at-depth-20/10733]

[https://docs.npmjs.com/misc/config#depth]
 [https://github.com/npm/cli/pull/239]
 [https://npm.community/t/npm-update-depth-command-no-longer-working-correctly-v6-9-0/7571/8
 [https://github.com/npm/npm/issues/19721]
 [https://docs.npmjs.com/auditing-package-dependencies-for-security-vulnerabilities]|https://npm.community/t/npm-update-depth-command-no-longer-working-correctly-v6-9-0/7571/8];;;","20/Jan/20 11:59 PM;heatherp;I can't fix the 4 remaining vulnerabilities automatically or with npm audit/recommended commands:

1. Bug for npm audit claiming to have fixed them, but not: [https://github.com/npm/cli/issues/301]
2. Bug for npm update not doing anything: [https://github.com/npm/cli/issues/394];;;","24/Jan/20 1:30 AM;heatherp;- I am porting the four commits delivered under this work into release-1.4, starting today. I'll use this issue to track that porting, and I'll close this issue when that's done
- I can't enable npm audit in the builds due to a fabric-client dependency problem, so I've separated out that work here: FABN-1462;;;",,,,,,,,,,,,,,
fabric-network has missing dependencies ,FABN-1040,35722,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,andrew-coleman,harrisob@us.ibm.com,harrisob@us.ibm.com,30/Nov/18 5:00 AM,04/Dec/18 12:59 AM,28/Oct/23 3:25 AM,04/Dec/18 12:59 AM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"as of `fabric-network@1.3.0-snapshot.28` the npm publish script would update the fabric-network\package.json to add two lines under ""dependencies""
 {color:#9cdcfe}""dependencies""{color}{color:#d4d4d4}: {{color}
 {color:#9cdcfe}""fabric-ca-client""{color}{color:#d4d4d4}: {color}{color:#ce9178}""1.3.0-snapshot.60""{color}{color:#d4d4d4},{color}
 {color:#9cdcfe}""fabric-client""{color}{color:#d4d4d4}: {color}{color:#ce9178}""1.3.0-snapshot.59""{color}

 

The dependencies were removed with

https://jira.hyperledger.org/browse/FABN-922

[https://gerrit.hyperledger.org/r/#/c/26340/]

 

If we need the dependencies add back I would suggest that we use a tag rather than a specific version, like for master use ""unstable"", for release-1.3 use ""unstable-1.3"" and when publishing releases or betas use ""latest"", ""latest-1.3"", ""beta', all of which will be in the $CURRENT_TAG value so no actual logic will be required, the tag is has already been set is correct for publish.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000vz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,"30/Nov/18 5:29 AM;harrisob@us.ibm.com;see https://jira.hyperledger.org/browse/FABN-922 ... see Git Commits for the code to reverse;;;","30/Nov/18 5:30 AM;harrisob@us.ibm.com;We will need to decide if we want to revert the change that pulled out the dependencies.;;;",,,,,,,,,,,,,,,
channel.sendTransactionProposal() -->inconsistent response if promise is rejected,FABN-1041,35749,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,Vishal3152,Vishal3152,30/Nov/18 7:32 PM,02/Oct/19 10:23 PM,28/Oct/23 3:25 AM,02/Oct/19 10:23 PM,,,,,,v2.0.0,,,,0,fabric-node-sdk,,,,,"h6. [fabric-sdk-node|https://github.com/hyperledger/fabric-sdk-node] 1.3 ==>

As per the [documentation|https://fabric-sdk-node.github.io/release-1.3/global.html#ProposalResponse] <ProposalResponse> should be in this format:

[

{ version: <number>, timestamp: <timestamp>, response:<Response>, payload: <[]byte>, endorsement:  <Endorsement>}

]

 

In situations when promise is rejected, the response structure is different:

[ { Error:

{""error occured""}

at self._endorserClient.processProposal (D:\xxx\node_modules\fabric-client\lib\Peer.js:123:36) status: 500, payload: <Buffer >, isProposalResponse: true } ],

 

 ",,bestbeforetoday,caroline-church,Vishal3152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,FABN-1347,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0011j:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,caroline-church,Vishal3152,,,,,,,,,,,,,,,,,,,"01/Dec/18 1:45 AM;bestbeforetoday;The proposal responses in element 0 of the array returned by Channel.sendTransactionProposal() can each be either a ProposalResponse (status < 400) or an Error object (for valid responses with a message and status >= 400, or for genuine runtime errors). I amended the TypeScript definitions to reflect this behaviour in FABN-987. Where the Error object represents a valid response (with a message and status >= 400), it has an *isProposalResponse* property added with the value *true*, and is augmented with the content of the ProposalResponse's *response* property.

That's the behaviour of the code; whether it is correct or not, I am much less sure.

I guess the most obvious options are:
 # The responses are all either ProposalResponse objects or plain Error objects (only for runtime errors), and it is the responsibility of the caller to check the status of the ProposalResponse status to see if the response was good. This requires the caller to check both whether each potential response is an instanceof Error and also check its status, but maintains clear type separation, which is much easier to deal with in TypeScript.
 # Both error responses and runtime errors are returned as Error objects (as now) and the Error objects representing error responses have the isProposalResponse property set (as now) but they are augmented with the entire ProposalResponse, not just the ProposalResponse.response content. This allows the caller to find only the good responses by just checking instanceof Error and, although the shape of errors is inconsistent, should allow Errors where isProposalResponse is true to be treated as ProposalResponse objects.
 # Improve the documentation to describe the current behaviour. This avoids any risk of breaking people who have adapted to the current behaviour.

 

Any thoughts on the best approach above or for better alternatives?

In a perfect world perhaps I would prefer to completely re-think the way results are returned but that would break people for sure. If there was a strong preference for this approach then I guess it would be possible to add an alternative to the sendTransactionProposal() function that was more friendly while leaving the current behaviour intact.;;;","20/Feb/19 2:38 AM;bestbeforetoday;Looking at this again for Fabric 2.0 where we have scope to re-work the API a little. Another consideration is that we now have the higher level _fabric-network_ API, which removes the need for client code to worry about the proposal responses for evaluating (query) and submitting transactions. So first question is: is it worth making breaking changing the low-level API now?

Assuming it is worth changing...

sendTransactionProposal() currently returns a ""ProposalResponseObject"", which is an array with two elements: 0 is an array or ProposalResponse | Error objects; 1 is the proposal. For me it would be more friendly if the return value was an object with named properties instead of a 2-element array.

As raised by this Jira, the array of ProposalResponse (for successful responses) | Error (for unsuccessful responses and genuine errors) is not very friendly. I think what client code cares about is:
 * Successful proposal responses, so they can be sent to the orderer.
 * Unsuccessful proposal responses, for diagnostic purposes.
 * Genuine errors (e.g. malformed peer responses, network errors etc.), for diagnostic purposes.

 

What if we presented on the ""ProposalResponseObject"" a named property for each of these categories of responses, with the value being an array of the actual values? This gives easy access to each category of response and a consistent object type for all the values within a given array.

For debugging it is useful to know from which peer each response originated. I think this is already the case today since both the ProposalResponse and Error objects are augmented with RemoteCharacteristics (peer URL, name and options), but the TypeScript definitions don't reflect this.

Thoughts?;;;","20/Feb/19 2:51 AM;caroline-church;Even though we have the high level api we don't currently have functionality for installing smart contracts which is where i was seeing the problem, so i think we should change it. I don't really have any thoughts on how it should be changed as long as the returned data is consistent;;;","20/Feb/19 7:18 PM;bestbeforetoday;For clarity, what I am proposing as a possible API change in my previous comment is for the ProposalResponseObject returned from installChaincode(), sendInstantiateProposal(), sendUpgradeProposal() and sendTransactionProposal(), which today looks like:
{code:javascript}
export type ProposalResponseObject = [Array<Client.ProposalResponse | Error>, Client.Proposal];
{code}

To change to look something like:
{code:javascript}
export interface ProposalError extends Error {
    peer: RemoteCharacteristics;
}

export interface ProposalResponseObject {
    errors: ProposalError[];
    invalidResponses: Client.ProposalResponse[];
    proposal: Client.Proposal;
    validResponses: Client.ProposalResponse[];
}
{code};;;","01/Mar/19 10:12 PM;bestbeforetoday;While working this change, there seem to be several pieces of code that do different checks on the status: some look for >=400 as error and <400 as success; some look for only 200 as success and everything else as unsuccessful. So I've currently not attempted to separate valid/invalid responses and implemented the ProposalResponseObject as:
  
{code:javascript}
export interface PeerError extends Error {
    peer: RemoteCharacteristics;
} 

export interface ProposalResponseObject {
    errors: PeerError[];
    proposal: Proposal;
    responses: ProposalResponse[];
}{code}
Note that ProposalResponse also has a peer property of type RemoteCharacteristics, so you always know which peer returned which response or error.

It is left for the client code to determine the status of the response using criteria appropriate to their needs, for example:
{code:javascript}
const successResponses = responseObject.responses.filter((proposalResponse) => proposalResponse.response.status === 200);{code}
 ;;;","31/Jul/19 6:54 PM;bestbeforetoday;I got 95% of the way there with this change but just didn't have the discovery pathways working. Since then there is some major refactoring work underway on the internals of the SDK by [~harrisob@us.ibm.com], so this might be something that can be rolled into that.;;;","02/Oct/19 10:23 PM;bestbeforetoday;This will all change in v2.0 of the SDK due to refactoring taking place in FABN-1347.;;;",,,,,,,,,,
Wallet not exported in fabric-network TypeScript definitions,FABN-1042,35751,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,30/Nov/18 9:58 PM,22/Jan/20 4:26 AM,28/Oct/23 3:25 AM,04/Dec/18 1:00 AM,,,,,,,,,,0,,,,,,,,ashish.cppdev,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0011r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashish.cppdev,bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,"22/Jan/20 2:09 AM;ashish.cppdev;Why was this closed? I am still not seeing the Identity type correctly in TypeScript. It only has the type member, unlike the structure listed at [https://hyperledger.github.io/fabric-sdk-node/release-1.4/module-fabric-network.Wallet.html#~Identity];;;","22/Jan/20 4:07 AM;bestbeforetoday;[~ashish.cppdev] This fixed an issue with the Wallet interface not being exported. Could you raise a separate Jira for additional TypeScript definition issues.;;;","22/Jan/20 4:15 AM;ashish.cppdev;Will do. Thanks;;;","22/Jan/20 4:26 AM;ashish.cppdev;created [#FABN-1454] ;;;",,,,,,,,,,,,,
Daily Job: fabric-sdk-node8-merge-master-s390x has failed.,FABN-1043,31519,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,jtclark,jtclark,30/Jun/18 9:40 AM,24/May/19 1:11 AM,28/Oct/23 3:25 AM,24/May/19 1:11 AM,v1.2.0,,,,,Future,,,,0,,,,,,"*fabric-sdk-node8-merge-master-s390x* fails with the following error:

{code:java}
00:03:24.810 W: Failed to fetch http://security.debian.org/dists/jessie/updates/InRelease  Unable to find expected entry 'main/binary-s390x/Packages' in Release file (Wrong sources.list entry or malformed file)
00:03:24.810 
00:03:24.810 E: Some index files failed to download. They have been ignored, or old ones used instead.
00:03:25.216 The command '/bin/sh -c apt-get update && apt-get install -y netcat && rm -rf /var/cache/apt' returned a non-zero code: 100
00:03:25.217 Makefile:128: recipe for target 'build/image/fabric-ca/.dummy-s390x-1.2.0-snapshot-0334c90' failed
00:03:25.217 make: *** [build/image/fabric-ca/.dummy-s390x-1.2.0-snapshot-0334c90] Error 100
00:03:25.218 /tmp/jenkins5366294597044231566.sh: line 168: err_check: command not found
00:03:25.287 Build step 'Execute shell' marked build as failure
{code}

*------> FABRIC_COMMIT: a6d1ec2*

*Console output:* https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node8-merge-master-s390x/49/consoleFull

*Build Logs:*

Current Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-sdk-node8-merge-master-s390x/49

Previous Log: https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-sdk-node8-merge-master-s390x/48",,denyeart,jtclark,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"1|hzzgsv:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,denyeart,jtclark,,,,,,,,,,,,,,,,,,,,"01/Dec/18 11:42 AM;denyeart;[~jtclark] Is this issue still valid?;;;",,,,,,,,,,,,,,,,
Instantiate chaincode failed with unknown reason,FABN-1044,35037,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,bestbeforetoday,bh4rtp,bh4rtp,01/Nov/18 9:25 PM,24/May/19 1:11 AM,28/Oct/23 3:25 AM,24/May/19 1:11 AM,,,,,,,,,,0,,,,,,"Instantiate chaincode failed. The peer logs print an error message like:

ProcessProposal -> ERRO 607f [registerch][805147b5] simulateProposal() resulted in chaincode name:""lscc"" response status 500 for txid: a107718e8d8c6287bac5fbc78d2d33b1bab90fac77830fd452df4f3e43baedbf

And sdk client just prints instantiate proposal was bad.

Peer logs, client logs, server log, configtx.yaml, network-config.yaml, instantiate-chaincode.js files are attached.",,bestbeforetoday,bh4rtp,denyeart,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"01/Nov/18 9:24 PM;bh4rtp;instantiate-chaincode.js;https://jira.hyperledger.org/secure/attachment/16198/instantiate-chaincode.js","01/Nov/18 9:23 PM;bh4rtp;peer.log;https://jira.hyperledger.org/secure/attachment/16201/peer.log","01/Nov/18 9:23 PM;bh4rtp;runApp.log;https://jira.hyperledger.org/secure/attachment/16199/runApp.log","01/Nov/18 9:22 PM;bh4rtp;testAPIs.log;https://jira.hyperledger.org/secure/attachment/16200/testAPIs.log",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzx4f:",,,,Unset,Unset,,,,,,,,,,,"I am using fabric release-1.3, take balance-transfer as an example with private data.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,bh4rtp,denyeart,muralisr,,,,,,,,,,,,,,,,,,"01/Nov/18 9:28 PM;bh4rtp;Search a107718e8d8c6287bac5fbc78d2d33b1bab90fac77830fd452df4f3e43baedbf in peer.log can get the message of `ProcessProposal -> ERRO 607f [registerch][805147b5] simulateProposal() resulted in chaincode name:""lscc"" response status 500 for txid: a107718e8d8c6287bac5fbc78d2d33b1bab90fac77830fd452df4f3e43baedbf`;;;","01/Nov/18 10:22 PM;denyeart;[~bh4rtp] It looks like the client app doesn't pull out and print the error message in the case of status of 500 coming back. Have you looked into printing the response message? For the data structure see: [https://github.com/hyperledger/fabric/blob/release-1.3/protos/peer/proposal_response.proto#L60-L64]

Is this sample code from balance transfer?  If so that logic needs to get added to all the samples.  FYI [~harrisob@us.ibm.com];;;","01/Nov/18 10:48 PM;bh4rtp;[~denyeart] Yes, i am using sample code from balance transfer. let me check the code as you mentioned.;;;","01/Nov/18 10:51 PM;denyeart;[~muralisr] If a chaincode returns in error with status of 500, peer only logs the 500 and not the message, like this:

2018-11-01 20:14:44.245 CST [endorser] ProcessProposal -> ERRO 7262 [registerch][a107718e] simulateProposal() resulted in chaincode name:""lscc"" response status 500 for txid: a107718e8d8c6287bac5fbc78d2d33b1bab90fac77830fd452df4f3e43baedbf

I assume this was done by design, to keep any chaincode application messages private and out of the peer logs.  Chaincode can do their own logging as desired.  But for the system chaincodes like LSCC, I assume we should print the ""message"" to the peer logs in addition to the 500 ""status"", right?;;;","01/Nov/18 11:09 PM;bh4rtp;[~denyeart] Here is the message for: 
{code:javascript}
logger.error('instantiate proposal was bad: response - %j', proposalResponses)
{code}


[2018-11-01 22:06:38.760] [ERROR] instantiate-chaincode - instantiate proposal was bad: response - 
{code:json}
[{""status"":500,""payload"": {""type"":""Buffer"",""data"":[]},""isProposalResponse"":true},{""status"":500,""payload"": {""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}]
{code}


It seems to be empty.;;;","02/Nov/18 9:18 AM;bh4rtp;My fabric network has 5 channels and 5 chaincodes installed with vendor from github.com/golang/protobuf and collections_config.;;;","02/Nov/18 8:57 PM;bh4rtp;[~denyeart] I found the reason.  the chaincodeType argument was passed as init, i.e. fcn. however the error message is not returned to client. that is the problem.
So this remains a bug that can be fixed by returning the error message to client.;;;","04/Nov/18 11:43 PM;muralisr;As far as I could tell, if the chaincodeType is invalid at the time of instantiation, it should fail at this point in LSCC https://github.com/hyperledger/fabric/blob/release-1.3/core/scc/lscc/lscc.go#L866

[~bh4rtp] As far as I can tell this particular error message should be available from the returned Response.Message in the SDK as well but we don't see it in

{code:java}
[{""status"":500,""payload"": {""type"":""Buffer"",""data"":[]},""isProposalResponse"":true},{""status"":500,""payload"": {""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}]
{code}

So this part needs investigation.

Regardless, we should add the error message to the error log
{code:java}
simulateProposal() resulted in chaincode name:""lscc"" response status 500 for txid: 
{code}
from https://github.com/hyperledger/fabric/blob/release-1.3/core/endorser/endorser.go#L462

[~denyeart] If sounds reasonable, assign it to me please.

;;;","05/Nov/18 8:46 PM;denyeart;[~muralisr] I thought you intentionally did not log the underlying chaincode execution error for privacy reasons, to keep chaincode messages out of the peer log. But if this was simply an oversight, then yes the chaincode error should be logged at lines 462 and 493. The lack of an underlying error message at this point has caused a lot of serviceability pain. What was the design intent?;;;","05/Nov/18 11:57 PM;muralisr;[~denyeart] that is correct and that was the original intent. I was just thinking of this ""lscc"" case... on second thoughts perhaps it is better to log the error in the lscc itself.

(Although, we should first explore where the error is generated in the LSCC and why Response.Message is empty.);;;","20/Nov/18 4:00 AM;muralisr;[~bh4rtp] When forcing a bad chaincode type (used ""UNDEFINED"") using CLI,  I see this response with latest master

{code:java}
Error: could not assemble transaction, err proposal response was not successful, error code 500, msg Unknown chaincodeType: UNDEFINED
{code}

This implies the returned Response has

{code:java}
Response.Status=500, Response.Message=""Unknown chaincodeType: UNDEFINED""
{code}

Given SDK should get back the same gRPC response object, you should see this error there as well. Can you try with  v1.3.0 ?

([~denyeart]);;;","21/Nov/18 3:33 PM;bh4rtp;[~muralisr] I have just tested on v1.3.1, the get back response object is the same as I reported:


{code:javascript}
[2018-11-21 14:10:48.939] [ERROR] instantiate-chaincode - instantiate proposal was bad: response - [{""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse""true},{""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}]
{code}


As you mentioned, the latest master should be ok. I will switch to use master version.;;;","22/Nov/18 1:51 AM;muralisr;[~bh4rtp]  _As you mentioned, the latest master should be ok._ - assume that means you tested with master and it works for you ?;;;","22/Nov/18 9:52 AM;bh4rtp;[~muralisr] i just tested using fabric and fabric-ca both the latest master, fabric-sdk-node v1.3 branch, the returned error message is the same as v1.3. did you test it using all master branch, including node sdk? if yes, maybe this issue is caused by implementation of node sdk v1.3. or the sdk application by balance-transfer is not correct. ;;;","23/Nov/18 2:26 AM;muralisr;[~bh4rtp] I didn't test using SDK. My goal was to ensure fabric returns the error information in the Response object. 

_maybe this issue is caused by implementation of node sdk v1.3. or the sdk application by balance-transfer is not correct._

I suspect you are right there... setting component to fabric-sdk-node.

[~denyeart] moving this to you for now to assign to the right owner ([~harrisob@us.ibm.com] ?);;;","03/Dec/18 3:53 PM;denyeart;I switched project to Node SDK so that SDK team can assess.;;;","05/Dec/18 12:12 AM;bestbeforetoday;I tried to reproduce this problem in my environment by implementing a chaincode init function that just does:
{code:java}
async Init(stub) {
    return shim.error('such fail');
}{code}
 

Looking at what appears back within the Node SDK code, I can see a proposal response received that looks like:
{code:java}
{ version: 0,
  timestamp: null,
  response: 
   { status: 500,
     message: 'transaction returned with failure: such fail',
     payload: <Buffer > },
  payload: <Buffer >,
  endorsement: null }{code}
 

The Node SDK converts this into an Error object and returns it to the client code. The Error object includes the error message returned from the instantiate transaction in its message property:
{code:java}
{ Error: transaction returned with failure: such fail
    at <stackTraceRemoved> status: 500, payload: <Buffer >, isProposalResponse: true }{code}
 

So whatever *response.message* property value is returned in the (error) proposal response from the peer is included as the message in the Error returned at the client end.

The description of this bug says ""sdk client just prints instantiate proposal was bad"". This text does not exist anywhere within the Node SDK. This seems to be a message generated in the client application code (instantiate-chaincode.js) attached to this Jira.

Since the Node SDK is returning whatever error is included in the proposal response's *response.message* property, my guess is that either:
 # The peer is not returning the error information in the response message in some cases.
 # The reported scenario is different to the one I have used to reproduce locally, in which case I need more detailed information on how to reproduce the error scenario.
 # The problem is in the way the application client code is reporting error information.;;;"
Create fabric-sdk-node release notes for v1.4.0,FABN-1045,35821,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,denyeart,denyeart,03/Dec/18 10:51 PM,07/Dec/18 4:19 AM,28/Oct/23 3:25 AM,07/Dec/18 4:19 AM,,,,,,v1.4.0,,,,0,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-391,FAB-13129,,,,,,,,,,,,,,,,,,,,FAB-13111,,,,,,,"06/Dec/18 6:06 PM;andrew-coleman;fabric-sdk-node.1.4.0.release-note.txt;https://jira.hyperledger.org/secure/attachment/16357/fabric-sdk-node.1.4.0.release-note.txt",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i001fz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"fabric-sdk-node merge job <master> on x and z platforms is failing consistently in gulp headless tests, CKR_SIGNATURE error.",FABN-1047,35838,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,sambhavdutt,sambhavdutt,04/Dec/18 1:55 AM,19/Mar/19 8:12 PM,28/Oct/23 3:25 AM,04/Dec/18 8:48 PM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"The fabric-sdk-node merge job <master> is failing consistently(x and z platforms) in the gulp headless tests, Observed the errors below,

{code:java}
00:09:39.498 not ok 580 Failed. Error: CKR_SIGNATURE_LEN_RANGE:193 at Error (native) C_Verify:833
00:09:39.498   ---
00:09:39.498     operator: fail
00:09:39.498     at: test (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/unit/pkcs11.js:197:5)
00:09:39.498     stack: |-
00:09:39.498       Error: Failed. Error: CKR_SIGNATURE_LEN_RANGE:193
00:09:39.498           at Error (native) C_Verify:833
00:09:39.498           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
00:09:39.498           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
00:09:39.498           at Test.fail (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
00:09:39.498           at Test.bound [as fail] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
00:09:39.498           at test (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/unit/pkcs11.js:197:5)
00:09:39.498           at <anonymous>
00:09:39.498           at process._tickDomainCallback (internal/process/next_tick.js:228:7)
00:09:39.498   ...
00:09:39.498 # 
00:09:39.498 
00:09:39.498 **PKCS11 - Test sign and verify with non-ephemeral ECDSA key pair in the crypto card.
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/96/consoleFull",,andrew-coleman,davidkel,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,49a3eaa57d555d37c7a31e852a3e8978e051b623,Unset,No,,,"1|i001jr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,"04/Dec/18 7:21 PM;andrew-coleman;The x86 merge build passes

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/98/;;;","04/Dec/18 8:47 PM;andrew-coleman;Both X and Z merge builds are passing.  It is not clear what the underlying cause of the original failure was.  Nothing was done to fix it other than re-spin.

The Z build was failing for different reasons than the X build, and they seem sporadic.;;;",,,,,,,,,,,,,,,
Update pipeline scripts,FABN-1048,35847,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,04/Dec/18 2:01 PM,06/Dec/18 8:52 PM,28/Oct/23 3:25 AM,06/Dec/18 8:52 PM,,,,,,,,,,0,,,,,,Update pipeline script to fetch the correct patchset.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-87,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxok6:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"ChannelEventHub.js, _processBlockEvents does not handle errors being thrown from call back",FABN-1050,35876,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,MariWade,MariWade,05/Dec/18 4:15 AM,06/Dec/18 10:30 PM,28/Oct/23 3:25 AM,06/Dec/18 10:30 PM,v1.1.0,,,,,v1.4.1,,,,0,,,,,,"When handling received blocks, if the code throws an error (Not Fabric related), the sdk code in _processBlockEvents and _processTxEvents do not handle the error.

```

(node:21314) UnhandledPromiseRejectionWarning: RabbitError: rabbitMQ.publish exchange: bds.request.event.exchange, routing: channel.mychannel IllegalOperationError: Channel closed
 at new RabbitError (/Users/mariwade/Developer/PBSA/bc-event-listener/build/components/common/errors-custom.js:53:1)
 at OutboundExchange.publish (/Users/mariwade/Developer/PBSA/bc-event-listener/build/components/messaging/rabbitMQ.js:150:19)
 at EventListener.processBlock (/Users/mariwade/Developer/PBSA/bc-event-listener/build/components/eventHub/eventHubListener.js:614:36)
 at EventRegistration.channelEventHub.registerBlockEvent [as onEvent] (/Users/mariwade/Developer/PBSA/bc-event-listener/build/components/eventHub/eventHubListener.js:566:32)
 *at /Users/mariwade/Developer/PBSA/bc-event-listener/node_modules/fabric-client/lib/ChannelEventHub.js:1027:14*
 at Array.forEach (<anonymous>)
 at ChannelEventHub._processBlockEvents (/Users/mariwade/Developer/PBSA/bc-event-listener/node_modules/fabric-client/lib/ChannelEventHub.js:1024:41)
 at ClientDuplexStream.<anonymous> (/Users/mariwade/Developer/PBSA/bc-event-listener/node_modules/fabric-client/lib/ChannelEventHub.js:357:11)
 at emitOne (events.js:116:13)
 at ClientDuplexStream.emit (events.js:211:7)
 at addChunk (_stream_readable.js:263:12)
 at readableAddChunk (_stream_readable.js:250:11)
 at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
 at Object.onReceiveMessage (/Users/mariwade/Developer/PBSA/bc-event-listener/node_modules/grpc/src/client_interceptors.js:1276:19)
 at InterceptingListener.recvMessageWithContext (/Users/mariwade/Developer/PBSA/bc-event-listener/node_modules/grpc/src/client_interceptors.js:603:19)
 at /Users/mariwade/Developer/PBSA/bc-event-listener/node_modules/grpc/src/client_interceptors.js:702:14
(node:21314) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 33)

```",,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i001qn:",,,,Unset,Unset,,,,,,,,,,,"When processing the block, throw an error.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),MariWade,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"The fabric-sdk-node merge jobs <Master>, <x & z> are failing consistently. Errors in Jenkinsfile script.",FABN-1051,35899,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,rameshthoomu,sambhavdutt,sambhavdutt,06/Dec/18 1:17 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,06/Dec/18 8:52 PM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"The fabric-sdk-node merge jobs <Master>, <x & z> are failing consistently. Errors in Jenkinsfile script. Refspec Clone failed. Posting the errors below,


{code:java}
No valid HEAD. Skipping the resetting
 > git clean -fdx # timeout=10
Fetching upstream changes from git://cloud.hyperledger.org/mirror/fabric-sdk-node
using GIT_SSH to set credentials Gerrit Checkout
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/106/console",,andrew-coleman,davidkel,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,790484d38434d3ed2b2d6ddeec40e2547e134c47,Unset,No,,,"1|i001uv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,dev,main,,,,,,,,,true,"06/Dec/18 8:52 PM;andrew-coleman;resolved by https://gerrit.hyperledger.org/r/c/27900/;;;",,,,,,,,,,,,,,,,
Logging test fails,FABN-1052,35903,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,06/Dec/18 6:00 AM,06/Dec/18 5:33 PM,28/Oct/23 3:25 AM,06/Dec/18 5:33 PM,v1.4.0,,,,,,,,,0,,,,,,Reorder the logging test to avoid test failures,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i001vj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
'Namespace' should be renamed 'Name' in the getContract method,FABN-1053,35933,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,andrew-coleman,andrew-coleman,06/Dec/18 10:50 PM,07/Dec/18 12:22 AM,28/Oct/23 3:25 AM,07/Dec/18 12:22 AM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"The contract chaincode shim API changed the term 'namespace' to 'name' recently.

The fabric-network SDK should reflect this same change.  The second parameter should be called 'name' instead of 'namespace'.

The typescript definition and jsdoc should be update too.

No changes to the logic are needed.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i001z3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Event listener registration error using api and fabric-network modules together,FABN-1054,35939,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,jtonline,jtonline,07/Dec/18 1:21 AM,21/Feb/19 12:29 AM,28/Oct/23 3:25 AM,18/Dec/18 7:34 PM,v1.4.0,,,,,v1.4.1,,,,0,,,,,,"I'm using the api methods to listen for block events and have specified a start block. The documentation states, ""Setting a startBlock may confuse other event listeners, therefore only one listener will be allowed on a ChannelEventHub when a startBlock is being used.""

Even so, I was surprised when submitting a transaction using the fabric-network module failed with, ""Error: This ChannelEventHub is not open to event listener registrations"" given it is a higher level of abstraction and should probably maintain its own pool of channel even hubs.

Perhaps this could be handled with additional handler strategies, although I'm not sure if there's any reason not to just maintain a pool of fabric-network event hubs.

 

(In 1.4.0-beta2)

 ",,andrew-coleman,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0020f:",,,,Unset,Unset,,,,,,,,,,,"eventHub.registerBlockEvent((block) => {
        // do something
      }, null, { startBlock: 0 });

// Later...
contract.submitTransaction(id, ...args);

// Observe error",,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,jtonline,,,,,,,,,dev,main,,,,,,,,,true,"18/Dec/18 7:34 PM;andrew-coleman;https://gerrit.hyperledger.org/r/c/28006/;;;",,,,,,,,,,,,,,,,
Could Fabric provide a method to query all the channels connected to the ordering service?,FABN-1055,35969,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,FlyingTiger,FlyingTiger,07/Dec/18 5:55 PM,30/Oct/19 1:01 AM,28/Oct/23 3:25 AM,30/Oct/19 1:01 AM,,,,,,,,,,0,,,,,,"    As we known, there must be exactly one ordering system channel for an ordering service, and any member who can access to the ordering system channel could see all of the channels' creation information, but now there is no method to query all the information of the channels which are connected to the ordering service.

     Hence, Fabric SDK Node could provide a new Client <async> queryChannels(orderer) method, which is able to query all the channels' name of the target orderer. Here, the parameter orderer is a name representing the orderer node to which the channels' query request is sent.

If this method is provided, the administrator of the ordering service could get all of the channel creations information and check whether a channel has been created.",,FlyingTiger,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0023j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),FlyingTiger,heatherp,,,,,,,,,,,,,,,,,,,,"30/Oct/19 1:01 AM;heatherp;Hi, I am working through the node sdk backlog with the maintainers and we're a little unsure what is being asked here. Can you reclarify and re-open if this is still something you want addressed?;;;",,,,,,,,,,,,,,,,
type definition for Node SDK crypto suite sign() return type does not correct,FABN-1056,36022,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,zhaochy,zhaochy,zhaochy,10/Dec/18 4:45 PM,09/Jan/19 1:08 AM,28/Oct/23 3:25 AM,09/Jan/19 1:08 AM,,,,,,v1.4.1,,,,0,,,,,,"in current EC crypto suite implementation, the sign() returns DER encoded signature in Array.
However the type definition for this is Buffer, while the api.CryptoSuite.sign() has jsdoc for this is ""byte[]"".

need to update the return type for EC crypto suite impl",,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002br:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,dev,main,,,,,,,,,true,"10/Dec/18 5:09 PM;zhaochy;master: https://gerrit.hyperledger.org/r/#/c/28027/
release-1.3: https://gerrit.hyperledger.org/r/#/c/28028/
release-1.2: https://gerrit.hyperledger.org/r/28029
release-1.1: https://gerrit.hyperledger.org/r/28030;;;",,,,,,,,,,,,,,,,
Discovery tutorial should discuss how the Endorsment handler works,FABN-1057,36042,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,11/Dec/18 3:27 AM,15/Dec/18 3:37 AM,28/Oct/23 3:25 AM,15/Dec/18 3:37 AM,v1.4.0,,,,,,,,,0,,,,,,Need to add more description on how the endorsement handler works,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002g7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Client failing to recover in sending transactions when restarted the peers in a sequential manner with endorse - no endorsement plan found,FABN-1058,36046,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,harrisob@us.ibm.com,suryalnvs,suryalnvs,11/Dec/18 4:29 AM,01/Aug/19 12:47 AM,28/Oct/23 3:25 AM,31/Jul/19 2:56 AM,v1.4.0,,,,,v1.4.1,v2.0.0,,,0,,,,,,"*FABRIC-CLIENT VERSION:* fabric-client@1.4.0-snapshot.131

*Description:* After the sequential restarts of peers with some duration gap in an org, during chaos testing using service discovery with PTE (FAB-12834), client is not able to send the transactions on the channel and chaincode with following errors from DiscoveryEndorsementHandler even after peers complete availability after the restart. 
{code:java}
info: [PTE 0 main]: stderr: 2018-12-10T06:48:36.684Z - error: [DiscoveryEndorsementHandler]: endorse - no endorsement plan found for {""chaincodes"":[{""name"":""map_cc_ch1""}]}info: [PTE 0 main]: stderr: error: [PTE 0 exec]: [Nid:chan:org:id=1:testorgschannel1:org2:0 invoke_move_const_evtBlock] Failed to send transaction proposal due to error:  Error: No endorsement plan available for {""chaincodes"":[{""name"":""map_cc_ch1""}]}
    at DiscoveryEndorsementHandler.endorse (/opt/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:113:10)
    at <anonymous>
{code}
Waited for more than 30 minutes to see if it can recover, but seeing the same errors for the new transactions even after 30 minutes.

*Expected:* Traffic should adapt using peer1-org1 after a while.

*Observed:* Traffic never adapted using peer1-org1 even after 20 minutes.

 ",,denyeart,dongming,harrisob@us.ibm.com,scottz,suryalnvs,yacovm,,,,,,,,,,,,,,,,,,,,,FAB-12835,FAB-12833,FAB-12834,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002h3:",,,,Unset,Unset,,,,,,,,,,,"1. Launch a network with 2 orgs and 2 peers in each org using latest fabric images from nexus (Tag: amd64-1.4.0-stable - pulled the images on December 09th evening)
2. Create a channel and join the peers to the channel
3. Install and instantiate mapcc chaincode (github.com/hyperledger/fabric/examples/chaincode/go/map)
4. Use 2 concurrent threads to send invokes using service discovery
5. Take down one of the peer (peer1-org1) from org1, it is expected to switch to second peer for the transactions and it switched after like 90 or 100 seconds
6. Allow some transactions to go through and restart the first peer (peer1-org1) after 20minutes or 60 seconds (tried 60 seconds and 13 minutes between the restarts)
7. Now take down the second peer (peer2-org1) in the org1",,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,dongming,harrisob@us.ibm.com,scottz,suryalnvs,yacovm,,,,,dev,main,,,,,,,,,true,"14/Dec/18 12:44 AM;suryalnvs;Tried with the fix [https://gerrit.hyperledger.org/r/28082] but still be able to reproduce the issue.;;;","14/Dec/18 5:46 AM;harrisob@us.ibm.com;Even thought the peer is back on line, it is not able to be found by gRPC. One theory is that gRPC still has the peer at the old IP address and the peer has reconnected with a new address.

The handler will attempt to have gRPC close everything out after an error so that if it has to reconnect later it will be forced to find the peer's new address.;;;","18/Dec/18 8:07 PM;denyeart;A few fixes to 'reset' gRPC have been attempted: [https://gerrit.hyperledger.org/r/#/q/FABN-1058]

But still the client seems to be trying to connect to the restarted peer container at its 'old' IP address rather than the 'new' IP address. Perhaps there is caching of DNS name to IP address mapping somewhere deep in gRPC layer, that is not getting reset on subsequent calls to the peer.;;;","21/Dec/18 4:38 AM;scottz;Note:  This issue deals with peers. Refer also to FABN-1083 (problems reconnecting to orderers).

We have one idea to enhance SDK which might help in most scenarios when at least one other peer from the original layout is still available. Consider: as long as the recovered peer reconnects to the other peers via BOOTSTRAP, then they would know its new ip address. We should confirm in peer logs that that is happening at least. Recall: the SDK knows a list of peers in the current layout (which contained the restarted peer, and probably others), so it could contact any of them to request a new layout if the configured ""discovery peer"" is non-responsive. Then as long as _all_ the peers don't restart and change ip addresses within a 5 minute discover-cache interval, the SDK could find them again (say within 10 minutes). But this enhancement would not be a perfect fix, so we would still require a way for sdk to flush its cache to force it to retrieve new addresses from dns server. It sounds like Bret tried to do that already but it is not working as expected.

Some similar issues were fixed in grpc 1.10 (https://github.com/grpc/grpc/issues/14097), and more in 1.16 and 1.17. [~suryalnvs] tested with 1.14 (current fabric-client supported version) and latest 1.17, but still seeing same problem.;;;","21/Dec/18 5:50 AM;scottz;Higher level question - [~harrisob@us.ibm.com] have you confirmed whether the newer 1.4 sdk code is working? We are running system test, but I imagine you might have UT for this. When the discovery layout gets older than the discovery-cache-life expiry age, have you confirmed that the sdk code actually requests a new layout correctly? (If that is NOT happening, then of course the layout in the sdk would never be updated. If that IS happening correctly, then we can continue to investigate grpc cacheing and dns cacheing and forcing grpc to request a new ip address from dns.)

Question 2: Does sdk flush the layouts when it requests a new layout? Why? Why don't we just continue to use same layout until we _receive_ a new layout? That way, our traffic would continue ok in the case where the ""discovery peer"" restarted but none others did.;;;","21/Dec/18 6:19 AM;scottz;When [~dongming] executed https://jira.hyperledger.org/browse/FAB-10191 in v1.4 in early December, it passed in a single vLaunch environment using docker. He said the IP addresses of the peers did not change, so there was not problem with traffic. That would make it difficult to reproduce the problem on single desktop, but maybe [~harrisob@us.ibm.com] can find a way to use docker differently.;;;","29/Dec/18 8:54 AM;harrisob@us.ibm.com;Tested by starting and stopping the peer in a single docker-compose running on my desktop without any issues.

The node application was running natively on the system and the fabric network was running within the virtual environment. Testing included stopping the discovery peer and seeing the no discovery results error and then starting the peer and seeing everything run.

 ;;;","29/Dec/18 8:59 AM;harrisob@us.ibm.com;We can not use old layouts as they may contain peers that should no longer see the proposal.;;;","04/Jan/19 12:10 AM;scottz;The discovery-cache-life expiry is merely a trigger to request a new layout ""because it has been awhile"". It is not an indicator that the current layout is bad, so there is no reason you should stop using it when you request a new layout. Stop using it only when you RECEIVE a new layout.;;;","04/Jan/19 1:57 AM;harrisob@us.ibm.com;Sure we can do that, [~mastersingh24], [~denyeart] please say that it is OK to use discovery results that are old and not tell the caller that we were unable to get fresh discovery results at the time the caller requested the discover results to be refreshed.;;;","05/Jan/19 4:05 AM;dongming;A suggestion to improve the discovery mechanism:

Once the very first init discovery is completed, SDK has the information of the entire network.  If one peer is not available at the time of init discovery later, SDK can choose a peer from the existing layout to execute discovery.  By this, we can have a robustic discovery method.

 

Note that Surya has used both IP address and name address for test and observed the same result.;;;","06/Jan/19 1:40 AM;denyeart;My opinion is that client should NOT arbitrarily pick a peer for subsequent service discovery calls based on results of prior service discovery calls.  The client may want to target specific peers that are more trusted as the target for service discovery, for example their own org peers, rather than using an arbitrary peer from the network.  Therefore my proposal (for v1.4.1, 2.0.0) is that it should be possible to configure a list of peers that SDK should utilize for service discovery.  Currently the SDK user can only configure a single peer for service discovery use.

What do you think [~mastersingh24] [~yacovm] [~odowdaibm]?

Note, we still need to understand the root cause of why SDK client can't connect to a restarted peer.  My proposal is orthogonal and would only be an incremental improvement for the current problem (would only help if a subset of the configured peers were restarted).;;;","06/Jan/19 2:13 AM;yacovm;{quote}Currently the SDK user can only configure a single peer for service discovery use.{quote}

Really? Why is that? 
Are you sure that's really the case? I don't know much about SDK but you have multiple peers [here|https://github.com/hyperledger/fabric-samples/blob/release-1.3/balance-transfer/artifacts/network-config.yaml]... can't you add a discovery role to all of them?

Another thing I don't understand is:
{quote}5. Take down one of the peer (peer1-org1) from org1, it is expected to switch to second peer for the transactions and it switched after like 90 or 100 seconds {quote}
Why does it take 90 seconds? you have a cached endorsement descriptor from which you compute all combinations of peers... you should select a combination, and try to send proposals. One of the peers is down? all right, then select the next combination, and so on and so forth, until you run out of combinations... Why does it take 90 seconds?




{quote}The discovery-cache-life expiry is merely a trigger to request a new layout ""because it has been awhile"". It is not an indicator that the current layout is bad, so there is no reason you should stop using it when you request a new layout. Stop using it only when you RECEIVE a new layout.{quote}
I don't understand what triggers requesting a new layout though....  is it just time? If so then Scott is right - if you can't get a new layout from some reason, continue using the old one - It's better than nothing.

{quote}Sure we can do that, Gari Singh, David Enyeart please say that it is OK to use discovery results that are old and not tell the caller that we were unable to get fresh discovery results at the time the caller requested the discover results to be refreshed.{quote}
By the way, during the time frame of 1.2, [we added a special event|https://jira.hyperledger.org/browse/FAB-9544] for a chaincode upgrade. 
I opened a [JIRA|https://jira.hyperledger.org/browse/FABN-841] for that... seems like only Rick did that, and I think this can be a nice addition to the SDK lifecycle.

{quote}Note, we still need to understand the root cause of why SDK client can't connect to a restarted peer.{quote}
If we can get our hands on a traffic recording file via *tcpdump* , we can open it and analyze the traffic and see what was going on.
Also, logs from the peer that is used as a discovery server via *docker logs <container> | grep discovery | grep -v gossip* would be nice, to see what the peer gets and what it replies with. ;;;","08/Jan/19 3:33 AM;harrisob@us.ibm.com;Applications are free to reinitialize the channel and provide a new peer at anytime, especially if the applications notices an issue with the endorsements based on discovery. I will update the discovery tutorial to highlight this. The application developers are also able to write their own endorsement handlers if they do not like the basic discovery handler included. With NodeSDK 1.4.1 we will support ""targets"" along with ""target"" when initializing a channel. Note that the ""target"" parameter was part of the initialize API prior to the additions of discovery providing the trusted peer to be queried. This does cross a dangerous boundary of the SDK deciding good and bad calls. I will need some guidance on what is a failed call to the peer to have it then try the next peer on the list. ;;;","31/Jul/19 2:56 AM;harrisob@us.ibm.com;Not able to reproduce;;;","01/Aug/19 12:47 AM;scottz;Leaning towards agreeing with closure, based on this summary of relevant points. However, there are still a couple things that could improve recovery and I request opinions on whether to pursue those.

# We verified that with appropriate settings in our k8s network, the client is able to reconnect to peer. To be clear: the initial difficulties we were having was because the peers came back up after restart with new IP addresses. Using LoadBalancer instead of NodePort setting helped by essentially putting a static IP in front of each peer which could be used for the address. This of course helps avoid the other recovery related problems we have been discussing because we could reach that original target peer. However, it does not solve the situation when that peer is unreachable for an extended period or even removed permanently. Fortunately, using a list of targets, rather than single peer target for discovery, helps alleviate the problem when that target peer is unreachable.
# Because of the previous point, this one is not as critical - although I still feel it is an issue that could use some attention. In the case where all target peers are unreachable, the admins would need to recognize the situation and reinitiate discoveries for each with different peers. I don't agree with the stated reason provided _""We can not use old layouts as they may contain peers that should no longer see the proposal.""_ why my request to have SDK send discovery requests to other ""known"" peers (instead of just the listed target peers) was rejected. The list of acceptable peers would not change dynamically and magically. If some peers should no longer see the proposals, then that would be because the admins reinstantiated the chaincode with different orgs/peers, at which time they would need to remove those and select other acceptable peers for discovery.
# It was indicated that SDK does try a subsequent layout after a 90 secs. I don't like how long this takes, but that is not the focus of this bug and thus should be discussed separately if people still feel this could be investigated and improved. _I imagine this may be based on message timeout and/or connection timeouts, so it may be reasonable to expect up to something like 30 secs, but that is just a thought._ Does anyone else feel this should be further investigated?
# That discovery-cache-life timer can be used to automatically request a new layout, default every 5 minutes. As Bret suggested, clients can also request a new layout anytime if they put in code to recognize patterns such as successive transactions getting rejected or not endorsed.
#  Finally, this one earlier question was not answered, i.e., if you can't get a new layout for some reason (whether the request was ad-hoc or due to that 5-minute timer expiry triggering a new request), could we continue using the old one? Is it better than doing nothing and rejecting all transactions? I feel it is, and that we can expect the list of peers in the layout is still valid until an instantiate/update is made to alter them. Hoping [~denyeart] or [~mastersingh24] can weigh in on whether it is OK for [~harrisob@us.ibm.com] to have the the SDK use discovery results that are old and not tell the caller that we were unable to get fresh discovery results at the time the caller requested the discovery results to be refreshed.;;;",
Prepare release of RC1 for fabric-sdk-node,FABN-1059,36064,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,11/Dec/18 6:42 PM,12/Dec/18 11:33 AM,28/Oct/23 3:25 AM,12/Dec/18 11:32 AM,,,,,,v1.4.0,,,,0,,,,,,"Preparation of v1.4.0-RC1 in accordance with release process document:

https://docs.google.com/document/d/12IpQnREUoJEUj2pF2z-0Up55geItFd94fcsbAkPacTg/edit",,andrew-coleman,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13230,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002l3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,denyeart,,,,,,,,,dev,main,,,,,,,,,true,"12/Dec/18 11:32 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/28066/;;;",,,,,,,,,,,,,,,,
Getting TypeError when calling compareProposalResponseResults if proposal status is 500,FABN-1060,36065,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,zwartesokken,zwartesokken,11/Dec/18 6:46 PM,29/Dec/18 1:57 AM,28/Oct/23 3:25 AM,18/Dec/18 7:33 PM,,,,,,,,,,0,,,,,,"When trying to call the function `compareProposalResponseResults` with a failed proposal the function is trying to read the property status which in this case does not exists.

It will throw the following error:

 

{{TypeError: Cannot read property 'status' of null
    at _getProposalResponseResults (/mnt/c/_share/test/libs/node_modules/fabric-client/lib/Channel.js:3456:90)    at Channel.compareProposalResponseResults (/mnt/c/_share/test/libs/node_modules/fabric-client/lib/Channel.js:3290:21)    at ChaincodeHandler.invokeEvaluateProposal (/mnt/c/_share/test/libs/src/ChaincodeHandler.js:172:23)
    at initializeChannel.then.then (/mnt/c/_share/test/libs/src/ChaincodeHandler.js:79:37)
    at <anonymous>}}

{{}}

fabric-client: 1.3.0

Nodejs: 8.12.0

OS: Ubuntu 18.04",,andrew-coleman,zwartesokken,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002lb:",,,,Unset,Unset,,,,,,,,,,,"Deploy basic chaincode
Shutdown chaincode
Try to invoke chaincode",,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,zwartesokken,,,,,,,,,dev,main,,,,,,,,,true,"18/Dec/18 7:33 PM;andrew-coleman;https://gerrit.hyperledger.org/r/c/28103/;;;",,,,,,,,,,,,,,,,
Update Java chaincode version,FABN-1061,36077,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Dec/18 7:43 AM,12/Dec/18 8:26 AM,28/Oct/23 3:25 AM,12/Dec/18 8:26 AM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002nz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Missing package update in Fabric-network,FABN-1062,36081,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Dec/18 1:55 PM,12/Dec/18 9:44 PM,28/Oct/23 3:25 AM,12/Dec/18 9:43 PM,,,,,,,,,,0,,,,,,need to update the package.json to modify the fabric-client and fabric-ca-client locations,,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13230,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002ov:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"12/Dec/18 9:43 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/28094/;;;",,,,,,,,,,,,,,,,
Prepare to publish fabric-sdk-node v1.4.0-rc2 ,FABN-1063,36094,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,12/Dec/18 6:11 PM,12/Dec/18 9:44 PM,28/Oct/23 3:25 AM,12/Dec/18 9:42 PM,,,,,,v1.4.0,,,,0,,,,,,Publish RC2 to pickup package dependency fix (FABN-1062),,andrew-coleman,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-13230,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002rr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,denyeart,,,,,,,,,dev,main,,,,,,,,,true,"12/Dec/18 9:42 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/28097/;;;",,,,,,,,,,,,,,,,
"Add helper function to health check Peer, Orderer",FABN-1064,36101,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Duplicate,davidkhala,davidkhala,davidkhala,13/Dec/18 12:00 AM,28/May/20 11:39 AM,28/Oct/23 3:25 AM,28/May/20 11:39 AM,Unscheduled,,,,,,,,,0,external,sdk-triaged,,,,"Peer, Orderer extends from class Remote. 
There is already a method `waitForReady` working as a simple health check util. 
I plan to expose it as a `connect` method for peer and orderer object

Plus, add clear jsdoc for them

",,davidkhala,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1185,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002tb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,heatherp,,,,,,,,,,,,,,,,,,,,"13/Dec/18 12:52 AM;davidkhala;https://gerrit.hyperledger.org/r/#/c/28115/;;;","25/Oct/19 12:44 AM;heatherp;Hi [~davidkhala] - does this issue still need to be open? I can see you abdandoned the gerrit change?;;;","28/May/20 11:39 AM;davidkhala;[~heatherp] Dear Heather, since this concept has been included in 2.x design, I will mark it as duplicated. ;;;",,,,,,,,,,,,,,
Errors with npm install with gulp 4.0.0,FABN-1065,36107,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,harrisob@us.ibm.com,latitiah,latitiah,13/Dec/18 1:44 AM,17/Dec/18 2:52 PM,28/Oct/23 3:25 AM,17/Dec/18 2:52 PM,,,,,,v1.4.0,,,,0,,,,,,"When performing an npm install with v1.4.0 fabric-sdk-node, there are issues with gulp-4.0.0

{code}npm ERR! peer dep missing: gulp@>=4, required by gulp-debug@4.0.0
npm ERR! extraneous: fabric-ca-client@1.3.1-snapshot /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client
npm ERR! extraneous: fabric-client@1.3.1-snapshot /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client
npm ERR! extraneous: fabric-network@1.3.0 /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-network
npm ERR! peer dep missing: ajv@^5.0.0, required by ajv-keywords@2.1.1
│   │     └── ansi-regex@3.0.0
│   └── user-home@2.0.0
{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,3cb3fa7,Unset,No,,,"1|i002un:",,,,Unset,Unset,,,,,,,,,,,"perform 'npm install'
perform 'npm list'
Note errors.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"15/Dec/18 3:57 AM;harrisob@us.ibm.com;Would have to see the steps for this, we are not seeing this in 1.4.0 test environment. `gulp` is a test tool and package this needed by users. So if there is an issue it would have to be worked out by the user.;;;","17/Dec/18 2:52 PM;latitiah;Reran this test. The gulp error went away. I will verify this in Nick's env as well.;;;",,,,,,,,,,,,,,,
prepare master for 2.0.0,FABN-1066,36113,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,13/Dec/18 3:45 AM,15/Jan/19 4:39 AM,28/Oct/23 3:25 AM,15/Jan/19 4:39 AM,,,,,,,,,,0,,,,,,"version:2.0.0-snapshot, tag: unstable

in

package.json

fabric-ca-client/package.json

fabric-client/package.json

fabric-network/package.json

fabric-common/package.json",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1067,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002vr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
prepare branch release-1.4 for 1.4.0,FABN-1067,36115,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,13/Dec/18 4:01 AM,15/Jan/19 4:40 AM,28/Oct/23 3:25 AM,15/Jan/19 4:40 AM,,,,,,,,,,0,,,,,,"version:1.4.0-snapshot, tag: unstable-1.4

in

package.json

fabric-ca-client/package.json

fabric-client/package.json

fabric-network/package.json

fabric-common/package.json",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1066,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002w7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Compatibility Test Failure: Unable to perform chaincode upgrades,FABN-1068,36119,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,latitiah,latitiah,13/Dec/18 7:13 AM,24/May/19 1:29 AM,28/Oct/23 3:25 AM,24/May/19 1:29 AM,v1.4.0,,,,,Future,,,,0,,,,,,"Given the following 2 scenarios, it was noted that there were errors when attempting to upgrade a network.
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

Please see FAB-12721 for more details of exact steps to follow and the resulting errors.
{code:java}
not ok 97 Error: Failed to test for bad transient map. The chaincode should have rejected the upgrade proposal. at channel.sendUpgradeProposal.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:313:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
    stack: |-
      Error: Error: Failed to test for bad transient map. The chaincode should have rejected the upgrade proposal.
          at channel.sendUpgradeProposal.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:313:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...


not ok 98 Failed to upgrade chaincode 
  ---
    operator: fail
    at: e2eUtils.instantiateChaincode.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/nodechaincode/upgrade.js:47:7)
    stack: |-
      Error: Failed to upgrade chaincode 
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.instantiateChaincode.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/nodechaincode/upgrade.js:47:7)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i002x3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"17/Dec/18 2:39 PM;latitiah;Reran this test and continued to receive the following error:
{code}***** Node-Chaincode U P G R A D E flow: upgrade chaincode *****


not ok 97 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:360:11) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
    stack: |-
      Error: Error: All proposals were not good
          at e2eUtils.tlsEnroll.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:360:11)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
not ok 98 Failed to upgrade chaincode 
  ---
    operator: fail
    at: e2eUtils.instantiateChaincode.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/nodechaincode/upgrade.js:47:7)
    stack: |-
      Error: Failed to upgrade chaincode 
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.instantiateChaincode.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/nodechaincode/upgrade.js:47:7)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
# 

***** Node-Chaincode U P G R A D E flow: query chaincode *****


not ok 119 checking query results are correct that value is 410
  ---
    operator: equal
    expected: '410'
    actual:   '400'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:826:10)
    stack: |-
      Error: checking query results are correct that value is 410
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:826:10)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
not ok 120 checking query results are correct that value is 410
  ---
    operator: equal
    expected: '410'
    actual:   '400'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:826:10)
    stack: |-
      Error: checking query results are correct that value is 410
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:826:10)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...{code};;;","05/Jan/19 12:01 AM;harrisob@us.ibm.com;I modified NodeSDK release-1.3 to call out fabric 1.4.0-rc2 and base image 0.4.14.
[https://gerrit.hyperledger.org/r/#/c/28467/]

all test ran succesfully;;;",,,,,,,,,,,,,,,
Differentiate between transaction failures and commit event timeout expiry,FABN-1069,36158,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Dec/18 7:04 PM,21/Feb/19 12:29 AM,28/Oct/23 3:25 AM,20/Dec/18 12:25 AM,v1.4.0,,,,,,,,,0,,,,,,"Using fabric-network to submit a transaction, a thrown error may occur due to either:
 # A genuine transaction failure; or
 # A timeout waiting for a commit event for a successful transaction.

 

To allow client code to distinguish between these two distinct error conditions, propose using the error name *TimeoutError* for the timeout case.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0034v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
use Node.js 8.14.0,FABN-1070,36168,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Dec/18 1:16 AM,15/Jan/19 4:39 AM,28/Oct/23 3:25 AM,15/Jan/19 4:39 AM,,,,,,,,,,0,,,,,,Update build scripts to now install and use node.js 8.14.0,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0036v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Compatibility Test Failure: Bad proposal transactions,FABN-1071,36171,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,latitiah,latitiah,15/Dec/18 1:59 AM,24/May/19 1:12 AM,28/Oct/23 3:25 AM,24/May/19 1:12 AM,v1.4.0,,,,,,,,,0,,,,,,"Given the following scenarios, it was noted that there were errors when attempting to instantiate chaincode.

Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.3 & Fabric-CA is at 1.4
Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

In the following end-to-end scenario, there are bad proposal transactions when instantiating chaincode.

The following errors are received:
{code}
not ok 139 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:360:11) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
    stack: |-
      Error: Error: All proposals were not good
          at e2eUtils.tlsEnroll.then.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:360:11)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

not ok 140 Failed to instantiate chaincode 
  ---
    operator: fail
    at: e2eUtils.instantiateChaincodeWithId.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/instantiate-chaincode.js:33:7)
    stack: |-
      Error: Failed to instantiate chaincode 
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.instantiateChaincodeWithId.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/instantiate-chaincode.js:33:7)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0037j:",,,,Unset,Unset,,,,,,,,,,,See https://jira.hyperledger.org/browse/FAB-12721 for exact steps and more test result details. ,,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"15/Dec/18 4:03 AM;harrisob@us.ibm.com;Must be a setup issue, if`Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.3 & Fabric-CA is at 1.4` is failing, since the only change is the fabric-ca. If there was an issue with fabric-ca, the test would have failed at the enrollment or registration. The step that is failing does not include fabric-ca.;;;","17/Dec/18 2:44 PM;latitiah;Reran this test. Most errors went away, but the following error was still seen:
{code}***** Network End-to-end flow: execute transaction to get information *****

not ok 191 Error: make sure the chaincode network-e2enodecc has been successfully instantiated and try again: chaincode network-e2enodecc not found at self._endorserClient.processProposal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Peer.js:47:473) at Object.onReceiveStatus (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:1191:9) at InterceptingListener._callNext (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:564:42) at InterceptingListener.onReceiveStatus (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:614:8) at callback (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:841:24)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/query.js:90:5)
    stack: |-
      Error: Error: make sure the chaincode network-e2enodecc has been successfully instantiated and try again: chaincode network-e2enodecc not found
          at self._endorserClient.processProposal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Peer.js:47:473)
          at Object.onReceiveStatus (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:1191:9)
          at InterceptingListener._callNext (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:564:42)
          at InterceptingListener.onReceiveStatus (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:614:8)
          at callback (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:841:24)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/query.js:90:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7){code}

This error has to do with missing chaincode, so I'm not sure if it's a valid failure or not.;;;","05/Jan/19 12:01 AM;harrisob@us.ibm.com;I modified NodeSDK release-1.3 to call out fabric 1.4.0-rc2 and base image 0.4.14.
[https://gerrit.hyperledger.org/r/#/c/28467/]

all test ran successfully;;;",,,,,,,,,,,,,,
Compatibility Test Failure: Bad transient map is successful,FABN-1072,36172,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,latitiah,latitiah,15/Dec/18 2:11 AM,17/Dec/18 2:33 PM,28/Oct/23 3:25 AM,17/Dec/18 2:32 PM,v1.4.0,,,,,,,,,0,,,,,,"Given the following scenarios, it was noted that there were errors when attempting to upgrade a network.
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.3 & Fabric-CA is at 1.4
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

Please see FAB-12721 for more details of exact steps to follow and the resulting errors.
{code:java}
not ok 83 Error: Failed to test for bad transient map. The chaincode should have rejected the upgrade proposal. at channel.sendUpgradeProposal.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:313:15) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
    stack: |-
      Error: Error: Failed to test for bad transient map. The chaincode should have rejected the upgrade proposal.
          at channel.sendUpgradeProposal.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:313:15)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:408:6)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,FABN-1073,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0037r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"15/Dec/18 4:05 AM;harrisob@us.ibm.com;How is this one different then FABN-1068;;;","17/Dec/18 2:31 PM;latitiah;This error actually looks like it is the same as FABN-1073. FABN-1068 is about upgrades. This error is about "" Node-Chaincode TransientMap Support in Proposals.""
{code}***** Node-Chaincode TransientMap Support in Proposals *****

not ok 125 Checking the result has the transientMap value returned by the chaincode
  ---
    operator: equal
    expected: |-
      'dummyValue'
    actual: |-
      'Error: REQUEST_TIMEOUT'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
    stack: |-
      Error: Checking the result has the transientMap value returned by the chaincode
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
not ok 126 Checking the result has the transientMap value returned by the chaincode
  ---
    operator: equal
    expected: |-
      'dummyValue'
    actual: |-
      'Error: REQUEST_TIMEOUT'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
    stack: |-
      Error: Checking the result has the transientMap value returned by the chaincode
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...{code};;;",,,,,,,,,,,,,,,
Compatibility Test Failure: REQUEST_TIMEOUT error,FABN-1073,36173,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,latitiah,latitiah,15/Dec/18 2:15 AM,24/May/19 1:12 AM,28/Oct/23 3:25 AM,24/May/19 1:12 AM,v1.4.0,,,,,,,,,0,,,,,,"Given the following scenarios, it was noted that there were errors when testing the transient map support in proposals.
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

Please see FAB-12721 for more details of exact steps to follow and the resulting errors.
{code}
not ok 125 Checking the result has the transientMap value returned by the chaincode
  ---
    operator: equal
    expected: |-
      'dummyValue'
    actual: |-
      'Error: REQUEST_TIMEOUT'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
    stack: |-
      Error: Checking the result has the transientMap value returned by the chaincode
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,FABN-1072,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0037z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"17/Dec/18 1:56 PM;latitiah;Reran the test and found the following error 
{code}***** Node-Chaincode TransientMap Support in Proposals *****

not ok 125 Checking the result has the transientMap value returned by the chaincode
  ---
    operator: equal
    expected: |-
      'dummyValue'
    actual: |-
      'Error: REQUEST_TIMEOUT'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
    stack: |-
      Error: Checking the result has the transientMap value returned by the chaincode
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
not ok 126 Checking the result has the transientMap value returned by the chaincode
  ---
    operator: equal
    expected: |-
      'dummyValue'
    actual: |-
      'Error: REQUEST_TIMEOUT'
    at: e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
    stack: |-
      Error: Checking the result has the transientMap value returned by the chaincode
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at e2eUtils.tlsEnroll.then.then.then.then (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:816:9)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...{code}
;;;","05/Jan/19 12:02 AM;harrisob@us.ibm.com;I modified NodeSDK release-1.3 to call out fabric 1.4.0-rc2 and base image 0.4.14.
[https://gerrit.hyperledger.org/r/#/c/28467/]

all test ran successfully;;;",,,,,,,,,,,,,,,
Compatibility Test Failure: Status 500 errors with in-memory wallet,FABN-1074,36174,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,latitiah,latitiah,15/Dec/18 2:26 AM,24/May/19 1:11 AM,28/Oct/23 3:25 AM,24/May/19 1:11 AM,v1.4.0,,,,,,,,,0,,,,,,"Given the following scenarios, it was noted that there were errors when using in-memory wallet.
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

Please see FAB-12721 for more details of exact steps to follow and the resulting errors.
{code}
not ok 145 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:117:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:117:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke multiple transactions to move money using in memory wallet and default event strategy *****
...
not ok 150 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and MSPID_SCOPE_ALLFORTX event strategy *****
...
not ok 155 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:249:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:249:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and MSPID_SCOPE_ANYFORTX event strategy *****
...
not ok 160 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:301:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:301:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and NETWORK_SCOPE_ALLFORTX event strategy *****
...
not ok 165 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:361:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:361:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and NETWORK_SCOPE_ANYFORTX event strategy *****
...
not ok 171 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:427:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:427:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and no event strategy *****
...
not ok 186 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:572:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:572:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00387:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"15/Dec/18 4:08 AM;harrisob@us.ibm.com;This test indicates the fabric-network, this package and testing was not in 1.3. Must be a setup issue.;;;","17/Dec/18 2:06 PM;latitiah;Reran the test and continued to receive the following errors:
{code}***** Network End-to-end flow: invoke transaction to move money using in memory wallet and default event strategy *****


not ok 145 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:117:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:117:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke multiple transactions to move money using in memory wallet and default event strategy *****

not ok 150 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and MSPID_SCOPE_ALLFORTX event strategy *****

not ok 155 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:249:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:249:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and MSPID_SCOPE_ANYFORTX event strategy *****

not ok 160 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:301:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:301:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and NETWORK_SCOPE_ALLFORTX event strategy *****

not ok 165 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:361:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:361:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and NETWORK_SCOPE_ANYFORTX event strategy *****

not ok 171 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:427:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:427:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
***** Network End-to-end flow: invoke transaction to move money using in memory wallet and no event strategy *****

not ok 186 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:572:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:572:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
# 
################### Reran Case2 ################################################
***** Network End-to-end flow: invoke multiple transactions to move money using in memory wallet and default event strategy *****

not ok 169 Error: Peer localhost:7051 has rejected transaction ""a4692ca2aee44813c4eb481d35973bcb8a4f805824bd0f87a190da754070b723"" with code ""ENDORSEMENT_POLICY_FAILURE"" at TransactionEventHandler._onEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:2076) at EventRegistration.eventHub.registerTxEvent [as onEvent] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:420) at ChannelEventHub._callTransactionListener (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:2657) at ChannelEventHub._checkTransactionId (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:1635) at ChannelEventHub._processTxEvents (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:689) at ClientDuplexStream._stream.on.deliverResponse (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:174:86) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at addChunk (_stream_readable.js:263:12) at readableAddChunk (_stream_readable.js:250:11) at ClientDuplexStream.Readable.push (_stream_readable.js:208:10) at Object.onReceiveMessage (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:1276:19) at InterceptingListener.recvMessageWithContext (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:603:19) at /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:702:14
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
    stack: |-
      Error: Error: Peer localhost:7051 has rejected transaction ""a4692ca2aee44813c4eb481d35973bcb8a4f805824bd0f87a190da754070b723"" with code ""ENDORSEMENT_POLICY_FAILURE""
          at TransactionEventHandler._onEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:2076)
          at EventRegistration.eventHub.registerTxEvent [as onEvent] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:420)
          at ChannelEventHub._callTransactionListener (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:2657)
          at ChannelEventHub._checkTransactionId (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:1635)
          at ChannelEventHub._processTxEvents (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:689)
          at ClientDuplexStream._stream.on.deliverResponse (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:174:86)
          at emitOne (events.js:116:13)
          at ClientDuplexStream.emit (events.js:211:7)
          at addChunk (_stream_readable.js:263:12)
          at readableAddChunk (_stream_readable.js:250:11)
          at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
          at Object.onReceiveMessage (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:1276:19)
          at InterceptingListener.recvMessageWithContext (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:603:19)
          at /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:702:14
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
ok 170 org1 event hub correctly been disconnected
# 

################### Reran Case3 ################################################
***** Network End-to-end flow: invoke multiple transactions to move money using in memory wallet and default event strategy *****

not ok 169 Error: Peer localhost:7051 has rejected transaction ""f2893471137a26791aca036ecfae0c8a32e38d42dc4a6b88f74a1f3b7cf40274"" with code ""ENDORSEMENT_POLICY_FAILURE"" at TransactionEventHandler._onEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:2076) at EventRegistration.eventHub.registerTxEvent [as onEvent] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:420) at ChannelEventHub._callTransactionListener (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:2657) at ChannelEventHub._checkTransactionId (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:1635) at ChannelEventHub._processTxEvents (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:689) at ClientDuplexStream._stream.on.deliverResponse (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:174:86) at emitOne (events.js:116:13) at ClientDuplexStream.emit (events.js:211:7) at addChunk (_stream_readable.js:263:12) at readableAddChunk (_stream_readable.js:250:11) at ClientDuplexStream.Readable.push (_stream_readable.js:208:10) at Object.onReceiveMessage (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:1276:19) at InterceptingListener.recvMessageWithContext (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:603:19) at /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:702:14
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
    stack: |-
      Error: Error: Peer localhost:7051 has rejected transaction ""f2893471137a26791aca036ecfae0c8a32e38d42dc4a6b88f74a1f3b7cf40274"" with code ""ENDORSEMENT_POLICY_FAILURE""
          at TransactionEventHandler._onEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:2076)
          at EventRegistration.eventHub.registerTxEvent [as onEvent] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/impl/event/transactioneventhandler.js:21:420)
          at ChannelEventHub._callTransactionListener (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:2657)
          at ChannelEventHub._checkTransactionId (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:1635)
          at ChannelEventHub._processTxEvents (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:433:689)
          at ClientDuplexStream._stream.on.deliverResponse (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/ChannelEventHub.js:174:86)
          at emitOne (events.js:116:13)
          at ClientDuplexStream.emit (events.js:211:7)
          at addChunk (_stream_readable.js:263:12)
          at readableAddChunk (_stream_readable.js:250:11)
          at ClientDuplexStream.Readable.push (_stream_readable.js:208:10)
          at Object.onReceiveMessage (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:1276:19)
          at InterceptingListener.recvMessageWithContext (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:603:19)
          at /opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/node_modules/grpc/src/client_interceptors.js:702:14
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:195:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
ok 170 org1 event hub correctly been disconnected
# {code}
;;;",,,,,,,,,,,,,,,
Compatibility Test Failure: Status 500 errors with in-file wallet,FABN-1075,36175,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,latitiah,latitiah,15/Dec/18 2:29 AM,24/May/19 1:11 AM,28/Oct/23 3:25 AM,24/May/19 1:11 AM,v1.4.0,,,,,,,,,0,,,,,,"Given the following scenarios, it was noted that there were errors when attempting to upgrade a network.
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.3 & Fabric-CA is at 1.4
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

Please see FAB-12721 for more details of exact steps to follow and the resulting errors.
{code}
***** Network End-to-end flow: invoke transaction to move money using in file system wallet *****
...
not ok 182 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:526:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:526:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
{code}",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0038f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"15/Dec/18 4:09 AM;harrisob@us.ibm.com;This test indicates the fabric-network, this package and testing was not in 1.3. Must be a setup issue.;;;","17/Dec/18 2:20 PM;latitiah;Reran this test ensuring that the testing was from the release1.3 branch. The following errors were still received
{code}***** Network End-to-end flow: invoke transaction to move money using in file system wallet *****

not ok 182 Error: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512) at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:526:5)
    stack: |-
      Error: Error: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Contract._validatePeerResponses (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:18:512)
          at Contract.submitTransaction (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/contract.js:27:51)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:526:5)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
# 


***** Network End-to-end flow: invoke transaction to move money using in file system wallet *****


not ok 210 Unexpected exception: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:522:7)
    stack: |-
      Error: Unexpected exception: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:522:7)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
# {code};;;",,,,,,,,,,,,,,,
Compatibility Test Failure: Status 500 errors with handling transaction errors,FABN-1076,36176,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,latitiah,latitiah,15/Dec/18 2:31 AM,24/May/19 1:12 AM,28/Oct/23 3:25 AM,24/May/19 1:12 AM,v1.4.0,,,,,,,,,0,,,,,,"Given the following scenarios, it was noted that there were errors when attempting to upgrade a network.
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.3 & Fabric-CA is at 1.4
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.3
 - Nodejs Integration Test Suite at 1.3 , Node.js SDK at 1.3, Fabric is at 1.4 & Fabric-CA is at 1.4

Please see FAB-12721 for more details of exact steps to follow and the resulting errors.
{code}***** Network End-to-end flow: handle transaction error *****
...
not ok 177 Unexpected exception: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:457:6)
    stack: |-
      Error: Unexpected exception: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:457:6)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
{code}
",,harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12721,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0038n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,latitiah,,,,,,,,,,,,,,,,,,,,"15/Dec/18 4:09 AM;harrisob@us.ibm.com;This test indicates the fabric-network, this package and testing was not in 1.3. Must be a setup issue.;;;","17/Dec/18 2:16 PM;latitiah;Reran this test ensuring that the test used package from the release1.3 branch.  The following error was still received.
{code}***** Network End-to-end flow: handle transaction error *****

not ok 177 Unexpected exception: No valid responses from any peers. Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true} Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
  ---
    operator: fail
    at: test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:457:6)
    stack: |-
      Error: Unexpected exception: No valid responses from any peers.
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
      Response from attempted peer comms was an error: {""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""isProposalResponse"":true}
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at test (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke.js:457:6)
          at <anonymous>
          at process._tickCallback (internal/process/next_tick.js:188:7)
  ...
# {code};;;","05/Jan/19 12:03 AM;harrisob@us.ibm.com;I modified NodeSDK release-1.3 to call out fabric 1.4.0-rc2 and base image 0.4.14.
[https://gerrit.hyperledger.org/r/#/c/28467/]

all test ran successfully;;;",,,,,,,,,,,,,,
"Consistent fail in Headless integration tests in fabric-sdk-node-merge <x86_64>, <master> branch, testuser registration failed.",FABN-1077,36184,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,15/Dec/18 12:41 PM,20/Dec/18 1:31 AM,28/Oct/23 3:25 AM,20/Dec/18 1:31 AM,v1.4.0,v2.0.0,,,,v1.4.0,v2.0.0,,,0,fabric-sdk-node,,,,,"There is consistent fail in Headless integration tests in fabric-sdk-node-merge <x86_64>, <master> branch, failed to register 'testuser`. 

{code:java}
09:52:10 not ok 97 Failed to register ""testUser"". Error: Calling register endpoint failed, READ Timeout at ClientRequest.request.setTimeout (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-ca-client/lib/FabricCAClient.js:349:13) at Object.onceWrapper (events.js:313:30) at emitNone (events.js:106:13) at ClientRequest.emit (events.js:208:7) at TLSSocket.emitRequestTimeout (_http_client.js:644:42) at Object.onceWrapper (events.js:313:30) at emitNone (events.js:111:20) at TLSSocket.emit (events.js:208:7) at TLSSocket.Socket._onTimeout (net.js:410:8) at ontimeout (timers.js:498:11) at tryOnTimeout (timers.js:323:5) at Timer.listOnTimeout (timers.js:290:5)
09:52:10   ---
09:52:10     operator: fail
09:52:10     at: caService.enroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:115:6)
09:52:10     stack: |-
09:52:10       Error: Failed to register ""testUser"". Error: Calling register endpoint failed, READ Timeout
{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/133/consoleFull

",,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,5f4733be1980b3235d4e418f6e0e2690c75b981a,Unset,No,,,"1|i003af:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,"17/Dec/18 2:34 AM;sambhavdutt;+Summary:+ Chaincode instantiation failed in the recent build in the Headless & Integration tests.
 +Consistent:+ Yes
 +Platform:+ x86_64

+Branch:+ release-1.4
 +Commit:+ 284ff108728254160051c31ab6c92005554f6be0
{code:java}
11:48:49 # npm ERR! code EINTEGRITY
11:48:49 # npm ERR! sha512-LWoGYW+ylOo2Ldvq/1i/SEwDsIxmDEJK9KoHPHEQkkwdG5zC+9D3/wJsgf/JFvpUoHrPdzLfBUqxfzRVCR90jw== integrity checksum failed when using sha512: wanted sha512-LWoGYW+ylOo2Ldvq/1i/SEwDsIxmDEJK9KoHPHEQkkwdG5zC+9D3/wJsgf/JFvpUoHrPdzLfBUqxfzRVCR90jw== but got sha512-WjOGKCsh6aowDH3RqtHvHlqantvmFWR6zAJEz3rSbo5meGkz153E7OWB3P3FGWYCkxds0skBUYPsFHyc2mxnUA==. (2030332 bytes)
11:48:49 # 
11:48:49 # npm ERR! A complete log of this run can be found in:
11:48:49 # npm ERR!     /root/.npm/_logs/2018-12-16T16_48_26_334Z-debug.log
11:48:49 # ""
11:48:49 not ok 477 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:228:7)
11:48:49   ---
11:48:49     operator: fail
11:48:49     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
11:48:49     stack: |-
11:48:49       Error: Error: All proposals were not good
11:48:49           at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11)
11:48:49           at <anonymous>
11:48:49           at process._tickDomainCallback (internal/process/next_tick.js:228:7)
11:48:49           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
11:48:49           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
11:48:49           at Test.fail (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
11:48:49           at Test.bound [as fail] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
11:48:49           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
11:48:49           at <anonymous>
11:48:49           at process._tickDomainCallback (internal/process/next_tick.js:228:7)
11:48:49   ...
11:48:49 not ok 478 Failed to instantiate chaincode 
11:48:49   ---
11:48:49     operator: fail
11:48:49     at: e2eUtils.instantiateChaincodeWithId.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/instantiate-chaincode.js:32:7)
11:48:49     stack: |-
11:48:49       Error: Failed to instantiate chaincode
{code}
*Build Log*
 [https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/143/consoleFull];;;","18/Dec/18 12:24 AM;vijaypunugubati;+Summary:+ Chaincode instantiation failed in the recent build in the Headless & Integration tests.
+Consistent:+ Yes
+Platform:+ x86_64

+Branch:+ Master
+Commit:+ e3fcc273c61b35c650fd8cadebe1f8ff07f8c56b
{code:java}
/08:58:15 # Proposal failed to e2enodecc :: Error: error starting container: error starting container: Failed to generate platform-specific docker build: Failed to pull hyperledger/fabric-ccenv:latest: API error (500): Get https://registry-1.docker.io/v2/: EOF
08:58:15 not ok 179 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:229:7)
08:58:15   ---
08:58:15     operator: fail
08:58:15     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
08:58:15     stack: |-
08:58:15       Error: Error: All proposals were not good
08:58:15           at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11)
08:58:15           at <anonymous>
08:58:15           at process._tickDomainCallback (internal/process/next_tick.js:229:7)
08:58:15           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
08:58:15           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
08:58:15           at Test.fail (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
08:58:15           at Test.bound [as fail] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
08:58:15           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
08:58:15           at <anonymous>
08:58:15           at process._tickDomainCallback (internal/process/next_tick.js:229:7)
08:58:15   ...
08:58:15 not ok 180 Failed to instantiate chaincode/ code placeholder
{code};;;","20/Dec/18 1:31 AM;rameshthoomu;Not seeing this in the latest builds. Closing this

https://jenkins.hyperledger.org/job/fabric-sdk-node-merge-x86_64/155/consoleFull;;;","20/Dec/18 1:31 AM;rameshthoomu;This is working as expected now. Could be a flake error;;;",,,,,,,,,,,,,
"The fabric test-daily jobs are failing consistently in ote, pte tests, git init failed in fabric",FABN-1078,36185,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,15/Dec/18 1:03 PM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,15/Dec/18 1:47 PM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"The fabric test-daily jobs are failing consistently in ote, pte tests, git init failed in the _pull-images_ make target.

{code:java}
19:59:47 fatal: destination path 'fabric' already exists and is not an empty directory.
19:59:47 fatal: clone of 'https://gerrit.hyperledger.org/r/fabric' into submodule path 'fabric' failed
19:59:47 Makefile:67: recipe for target 'git-init' failed
19:59:47 make: *** [git-init] Error 128
19:59:47 Build step 'Execute shell' marked build as failure
{code}

There is no fail in smoke tests(verify,merge) as _git-init_ target is not a part of smoke tests


*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-ote-master-x86_64/109/",,latitiah,rameshthoomu,sambhavdutt,scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,0439bb52a150530030d4a51f64db058296809bca,Unset,No,,,"1|i003an:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),latitiah,rameshthoomu,sambhavdutt,scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to publish API docs from sdk-node release-1.4 branch,FABN-1079,36187,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,vijaypunugubati,vijaypunugubati,16/Dec/18 12:55 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,18/Dec/18 3:31 AM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"Summary: Fail to publish API docs to gh-pages URL sdk-node/github.io

Consistent: Yes

Branch: release-1.4

Platform: <x86_64>

Error Snippet:
{code:java}
/18:17:10 
18:17:10 [32m -----------> Publish NODE_SDK API docs after successful merge on amd64 [0m
18:17:11 
18:17:11 ####################################################
18:17:11 # debug log: /tmp/hfc/test-log/debug.log
18:17:11 ####################################################
18:17:11 
18:17:12 [23:17:12] Using gulpfile /w/workspace/****-merge-x86_64/gopath/src/github.com/hyperledger/****/gulpfile.js
18:17:12 [23:17:12] Starting 'clean'...
18:17:12 [23:17:12] Finished 'clean' after 1.86 ms
18:17:12 [23:17:12] Starting 'jsdocs'...
18:17:12 [23:17:12] Finished 'jsdocs' after 49 ms
18:17:12 [23:17:12] Starting 'docs'...
18:17:12 Not updating or routing logic, as not master branch - it is release-1.4
18:17:12 [23:17:12] Finished 'docs' after 463 μs
18:17:19 [23:17:19] Documented 69 files!
18:17:19 -------> SDK_COMMIT: 284ff10
18:17:19 Cloning into '****.github.io'...
18:17:22 [master ddd86c1] SDK commit - 284ff10/ code placeholder
{code}
{code:java}
/18:17:22  create mode 100644 release-1.4/tutorial-sign-transaction-offline.html
18:17:22  create mode 100644 release-1.4/tutorial-transaction-commit-events.html
18:17:22  create mode 100644 release-1.4/tutorials.list.html
18:17:22 error: src refspec release-1.4 does not match any.
18:17:22 error: failed to push some refs to 'https://****:****@github.com/****/****.github.io.git'
[Pipeline] }/ code placeholder
{code}
*Build log:*

[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/142/consoleFull]

 ",,harrisob@us.ibm.com,mbwhite,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,284ff10,Unset,No,,,"1|i003b3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,mbwhite,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,"16/Dec/18 1:29 AM;vijaypunugubati;[~harrisob@us.ibm.com] [~mbwhite] observed two things here,

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/scripts/Jenkins_Scripts/Publish_API_Docs.sh#L27] should be replaced with master

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/package.json#L6] change to release-1.4;;;","17/Dec/18 6:53 PM;mbwhite;Correct on both counts - though note that the 'latest docs version' in package.json is only read on the MASTER branch builds.

 

FYI [~14gracel] [~andrew-coleman];;;","18/Dec/18 12:57 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28219/;;;",,,,,,,,,,,,,,
Add instantiate return errors to test code,FABN-1080,36221,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,18/Dec/18 2:03 AM,25/Jan/19 5:46 AM,28/Oct/23 3:25 AM,25/Jan/19 5:46 AM,,,,,,,,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i003hz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 CORE_LOGGING_LEVEL to FABRIC_LOGGING_SPEC,FABN-1081,36226,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Dec/18 4:21 AM,18/Dec/18 6:57 AM,28/Oct/23 3:25 AM,18/Dec/18 6:57 AM,v1.4.0,,,,,v1.4.1,,,,0,,,,,,Update CORE_LOGGING_LEVEL to FABRIC_LOGGING_SPEC,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i003j3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"18/Dec/18 4:34 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/28227/;;;",,,,,,,,,,,,,,,,
Update NPM modules script,FABN-1082,36230,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,18/Dec/18 5:16 AM,23/Jan/19 3:06 PM,28/Oct/23 3:25 AM,15/Jan/19 1:59 AM,v2.0.0,,,,,,,,,0,,,,,,Optimize the publish npm module script to set the unstable_version to 1 if there is no npm module available in npm registry otherwise fetch the unstable version and increment by 1,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i003jr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"15/Jan/19 1:59 AM;rameshthoomu;https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/scripts/Jenkins_Scripts/Publish_NPM_Modules.sh;;;",,,,,,,,,,,,,,,,
Multiple orderers function not working in v1.3 - need initialize() guidance,FABN-1083,36240,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,JayJong,JayJong,18/Dec/18 6:06 PM,25/Jan/19 6:24 PM,28/Oct/23 3:25 AM,25/Jan/19 6:24 PM,v1.3.0,v1.4.0,,,,v1.4.1,v2.0.0,,,0,,,,,,"My fabric network was setup using v1.3 binaries and images on ubuntu 18.04. I have 2 orderer service nodes, one with nodeport 32000 and 32001. To create the situation where my first orderer fails, i changed the url of my first orderer in my common connection profile to be 32002. When I used node-sdk fabric-client v1.3.0 to invoke and query transactions, it failed after it detected that it couldnt connect to 32002. However, when i changed to node-sdk fabric-client v1.2.0, it could work with multiple orderers. Then on the advice of [~davidkel], i tried with node-sdk fabric-client v1.4.0-rc1, i got the same error as that of v1.3 and so i decided to raise this issue.",,andrew-coleman,bestbeforetoday,davidkel,denyeart,harrisob@us.ibm.com,JayJong,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"19/Dec/18 6:05 PM;JayJong;debug.log;https://jira.hyperledger.org/secure/attachment/16454/debug.log","18/Dec/18 6:03 PM;JayJong;multiple_orderers_v1.2.0.png;https://jira.hyperledger.org/secure/attachment/16447/multiple_orderers_v1.2.0.png","18/Dec/18 6:03 PM;JayJong;multiple_orderers_v1.3.0.png;https://jira.hyperledger.org/secure/attachment/16446/multiple_orderers_v1.3.0.png","18/Dec/18 6:03 PM;JayJong;multiple_orderers_v1.4.0-rc1.png;https://jira.hyperledger.org/secure/attachment/16448/multiple_orderers_v1.4.0-rc1.png",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i003lb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,davidkel,denyeart,harrisob@us.ibm.com,JayJong,,,,,dev,main,,,,,,,,,true,"18/Dec/18 8:00 PM;denyeart;Is SDK simply looking at the first entry in the connection profile and ignoring others?;;;","18/Dec/18 8:40 PM;JayJong;Based on the results, I would think that for v1.3.0 and v1.4.0-rc1, it is ignoring the other orderers if the first orderer failed to connect.;;;","19/Dec/18 12:17 AM;bestbeforetoday;[~JayJong] please could you try reproducing this error with debug logging enabled? That should tell us what orderers the client wants to talk to, and how far it gets through them before this error occurs. Since the client handling of errors from the orderer hasn't obviously changed from the 1.2 release, it might be the error is a problem with grpc, and the debug log should help me identify whether that is the case.

 

See here for information on enabling debug logging: https://fabric-sdk-node.github.io/release-1.3/tutorial-logging.html;;;","19/Dec/18 6:07 PM;JayJong;[~bestbeforetoday] I have attached the debug log when i use the node sdk v1.3, pls do let me know if u need more info;;;","20/Dec/18 12:32 AM;bestbeforetoday;[~JayJong] Thank you for the debug log; it is very helpful.

I don't see any initialization of the channel before use:
{code:java}
await channel.initialize();{code}
I think this is the problem. The default commit handler should deal with failed orderers and try all the configured orderers before a call of Channel.sendTransaction() fails. In version 1.2, this default handler was configured in the Channel constructor; in version 1.3 it is configured in the Channel initialize() function. If the commit handler is not configured, the fallback behaviour is to just try a single orderer (the first in the list), which is the behaviour you are seeing.

Could you check that your client application code is calling initialize() on the channel when you first obtain it, and before you send any transactions?;;;","20/Dec/18 3:20 PM;JayJong;[~bestbeforetoday] I have added the initialize() into my code and it is now able to try the other configured orderers! Thank you for the help! Do i need to close off this issue?;;;","20/Dec/18 6:41 PM;bestbeforetoday;Glad you got it working!;;;","20/Dec/18 8:18 PM;denyeart;[~bestbeforetoday] Does the default handler and the fabric-samples do this correctly? If not, we could use this Jira to fix those.  If so, is initialize() well documented and commented?  Just trying to ensure that future users don't hit the same problem...;;;","21/Dec/18 1:41 AM;bestbeforetoday;[~denyeart] I agree, there's obviously scope to improve things here so will reopen this one for us to make changes. The code looks to specifically cater for the scenario where handlers have not been configured (i.e. initialize() has not been called) but the documentation is not clear (enough) on whether initialize() is a requirement or optional, and certainly not on any implications of using a channel without calling initialize(). We could:
 * Improve the documentation.
 * Change the code to error if initialize() hasn't been called (if that is the intention).
 * Silently do a default initialize if functions like sendProposal() or sendTransaction() are called without an explicit initialize() (if that is reasonable and does not cause confusion for users).
 * Change the way handlers are configured so that our default handlers (i.e. BasicCommitHandler) are used if initialize() has not been called, instead of the unexpected behaviour demonstrated by this Jira.

 

Possibly there are other options too. I would like to discuss with [~harrisob@us.ibm.com] in the New Year before making any changes, as he knows better than me the intended behaviour.;;;","21/Dec/18 6:06 AM;denyeart;Thanks, I've tagged as FixVersion v1.4.0 to ensure a decision is made before the final v1.4.0 release (even if the decision is to just doc it or release note it for now, with some future improvements to come in v1.4.1 and v2.0.0).;;;","08/Jan/19 3:18 AM;denyeart;[~bestbeforetoday] [~andrew-coleman] Do you want to doc anything before v1.4.0 is released?;;;","10/Jan/19 5:37 AM;harrisob@us.ibm.com;I think for 1.4 we should check in the sendTransaction method to be sure the commit handler is loaded if defined and load it if necessary.;;;","10/Jan/19 5:38 AM;harrisob@us.ibm.com;I think for 2.0 we should think about things like this, maybe for all methods that required signing or sending require the initialize.;;;","10/Jan/19 7:43 AM;harrisob@us.ibm.com;For 1.4 [https://gerrit.hyperledger.org/r/#/c/28600/];;;","16/Jan/19 11:05 PM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/28712/]  for v2.0.0 (master);;;","25/Jan/19 6:24 PM;andrew-coleman;merged https://gerrit.hyperledger.org/r/c/28712/;;;",
X509 Library needs to be locked to 0.3.3,FABN-1084,36319,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,20/Dec/18 7:26 PM,04/Apr/19 6:13 PM,28/Oct/23 3:25 AM,20/Dec/18 10:22 PM,,,,,,,,,,0,,,,,,X509 Library needs to be locked to 0.3.3 in all releases,,andrew-coleman,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0040v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkhala,,,,,,,,,dev,main,,,,,,,,,true,"04/Apr/19 6:13 PM;davidkhala;Now it is N/A [~mbwhite] has already helped to migrate to use

npm @ampretia/x509;;;",,,,,,,,,,,,,,,,
Minor fabric-network doc issues,FABN-1085,36354,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,21/Dec/18 12:21 AM,07/Jan/19 7:48 PM,28/Oct/23 3:25 AM,07/Jan/19 7:48 PM,v1.4.0,,,,,v1.4.0,v2.0.0,,,0,,,,,,"The fabric-network API documentation has several small nit-pick issues: typos, bad links.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0047r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Decoupling of Code Coverage for Unit and e2e/Scenario Tests,FABN-1086,36369,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,heatherp,nkl199,nkl199,21/Dec/18 7:51 PM,18/Oct/19 10:05 PM,28/Oct/23 3:25 AM,18/Oct/19 10:05 PM,,,,,,,,,,0,sdk-triaged,,,,,"With the increase in unit test coverage, we have opened the ability to remove e2e tests without dropping code coverage. This needs to be addressed as we need to be able to safeguard against the accidental disabling of tests with an errant `.only` being left in and missed by a reviewer.

The most effective way to achieve this would be to run the unit tests separately to the e2e/cucumber tests, with code coverage limits set for each.",,heatherp,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1395,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i0049z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,nkl199,,,,,,,,,,,,,,,,,,,,"18/Oct/19 10:05 PM;heatherp;This isn't an issue anymore, but coverage is being sorted out under the duplicate, so duplicating;;;",,,,,,,,,,,,,,,,
Update Publish npm CI script - release-1.1 & 1.0,FABN-1087,36383,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,rameshthoomu,rameshthoomu,23/Dec/18 11:10 AM,24/Apr/19 11:28 PM,28/Oct/23 3:25 AM,24/Apr/19 11:28 PM,v1.1.3,,,,,v1.1.3,,,,0,,,,,,"Optimize [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.1/scripts/Jenkins_Scripts/Publish_NPM_Modules.sh]

https://github.com/hyperledger/fabric-sdk-node/blob/release-1.0/scripts/Jenkins_Scripts/Publish_NPM_Modules.sh
 * Update script to publish npm modules with the default unstable version if the version is not available in npm registry
 * Keep all the node modules in a for loop.

See the similar script in master branch. [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/scripts/Jenkins_Scripts/Publish_NPM_Modules.sh]",,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i004cv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"24/Apr/19 11:28 PM;rameshthoomu;No more releases from 1.1 and 1.0 branches. So withdrawing this bug as won't do.;;;",,,,,,,,,,,,,,,,
Gulp tests are failing consistently with the error 'npx nyc gulp run-test',FABN-1088,36419,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,28/Dec/18 3:34 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,01/Jan/19 1:26 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,,,,,"The gulp tests are failing the error at npx nyc gulp run-tests consistently with the below error. The sdk-jobs are failing at this point and unable to publish npm.

Platform: x86_64

Branch: master

Error Snippet:

{code:java}
*09:06:01* [14:06:00] Error in plugin ""gulp-shell""
*09:06:01* Message:

Command `npx nyc gulp run-test` failed with exit code 1 

*09:06:01*  ERROR!!! gulp test failed
{code}

*Build log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/160/consoleFull",,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,0972979ead55ba7fb93fef8dc04628bb00a4b065,Unset,No,,,"1|i004kn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,"29/Dec/18 9:45 AM;rameshthoomu;[~sambhavdutt] Could you please post the actual error?;;;",,,,,,,,,,,,,,,,
SDK Node test fail consistently in the daily end-2-end jobs.,FABN-1089,36427,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,29/Dec/18 12:51 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,01/Jan/19 3:09 AM,v1.3.0,v1.4.0,,,,v1.3.0,v1.4.0,,,0,ci-failure,,,,,"The end to end tests are failing consistently in multiple branches, node command failed in the sdk_node.

Consistent: Yes

Branches: release-1.3, release-1.4

Platform: x86_64

Error Snippet:

{code:java}
19:29:42 => Downloading nvm from git to '/home/jenkins/.nvm'
19:29:42 
=> Cloning into '/home/jenkins/.nvm'...
19:29:43 => Compressing and cleaning up git repository
19:29:43 
19:29:43 => Appending nvm source string to /home/jenkins/.bashrc
19:29:43 => Appending bash_completion source string to /home/jenkins/.bashrc
19:29:43 => Close and reopen your terminal to start using nvm or run the following to use it now:
19:29:43 
19:29:43 export NVM_DIR=""$HOME/.nvm""
19:29:43 [ -s ""$NVM_DIR/nvm.sh"" ] && \. ""$NVM_DIR/nvm.sh""  # This loads nvm
19:29:43 [ -s ""$NVM_DIR/bash_completion"" ] && \. ""$NVM_DIR/bash_completion""  # This loads nvm bash_completion
19:29:43 -------> Install NodeJS
19:29:43 ------> Use 8.11.3
19:29:43 /tmp/jenkins2693161598542333929.sh: line 71: node: command not found
{code}

*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.4-x86_64/19/
",,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,0972979,Unset,No,,,"1|i004lz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add docker_ca_image_tag to pull images for fabric-ca in package.json,FABN-1091,35670,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,29/Nov/18 3:58 AM,30/Oct/19 1:46 AM,28/Oct/23 3:25 AM,30/Oct/19 1:46 AM,,,,,,,,,,0,build-system,quality,sdk-triaged,,,"Add in the package settings for node chaincode to support fabric & fabric-ca version docker images.

This story is work through pulling the images with different versions on fabric & fabric-ca, when using docker-compose.yaml.",,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1038,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i000jr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vijaypunugubati,,,,,,,,,,,,,,,,,,,,,"30/Oct/19 1:46 AM;vijaypunugubati;As moving the CI to the new build system, closing these old tasks which are not required. ;;;",,,,,,,,,,,,,,,,
better handling for misconfigured client config,FABN-1092,36277,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,bazmcl,bazmcl,19/Dec/18 6:34 PM,02/Dec/20 1:09 AM,28/Oct/23 3:25 AM,01/Dec/20 11:13 PM,v1.3.0,,,,,,,,,0,external,sdk-triaged,,,,"While doing some testing with the fabric node sdk - I received this rather nice error when trying to do a client.setUserContext:

_Cannot read property 'curve' of undefined at Object.KEYUTIL.getKey_

After much digging down into the fabric-client source code I found the source of the issue was were this class: CryptoSuite_ECDSA_AES.js tries to read the key data from the keyStore (fileKeyValueStore.js) and is not able to find the data for the given key. The actual cause of the issue was a mistake on my part in the client configuration (cryptoStore) but I think a better error message would prevent others from wasting time. e.g. if the path specified for crypto store does not exist, perhaps show ""path for crypto store does not exist, check your config"" or if the key for the configured user is not in the crypto store, perhaps show ""cannot find key \{thekeyItsLookingFor} in crypto store \{pathOfCryptoStore}""

 ",,bazmcl,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i005",,,,Unset,Unset,,,,,,,,,,,"1. create a networkConfig
2. create a clientConfig and deliberately put some error in the crypto store config ;)
3. client.loadFromConfig(clientConfig)
4. client.setUserContext(user);

boom!",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bazmcl,lesleyannj,,,,,,,,,,,,,,,,,,,,"01/Dec/20 11:13 PM;lesleyannj;Will be addressed by Fabric Gateway feature.;;;",,,,,,,,,,,,,,,,
Update Jenkinsfile.z in release-1.4 branch,FABN-1093,36619,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,10/Jan/19 4:52 AM,24/Apr/19 11:20 PM,28/Oct/23 3:25 AM,24/Apr/19 11:20 PM,,,,,,,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i005qv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"10/Jan/19 4:53 AM;rameshthoomu;https://gerrit.hyperledger.org/r/28593;;;",,,,,,,,,,,,,,,,
Programming model - Node.js SDK - Pluggable query handler for fabric-network,FABN-1094,36645,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,andrew-coleman,andrew-coleman,11/Jan/19 12:02 AM,07/Aug/19 9:30 PM,28/Oct/23 3:25 AM,05/Feb/19 6:00 PM,v2.0.0,,,,,v2.0.0,,,,0,fabric-sdk-node,,,,,"The `fabric-network` api has the ability to query the ledger by using the `evaluateTransaction` method.  This invokes a transaction function (chaincode) and returns the result that's returned by that transaction function.  The strategy that determines which peer(s) to query is implemented by a built-in query handler class.  At the moment there is no mechanism for the developer to override this implementation in order to support alternative strategies.

This story provides a pluggable query handler and, initially, two strategies that the developer can choose from.  The choice of strategy will be configurable via the `options` argument of the `Gateway.connect()` method in the same manner as the existing event handler strategy.

 

options = {

    queryHandlerOptions: {

        strategy: MSPID_SCOPE_SINGLE (default) | MSPID_SCOPE_ROUND_ROBIN

    }

}

 

Note the names of these and default value might be different to this.

MSPID_SCOPE_SINGLE encapsulates the current built-in behaviour

MSPID_SCOPE_ROUND_ROBIN implements a round-robin algorithm across all available (query role) peers within the current Org.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Done,(Please add high level design or a link to the design),Unset,Unset,Unset,,,Programming model - Pluggable query handler for fabric-network,To Do,No,,Unset,No,,,"1|i005wn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node.js SDK: enhance SDK to support token functions,FABN-1095,36648,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,wenjian,wenjian,wenjian,11/Jan/19 1:41 AM,03/Dec/19 3:16 AM,28/Oct/23 3:25 AM,30/Oct/19 12:59 AM,,,,,,,,,,1,fabtoken,,,,,"Tokens in Fabric represents the assets that can be exchanged in an atomic fashion via Fabric transactions. Tokens in Fabric represents the assets that can be exchanged in an atomic fashion via Fabric transactions. Tokens are assigned to a Fabric network using an issue operation. From the moment token issuing takes place, new tokens are generated to represent the associated assets in Fabric network. Ownership of these tokens can be changed throughout Fabric transactions. The assets (tokens) themselves remain under the custody of Fabric network until when their owner claims the associated assets back via a redeem operation.


SDK needs to be enhanced to support tokens so that applications can call SDK API to perform the following token operations.
 * issue: creates new tokens to the specified users
 * transfer: transfers tokens from one user to other users
 * redeem: redeems existing tokens owned by the user
 * approve: authorizes to transfer owning tokens to other users
 * transfer from: transfers tokens that have been approved by the owner
 * swap: transfers tokens among multiple participants
 * list: lists unspent tokens owned by the user
 * allowance: amount of tokens approved by the owner that can be transferred to other users

 

To implement the above APIs, SDK needs to perform the following:
 # Communicate to a prover peer (via token.ProverClient grpc client) to get back a token transaction for each token operation mentioned above
 # Create a transaction envelope for the token transaction (common.HeaderType_TOKEN_TRANSACTION type) and broadcast it to the orderer
 # Allow the application to register for the transaction event


A token client package has been implemented in go that are used to test e2e token scenarios. This package can be used as a reference implementationfor SDK.  For more details of the token client package, refer to token-client-design.docx under the epic story FAB-11153 and CR https://gerrit.hyperledger.org/r/#/c/27631/ (see token/client and integration/token)",,andrew-coleman,aspring,denyeart,harrisob@us.ibm.com,heatherp,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Feb/19 1:26 AM;wenjian;nodesdk-token-playback.pptx;https://jira.hyperledger.org/secure/attachment/16755/nodesdk-token-playback.pptx",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-11153,,,No,,Unset,No,,,"1|i005xb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,aspring,denyeart,harrisob@us.ibm.com,heatherp,wenjian,,,,,,,,,,,,,,,,"05/Feb/19 2:52 AM;harrisob@us.ibm.com;Should the idea of a wallet for tokens be integrate with the fabric-network (programming model) high level 'wallet' used for fabric network identity artifacts.  I see a 'token' as a fabric specific artifact and seems like an asset that should be in a wallet. This would provide high level access to the tokens and management while keeping the fabric-client (low level NodeSDK) for the building and executing the token transaction (fabric interactions).

[~denyeart]

[~andrew-coleman]
[~sstone1]

[~odowdaibm]

I think as we add new functions like this to the SDK, that we keep the low level just for direct interactions with the fabric network work and build the high level to assist the application developers at the same time (the high level has the boiler plate code they will not have to write). Developers will see just one way to do things.

And speaking of just one way, the interaction testing would only be based on the high level package API's.;;;","30/Oct/19 12:59 AM;heatherp;I am working through the node sdk backlog with the maintainers and I'm closing this, as tokens are not going to be supported in the node sdk anytime soon.;;;",,,,,,,,,,,,,,,
implement implict ACL on private data,FABN-1096,36731,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,davidkhala,davidkhala,14/Jan/19 6:57 PM,18/Dec/19 12:16 AM,28/Oct/23 3:25 AM,22/Jan/19 12:22 AM,v1.4.0,,,,,v1.4.1,v2.0.0,,,0,,,,,,"memberOnlyRead is not yet supported in sdk-node. 
memberOnlyWrite is applicable only in master (v2.0).",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-11409,,FAB-13581,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006l3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,main,,,,,,,,,true,"22/Jan/19 12:20 AM;davidkhala;https://gerrit.hyperledger.org/r/28797;;;","25/Jan/19 6:29 PM;davidkhala;Thanks Bret and 
https://gerrit.hyperledger.org/r/#/c/28796/;;;",,,,,,,,,,,,,,,
Switch instanceof to class name,FABN-1097,36656,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,11/Jan/19 5:24 AM,15/Jan/19 10:20 PM,28/Oct/23 3:25 AM,15/Jan/19 3:16 PM,v1.4.0,,,,,v1.4.1,,,,0,,,,,,"To avoid class loader like issues with javascript where different requires may have been used to load a class or package. ""instanceof"" will only work if class was loaded by the same require location.",,davidkhala,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i005yv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"15/Jan/19 3:10 PM;davidkhala;Dear Bret, LOL, I guess I am the one who in favor of using ""instanceof"" syntax. 
It will have a clear expression and more strict type check. But for sdk-node, it is a big problem because we have duplicated ""User"", ""Client"" class  in fabric-client and fabric-ca-client. That is also why fabric-common is needed and proposed. ;;;","15/Jan/19 10:20 PM;harrisob@us.ibm.com;We should be able to use `instanceof` for 2.0 as fabric-common is coming together nicely.;;;",,,,,,,,,,,,,,,
Allow multiple targets on channel initialization,FABN-1098,36758,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Jan/19 5:16 AM,18/Jan/19 1:59 AM,28/Oct/23 3:25 AM,18/Jan/19 1:59 AM,,,,,,v1.4.1,,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006pz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Add instantiate policy support in chaincode packager,FABN-1099,36774,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,davidkhala,davidkhala,15/Jan/19 4:46 PM,30/Oct/19 12:59 AM,28/Oct/23 3:25 AM,30/Oct/19 12:59 AM,v1.0.0,v1.4.0,,,,,,,,0,,,,,,"`instantiate policy` is not `endorsemnet policy`, it is used during chaincode packaging/install determining who is able
 to instantiate/upgrade chaincode, it is partially supported in nodejs with chaincode package binary(byte[]) as input. 
 quoted from Dave Enyeart: 
 
    ""They are different, instantiate policy gets packaged with a chaincode and specifies who can instantiate the chaincode, 
    see the doc starting at: https://hyperledger-fabric.readthedocs.io/en/latest/chaincode4noah.html#packaging""

It is a historical missing feature of FABN. we should add policy params to all chaincode packager implements.",,davidkhala,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i006tj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,heatherp,,,,,,,,,,,,,,,,,,,,"30/Oct/19 12:59 AM;heatherp;I am working through the node sdk backlog with the maintainers and this is not something that we will be prioritizing for the 1.4.0 stream. The new chaincode lifecycle updates in v2.0 invalidate this issue, so closing;;;",,,,,,,,,,,,,,,,
Programming model - Node.js SDK Event Handling in fabric-network API,FABN-1100,36817,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,14gracel,14gracel,14gracel,16/Jan/19 7:03 PM,07/Aug/19 10:07 PM,28/Oct/23 3:25 AM,29/Jul/19 11:56 PM,v2.0.0,,,,,v2.0.0,,,,1,fabric-sdk-node,,,,,"The fabric-client API uses the ChannelEventHub API to listen for new and replay missed chaincode/transaction/block events. 

We need to create a new fabric-network API that supports the following: 
 * Simple subscription to chaincode/transaction/block events
 * Simple to catch up (replay) missed events

Replay requires the API to persist the last block number and transactionID seen, and then give that to fabric-network API when it connects. 

The persistence method should be pluggable to allow applications to use whatever storage strategy they want.

Keeping track of the current block height and the last transaction ID can be done by overriding successful callback methods (and persisting per listener)

 

A sample should be created that demonstrates how the API is used and why its features are useful client applications.  ",,14gracel,andrew-coleman,florianc,jmason900,zRich,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"28/Mar/19 10:03 PM;14gracel;node-sdk-event-abstractions v0.9.pptx;https://jira.hyperledger.org/secure/attachment/17018/node-sdk-event-abstractions+v0.9.pptx",,,,,,,,,,,,,,Done,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-1,,Programming model - Event Handling in fabric-network API,To Do,No,,Unset,No,,,"1|i00727:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,Subscribing to events and replaying any events that have been missed. ,14gracel,andrew-coleman,florianc,jmason900,zRich,,,,,,dev,main,,,,,,,,,true,"05/Apr/19 4:09 PM;florianc;Hi. Just a question for checkpointing: Where is the information stored (which folder)? Will we be able to configure the storage location?;;;","08/Apr/19 5:13 PM;14gracel;By default it is stored in ~/.hlf-checkpoint, but storage is fully customisable;;;",,,,,,,,,,,,,,,
MSPID_SCOPE_SINGLE query handler,FABN-1101,36822,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,16/Jan/19 8:41 PM,18/Jan/19 6:46 PM,28/Oct/23 3:25 AM,18/Jan/19 6:46 PM,,,,,,v2.0.0,,,,0,,,,,,Refactor the existing query handling behaviour as a MSPID_SCOPE_SINGLE pluggable handler. This is technical foundation work to support the creation of additional pluggable query handlers. The current API and behaviour is unchanged.,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1094,,,No,,Unset,No,,,"1|i0073b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
MSPID_SCOPE_ROUND_ROBIN query handler,FABN-1102,36823,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,16/Jan/19 10:17 PM,18/Jan/19 11:14 PM,28/Oct/23 3:25 AM,18/Jan/19 11:14 PM,,,,,,v2.0.0,,,,0,,,,,,"_As a_ client application developer
_I want_ to specify round robin query handler behaviour
_So that_ I can spread query load across available peers

Implement a selectable round robin query handler in addition to the default query handler, and allow client application code to specify the desired behaviour by specifying an appropriate strategy setting in the queryHandlerOptions supplied to Gateway.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1094,,,No,,Unset,No,,,"1|i0073j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
背书策略中选择两个及以上的背书组织时，对链码进行invoke失败。,FABN-1103,36844,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Test Error,,zhongjie751,zhongjie751,17/Jan/19 11:50 AM,24/May/19 1:19 AM,28/Oct/23 3:25 AM,24/May/19 1:19 AM,v1.1.0,,,,,,,,,0,invoke失败,node-SDK,v1.1,背书策略,,"创建了三个组织加入到区块链网络中，在实例化时设定背书策略（各组织的peer节点已经加入通道中，链码也在相应的peer节点上安装），实例化时选择两个组织或两个以上组织进行背书，可以成功，但是无法进行invoke，报错。报错信息：

the invoke chaincode transaction was invalid,code: ENDORSEMENT_POLICY_FAILURE.

 

但是按同样的步骤，但是背书策略部分选择任意一个组织进行背书，则invoke可以正常进行，invoke成功，区块正常增加，可以query到invoke成功后的结果。

 

查看了报错时peer相应节点的日志 docker logs dockerID，显示报错信息：VSCCValidateTx for transaction txId=2576...fd968  reutrned error:VSCC error:endorsement policy failure,err:signature set did not satisfy policy.

 

查看了orderer节点的docker 日志：signature set did not satisfy policy /Channel/Orderer/ordererOrg/Writes  

Evaluation Failed:Only 0 policies were satisfied,but needed 1 of [OrdererOrg.Writes]

 

The following is a translation by zhaochy,
=============================

We created a channel with 3 orgs, at cc instantiation time, we set the EP to any two orgs. However, the invoke tx failed by the following error msg:

the invoke chaincode transaction was invalid,code: ENDORSEMENT_POLICY_FAILURE.

But, if we set the chaincode EP to any one org, the invoke succeeded and new block added.

we checked the peer logs and get the following error message: VSCCValidateTx for transaction txId=2576...fd968  reutrned error:VSCC error:endorsement policy failure,err:signature set did not satisfy policy.

we checked the orderer logs and get the following error message: signature set did not satisfy policy /Channel/Orderer/ordererOrg/Writes  

Evaluation Failed:Only 0 policies were satisfied,but needed 1 of [OrdererOrg.Writes]

 ",,andrew-coleman,harrisob@us.ibm.com,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1104,FABN-1105,FABN-1106,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0077r:",,,,Unset,Unset,,,,,,,,,,,(复现步骤如上所述),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,zhaochy,,,,,,,,,,,,,,,,,,,"22/Jan/19 10:45 AM;zhaochy;[~zhongjie751] 谢谢你的反馈，但是在开源社区交流的时候请尽量使用英语，否则其他人难以理解你想表达的意思，谢谢。;;;","22/Jan/19 11:19 AM;zhaochy;[~zhongjie751] Thanks for your feedback. Can you tell us more information about:

# The code that you set the endorsement policy ( you do this by Node.js SDK, right? ), and each org's MSPID
# The whole peer's log with log level ""DEBUG"", you may use docker logs &> peer-debug.log to dump the peer log.
;;;","12/Feb/19 12:54 AM;andrew-coleman;Returning for more info, as requested by [~zhaochy];;;","24/May/19 1:19 AM;harrisob@us.ibm.com;No information provided;;;",,,,,,,,,,,,,
背书策略中选择两个及以上的背书组织时，对链码进行invoke失败。,FABN-1104,36845,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,zhongjie751,zhongjie751,17/Jan/19 11:50 AM,24/May/19 1:17 AM,28/Oct/23 3:25 AM,24/May/19 1:17 AM,v1.1.0,,,,,,,,,0,invoke失败,node-SDK,v1.1,背书策略,,"创建了三个组织加入到区块链网络中，在实例化时设定背书策略（各组织的peer节点已经加入通道中，链码也在相应的peer节点上安装），实例化时选择两个组织或两个以上组织进行背书，可以成功，但是无法进行invoke，报错。报错信息：

the invoke chaincode transaction was invalid,code: ENDORSEMENT_POLICY_FAILURE.

 

但是按同样的步骤，但是背书策略部分选择任意一个组织进行背书，则invoke可以正常进行，invoke成功，区块正常增加，可以query到invoke成功后的结果。

 

查看了报错时peer相应节点的日志 docker logs dockerID，显示报错信息：VSCCValidateTx for transaction txId=2576...fd968  reutrned error:VSCC error:endorsement policy failure,err:signature set did not satisfy policy.

 

查看了orderer节点的docker 日志：signature set did not satisfy policy /Channel/Orderer/ordererOrg/Writes  

Evaluation Failed:Only 0 policies were satisfied,but needed 1 of [OrdererOrg.Writes]

 

 ",,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008br:",,,,Unset,Unset,,,,,,,,,,,(复现步骤如上所述),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,,,,,,,,,,,,"22/Jan/19 10:54 AM;zhaochy;This is a duplicated with FABN-1103;;;",,,,,,,,,,,,,,,,
背书策略中选择两个及以上的背书组织时，对链码进行invoke失败。,FABN-1105,36846,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,zhongjie751,zhongjie751,17/Jan/19 11:51 AM,24/May/19 1:14 AM,28/Oct/23 3:25 AM,24/May/19 1:14 AM,v1.1.0,,,,,,,,,0,invoke失败,node-SDK,v1.1,背书策略,,"创建了三个组织加入到区块链网络中，在实例化时设定背书策略（各组织的peer节点已经加入通道中，链码也在相应的peer节点上安装），实例化时选择两个组织或两个以上组织进行背书，可以成功，但是无法进行invoke，报错。报错信息：

the invoke chaincode transaction was invalid,code: ENDORSEMENT_POLICY_FAILURE.

 

但是按同样的步骤，但是背书策略部分选择任意一个组织进行背书，则invoke可以正常进行，invoke成功，区块正常增加，可以query到invoke成功后的结果。

 

查看了报错时peer相应节点的日志 docker logs dockerID，显示报错信息：VSCCValidateTx for transaction txId=2576...fd968  reutrned error:VSCC error:endorsement policy failure,err:signature set did not satisfy policy.

 

查看了orderer节点的docker 日志：signature set did not satisfy policy /Channel/Orderer/ordererOrg/Writes  

Evaluation Failed:Only 0 policies were satisfied,but needed 1 of [OrdererOrg.Writes]

 

 ",,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00787:",,,,Unset,Unset,,,,,,,,,,,(复现步骤如上所述),,Unset,,,,,,Unset,,Unset,,(Please add usage information),zhaochy,,,,,,,,,,,,,,,,,,,,,"22/Jan/19 10:53 AM;zhaochy;This is a duplicated with FABN-1103;;;",,,,,,,,,,,,,,,,
"when instantiate chaincode choose two orgs or more as endorsement policy,the operation of invoke fails. 背书策略中选择两个及以上的背书组织时，对链码进行invoke失败。",FABN-1106,36847,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,,zhongjie751,zhongjie751,17/Jan/19 11:51 AM,24/May/19 1:17 AM,28/Oct/23 3:25 AM,24/May/19 1:17 AM,v1.1.0,,,,,,,,,0,endorsement-policy,invoke,invoke-error,node-SDK,v1.1,"I'm created {color:#de350b}3{color} organizations, those orgs all had been joined to the block chain network，when I set the endorsement policy as instantiate the chaincode （before instantiation ,all peer nodes for every orgs have been joined to the channel ,and the chaincode  has been installed in those peer nodes）， As instantiate chaincode ,I choose{color:#de350b} 2{color} orgs or 3orgs endorse . SUCCESS. but when I invoke the chaincode ,it fails。  

reference example as the node-SDK document described：
 {  identities: [    \\{ role: { name: ""member"", mspId: ""org1"" }},    \\{ role: { name: ""member"", mspId: ""org2"" }}  ],  policy: {    ""1-of"": [

{ ""signed-by"": 0 }

, 

{ ""signed-by"": 1 }

]  }}
  
 {  identities: [    \\{ role: { name: ""member"", mspId: ""peerOrg1"" }},    \\{ role: { name: ""member"", mspId: ""peerOrg2"" }},    \\{ role: { name: ""admin"", mspId: ""ordererOrg"" }}  ],  policy: {    ""2-of"": [      

{ ""signed-by"": 2}

,      { ""1-of"": [

{ ""signed-by"": 0 }

, 

{ ""signed-by"": 1 }

]}    ]  }}


invoke result:（ERROR MESSAGE）：the invoke chaincode transaction was invalid,code: ENDORSEMENT_POLICY_FAILURE.

 

But ,with the same step except different endorsement-policy: choose one of 3orgs to endorse.  the operation of invoke is success.  但是按同样的步骤，但是背书策略部分选择任意一个组织进行背书，invoke成功，区块正常增加，可以query到invoke成功后的结果。

 

check the peer docker ,logs error message ( 查看了报错时peer相应节点的日志 docker logs dockerID，显示报错信息)：VSCCValidateTx for transaction txId=2576...fd968  reutrned error:VSCC error:endorsement policy failure,err:signature set did not satisfy policy.

 

check the orderer docker ,logs  message查看了orderer节点的docker 日志：signature set did not satisfy policy /Channel/Orderer/ordererOrg/Writes  

Evaluation Failed:Only 0 policies were satisfied,but needed 1 of [OrdererOrg.Writes]

 

 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1103,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0078f:",,,,Unset,Unset,,,,,,,,,,,(复现步骤如下所述)described below,,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,"24/May/19 1:17 AM;harrisob@us.ibm.com;Check your endorsement policy;;;",,,,,,,,,,,,,,,,
Gulp tests are failing consistently as 'target' parameter is not specified in the tests.,FABN-1107,36875,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,sambhavdutt,sambhavdutt,18/Jan/19 12:15 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,25/Jan/19 5:45 AM,v2.0.0,,,,,,,,,0,ci-failure,,,,,"The gulp tests are failing consistently in 'mocha-fabric-client' test as ""target"" parameter is not specified and no peers are set for Channel instance

*Consistent:* Yes
*Branch:* master
*Platform:* x86_64, s390x
*Error Snippet:*

{code:java}
09:36:52       AssertionError: expected promise to be rejected with an error including 'No target provided for discovery services' but got '""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network '
09:36:52       + expected - actual
09:36:52 
09:36:52       -""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network 
09:36:52       +No target provided for discovery services
09:36:52       
09:36:52   
09:36:52 
09:36:52 
09:36:52 
09:36:52 [14:36:52] 'mocha-fabric-client' errored after 21 s
09:36:52 [14:36:52] Error in plugin ""gulp-mocha""
09:36:52 Message:
09:36:52     There were test failures
09:36:52 [14:36:52] 'run-test' errored after 1 min
{code}

*Build Logs:*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/194/consoleFull",,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,c97ca577063f2bfa95ea3dd0cb0ada64edaeef34,Unset,No,,,"1|i007en:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,"25/Jan/19 2:11 AM;sambhavdutt;The last build failed in the z platform with Assertion error, in the fabric-sdk-node merge job. 

*SDK-NODE Commit:* 317ed37bbca4cb029fdeea52271d35e37440f3d3
*Error Snippet*
{code:java}
11:46:31 (node:30276) UnhandledPromiseRejectionWarning: AssertionError: expected [ Array(1) ] to deeply equal [ Array(4) ]
11:46:31     at obj.sendProposal.then.catch (/w/workspace/fabric-sdk-node-merge-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/test/Peer.js:108:44)
11:46:31     at <anonymous>
11:46:31     at runMicrotasksCallback (internal/process/next_tick.js:122:5)
11:46:31     at _combinedTickCallback (internal/process/next_tick.js:132:7)
11:46:31     at process._tickCallback (internal/process/next_tick.js:181:9)
11:46:31 (node:30276) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 129)
11:46:31 (node:30276) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-s390x/193/consoleFull;;;",,,,,,,,,,,,,,,,
Pluggable query handler tutorial,FABN-1108,36927,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,18/Jan/19 6:49 PM,22/Jan/19 7:48 PM,28/Oct/23 3:25 AM,22/Jan/19 7:48 PM,,,,,,v2.0.0,,,,0,,,,,,"_As a_ client application developer
_I want_ a tutorial explaining pluggable query handlers
_So that_ I can develop my own query handler",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1094,,,No,,Unset,No,,,"1|i007pb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
eventhub.registerBlockEvent API option startBlock does not work with offline signing,FABN-1109,36985,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,zhaochy,Vishal3152,Vishal3152,21/Jan/19 9:18 PM,02/Dec/20 12:49 AM,28/Oct/23 3:25 AM,01/Dec/20 11:15 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"I am using a [remote signing|https://fabric-sdk-node.github.io/release-1.4/tutorial-sign-transaction-offline.html] service to sign a transaction proposal.

I use the same service to generate an {{unsigned eventhub registration.}}

When I connect to event hub, it always reads the latest block, not the offset that I have provided under 'startBlock'.

Here is the code.

 
const startBlockListener = async function () {
try {
const client =await helper.getFabricClient()
let channelName = config.get('channelName')
const channel = client.getChannel(channelName)

const certPem =await readFile(path.join(__dirname, '../../kv-store/userCert.pem'), 'utf8')
const mspId = client.getMspid()

let startBlock
 
const eventhub = channel.getChannelEventHubsForOrg()[0]
console.log(eventhub)
const unsignedEvent = eventhub.generateUnsignedRegistration({
certificate: certPem,
mspId
})
 
//call remote signer service

const signedProposal =await signer.signProposal(unsignedEvent)
const signedEvent = {
signature: signedProposal.signature,
payload: signedProposal.proposal_bytes
}
logger.info('Starting block listener. Start block: %s', startBlock)

eventhub.registerBlockEvent((block) => {
logger.info('Successfully received the block event: ' + block.number)
logger.debug(block)
//processBlock(block)
}, (error) => {
logger.error('Failed to receive the block event ::' + error)
},
{ startBlock: 2 }
)
eventhub.connect(\{signedEvent})
} catch (err) {
logger.error(err)
}
}",,davidkhala,heatherp,lesleyannj,Vishal3152,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-895,,,No,,Unset,No,,,"1|hzxzqs:qi",,,,Unset,Unset,,,,,,,,,,,Please refer to the code snippet provided under description.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,heatherp,lesleyannj,Vishal3152,,,,,,,,,,,,,,,,,,"30/Oct/19 12:57 AM;heatherp;Hi [~zhaochy] I'm working through the node sdk backlog with the maintainers - you are assigned to this and and it's in progress, are you still actively working on it?;;;","22/Nov/19 6:53 PM;davidkhala;I don't see it a bug. 
try to specify `startBlock` in connection options, instead of in block listener. The later is another layer of filter. 
;;;","01/Dec/20 11:15 PM;lesleyannj;Restructure has taken place.;;;",,,,,,,,,,,,,,
Update CI script to remove script to install nvm,FABN-1110,37014,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,rameshthoomu,rameshthoomu,22/Jan/19 1:32 AM,24/Apr/19 11:20 PM,28/Oct/23 3:25 AM,24/Apr/19 11:20 PM,,,,,,,,,,0,,,,,,Update CI script to remove script to install nvm. Nvm is already installed in s390x build environment. This is not required to install for every build.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-83,,,,,,,,,,,,,,,,,,,,,FABCN-83,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00873:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
passing in nothing for function name on instantiate doesn't work,FABN-1112,37045,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,sstone1,caroline-church,caroline-church,23/Jan/19 12:15 AM,12/Feb/19 2:20 AM,28/Oct/23 3:25 AM,12/Feb/19 2:20 AM,,,,,,,,,,0,,,,,,When you instantiate on the command line you can pass in nothing for the function name and this will succeed. In the node sdk if you pass in nothing it says it can't find a function called init.,,caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008ev:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Beta feedback: Change executeTransaction to evaluateTransaction,FABN-1114,34828,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,14gracel,andrew-coleman,andrew-coleman,23/Oct/18 5:25 PM,23/Jan/19 1:51 PM,28/Oct/23 3:25 AM,25/Oct/18 12:38 AM,v1.4.0,,,,,v1.4.0,,,,0,,,,,,"The 1.4 programming model has been presented and discussed with users (architects and developers) and also at a breakout session during the Hyperledger Hackfest in Montreal.  One aspect that caused some confusion was the naming of the 'executeTransaction' function.  The difference between this and the 'submitTransaction' function is that 'executeTransaction' only invokes the transaction function (chaincode) and returns its result to the client, but does not commit the RWset to the ledger.  It was decided that 'evaluateTransaction' is a better name for this function.

This task changes the name of the function in the Contract class of the fabric-network API, updates all the unit tests, integration tests, docs and samples.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-692,,,No,,Unset,No,,,"1|hzzw0n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Node SDK Channel.initialize() does not use Orderers if no peer is supplied,FABN-1115,37081,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,MariWade,MariWade,24/Jan/19 12:41 AM,24/May/19 1:18 AM,28/Oct/23 3:25 AM,24/May/19 1:18 AM,v1.1.0,,,,,,,,,0,node-SDK,,,,,"In v1.1 node sdk channel.initialize() will not initialize using the Orderers.The documentation/code comments: 'This method retrieves the configuration from the orderer if no ""config"" parameter is passed in.'

In v1.06 and it seems that in v1.2, channel.initialize() will use the Orderers.  The documentation/code comments: 'sends a get configuration block request to the primary orderer to retrieve the configuration settings for this channel'.

 

The error is:

channel.initialize ""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network   

'''

Error: channel.initialize ""target"" parameter not specified and no peers are set on this Channel instance or specfied for this channel in the network 

    at Channel._getTargets (/Users/mariwade/Developer/PBSA/sds-cc-client/node_modules/fabric-client/lib/Channel.js:1956:10)

    at Channel._getTargetForQuery (/Users/mariwade/Developer/PBSA/sds-cc-client/node_modules/fabric-client/lib/Channel.js:1916:22)

    at Channel.getChannelConfig (/Users/mariwade/Developer/PBSA/sds-cc-client/node_modules/fabric-client/lib/Channel.js:601:28)

    at Channel.initialize (/Users/mariwade/Developer/PBSA/sds-cc-client/node_modules/fabric-client/lib/Channel.js:149:15)'''

 ",,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008lj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChannelEventHub does not restart at last block,FABN-1117,37122,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,25/Jan/19 5:49 AM,05/Mar/19 1:33 AM,28/Oct/23 3:25 AM,05/Feb/19 10:30 PM,,,,,,v1.4.1,v2.0.0,,,0,,,,,,"If the ChannelEventHub looses the peer side connection, it should be able to be reconnected and start at the last block seen",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008uf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,"13/Feb/19 3:15 AM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/29115/] – 2.0.0;;;","13/Feb/19 3:16 AM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/29239/] - 1.4.1;;;",,,,,,,,,,,,,,,
Tests are failing on release-1.4 branch,FABN-1118,37125,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,antoniovassell,antoniovassell,25/Jan/19 6:25 AM,21/Feb/19 7:01 PM,28/Oct/23 3:25 AM,21/Feb/19 7:01 PM,v1.4.0,,,,,v1.4.0,,,,0,node-SDK,quality,,,,"Executing `npm test` results in failure.

 

 
{code:java}
1113 passing (2s)
 2 failing
1) Orderer
 #constructor
 should not permit creation without an url:
 AssertionError: expected [Function] to throw error matching /Parameter ""url"" must be a string, not undefined/ but got 'The ""url"" argument must be of type string. Received type undefined'
 at Context.it (fabric-client/test/Orderer.js:44:19)
2) Peer
 #constructor
 should not permit creation without an url:
 AssertionError: expected [Function] to throw error matching /Parameter ""url"" must be a string, not undefined/ but got 'The ""url"" argument must be of type string. Received type undefined'
 at Context.it (fabric-client/test/Peer.js:41:19)
 
{code}
 

 ",,andrew-coleman,antoniovassell,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i008v3:",,,,Unset,Unset,,,,,,,,,,,"git clone https://github.com/hyperledger/fabric-sdk-node.git
cd fabric-sdk-node
npm install
npm test",,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,antoniovassell,bestbeforetoday,,,,,,,,dev,main,,,,,,,,,true,"12/Feb/19 8:43 PM;andrew-coleman;Please could you confirm that you are testing the 1.4 branch, and try again?

`git checkout release-1.4`

I've just pulled down the latest, and it passes ok.

 ;;;","13/Feb/19 12:31 AM;antoniovassell;[~andrew-coleman] Confirming, same failures. I am on the 1.4 branch, I pulled the latest.

Here is my logs: https://gist.github.com/antoniovassell/f50b6de4991a338e85345a2051ffed93;;;","21/Feb/19 1:37 AM;bestbeforetoday;Looks like this failure is due to a change in the error message text in the Node 10 version of the url module. I see the same with Node 10.15.1.;;;",,,,,,,,,,,,,,
Parameterize DOCKER_NS for images in docker-compose.yaml,FABN-1119,37154,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vijaypunugubati,vijaypunugubati,26/Jan/19 1:48 AM,30/Oct/19 1:46 AM,28/Oct/23 3:25 AM,30/Oct/19 1:46 AM,v1.4.0,,,,,Future,,,,0,quality,sdk-triaged,,,,"Parameterize DOCKER_NS for images in docker-compose.yaml, by this we get the flexibility to pull images form docker or nexus as well, current script is hardcoded to *""*hyperledger*""* the possibility to pull only from dockerhub.

Please check here: [https://github.com/hyperledger/fabric-sdk-node/blob/cb4439207b353ccb926e9e2fdc8039f654ff1ec9/test/fixtures/docker-compose.yaml#L10]

 ",,andrew-coleman,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00913:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,"30/Oct/19 1:46 AM;vijaypunugubati;As moving the CI to the new build system, closing these old tasks which are not required. ;;;",,,,,,,,,,,,,,,,
e2e Integration test failed in node sdk,FABN-1120,37192,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,29/Jan/19 12:25 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,01/Feb/19 2:28 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,,,,,"*Summary:* e2e test failed in the integration test for the first time in node sdk merge job.

*Intermittent:* *No*

*Branch: master***

*Platform:* ** *x86_64*

*Error Snippet:* 
{code:java}
/00:23:26.505 not ok 1223 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:229:7)
00:23:26.505   ---
00:23:26.505     operator: fail
00:23:26.505     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
00:23:26.505     stack: |-
00:23:26.505       Error: Error: All proposals were not good
00:23:26.505           at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11)
00:23:26.505           at <anonymous>
00:23:26.505           at process._tickDomainCallback (internal/process/next_tick.js:229:7)
00:23:26.505           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
00:23:26.505           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
00:23:26.505           at Test.fail (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
00:23:26.505           at Test.bound [as fail] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
00:23:26.505           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
00:23:26.505           at <anonymous>
00:23:26.505           at process._tickDomainCallback (internal/process/next_tick.js:229:7)/ code placeholder
{code}
*Build Logs:* https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/213/consoleFull 

*Attachments:* ** *< None>*",,andrew-coleman,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0099b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,"01/Feb/19 2:28 AM;vijaypunugubati;Working as expected.;;;",,,,,,,,,,,,,,,,
"ChannelEventHub.js, _callTransactionListener(tx_id, val_code, block_num) does not return the complete block height",FABN-1121,37198,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,MariWade,MariWade,29/Jan/19 1:15 AM,15/Jan/20 8:59 PM,28/Oct/23 3:25 AM,15/Jan/20 8:59 PM,v1.1.0,v1.3.0,v1.4.0,,,,,,,0,external,node-SDK,sdk-triaged,,,"The height is represented as a tuple <blockNum, txNum> where the txNum is the position of the transaction (starting with 0) within block.  The txNum should be available on tx events.

 

Apps need the block height for a variety of reasons.  One reason is for BCDR and being able to rollback their databases to match the blockchain.

 

As a workaround, an additional query to blockchain will be performed for the tx events received to retrieve the block height from the transaction data [https://fabric-sdk-node.github.io/release-1.4/global.html#Transaction__anchor]

 

 ",,14gracel,bestbeforetoday,harrisob@us.ibm.com,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i009an:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,bestbeforetoday,harrisob@us.ibm.com,MariWade,,,,,,,,,,,,,,,,,,"12/Feb/19 7:06 PM;14gracel;In Node SDK 1.4 the block number is returned. Is this a request for more information to be returned with transaction events (i.e. include the transaction number)?;;;","28/Feb/19 8:53 AM;MariWade;Yes, need the tx number as well.;;;","24/May/19 1:28 AM;harrisob@us.ibm.com;Should we include the tx position in the block in the information that we return to the callback, right now we return the txId, tx status, and block number. ;;;","30/Oct/19 1:20 AM;bestbeforetoday;Going forward, development focus is on the higher level (fabric-network) API. It seems that if it is important to track the processing of transactions events within a given numbered block event, this can be achieved by attaching a block listener and iterating over the transactions events within that block event. The checkpointing capability in the higher level API also provides a mechanism for this tracking.

If there is something missing from the higher level API capability, or an area where the usability needs to be improved to help end users, please reopen with details.;;;",,,,,,,,,,,,,
support query strategy for chaincode query with service discovery,FABN-1122,37215,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,zhaochy,zhaochy,29/Jan/19 5:49 PM,25/Sep/20 7:06 PM,28/Oct/23 3:25 AM,30/Oct/19 12:55 AM,,,,,,,,,,0,,,,,,"As an application developer using fabric-sdk-node, I want the ability to specify chaincode query strategy when I am using the discovery service.

For instance, if the discovery service returns a list a peers and a peer is down at query time, then the application has to wait for a long time until this peer timeout.

If the Channel is initialized with discovery service, the Channel API Channel.queryByChaincode() should accepts a params to specify the query strategy.

some common-used query strategies:
# return once get chaincode query response from preferred peers
# return once get chaincode query response from any peer
# return once get chaincode query response from max block height
# return once get chaincode query response from major peers


",,andrew-coleman,denyeart,harrisob@us.ibm.com,heatherp,yuki-kon,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1271,,FABN-1645,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i009ef:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,denyeart,harrisob@us.ibm.com,heatherp,yuki-kon,zhaochy,,,,,,,,,,,,,,,,"29/Jan/19 5:51 PM;zhaochy;[~harrisob@us.ibm.com] [~andrew-coleman] what's your opinion?;;;","29/Jan/19 11:24 PM;harrisob@us.ibm.com;sounds great, what are ""major"" peers ?

 ;;;","29/Jan/19 11:26 PM;harrisob@us.ibm.com;maybe also peers in my organization;;;","11/Jun/19 7:18 PM;denyeart;[~andrew-coleman] [~harrisob@us.ibm.com] This sounds like an important story. Is it planned for v2.0 (and perhaps even backported to v1.4.x?). I assume we'd want something similar for queries and regular transaction endorsements.;;;","11/Jun/19 9:54 PM;andrew-coleman;[~denyeart] yes, we are looking at this, and also FABN-1271.  We already have the capability to add extra query strategies, so we can build on that.  This could certainly be backported.

cc: [~bestbeforetoday];;;","30/Oct/19 12:55 AM;heatherp;I'm working through the backlog with the maintainers and we believe this is done, so closing;;;",,,,,,,,,,,
Fix identity update maxEnrollments,FABN-1123,37245,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,GuillaumeCisco,GuillaumeCisco,GuillaumeCisco,30/Jan/19 7:22 PM,25/Oct/19 1:18 AM,28/Oct/23 3:25 AM,25/Oct/19 1:18 AM,,,,,,,,,,0,,,,,,Move maxEnrollments key to max_enrollments key.,,GuillaumeCisco,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i009kn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),GuillaumeCisco,heatherp,,,,,,,,,dev,main,,,,,,,,,true,"30/Jan/19 7:28 PM;GuillaumeCisco;[https://gerrit.hyperledger.org/r/#/c/29023/]

 

 [https://github.com/hyperledger/fabric-ca/blob/ef74d7e4ff826781626559612c21053fb54152ad/api/client.go#L222];;;","25/Oct/19 1:10 AM;heatherp;I'm working through the node sdk backlog with the maintainers. It looks like this was done and merged, so I'm going to close it;;;",,,,,,,,,,,,,,,
Client.getPeersForOrg() returns no peers if connection profile contains no client section,FABN-1124,37247,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,30/Jan/19 8:08 PM,02/Feb/19 1:09 AM,28/Oct/23 3:25 AM,02/Feb/19 1:09 AM,v1.4.0,,,,,,,,,0,,,,,,"The client obtains its MSP ID only from the *client* section of the connection profile with which it is created. Even if the client has a user context set (with associated MSP ID) and discovery is performed to located all the peers on the network, *getPeersForOrg()* still returns no peers.

A workaround is to call *getPeersForOrg(userContextMspId)*, explicitly specifying the MSP ID of the current user context. This should not be necessary. The client should use the MSP ID of the current user context, or the MSP ID of the organisation specified in the *client* section of the connection profile (as it does currently) if that is not present.

This will allow the client to be used for discovery without requiring the connection profile to contain a *client* section specifying the user's MSP ID.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i009l3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
request-timeout in ConnectionOpts type is number not string,FABN-1125,37291,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,vieiramanoel,vieiramanoel,vieiramanoel,31/Jan/19 1:17 AM,07/Feb/19 8:47 PM,28/Oct/23 3:25 AM,07/Feb/19 8:47 PM,,,,,,,,,,0,,,,,,,,vieiramanoel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i009tz:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),vieiramanoel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Missing endorsement plugin causing sdk/network mismatch (sdk 1.2 and up do not work with network 1.1),FABN-1126,37419,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,MariWade,MariWade,05/Feb/19 12:41 AM,26/Feb/19 4:28 AM,28/Oct/23 3:25 AM,26/Feb/19 4:28 AM,,,,,,v1.4.1,,,,0,,,,,,"Apparently Fabric v1.2 allows you to omit the name of the endorsement plugin you would like to use, while v1.1 does not.  The SDK changed to always omit these values.  You can see here: [https://github.com/hyperledger/fabric-sdk-node/blob/v1.2.2/fabric-client/lib/Channel.js#L2195-L2196]
 
 Line 2195 sets escc to """", and line 2195 sets vscc to """".  If you change these to be ""escc"" and ""vscc"" respectively, you should get things working again.",,harrisob@us.ibm.com,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,1.1,Unset,No,,,"1|i00agn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,MariWade,,,,,,,,,dev,main,,,,,,,,,true,"26/Feb/19 4:28 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/29490/;;;",,,,,,,,,,,,,,,,
typescript definitions for ChannelEventHub are not quite correct,FABN-1127,37462,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,davidkel,davidkel,07/Feb/19 2:17 AM,13/Feb/19 6:53 PM,28/Oct/23 3:25 AM,13/Feb/19 6:53 PM,v1.4.0,,,,,v1.4.1,,,,0,,,,,,"ChannelEventHub.connect has the signature
{code}
	connect(options, connectCallback) 
{code}
but the typescript def is
{code}
		public connect(options?: ConnectOptions | boolean): void;
{code}

Also when you register say for a chaincode event, it returns a ChaincodeChannelEventHandle, but this definition is not exported so cannot be referenced so guessing it needs to be exported ?


",,andrew-coleman,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00apj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,,,,,,,,,dev,main,,,,,,,,,true,"12/Feb/19 10:25 PM;davidkel;Sorry, please could this be fixed for in the 1.4 release rather than just master ? Thanks;;;","13/Feb/19 6:53 PM;andrew-coleman;1.4: [https://gerrit.hyperledger.org/r/c/29263/]

master: [https://gerrit.hyperledger.org/r/c/29257]

 ;;;",,,,,,,,,,,,,,,
Discovery options to gateway.connect are not correctly merged,FABN-1128,37487,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,sstone1,sstone1,07/Feb/19 11:08 PM,14/Feb/19 2:18 AM,28/Oct/23 3:25 AM,13/Feb/19 11:28 PM,v1.4.0,,,,,v1.4.1,,,,0,,,,,,"`Gateway._mergeOptions` doesn't do a recursive merge if the key doesn't end in `Options`... which is great for `queryHandlerOptions` and `eventHandlerOptions` but not for `discovery`
The tests are passing, but they have `discoveryOptions` instead of `discovery`
what I think happens is:
app passes in `{ discovery: { asLocalhost: true }}`
gateway has default of `{ discovery: { enabled: true }}`
result from merge is `{ discovery: { asLocalhost: true }}`

The result from merge should be `{ discovery: { enabled: true, asLocalhost: true }}`",,andrew-coleman,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00aun:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,sstone1,,,,,,,,,dev,main,,,,,,,,,true,"13/Feb/19 10:00 PM;andrew-coleman;https://gerrit.hyperledger.org/r/c/29279/;;;",,,,,,,,,,,,,,,,
test-fv-scenario fail in fabric-sdk-node@2.0.0-snapshot test cucumber ,FABN-1129,37491,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,08/Feb/19 12:02 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,28/Feb/19 1:07 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,,,,,"*Summary:* one of the scenario out of four fail while running cucumber test on the fabric-sdk-node-merge job.

*Firsttime: yes*

*Branch: master***

*Platform:* ** *s390x*

*Error Snippet:*
{code:java}
/00:37:52.917    ��� And I can create a gateway named discovery_gateway as user User1 within Org1 using the discovery common connection profile # test/scenario/features/steps/network_steps.js:18
00:37:52.917    ��� And I use the gateway named discovery_gateway to submit a transaction with args [initMarble,marble1,blue,35,tom] for chaincode marbles instantiated on channel mychannel # test/scenario/features/steps/network_steps.js:35
00:37:52.917        Error: Endorsement has failed
00:37:52.917            at DiscoveryEndorsementHandler._endorse (/w/workspace/fabric-sdk-node-merge-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:29:713)
00:37:52.917            at <anonymous>
00:37:52.917            at process._tickCallback (internal/process/next_tick.js:189:7)
00:37:52.918    - And I use the gateway named discovery_gateway to evaluate transaction with args [readMarble,marble1] for chaincode marbles instantiated on channel mychannel with the response matching {""color"":""blue"",""docType"":""marble"",""name"":""marble1"",""owner"":""tom"",""size"":35} # test/scenario/features/steps/network_steps.js:39
00:37:52.918    - And I can disconnect from the gateway named discovery_gateway # test/scenario/features/steps/network_steps.js:50
00:37:52.918    ��� After # test/scenario/features/support/hooks.js:17
00:37:52.918 
00:37:52.918 4 scenarios (1 failed, 3 passed)
00:37:52.918 30 steps (1 failed, 2 skipped, 27 passed)
00:37:52.918 8m48.359s
00:37:52.918 npm ERR! code ELIFECYCLE
00:37:52.918 npm ERR! errno 1
00:37:52.918 npm ERR! fabric-sdk-node@2.0.0-snapshot test:cucumber: `cucumber-js ./test/scenario/features/*.feature`
00:37:52.918 npm ERR! Exit status 1
00:37:52.918 npm ERR! 
00:37:52.918 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:cucumber script.
00:37:52.918 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
00:37:52.918 / code placeholder
{code}
*Build Logs: https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-s390x/206/consoleFull*

*Attachments:* ** *< None>*",,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00avj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,"28/Feb/19 1:07 AM;vijaypunugubati;Working as expected ;;;",,,,,,,,,,,,,,,,
"Chaincode instantiate does not allow no function name and defaults to ""init""",FABN-1130,37529,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,08/Feb/19 10:59 PM,26/Feb/19 4:08 PM,28/Oct/23 3:25 AM,13/Feb/19 11:50 PM,,,,,,,,,,0,,,,,,,,andrew-coleman,davidkhala,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1112,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00b33:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkhala,sstone1,,,,,,,,dev,main,,,,,,,,,true,"12/Feb/19 12:53 AM;andrew-coleman;duplicate of FABN-1112

 ;;;","26/Feb/19 4:08 PM;davidkhala;Great and it is what we need;;;",,,,,,,,,,,,,,,
Logging utility tests fail in build-in logger,FABN-1131,37582,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,vijaypunugubati,vijaypunugubati,11/Feb/19 11:44 PM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,13/Feb/19 3:10 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,,,,,"*Summary:* Logging utility tests fail in build-in logger in fabric-sdk-node-merge jobs**

*Consistent: yes*

*Branch: Master***

*Platform:* ** *s390x & x86_64*

*Error Snippet:* 
{code:java}
/00:28:33.059 TAP version 13
00:28:33.059 not ok 1 test exited without ending
00:28:33.059   ---
00:28:33.059     operator: fail
00:28:33.059     at: process.<anonymous> (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/index.js:90:19)
00:28:33.059     stack: |-
00:28:33.059       Error: test exited without ending
00:28:33.059           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
00:28:33.059           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:92:32)
00:28:33.059           at Test.fail (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:315:10)
00:28:33.059           at Test.bound [as fail] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:92:32)
00:28:33.059           at Test._exit (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:189:14)
00:28:33.059           at Test.bound [as _exit] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:92:32)
00:28:33.059           at process.<anonymous> (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/index.js:90:19)
00:28:33.059           at emitOne (events.js:121:20)
00:28:33.059           at process.emit (events.js:211:7)
00:28:33.059           at processEmit [as emit] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/nyc/node_modules/signal-exit/index.js:149:35)
00:28:33.059   .../ code placeholder
{code}
*Build Logs: [https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/225/consoleFull]*

*[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-s390x/209/consoleFull*]",,andrew-coleman,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bdb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,dev,main,,,,,,,,,true,"12/Feb/19 5:29 PM;andrew-coleman;https://gerrit.hyperledger.org/r/c/29238/;;;",,,,,,,,,,,,,,,,
Update protos/token/*.proto files,FABN-1132,37585,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,12/Feb/19 12:04 AM,12/Mar/19 11:50 AM,28/Oct/23 3:25 AM,13/Feb/19 11:14 PM,,,,,,,,,,0,fabtokens,,,,,Token protobuf message files have been updated. Update the same in node.js SDK as well. ,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bdr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"13/Feb/19 11:14 PM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29264/]

 ;;;",,,,,,,,,,,,,,,,
wrong caName param,FABN-1133,37608,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,GuillaumeCisco,GuillaumeCisco,12/Feb/19 5:56 PM,31/May/19 10:04 PM,28/Oct/23 3:25 AM,31/May/19 5:05 PM,,,,,,,,,,0,,,,,,"It looks like the caName param is never used in the fabric-ca go code.
It is always a caname param.

These lines: [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-ca-client/lib/FabricCAClient.js#L278]



should be removed, right?",,GuillaumeCisco,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bg7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),GuillaumeCisco,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"30/May/19 4:01 AM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31592;;;",,,,,,,,,,,,,,,,
Scenario tests to have check response step,FABN-1134,37613,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,nkl199,nkl199,12/Feb/19 8:23 PM,14/Feb/19 7:32 PM,28/Oct/23 3:25 AM,14/Feb/19 7:32 PM,,,,,,,,,,0,,,,,,"Current scenario tests need to be refactored to enable an explicit (separate) ""check response"" step, for the most recent transaction submission.",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bgv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),nkl199,,,,,,,,,,,,,,,,,,,,,"14/Feb/19 7:31 PM;nkl199;closed by https://gerrit.hyperledger.org/r/#/c/29287/;;;",,,,,,,,,,,,,,,,
Convert JS e2e to scenario test(s),FABN-1135,37614,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,nkl199,nkl199,12/Feb/19 8:44 PM,16/Jun/20 5:55 PM,28/Oct/23 3:25 AM,16/Jun/20 5:55 PM,,,,,,,,,,0,sdk-triaged,,,,,"The javascript e2e tests should be represented and maintained as scenario tests. Tests should be added for non-gateway scenarios:
* install
* instantiate
* upgrade
* invoke
* query

The tape versions should be deleted.",,bestbeforetoday,nkl199,,,,,,,,,,,,,,,,FABN-1138,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i00bh3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),bestbeforetoday,nkl199,,,,,,,,,dev,main,,,,,,,,,true,"16/Jun/20 5:55 PM;bestbeforetoday;I think this has become a non-issue now the v2 SDK doesn't support chaincode deployment. There are no tests for this, tape or otherwise.;;;",,,,,,,,,,,,,,,,
Increase scenario test speed,FABN-1136,37615,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,nkl199,nkl199,12/Feb/19 8:46 PM,14/Feb/19 7:31 PM,28/Oct/23 3:25 AM,14/Feb/19 7:31 PM,,,,,,,,,,0,,,,,,"At the moment before each scenario the network is scrubbed. We need to add a check for the presence of a Fabric network, channels joint and chaincodes deployed (with conditional action on that). 

This will stop a need to stand up/configure fabric multiple times, drastically speeding up the build.",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bhb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),nkl199,,,,,,,,,,,,,,,,,,,,,"14/Feb/19 7:31 PM;nkl199;closed by https://gerrit.hyperledger.org/r/#/c/29287/;;;",,,,,,,,,,,,,,,,
Extend network scenario tests,FABN-1137,37616,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,nkl199,nkl199,12/Feb/19 8:47 PM,13/Jan/21 12:29 AM,28/Oct/23 3:25 AM,13/Jan/21 12:29 AM,,,,,,,,,,0,sdk-triaged,,,,,"Network scenario tests, that use a gateway, should be extended to include the following enabled scenarios:
* install
* instantiate
* upgrade",,lesleyannj,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i00zll:1",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),lesleyannj,nkl199,,,,,,,,,,,,,,,,,,,,"13/Jan/21 12:29 AM;lesleyannj;Backlog Review - Closing - removal of admin support.;;;",,,,,,,,,,,,,,,,
Convert network e2e tests to scenario tests,FABN-1138,37617,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,nkl199,nkl199,12/Feb/19 8:53 PM,03/Oct/19 10:28 PM,28/Oct/23 3:25 AM,03/Oct/19 10:28 PM,,,,,,,,,,0,,,,,,"The existing network e2e tests should exist and be maintained as scenario tests. Scenarios already exist for utilisation of the network APIs to interact with deployed chaincode; this task focusses on the conversion of the existing network scenario tests to be driven through the typescript definitions, in addition to rolling in any e2e tests that need to be ported.

All tests under /test/integration/network_e2e should be deleted as part of this issue",,bestbeforetoday,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1135,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i00bhr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),bestbeforetoday,nkl199,,,,,,,,,,,,,,,,,,,,"14/Aug/19 7:48 PM;bestbeforetoday;The scenario test step definitions need to be written in TypeScript since the existing e2e tests implicitly test that the TypeScript definitions are complete and correct.;;;",,,,,,,,,,,,,,,,
New FV framework to replace Tape,FABN-1139,37618,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,nkl199,nkl199,12/Feb/19 8:58 PM,16/Jun/20 5:59 PM,28/Oct/23 3:25 AM,16/Jun/20 5:59 PM,,,,,,,,,,0,sdk-triaged,,,,,"The current tape framework being used as an FV test harness is proving to be unreliable, difficult to debug and obscured.

A new framework that is more reliable and enables more explicit tests to be written is required. The proposal is:
* Create a script that deploys a fabric network and then initiates a mocha based test framework
* Add new tests to this framework and stop using tape
* When a tape test fails, port it to the new framework
* Migrate tape tests to the new framework over time

This task covers only the first bullet point.",,bestbeforetoday,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i00bhz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),bestbeforetoday,nkl199,,,,,,,,,,,,,,,,,,,,"16/Jun/20 5:59 PM;bestbeforetoday;All the v2 unit tests are mocha rather than tape;;;",,,,,,,,,,,,,,,,
Remove remaining tape unit tests,FABN-1140,37619,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,nkl199,nkl199,12/Feb/19 9:02 PM,02/Oct/19 12:48 AM,28/Oct/23 3:25 AM,02/Oct/19 12:48 AM,,,,,,,,,,0,,,,,,"The existing ""tape unit tests"" are not strictly speaking unit tests, they are closer to FV tests. 

All remaining tape unit tests should be deleted, or relocated to the test/integration test bucket (having deleted any replicated tests that exist as unit mocha tests)",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1391,,,,,,,,,,,,,,,,,,,,,FABN-1174,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bi7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unit Test,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"fabcar low-level sample does not work with latest ""unstable"" fabric-client",FABN-1141,37640,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,,denyeart,denyeart,13/Feb/19 1:36 AM,13/Feb/19 3:11 AM,28/Oct/23 3:25 AM,13/Feb/19 3:11 AM,,,,,,,,,,0,,,,,,"I have changed fabcar javascript-low-level package.json to utilize:
{code:java}
""fabric-client"": ""unstable""{code}
Upon running
{code:java}
node query.js,{code}
I receive error:

 
{code:java}
$ node query.js
/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/node_modules/fabric-protos/node_modules/grpc/src/client.js:400
 this.$channel = new grpc.Channel(address, credentials, channel_options);
 ^
TypeError: Channel's second argument must be a ChannelCredentials
 at ServiceClient.Client (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/node_modules/fabric-protos/node_modules/grpc/src/client.js:400:23)
 at new ServiceClient (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/node_modules/fabric-protos/node_modules/grpc/src/client.js:823:12)
 at Peer._createClients (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/node_modules/fabric-client/lib/Peer.js:59:27)
 at new Peer (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/node_modules/fabric-client/lib/Peer.js:53:8)
 at Client.newPeer (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/node_modules/fabric-client/lib/Client.js:383:10)
 at Object.<anonymous> (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/fabcar/javascript-low-level/query.js:21:26)
 at Module._compile (module.js:643:30)
 at Object.Module._extensions..js (module.js:654:10)
 at Module.load (module.js:556:32)
 at tryModuleLoad (module.js:499:12)
{code}
 

I have deleted package-lock.json and node_modules, and re-run npm install, but the problem remains.

It looks like this is related to the new fabric-protos changes.

Should old applications be compatible with the new v2.0 fabric-client SDK?  If breaking changes are required in v2.0, then a Jira must be created to document the breaking changes in release notes.

 ",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-14162,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bmn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,"13/Feb/19 3:10 AM;denyeart;Fixing as part of FAB-14162;;;",,,,,,,,,,,,,,,,
Add TokenClient and enhance SDK to support token functions,FABN-1142,37653,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,wenjian,wenjian,wenjian,13/Feb/19 11:16 PM,12/Mar/19 11:51 AM,28/Oct/23 3:25 AM,21/Feb/19 7:22 AM,,,,,,,,,,0,fabtoken,,,,,"This task add token support by implementing a new TokenClient class and enhancing existing Client, Channel, Peer, and Constants code.",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bpb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"16/Feb/19 3:45 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29316/]

 ;;;",,,,,,,,,,,,,,,,
Channel not found,FABN-1143,37658,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,Jakeeyturner,Jakeeyturner,13/Feb/19 11:59 PM,20/Feb/19 10:37 PM,28/Oct/23 3:25 AM,20/Feb/19 10:37 PM,,,,,,v1.4.1,v2.0.0,,,0,,,,,,"When I connect to an instantiated chaincode with service discovery, and submit a transaction I am given the correct response. However an error is thrown before submitting the transaction which states that the channel is not found.
{code:java}
2019-02-13T14:29:45.447Z - error: [Client.js]: Channel not found for name channel1
2019-02-13T14:29:48.379Z - info: [TransactionEventHandler]: _strategySuccess: strategy success for transaction ""eff17cb96427dd2da4b1a405e54971255422f70c50834862d431a93911081dc9""
WHAT IS response ""hello world!""
{code}
My code to submit the transaction (which works as mentioned) is:
{code:java}
async function submitTransaction(functionName, args) {
    // Submit transaction
    const network = await gateway.getNetwork('channel1');
    const contract = network.getContract('chaincodeId', 'MyContract');
    const responseBuffer = await contract.submitTransaction(functionName, ...args);
    return responseBuffer;
}
{code}
 ",,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bq7:",,,,Unset,Unset,,,,,,,,,,,"- Use a connection profile which has no 'channels' key
- Connect to a Fabric using the settings (service discovery enabled):
{ wallet: 
   FileSystemWallet {
     storesInitialized: false,
     walletMixin: X509WalletMixin {},
     path: '/Users/jake/Documents/wallet' },
  identity: 'test',
  discovery: { asLocalhost: false, enabled: true } }
- Submit a transaction",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Jakeeyturner,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
End to end flow of revoking a user via a CRL update,FABN-1144,37688,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,yacovm,yacovm,15/Feb/19 1:20 AM,30/Oct/19 12:54 AM,28/Oct/23 3:25 AM,30/Oct/19 12:54 AM,,,,,,v2.0.0,,,,0,,,,,,"The fabric-ca-client can ask from the fabric-CA to produce a CRL to revoke a user.

However (unless I'm mistaken) - there isn't an API to add this CRL to the channel config and issue a channel update.

Therefore - there is no way of revoking a node/client in the API of the node SDK.

[~harrisob@us.ibm.com] do i have the details correct? 

 

Seems this is something that users of Fabric would've liked to exist.

 

[https://stackoverflow.com/questions/54673179/fully-revoke-a-user-certificates-in-hyperledger-fabric-node-sdk]

[https://stackoverflow.com/questions/46410592/unable-to-revoke-a-certificate-or-enrollment-id-with-fabric-node-sdk/46412583]

[https://chat.hyperledger.org/channel/fabric?msg=pSjRXmfGtK4M3X678]

[https://chat.hyperledger.org/channel/fabric?msg=hDaDxkn527qLnDkjg]

 

 

/cc [~denyeart]

 

 ",,denyeart,GuillaumeCisco,harrisob@us.ibm.com,heatherp,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00buv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,GuillaumeCisco,harrisob@us.ibm.com,heatherp,yacovm,,,,,,,,,,,,,,,,,"20/Feb/19 12:33 AM;harrisob@us.ibm.com;Not easy, actually really hard, but the application could do a config update that included the CRL

 ;;;","08/Mar/19 12:34 AM;denyeart;[~harrisob@us.ibm.com] [~andrew-coleman] It seems making config updates easier from SDK is something that should be prioritized. I'll increase to High and tag for v2.0 so that its on the radar, but leave to you the relative prioritization.;;;","21/Jun/19 12:12 AM;GuillaumeCisco;The gencrl option when revoking an user is missing too...
It should be added;;;","21/Jun/19 12:47 AM;harrisob@us.ibm.com;The SDK's are not in the business of admin functions. Going forward there will be no admin and only application (endorse, commit and events).;;;","21/Jun/19 7:18 PM;GuillaumeCisco;Aren't you supporting the gencrl option in the fabric-sdk-node?
I've created a PR for adressing this issue, this is very simple: [https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/32019];;;","30/Oct/19 12:54 AM;heatherp;I'm working through the backlog with the maintainers and I'm closing this, as the above PR seems to have covered what was needed here, feel free to re-open.;;;",,,,,,,,,,,
Provide types for fabric-protos lib,FABN-1145,37692,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,sstone1,vieiramanoel,vieiramanoel,15/Feb/19 6:15 AM,16/Jun/20 5:45 PM,28/Oct/23 3:25 AM,16/Jun/20 5:45 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Right now import fabric-proto doesn't provide types for protos, which makes work a little bit hard. I suggest we add the pbts command that generates it",,bestbeforetoday,davidkhala,sstone1,vieiramanoel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1544,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bvr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,sstone1,vieiramanoel,,,,,,,,,,,,,,,,,,"19/Aug/19 11:27 PM;davidkhala;Hi Manoel, Are you still working on it? is there any way we can automate the process that when a fabric-protos change, this .ts changed accordingly;;;","06/Sep/19 9:55 PM;sstone1;We can do this with the new version of protobufjs, using the pbjs and pbts tools. However adopting this new version requires a  large piece of refactoring work, that we have just started - so it may be a while.;;;","16/Jun/20 5:45 PM;bestbeforetoday;TypeScript definition generation was added as part of the move to protobufjs;;;",,,,,,,,,,,,,,
"As a developer, I need a feature which switch to another available discovery peer while current discovery peer is down",FABN-1146,37699,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,smartheye,smartheye,15/Feb/19 2:31 PM,30/Oct/19 8:46 AM,28/Oct/23 3:25 AM,30/Oct/19 8:46 AM,v1.3.0,v1.3.1,v1.4.0,v1.4.1,,,,,,0,sdk-triaged,,,,,"According to Fabric SDK 1.3 and later, while there are multiple discovery peers available, the sdk always chooses the first one.

(Source: [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/lib/Channel.js]  L3743)

If the very first discovery peer is down or not working, node sdk doesn't try another discovery peer even if there are multiple discovery peers available in configuration file. So the sdk wouldn't work as there are no endorsor_plans available.

As a developer, A feature is need that if current discovery peer was not working, sdk would try next available discovery peer automatically until every discovery peer is tried.

 ",,davidkhala,harrisob@us.ibm.com,smartheye,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00bxb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,harrisob@us.ibm.com,smartheye,,,,,,,,,,,,,,,,,,,"30/Oct/19 8:46 AM;harrisob@us.ibm.com;the new low level takes a list of peers and will attempt each one until a positive response from the connect.;;;",,,,,,,,,,,,,,,,
Exclude .noignore file from the license check - Master Branch,FABN-1147,37707,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,rameshthoomu,rameshthoomu,15/Feb/19 11:30 PM,14/Mar/19 12:39 AM,28/Oct/23 3:25 AM,14/Mar/19 12:39 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"Observed fabric-sdk-node builds are failing with license check on .noignore file. License check on this file is not required so, exclude this file from license check.

[https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-s390x/28/console]

https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-x86_64/",,nkl199,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00byn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,rameshthoomu,,,,,,,,,dev,main,,,,,,,,,true,"13/Mar/19 12:42 AM;nkl199;CR: https://gerrit.hyperledger.org/r/#/c/30036/;;;",,,,,,,,,,,,,,,,
Allow offline signing for token commands and transactions,FABN-1148,37716,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,16/Feb/19 3:44 AM,22/Feb/19 12:44 AM,28/Oct/23 3:25 AM,22/Feb/19 12:44 AM,,,,,,,,,,0,,,,,,Node.js SDK allows a user to sign offline if the user doesn't want SDK to know his signing identity.,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00c0f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"21/Feb/19 2:49 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29419/]

 ;;;","22/Feb/19 12:03 AM;wenjian;One more CR: [https://gerrit.hyperledger.org/r/#/c/29432/]

 ;;;",,,,,,,,,,,,,,,
Implement e2e tests for token operations,FABN-1149,37717,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,wenjian,wenjian,wenjian,16/Feb/19 3:46 AM,01/Mar/19 5:09 AM,28/Oct/23 3:25 AM,01/Mar/19 5:09 AM,,,,,,,,,,0,,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00c0n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"20/Feb/19 8:34 AM;wenjian;CR: https://gerrit.hyperledger.org/r/#/c/29361/;;;",,,,,,,,,,,,,,,,
Failed to connect before the deadline error message is of little value in reporting what the problem is,FABN-1150,37763,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,davidkel,davidkel,18/Feb/19 5:58 PM,25/Oct/19 2:49 AM,28/Oct/23 3:25 AM,25/Oct/19 2:42 AM,v1.2.0,v1.3.0,v1.4.0,,,v1.4.1,v2.0.0,,,0,sdk-triaged,,,,,"Before the waitForClientReady method was introduced, it was easier to determine connectivity issues when connecting to peers/orderers. Once this method was introduced this is the only error returned and provides no detail about what the problem might be at all.
For example was it connection refused ? was it a tls error ?

In order for self diagnosis, either consider removing this check or if it fails perform other tests to determine the root cause in order to provide more useful information. I would suggest raising an issue with grpc-node to fix this but I wonder if that would ever happen.
",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ca7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"18/Feb/19 6:29 PM;davidkel;It looks like the request for ready timeout is still not configurable via the connection profile although the jira bug https://jira.hyperledger.org/browse/FABN-969 has been closed.;;;","14/Aug/19 1:52 AM;harrisob@us.ibm.com;being worked as part of the refactor of the low level NodeSDK. Will be included in the new package 'fabric-base'

https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32889
;;;","25/Oct/19 2:42 AM;harrisob@us.ibm.com;Connecting to a endpoint is not a separate async call with the new low level. The user will be able to see what the connection issue is before attempting to send a request.;;;",,,,,,,,,,,,,,
Typos in test/scenario/README.md,FABN-1152,37787,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,LeoLe,LeoLe,LeoLe,19/Feb/19 9:18 PM,20/Feb/19 10:40 PM,28/Oct/23 3:25 AM,20/Feb/19 10:40 PM,,,,,,,,,,0,,,,,,"fix typos in scenario/README.md

 ",,LeoLe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cdj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),LeoLe,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Create a sample prover handler,FABN-1153,37817,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,20/Feb/19 12:26 PM,20/Mar/19 12:37 AM,28/Oct/23 3:25 AM,20/Mar/19 12:37 AM,,,,,,,,,,0,,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cjb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"20/Mar/19 12:37 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/30181/]

 ;;;",,,,,,,,,,,,,,,,
Create the tutorial for token API,FABN-1154,37818,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,20/Feb/19 12:54 PM,17/Mar/19 11:25 AM,28/Oct/23 3:25 AM,17/Mar/19 11:25 AM,,,,,,,,,,0,,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cjj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"11/Mar/19 11:46 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29989/]

 ;;;",,,,,,,,,,,,,,,,
Default connection options (default.json) are not applied,FABN-1155,37835,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,LeoLe,LeoLe,LeoLe,20/Feb/19 9:19 PM,24/May/19 1:36 AM,28/Oct/23 3:25 AM,24/May/19 1:36 AM,,,,,,,,,,0,,,,,,"in lib/Client.js the default connection options from default.json are not applied and Grps defaults are used.

 

E.g. Keep-Alive pings are not sent (despite configured in default.json) as in the Grps lib keep-alive is disabled for clients by default. 

See https://github.com/grpc/grpc/blob/master/doc/keepalive.md

 

In particular this breaks Azure deployments as Azure's Load balancer has 4 minutes timeout.

 ",,LeoLe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cmn:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),LeoLe,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Backport pluggable query handler to 1.4,FABN-1156,37838,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,20/Feb/19 10:46 PM,21/Feb/19 7:07 PM,28/Oct/23 3:25 AM,21/Feb/19 7:07 PM,,,,,,,,,,0,,,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1094,,,No,,Unset,No,,,"1|i00cnb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update to latest token protobuf messages,FABN-1157,37876,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,22/Feb/19 12:04 AM,12/Mar/19 4:22 AM,28/Oct/23 3:25 AM,27/Feb/19 5:15 AM,,,,,,,,,,0,fabtoken,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cun:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"22/Feb/19 12:43 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29439/]

 ;;;",,,,,,,,,,,,,,,,
Fix CouchDB Wallet delete key in fabric-network ,FABN-1158,37901,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,caveman7,caveman7,caveman7,22/Feb/19 3:26 PM,03/Oct/19 9:46 PM,28/Oct/23 3:25 AM,23/Feb/19 1:04 AM,v1.4.0,,,,,,,,,0,couchdb,node-SDK,,,,"Couchdb Wallet delete function fails because _rev parameter is not provided. 

https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/impl/wallet/couchdbwallet.js#L109

Nano reference: https://www.npmjs.com/package/nano#dbdestroydocname-rev-callback

",,andrew-coleman,caveman7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cyv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,caveman7,,,,,,,,,dev,main,,,,,,,,,true,"23/Feb/19 1:04 AM;andrew-coleman;https://gerrit.hyperledger.org/r/c/29476/;;;",,,,,,,,,,,,,,,,
PEM file paths in connection profile are not relative to connection profile,FABN-1159,37905,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,22/Feb/19 6:49 PM,23/Feb/19 12:50 AM,28/Oct/23 3:25 AM,23/Feb/19 12:50 AM,,,,,,,,,,0,,,,,,"When a connection profile contains a relative path reference to a PEM file on disk, the PEM file path is resolved relative to the processes current directory, rather than being relative to the directory containing the connection profile. This is unintuitive and probably not what the user wants. ",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00czr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,dev,main,,,,,,,,,true,"22/Feb/19 11:46 PM;sstone1;https://gerrit.hyperledger.org/r/#/c/29480/;;;",,,,,,,,,,,,,,,,
SDK should not always assume grpcs:// for service discovery,FABN-1160,37951,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,25/Feb/19 9:30 PM,06/Mar/19 10:31 PM,28/Oct/23 3:25 AM,06/Mar/19 10:31 PM,,,,,,,,,,0,,,,,,"The SDK assumes by default that peers and orderers returned by service discovery will be running with TLS (grpcs://):

Client._buildUrl
{code}
sdk_utils.getConfigSetting('discovery-protocol', 'grpcs');
{code}

This is a bad assumption when we are connecting to a gateway peer that is not running with TLS (grpc://). 

If we get discovery results from a peer without TLS, we should assume the peers and orderers returned by service discovery are also running without TLS.",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00d7b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,dev,main,,,,,,,,,true,"26/Feb/19 11:06 PM;sstone1;https://gerrit.hyperledger.org/r/#/c/29587/;;;",,,,,,,,,,,,,,,,
"When channel.initialize does not have request parameter, sdk_utils.getConfigSetting gets value.",FABN-1161,37988,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,longcoding,longcoding,longcoding,27/Feb/19 1:01 AM,25/Oct/19 1:21 AM,28/Oct/23 3:25 AM,25/Oct/19 1:21 AM,,,,,,,,,,0,,,,,,"sdk_utils.setConfigSetting does not apply to channel.initialize when client is created and channel is automatically generated.

When channel.initialize does not have the request values discover and as_localhost, sdk_utils.getConfigSetting can be used to fetch the values and apply them.

Also, discovery-cache-life can be set at channel.initialize.",,longcoding,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-8779,,,No,,Unset,No,,,"1|i00df3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),longcoding,,,,,,,,,,dev,main,,,,,,,,,true,"05/Mar/19 10:49 PM;longcoding;[https://gerrit.hyperledger.org/r/#/c/29619/]

 

Please review it.;;;",,,,,,,,,,,,,,,,
Decode TokenTransaction in decodePayloadBasedOnType,FABN-1162,38001,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,wenjian,wenjian,wenjian,27/Feb/19 5:17 AM,07/Mar/19 12:07 AM,28/Oct/23 3:25 AM,07/Mar/19 12:07 AM,,,,,,v2.0.0,,,,0,fabtoken,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00dhr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"06/Mar/19 11:18 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29865/]

 ;;;",,,,,,,,,,,,,,,,
Update to HexString for token quantity and other proto message changes,FABN-1163,38002,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,wenjian,wenjian,wenjian,27/Feb/19 5:20 AM,12/Mar/19 4:21 AM,28/Oct/23 3:25 AM,06/Mar/19 11:12 AM,,,,,,,,,,0,fabtoken,,,,,Token protobuf messages have changed token quantity to hex string. Need to update protobuf messages and node sdk code accordingly.,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00dhz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"05/Mar/19 11:19 PM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/29810/]

 ;;;",,,,,,,,,,,,,,,,
ChannelEventHub disconnected after first ping without data,FABN-1164,38033,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,harrisob@us.ibm.com,DanielHruby,DanielHruby,27/Feb/19 10:11 PM,25/Oct/19 3:07 AM,28/Oct/23 3:25 AM,25/Oct/19 3:07 AM,v1.4.1,,,,,,,,,0,ChaincodeEvents,ChannelEventHub,events,gRPC,sdk-triaged,"When I'm trying listening events on blockchain I get disconnected after some time and I don't get any error on the client side (ChannelEventhub) either on the server side (peer). If the peer is then trying to send an event to channel event hub finds that stream was canceled and close the stream with error: 
{quote}error=""context finished before block retrieved: context canceled"" grpc.code=Unknown{quote}

This is happening when grpc.http2.max_pings_without_data is set to 0. When I set  grpc.http2.max_pings_without_data to 1000 for example then ChannelEventHub is working but I need to restart it every day.",,DanielHruby,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00dnb:",,,,Unset,Unset,,,,,,,,,,,"1) Connect ChannelEventHub to Peer with default grpc options ( grpc.http2.max_pings_without_data: 0 )

2) Register chaincode event listener

3) After some time ChannelEventHub stops getting event without any error",,Unset,,,,,,Unset,,Unset,,(Please add usage information),DanielHruby,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"30/May/19 1:33 AM;harrisob@us.ibm.com;Could I get a trace of this failure
export HFC_LOGGING='{""debug"":""console""}';;;","25/Oct/19 3:07 AM;harrisob@us.ibm.com;No information provided;;;",,,,,,,,,,,,,,,
SDK end-2-end tests are failing consistently due to Syntax error(unexpected token),FABN-1165,38037,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,,sambhavdutt,sambhavdutt,28/Feb/19 12:07 AM,19/Mar/19 8:13 PM,28/Oct/23 3:25 AM,16/Mar/19 8:56 AM,v1.2.0,v1.3.0,v1.4.0,v2.0.0,,Future,,,,0,ci-failure,,,,,"SDK end-2-end test are failing with to syntax error, Unexpected token *=>* in +/fabric-sdk-node/fabric-client/lib/+ test files.

*Consistent:* Yes
*Branch:* release-1.4, master
*Platform:* s390x, x86_64
*Error Snippet:*

{code:java}
19:30:15 Failed to parse file: /w/workspace/fabric-end-2-end-daily-release-1.4-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/utils.js
19:30:15 Transformation error; return original code
19:30:15 { Error: Line 97: Unexpected token =>
19:30:15     at constructError (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2407:21)
19:30:15     at createError (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2426:17)
19:30:15     at unexpectedTokenError (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2500:13)
19:30:15     at throwUnexpectedToken (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2505:15)
19:30:15     at consumeSemicolon (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2620:13)
19:30:15     at parseStatement (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:4816:9)
19:30:15     at parseStatementListItem (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:3989:16)
19:30:15     at parseFunctionSourceElements (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:4869:23)
19:30:15     at parseFunctionExpression (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:5074:16)
19:30:15     at parsePrimaryExpression (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:3273:24)
19:30:15   lineNumber: 97,
19:30:15   description: 'Unexpected token =>',
19:30:15   index: 3576 }
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.4-x86_64/19/consoleFull",,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,FABN-1169,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,46e6236b3c5f598e848ced24cee11d89ad325879,Unset,No,,,"1|i00do7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,"05/Mar/19 2:10 AM;harrisob@us.ibm.com;Has been fixed by fabn-1169;;;","06/Mar/19 3:56 AM;sambhavdutt;This issue has been observed again in the latest builds

*SDK-NODE-Commit:* c1b6122

{code:java}
11:10:23 #######################################
11:10:23 Run e2e tests and Code coverage report
11:10:23 #######################################
11:10:23 Failed to parse file: /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/utils.js
11:10:23 Transformation error; return original code
11:10:23 { Error: Line 86: Unexpected token =>
11:10:23     at constructError (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2407:21)
11:10:23     at createError (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2426:17)
11:10:23     at unexpectedTokenError (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2500:13)
11:10:23     at throwUnexpectedToken (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2505:15)
11:10:23     at consumeSemicolon (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:2620:13)
11:10:23     at parseStatement (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:4816:9)
11:10:23     at parseStatementListItem (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:3989:16)
11:10:23     at parseFunctionSourceElements (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:4869:23)
11:10:23     at parseFunctionExpression (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:5074:16)
11:10:23     at parsePrimaryExpression (/home/jenkins/npm/lib/node_modules/istanbul/node_modules/esprima/esprima.js:3273:24)
11:10:23   lineNumber: 86,
11:10:23   description: 'Unexpected token =>',
11:10:23   index: 3092 }
11:10:24 Failed to parse file: /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Client.js
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/4644/;;;","08/Mar/19 3:25 AM;sambhavdutt;The latest end-2-end tests are failing with the same error.

*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/4682/;;;",,,,,,,,,,,,,,
Allow Buffer transaction function arguments,FABN-1166,38042,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,,bestbeforetoday,bestbeforetoday,28/Feb/19 12:18 AM,13/Jan/21 12:02 AM,28/Oct/23 3:25 AM,13/Jan/21 12:02 AM,,,,,,,,,,0,sdk-triaged,,,,,"As a user
I want to send Buffer arguments to transaction functions
So that arbitrary non-string data can be supplied to transaction functions

This also brings consistency with the behavior of the Java SDK, which allows either String or byte[] arguments.",,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:k",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,"30/Oct/19 12:34 AM;heatherp;Relatively easy to fix, just not currently our priority;;;",,,,,,,,,,,,,,,,
Change duplicate peer error to a warning,FABN-1167,38055,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Won't Do,harrisob@us.ibm.com,djlazz3,djlazz3,28/Feb/19 5:21 AM,30/Oct/19 8:42 AM,28/Oct/23 3:25 AM,30/Oct/19 8:42 AM,,,,,,,,,,0,sdk-triaged,,,,,"The Class “Chain.js” has the function “addPeer(peer)”.
As of now, “addPeer(peer)” throws an error if an attempt is made to add a duplicate peer.

Since this attempt does not actually append the duplicate peer, and does not impede execution of other code this error should be a warning ",,djlazz3,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-122,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00drz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),djlazz3,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"30/Oct/19 8:41 AM;harrisob@us.ibm.com;the application should understand that the action was unsuccessful, I think the throwing an error is proper. ;;;",,,,,,,,,,,,,,,,
Channel event hub shut down/disconnect.,FABN-1168,38085,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Test Error,denyeart,deepaksingh04,deepaksingh04,28/Feb/19 7:55 PM,24/May/19 12:58 AM,28/Oct/23 3:25 AM,24/May/19 12:58 AM,,,,,,,,,,0,fabric-node-sdk,,,,,"Problem is channel event hub goes down while instantiating wrong node chaincode. Channel event hub restarts itself after approx 60-90 seconds. So during this period peer do not serve any response and gives time out error.

When the event hub is down then even correct chaincode is also not instantiated. I have tried all the combinations -
 #  Node SDK 1.2 with fabric network 1.2
 #  Node SDK 1.3 with fabric network 1.3
 #  Node SDK 1.4 with fabric network 1.4

And I get the following errors:
{code:java}
error: [Peer.js]: sendProposal - timed out after:45000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
at Timeout._onTimeout (/home/deepak/fabric_test/node_modules/fabric-client/lib/Peer.js:94:20)
at ontimeout (timers.js:482:11)
at tryOnTimeout (timers.js:317:5)
at Timer.listOnTimeout (timers.js:277:5)
error: [Channel.js]: Failed Instantiated Chaincodes Query. Error: Error: REQUEST_TIMEOUT
at Timeout._onTimeout (/home/deepak/fabric_test/node_modules/fabric-client/lib/Peer.js:94:20)
at ontimeout (timers.js:482:11)
at tryOnTimeout (timers.js:317:5)
at Timer.listOnTimeout (timers.js:277:5)
Error: REQUEST_TIMEOUT\n at Timeout._onTimeout (/home/deepak/fabric_test/node_modules/fabric-client/lib/Peer.js:94:20)\n at ontimeout (timers.js:482:11)\n at tryOnTimeout (timers.js:317:5)\n at Timer.listOnTimeout (timers.js:277:5) {code}
 
{code:java}
Error: ChannelEventHub has been shutdown\n at ChannelEventHub.disconnect (/home/deepak/fabric_test/node_modules/fabric-client/lib/ChannelEventHub.js:444:21)\n at Timeout.setTimeout at ontimeout (timers.js:482:11)\n at tryOnTimeout (timers.js:317:5)\n at Timer.listOnTimeout (timers.js:277:5)
{code}
 ",,deepaksingh04,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00dxz:",,,,Unset,Unset,,,,,,,,,,,"1) Instantiate a wrong chaincode of a node on peer using nodejs sdk.
2) Now we'll get channel event hub has been shutdown/request timeout in response.
3) Just after receiving this response, instantiate a correct chaincode of node, in this case also we get channel event hub has been shutdown/ Request Timeout.
4) The problem is channel event hub restarts after 60-90 seconds and during this time peer does not send any response. I have tried to reconnect but it doesn't work. 
5) And If any other request comes while the channel event hub is down then the restart time keeps on increasing.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),deepaksingh04,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"09/Apr/19 9:24 PM;deepaksingh04;[~denyeart] is there any status update?;;;","24/May/19 12:58 AM;harrisob@us.ibm.com;I do not understand the issue and it since there has been no activity on this I am closing.;;;",,,,,,,,,,,,,,,
e2e Test certificates expired,FABN-1169,38133,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,nkl199,nkl199,nkl199,02/Mar/19 2:39 AM,20/Mar/19 6:10 AM,28/Oct/23 3:25 AM,08/Mar/19 10:37 PM,,,,,,,,,,0,,,,,,"Seem the e2e test certificates have expired, these need to be replaced to enable any code delivery as the build will fail every time otherwise.

Whilst there, it should be made possible to generate all certs required for tests using a script file, which can later be rolled into the test/build process so that this never occurs again.",,nkl199,,,,,,,,,,,,,,,,,FABN-1165,FABN-1172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00e7r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
private data collection node-sdk sample not working,FABN-1170,38158,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,kshitij.sinha,kshitij.sinha,04/Mar/19 3:14 PM,12/Jan/21 11:41 PM,28/Oct/23 3:25 AM,12/Jan/21 11:41 PM,,,,,,,,,,0,external,sdk-triaged,,,,"As per example in the document: [https://fabric-sdk-node.github.io/release-1.4/tutorial-private-data.html]

Reference Chaincode: [https://github.com/hyperledger/fabric-samples/tree/release-1.4/chaincode/marbles02_private]

The code in the document gives a {color:#de350b}bad proposal{color} response.

Here is the SDK log:
{quote}2019-03-01T06:16:20.039Z - debug: [client-utils.js]: buildChannelHeader - type 3 channel_id mychannel tx_id NaN epoch null chaincode_id marble
 2019-03-01T06:16:20.042Z - debug: [client-utils.js]: buildProposal - adding in transientMap
 Unknown macro: \{ marblename}
 2019-03-01T06:16:20.056Z - debug: [crypto_ecdsa_aes]: ecdsa signature: negative=0, words=[37122400, 56231231, 47016136, 30581968, 6785216, 45689559, 34947538, 54145038, 22507532, 3105674, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, negative=0, words=[9694465, 61460886, 60646008, 56278728, 16513404, 39877521, 55050391, 50393339, 39001155, 1960412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, recoveryParam=0
 2019-03-01T06:16:20.057Z - debug: [Remote.js]: getUrl::grpcs://somehost:7051
 2019-03-01T06:16:20.057Z - debug: [Peer.js]: sendProposal - Start ----org1-service-peer1 grpcs://somehost:7051
 2019-03-01T06:16:20.058Z - debug: [Remote.js]: getUrl::grpcs://somehost:7060
 2019-03-01T06:16:20.058Z - debug: [Peer.js]: sendProposal - Start ----org2-service-peer1 grpcs://somehost:7060
 2019-03-01T06:16:20.071Z - debug: [Remote.js]: Successfully connected to remote gRPC server
 2019-03-01T06:16:20.076Z - debug: [Remote.js]: Successfully connected to remote gRPC server
 *{color:#de350b}2019-03-01T06:16:20.095Z - debug: [Peer.js]: sendProposal - Received proposal response from peer ""grpcs://somehost:7060"": status - 500{color}*
 *{color:#de350b}2019-03-01T06:16:20.101Z - debug: [Peer.js]: sendProposal - Received proposal response from peer ""grpcs://somehost:7051"": status - 500{color}*
 2019-03-01T06:16:20.102Z - debug: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: marble must be a key in the transient map
 2019-03-01T06:16:20.102Z - debug: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: marble must be a key in the transient map
{quote}
As per the last error line in the log, even adding the following:
  
 var data = \{""marble"": transient_data}
 causes error of Illegal Buffer
  
 The chaincode expects _marble_ as a key in the json and the value to be a base64 encoding of the transient JSON
  
 *So, here is what worked:*
{code:java}
var transient_data = {
    'name': 'marble2', 
    'color': 'blue', 
    'size': 8, 
    'owner': 'Joe', 
    'price': 80 
};
var data = JSON.stringify(transient_data); // Convert transient data object to JSON string
data = new Buffer(data).toString('base64'); // convert the JSON string to base64 encoded string
var marble_private = { ""marble"": data };  //Add the encoded data as a value to the marble key expected by the marbles chaincode
const tx_id = client.newTransactionID();
tx_id_string = tx_id.getTransactionID();
var request = {
    chaincodeId: 'marble',
    txId: tx_id,
    fcn: 'initMarble',
    args: [], // all data is transient data
    transientMap: marble_private, // private data
};
{code}
 

After running this the transaction is committed {color:#00875a}successfully{color}.

 
|2019-03-01T06:40:12.711Z - debug: [crypto_ecdsa_aes]: ecdsa signature: negative=0, words=[42134526, 50606244, 23915505, 49316395, 9771392, 1077880, 37773943, 15416817, 13714539, 1796388, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, negative=0, words=[14715548, 18008218, 6840247, 23891351, 53988489, 46167869, 10562088, 43343042, 35793986, 62966, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, recoveryParam=1
 2019-03-01T06:40:12.712Z - debug: [Remote.js]: getUrl::grpcs://somehost:7051
 2019-03-01T06:40:12.712Z - debug: [Peer.js]: sendProposal - Start ----org1-service-peer1 grpcs://somehost:7051
 2019-03-01T06:40:12.713Z - debug: [Remote.js]: getUrl::grpcs://somehost:7060
 2019-03-01T06:40:12.713Z - debug: [Peer.js]: sendProposal - Start ----org2-service-peer1 grpcs://somehost:7060
 2019-03-01T06:40:12.726Z - debug: [Remote.js]: Successfully connected to remote gRPC server
 2019-03-01T06:40:12.731Z - debug: [Remote.js]: Successfully connected to remote gRPC server
 *{color:#00875a}2019-03-01T06:40:12.760Z - debug: [Peer.js]: sendProposal - Received proposal response from peer ""grpcs://somehost:7051"": status - 200{color}*
 *{color:#00875a}2019-03-01T06:40:12.770Z - debug: [Peer.js]: sendProposal - Received proposal response from peer ""grpcs://somehost:7060"": status - 200{color}*
 2019-03-01T06:40:12.770Z - debug: [client-utils.js]: sendPeersProposal - Promise is fulfilled: [object Object]
 2019-03-01T06:40:12.771Z - debug: [client-utils.js]: sendPeersProposal - Promise is fulfilled: [object Object]
{quote} {quote}|",,heatherp,kshitij.sinha,,,,,,,,,,,,,,,,FAB-14439,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:009",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,kshitij.sinha,,,,,,,,,,,,,,,,,,,,"30/Oct/19 12:52 AM;heatherp;Hi [~kshitij.sinha]I 'm working through the backlog with the maintainers - is this still something you're seeing?;;;",,,,,,,,,,,,,,,,
Handshake failed with fatal error SSL_ERROR_SSL - byfn tests broken,FABN-1171,38156,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Duplicate,,sambhavdutt,sambhavdutt,04/Mar/19 10:27 AM,19/Mar/19 8:12 PM,28/Oct/23 3:25 AM,12/Mar/19 2:16 AM,v1.2.0,v1.3.0,,,,,,,,0,ci-failure,,,,,"The BYFN node chaincode test has been failing consistently with handshake failed error and is not able to join the channel

*Consistent:* Yes
 *Branch:* master, release-1.4
 *Platform:* s390x, x86_64
 *Error Snippet:*
{code:java}
19:14:08 E0302 19:14:08.054923853   38156 ssl_transport_security.cc:1227] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
19:14:08 E0302 19:14:08.057237403   38156 ssl_transport_security.cc:1227] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
19:14:09 E0302 19:14:09.053967731   38156 ssl_transport_security.cc:1227] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
19:14:09 E0302 19:14:09.056347966   38156 ssl_transport_security.cc:1227] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
19:14:10 E0302 19:14:10.871349340   38156 ssl_transport_security.cc:1227] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
19:14:10 E0302 19:14:10.874177341   38156 ssl_transport_security.cc:1227] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
19:14:11 2019-03-03T00:14:11.051Z - [31merror[39m: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://localhost:7051
19:14:11 not ok 16  Failed to join channel
{code}
*Build Log*
 [https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-s390x/46/consoleFull]",,andrew-coleman,denyeart,harrisob@us.ibm.com,harsha544,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1172,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,97f5f2faf72738e19877d6985c812f6c714cd9c8,Unset,No,,,"1|i00ec7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,denyeart,harrisob@us.ibm.com,harsha544,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handshake failed with fatal error in the node e2e tests,FABN-1172,38194,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Not Supported,harrisob@us.ibm.com,sambhavdutt,sambhavdutt,05/Mar/19 1:00 PM,08/Apr/19 10:15 PM,28/Oct/23 3:25 AM,08/Apr/19 10:15 PM,v1.2.0,v1.3.0,,,,,,,,0,ci-failure,,,,,"In the node e2e tests, Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.


*Intermittent:* Yes
*Branch:* release-1.3, relaese-1.2, release-1.1
*Platform:* s390x, x86_64
*Error Snippet:*

{code:java}
22:20:27 E0302 03:20:27.032722417   19303 ssl_transport_security.cc:989] Handshake failed with fatal error SSL_ERROR_SSL: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed.
22:20:27 [31merror[39m: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: 14 UNAVAILABLE: Connect Failed
22:20:27     at new createStatusError (/w/workspace/fabric-end-2-end-daily-release-1.1-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/client.js:64:15)
22:20:27     at /w/workspace/fabric-end-2-end-daily-release-1.1-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/client.js:583:15
22:20:27 not ok 16  Failed to join channel
22:20:27   ---
22:20:27     operator: fail
22:20:27     at: e2eUtils.tlsEnroll.then.then.then.then.then.then (/w/workspace/fabric-end-2-end-daily-release-1.1-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/join-channel.js:162:6)
22:20:27     stack: |-
22:20:27       Error:  Failed to join channel
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.1-x86_64/8/consoleFull",,harrisob@us.ibm.com,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,FABN-1169,,,,,FABN-1171,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,43f430c,Unset,No,,,"1|i00ejz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,"18/Mar/19 11:24 PM;sambhavdutt;The Handshake errors have been observed for release 1.3, 1.2 and 1.1 in the latest builds.


*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.3-x86_64/13/;;;","05/Apr/19 11:29 PM;rameshthoomu;Not sure why this bug got closed without any resolution. We are still seeing nodesdk e2e tests are failing in 1.3, 1.2 and 1.1 branches with certificate expire error (Handshake failure). [~harrisob@us.ibm.com] is there any plan to update certs in these branches, if there is no plan, will disable these tests from e2e daily jobs.;;;","06/Apr/19 1:48 AM;harrisob@us.ibm.com;yes, lets disable them, we do not have any plans to update those releases;;;","08/Apr/19 10:14 PM;sambhavdutt;The e2e node jobs have been disabled in the tests for 1.1, 1.2 and 1.3 in the daily tests.;;;",,,,,,,,,,,,,
Package Readme files are out of date,FABN-1173,38306,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,nkl199,nkl199,09/Mar/19 1:07 AM,14/Mar/19 12:39 AM,28/Oct/23 3:25 AM,14/Mar/19 12:39 AM,,,,,,,,,,0,node-SDK,,,,,"Package readme files, as shown in npm are out of date and in some cases incomplete -these should be added/updated where appropriate",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00f7b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
KeyValue stores and cryptosuite do not follow interface,FABN-1174,38354,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,nkl199,nkl199,11/Mar/19 8:17 PM,12/Mar/19 9:01 PM,28/Oct/23 3:25 AM,12/Mar/19 9:01 PM,,,,,,,,,,0,,,,,,"There are issues with the current key-val store and cryptosuite implementation:
- Key value stores return a Promise in the constructor
- Cryptosuite implementations do not honour the interface for generateEphemeralKey, and overload the generateKey method instead

The former would benefit with an initialize method and the latter should be decomposed to honour the interface, with the `generateKey` calling `generateEphemeralKey` before persisting the result.",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1140,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00fhj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,"11/Mar/19 8:38 PM;nkl199;https://gerrit.hyperledger.org/r/#/c/29360/;;;",,,,,,,,,,,,,,,,
Move test temp folder,FABN-1175,38376,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,nkl199,nkl199,12/Mar/19 7:22 PM,12/Mar/19 9:01 PM,28/Oct/23 3:25 AM,12/Mar/19 9:01 PM,,,,,,,,,,0,,,,,,"Currently the test temp folder is in an os.tempdir. 

It would be much better to have this in a fixed directory under the test folder structure.",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00flz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Crypto generation in build fail on Mac,FABN-1176,38378,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,12/Mar/19 9:04 PM,13/Mar/19 2:26 AM,28/Oct/23 3:25 AM,13/Mar/19 2:26 AM,,,,,,,,,,0,,,,,,"The crypto material generations scripts recently added to the build use two commands not available on a Mac by default: wget and realpath.

Changes to the generation Bash scripts to use curl instead of wget, and Bash built-ins instead of realpath.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00fmf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Add gulp end-to-end test for fabric,FABN-1177,38397,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,13/Mar/19 5:34 AM,31/Mar/19 6:29 AM,28/Oct/23 3:25 AM,31/Mar/19 6:29 AM,v2.0.0,,,,,,,,,0,fabric-sdk-node,,,,,Add gulp end-to-end test and use this to verify fabric-sdk-node tests.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00fpr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sambhavdutt,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-sdk-node master branch is using 1.4 binaries,FABN-1178,38411,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,nkl199,rameshthoomu,rameshthoomu,13/Mar/19 12:57 PM,13/Mar/19 5:47 PM,28/Oct/23 3:25 AM,13/Mar/19 5:47 PM,,,,,,,,,,0,,,,,,"fabric-sdk-node master branch is using 1.4 binaries. It seems while generating the certs in fabric-sdk-node master branch, the script is using 1.4.0 binaries. See the below log

 
*00:16:03.067* [03:03:10] --2019-03-13 03:03:10--  
[https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/linux-amd64-1.4.0/hyperledger-fabric-linux-amd64-1.4.0.tar.gz]
*00:16:03.068* Finished 'clean-up' after 7.61 ms",,nkl199,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00fsv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,rameshthoomu,,,,,,,,,,,,,,,,,,,,"13/Mar/19 5:47 PM;nkl199;That is correct, and intentional. We needed certs to be generated automatically at a known (fixed) level, and 1.4 was chosen.;;;",,,,,,,,,,,,,,,,
Copy debug log in root directory instead of tmp. ,FABN-1179,38412,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,rameshthoomu,rameshthoomu,13/Mar/19 1:42 PM,13/Mar/19 9:49 PM,28/Oct/23 3:25 AM,13/Mar/19 9:49 PM,,,,,,,,,,0,,,,,,"If possible please generate the sdk-node debug log in the project root directory path. It's easy to capture the logs which are placed anywhere after workspace..

[https://github.com/hyperledger/fabric-sdk-node/blob/master/scripts/Jenkins_Scripts/CI_Script.sh#L31]",,nkl199,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ft3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,rameshthoomu,,,,,,,,,dev,main,,,,,,,,,true,"13/Mar/19 5:59 PM;nkl199;https://gerrit.hyperledger.org/r/#/c/30052/;;;",,,,,,,,,,,,,,,,
sdk-node readme,FABN-1180,38434,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,nkl199,nkl199,14/Mar/19 12:51 AM,25/Oct/19 12:04 AM,28/Oct/23 3:25 AM,25/Oct/19 12:04 AM,,,,,,,,,,1,,,,,,"The current SDK node readme needs to be reworked.

Currently the readme is somewhat confusing and difficult to follow. In particular:
- We have more packages than are declared here
- It is written from the perspective of someone who has the entire Hyperledger family under their GoPath ... this is not the case for a node developer, they will simply clone the repo and expect to get going
- Why should someone need to build their own images when they can pull them directly from nexus (this should be a provided script ... invoked by a npm task command)
- Not all the dependancies are versioned ... we should be explicit, for instance there is a breaking change from gulp version 3.9 to 4...and we rely on 3.9
- Why don't we provide a copy/paste snippet for each ""you need to install this"" item?
- How about a pre-reqs script perhaps? One that installs everything you need on a vanilla machine?
- Seems we are giving some love to windows developers, so they will probably want a ""gulp install-generate-certs-windows"" option
- We should be more explicit in detailing how to configure/run the tests, and we should not tell people how many tests there are... that's pointless and a maintenance nightmare
- The section titles ""Hyperledger Fabric Client objects"" ... what even is that there for?! The overview of packages is at the top, and each package has its own readme.
- What works with what? Version for fabric-x would be handy
",,davidkhala,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1249,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00fxz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,nkl199,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Integrate token.js with automated node.js SDK e2e tests,FABN-1181,38460,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,14/Mar/19 11:53 PM,20/Mar/19 3:54 AM,28/Oct/23 3:25 AM,20/Mar/19 3:54 AM,,,,,,,,,,0,,,,,,Make token.js self contained and add it to test.js,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00g2n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"20/Mar/19 12:40 AM;wenjian;CRs:

[https://gerrit.hyperledger.org/r/#/c/30227/]

[https://gerrit.hyperledger.org/r/#/c/30093/]

 ;;;",,,,,,,,,,,,,,,,
strategy success for transaction spams console,FABN-1182,38572,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,nkl199,nkl199,nkl199,19/Mar/19 11:42 PM,31/May/19 5:22 PM,28/Oct/23 3:25 AM,31/May/19 5:22 PM,,,,,,,,,,0,,,,,,"The trasaction event handler `_strategySuccess` method has an info level display of strategy success. This results in excessive printing to the console when in use and would be more suited as a debug level display item.

",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00gpz:",,,,Unset,Unset,,,,,,,,,,,Run a series of transactions in a loop.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,,,,,,,,,,,,"19/Mar/19 11:43 PM;nkl199;https://gerrit.hyperledger.org/r/#/c/30222/;;;",,,,,,,,,,,,,,,,
Update tests to use decimal string for quantity,FABN-1183,38612,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,wenjian,wenjian,wenjian,21/Mar/19 1:40 AM,04/Apr/19 8:14 AM,28/Oct/23 3:25 AM,04/Apr/19 8:14 AM,,,,,,,,,,0,fabtoken,,,,,"Fabtoken has been changed to accept and return quantity in decimal string. Note that token transaction still uses hex string format because it saves spaces.

 ",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00gyn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"04/Apr/19 8:14 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/30256/]

and [https://gerrit.hyperledger.org/r/#/c/30650/];;;",,,,,,,,,,,,,,,,
Create fabtoken sample application,FABN-1184,38663,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,wenjian,wenjian,wenjian,22/Mar/19 9:05 AM,12/Apr/19 12:45 AM,28/Oct/23 3:25 AM,09/Apr/19 11:28 PM,,,,,,v2.0.0,,,,0,fabtoken,,,,,,,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00h93:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,true,"04/Apr/19 8:15 AM;wenjian;CR: [https://gerrit.hyperledger.org/r/#/c/30650/];;;","10/Apr/19 3:34 AM;wenjian;CI scripts: [https://gerrit.hyperledger.org/r/#/c/30776/]

README.md update: [https://gerrit.hyperledger.org/r/#/c/30837/];;;",,,,,,,,,,,,,,,
"Programming model - Node.js SDK health check for GRPC, endpoint, remote and all depending object",FABN-1185,38668,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,davidkhala,davidkhala,22/Mar/19 4:14 PM,25/Oct/19 3:10 AM,28/Oct/23 3:25 AM,25/Oct/19 3:10 AM,v1.3.0,v1.4.0,,,,Future,v2.0.0,,,0,sdk-triaged,,,,,"per discussion in https://gerrit.hyperledger.org/r/#/c/28115/
We want use new design of grpc connection in all related services, including
- ChannelEventHub
- Peer
- Orderer
- others service beyond grpc client connection",,davidkhala,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,FABN-1064,,,,,,,,,,,,,,,,,,,,,,,,"existing check: client.waitForReady
there is also a light weight health check in official `grpc-node` repository.
https://github.com/grpc/grpc-node/tree/master/packages/grpc-health-check",Unset,Unset,Unset,ghx-label-4,,gRpcHealthz,To Do,No,,Unset,No,,,"1|i00ha7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,endpoint health check and connection establish,davidkhala,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"22/Jun/19 10:30 PM;harrisob@us.ibm.com;In the new NodeSDK 2.0 low-level I will be using the waitForReady to all GRPC service connections and will be adding a check connection and reconnect;;;","07/Aug/19 9:45 PM;harrisob@us.ibm.com;status: currently working on this as part of the refactoring of the low level Node SDK. The new low level SDK, which I am calling ""fabric-base"" for now, will have ""connect"", and ""checkConnection"" on all endpoint classes. The connect will reset the connection and the checkConnection will indicate to the application if the connection is up or not, with the Event Service connection it will also check the stream as this is  two connection.;;;","07/Aug/19 11:56 PM;davidkhala;Thanks for your update, Bret. Will that be an ""disconnect"" for each end-point also？

 

Beside, according to frequently feedback from developer community, error about duplicated disconnect attempt on channelEventHub ""has been shut down"" is confusing for developer, especially when they are not handling eventHub carefully. 

I think we could tolerate duplicated disconnect attempt via turning current ""has been shut down"" into an warn/error log notice instead of a critical stuff to stop application;;;","09/Aug/19 4:37 AM;harrisob@us.ibm.com;Yes, Peer, Orderer, and ChannelEventHub will all have a 'disconnect', in the case of ChannelEventHub, any currently registered event listeners will be notified (with an Error) that ChannelEventHub has been shutdown. 

Would you rather that we did nothing on the event listeners ?
Maybe the callback should receive a parameter that indicates that the ChannelEventHub has been shutdown ?;;;","10/Aug/19 11:21 PM;davidkhala;In my understanding, ChannelEventHub has 2 parameter for callback

Semantically the design is similar to 
`on('data', ()=>{})`
`on('error', ()=>{})`
ideally we could add one more parameter for close event handler callback 

then developer will be more clear. 

But for realistic, we could have work around first in your suggested way that passing another parameter to onError callback, indicating this error is just indicating a normal close event.



Or just keep it for now is OK;;;","14/Aug/19 1:43 AM;harrisob@us.ibm.com;being worked as part of the refactor of the low level NodeSDK. Will be included in the new package 'fabric-base'

https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32889;;;","14/Aug/19 2:32 PM;davidkhala;[~harrisob@us.ibm.com] Does it mean `fabric-client` will be deprecated in future? or exist in parallel as relatively high level sdk(but lower than `fabric-network`);;;","14/Aug/19 9:54 PM;harrisob@us.ibm.com;My plan is to leave fabric-client at v1.x with updates to support fabric v2, allowing users to migrate to the high level v2 and some may want to use the new fabric-base v2;;;","25/Oct/19 3:10 AM;harrisob@us.ibm.com;All `ServiceEndpoints` (the replacement for the old Remote.js class) have a `checkConection()` method to  allow the user see if the NodeSDK still has a connection to the endpoint.;;;",,,,,,,,
Update GRPC level in node sdk to match node chaincode,FABN-1186,38680,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,mbwhite,mbwhite,mbwhite,22/Mar/19 10:43 PM,27/Mar/19 5:07 PM,28/Oct/23 3:25 AM,27/Mar/19 5:07 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"Updating the GRPC level to 1.19.0

 ",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hcv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,dev,main,,,,,,,,,true,"22/Mar/19 10:46 PM;mbwhite;https://gerrit.hyperledger.org/r/30310;;;",,,,,,,,,,,,,,,,
Crash if CA returns empty result,FABN-1187,38406,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,mastersingh24,dhuseby,dhuseby,13/Mar/19 9:43 AM,02/Apr/19 9:07 AM,28/Oct/23 3:25 AM,23/Mar/19 5:09 AM,,,,,,v1.4.1,v2.0.0,,,0,,,,,,"If a CA server responds with an empty response during enrollment, an exception is thrown in the event emitter on {{end}}. This is an uncaughtException and causes the containing node process to exit.
h1. To replicate:

With the attached files, run:


{{npm install}}
{{ node badCa.js &}}
{{ node index.js}}


 This starts a simple malicious CA server that provides a response that triggers the exception. The {{index.js}} script tries 2 different scenarios:
 * 1. With a known bad URL, which throws an exception which can be caught by the client application
 * 2. With a malicious CA, which throws an exception which cannot be caught by the client application because of the EventEmitted behaviour in node.

{quote}From [https://nodejs.org/api/events.html#events_error_events|https://hackerone.com/redirect?signature=9cbc93a972a2b91893ce72a623eb289fcfca0a82&url=https%3A%2F%2Fnodejs.org%2Fapi%2Fevents.html%23events_error_events]
 If an EventEmitter does not have at least one listener registered for the 'error' event, and an 'error' event is emitted, the error is thrown, a stack trace is printed, and the Node.js process exits.
{quote}
h1. Fix

Replace [https://github.com/hyperledger/fabric-sdk-node/blob/c10865cfb20d063fdef4c7d96c25c1581f309e84/fabric-ca-client/lib/FabricCAClient.js#L457|https://hackerone.com/redirect?signature=6d9e7d47b53a5d730880eaf23ca3db3fb383ad22&url=https%3A%2F%2Fgithub.com%2Fhyperledger%2Ffabric-sdk-node%2Fblob%2Fc10865cfb20d063fdef4c7d96c25c1581f309e84%2Ffabric-ca-client%2Flib%2FFabricCAClient.js%23L457]
 {{util.format('Enrollment failed with HTTP status code', JSON.parse(data).statusCode)));}}
 with 
 {{util.format('Enrollment failed with HTTP status code', response.statusCode)));}}

The same issue is present at [https://github.com/hyperledger/fabric-sdk-node/blob/0d24cec10f7a3e0153fcf3f0158a89c5eaa0cfab/fabric-ca-client/lib/FabricCAClient.js#L318|https://hackerone.com/redirect?signature=21593c15b0f8996bd4822be3a7e70f65bbb358a8&url=https%3A%2F%2Fgithub.com%2Fhyperledger%2Ffabric-sdk-node%2Fblob%2F0d24cec10f7a3e0153fcf3f0158a89c5eaa0cfab%2Ffabric-ca-client%2Flib%2FFabricCAClient.js%23L318]
h2. Impact

This attack allows an attacker to cause any node client application using the fabric-ca-node SDK to exit. In scenarios where the SDK is used in a server-side application, this will have the effect of denying the use of that server to other users.

*Attachments:*
 * [^index.js]
 * [^badCa.js]
 * [^package.json]",,dhuseby,mastersingh24,,,,,,,,,,,,,,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13/Mar/19 9:38 AM;dhuseby;badCa.js;https://jira.hyperledger.org/secure/attachment/16919/badCa.js","13/Mar/19 9:38 AM;dhuseby;index.js;https://jira.hyperledger.org/secure/attachment/16921/index.js","13/Mar/19 9:40 AM;dhuseby;package.json;https://jira.hyperledger.org/secure/attachment/16920/package.json",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00frr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dhuseby,mastersingh24,,,,,,,,,dev,main,,,,,,,,,true,"22/Mar/19 11:38 PM;mastersingh24;https://gerrit.hyperledger.org/r/30313
https://gerrit.hyperledger.org/r/30315;;;","02/Apr/19 9:07 AM;dhuseby;[~mastersingh24] this bug was reported through the bug bounty. What severity do you think this is so that I can assign the proper bounty.;;;",,,,,,,,,,,,,,,
Update thirdparty version to 0.4.15,FABN-1188,38693,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,23/Mar/19 4:58 AM,26/Mar/19 3:09 AM,28/Oct/23 3:25 AM,23/Mar/19 7:07 AM,v1.4.1,v2.0.0,,,,,,,,0,,,,,,Update the testFabricThirdParty version to 0.4.15 accordingly to the latest update,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hfb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sambhavdutt,,,,,,,,,dev,main,,,,,,,,,true,"23/Mar/19 7:07 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/30336/;;;",,,,,,,,,,,,,,,,
sdk-node build process needs to be changed in release branches,FABN-1189,38722,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,26/Mar/19 4:21 AM,14/Aug/19 5:56 AM,28/Oct/23 3:25 AM,14/Aug/19 5:56 AM,v2.0.0,,,,,,,,,0,,,,,,"As per the existing logic is written in gulp file to pull the docker images in the release branches is hardcoded to docker image versions. In result, this is not helping us to test the latest changes of fabric release branches with sdk-node release branch changes.

The build process should provide flexibility to test the sdk-node changes on the latest fabric, fabric-ca changes. The logic in the below test.js file needs to be changed.

https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/build/tasks/test.js#L42-L43",,harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hl3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,,,,,,,,,,,,,,,,,,,,"26/Mar/19 5:48 AM;harrisob@us.ibm.com;What if we also checked an environment variable that would override the release and thirdparty settings of the package.json ? The script that calls the 'gulp test' would have to  'export `FABRIC_SDK_RELEASE=latest` and `FABRIC_SDK_THIRDPARTY=latest`;;;","14/Aug/19 5:56 AM;harrisob@us.ibm.com;Do we still need to do this ?;;;",,,,,,,,,,,,,,,
update js-yaml to fix npm vulnerability,FABN-1190,38740,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkhala,davidkhala,davidkhala,26/Mar/19 7:15 PM,31/May/19 5:16 PM,28/Oct/23 3:25 AM,31/May/19 5:16 PM,v1.4.0,,,,,,,,,0,,,,,,"┌───────────────┬──────────────────────────────────────────────────────────────┐
│ Moderate      │ Denial of Service                                            │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ fabric-client                                                │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ fabric-client > js-yaml                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://nodesecurity.io/advisories/788                       │
└───────────────┴──────────────────────────────────────────────────────────────┘
",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hp3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,main,,,,,,,,,true,"27/Mar/19 2:28 PM;davidkhala;https://gerrit.hyperledger.org/r/#/c/30449/;;;",,,,,,,,,,,,,,,,
gulp tests are failing as the default timeout is exceeding in the tests,FABN-1191,38743,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,sambhavdutt,sambhavdutt,26/Mar/19 10:05 PM,11/Apr/19 3:17 AM,28/Oct/23 3:25 AM,11/Apr/19 3:17 AM,v1.4.1,v2.0.0,,,,,,,,0,ci-blocker,,,,,"The gulp tests are failing with the timeout error, the default gulp test timeout is exceeding in the tests.

 

*Branch:* master, release-1.4

*Platform:* s390x, x86_64

*Error Snippet:*

{code:java}
09:10:51 2019-03-26T13:10:43.069Z - error: [Peer.js]: sendProposal - timed out after:120000
09:10:51 2019-03-26T13:10:43.071Z - error: [Channel.js]: sendTransaction - no valid endorsements found
09:10:51 Failed to perform instantiate instantiation on chaincode with ID [marbles]
09:10:51 (node:2634) UnhandledPromiseRejectionWarning: instantiate proposal was bad: {""message"":""REQUEST_TIMEOUT"",""stack"":""Error: REQUEST_TIMEOUT\n    at Timeout.setTimeout (/w/workspace/fabric-sdk-node-merge-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Peer.js:120:19)\n    at ontimeout (timers.js:498:11)\n    at tryOnTimeout (timers.js:323:5)\n    at Timer.listOnTimeout (timers.js:290:5)""}
{code}

*Build Log*
https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-s390x/283/consoleFull

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-verify-x86_64/2345/consoleFull",,andrew-coleman,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1366,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,2b7a4023bdcbb7e49d950835ef0f184053dc9000,Unset,No,,,"1|i00hpj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,"27/Mar/19 10:43 PM;sambhavdutt;This fail is observed again in the daily end-to-end gulp tests in v1.4,

*SDK-Node commit:* f23244a

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.4-x86_64/43/consoleFull;;;","11/Apr/19 3:17 AM;sambhavdutt;The current gulp tests are working as expected;;;",,,,,,,,,,,,,,,
Update fabric-sdk-node CI documentation,FABN-1192,38773,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Mar/19 2:04 AM,27/Mar/19 5:20 AM,28/Oct/23 3:25 AM,27/Mar/19 5:20 AM,,,,,,,,,,0,,,,,,Fix minor issues in the fabric-sdk-node CI documentation. ,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hw7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,,,,,,,,,,,,"27/Mar/19 5:20 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/30435/
https://gerrit.hyperledger.org/r/#/c/30432/;;;",,,,,,,,,,,,,,,,
fix CI script issues,FABN-1193,38784,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,27/Mar/19 4:33 AM,27/Mar/19 5:19 AM,28/Oct/23 3:25 AM,27/Mar/19 5:19 AM,,,,,,,,,,0,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00hy7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,,dev,main,,,,,,,,,true,"27/Mar/19 5:19 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/30432/
https://gerrit.hyperledger.org/r/#/c/30435/;;;",,,,,,,,,,,,,,,,
Connection options (grpc) are completely ignored by Discover peers,FABN-1194,38848,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,LeoLe,LeoLe,LeoLe,29/Mar/19 6:57 PM,24/May/19 1:39 AM,28/Oct/23 3:25 AM,24/May/19 1:39 AM,v1.4.0,v2.0.0,,,,,,,,0,,,,,,"When building discover peers the Channel.js provides new fresh connection options skipping any client or default connection options.

Thus there is no way to configure connection options (such as keep-alive, timeouts, etc) for discovery peers. 

Then if the connection is broken (e.g. for Azure's it's necessary to have keep-alive pings as the load balancer has 4 min connection timeout) discovering stops working.

 ",,harrisob@us.ibm.com,LeoLe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ibj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,LeoLe,,,,,,,,,dev,main,,,,,,,,,true,"24/May/19 1:02 AM;harrisob@us.ibm.com;Are you working on this ?;;;",,,,,,,,,,,,,,,,
update chaincode event doc to include discussion on filtered events,FABN-1195,38911,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,02/Apr/19 12:24 AM,24/May/19 3:22 AM,28/Oct/23 3:25 AM,24/May/19 3:22 AM,,,,,,v1.4.1,v2.0.0,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00iof:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As an application client, I want to resubmit my transaction to ordering if a commit event has not been seen in a configurable number of seconds.",FABN-1196,39033,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,denyeart,denyeart,04/Apr/19 12:05 AM,30/Oct/19 12:50 AM,28/Oct/23 3:25 AM,30/Oct/19 12:50 AM,,,,,,v2.0.0,,,,0,,,,,,"After submitting an endorsed transaction to ordering, application clients need to wait for a commit event to ensure the transaction been validated and committed on the ledger.

This is particularly important with new ordering services (Raft and future BFT), since in crash or byzantine scenarios, the ordering service may not include the transaction in a block, even after replying to the submitting client with an acknowledgement. In these cases the application will not receive a commit event within the timeout window (or ever), and the application may want to retry the submission to ordering service. Typically the same endorsed transaction can be resubmitted, rather than re-gathering endorsements (if the tran ultimately gets invalidated due to MVCC, new endorsements are required regardless). After re-submission, the application client will want to wait for the timeout window again, in hopes that one of the submitted transactions get committed. In some cases the first transaction may have been dropped and the second submitted transaction gets ordered, validated, and committed; in other cases the first transaction may have simply been delayed and both transactions get committed (the one that gets ordered first will be validated, the latter will get invalidated).

We need to decide how much the application should control these retries, or whether the high level programming model should provide some handling. *For example is it possible for application to resubmit the same exact transaction again to the programming model, in which case they should listen for events with this txid, or must they submit a new transaction with a new txid, in which case they should listen for both txids?*

Regardless the options and guidance needs to be very clear in the programming model APIs and documentation.

Note that we added text to several doc topics already, for example in:

[https://hyperledger-fabric.readthedocs.io/en/release-1.4/developapps/application.html#process-response]

it says:
{code:java}
Note that the submitTransaction API includes a process for listening for transaction commits. Listening for commits is required because without it, you will not know whether your transaction has successfully been orderered, validated, and committed to the ledger.
{code}
These doc suggestions should be clarified once we decide whether to bake any support into high level programming model.  Actually I see a typo ""orderered"" should be ""ordered"" :)

 ",,andrew-coleman,davidkhala,denyeart,harrisob@us.ibm.com,heatherp,silliman,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jdr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkhala,denyeart,harrisob@us.ibm.com,heatherp,silliman,yuki-kon,,,,,,,,,,,,,,,"04/Apr/19 2:58 AM;harrisob@us.ibm.com;This sounds like something the a programming model should provide, however it does sound rather hard to implement. There would have to be an investigation after the timeout (did  the Orderer go down, did the Peer go down, has the transaction been committed, .... ) then retry accordingly.;;;","05/Apr/19 9:48 AM;davidkhala;So instead of previous mechanism that transaction is included in block while marked as invalid, new raft will basically has no clue for it?;;;","05/Apr/19 9:55 AM;davidkhala;I think the retry mechanism could be included in fabric-network or programming model level, for advanced developer, they could decide in their way with help of fabric-client module only. 
Then more flexible. ;;;","30/Oct/19 12:50 AM;heatherp;Hi Dave - it's unlikely this is going to be something we tackle soon - can you re-open this if you want it to stay on the backlog? Where did the requirement come from? Thanks;;;",,,,,,,,,,,,,
Update token e2e tests for transfer,FABN-1197,39062,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,04/Apr/19 11:43 PM,06/Apr/19 12:25 AM,28/Oct/23 3:25 AM,06/Apr/19 12:20 AM,,,,,,v2.0.0,,,,0,,,,,,"Update e2e tests because token has been updated

to allow transfer with remaining balance.",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jk7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"06/Apr/19 12:20 AM;wenjian;[https://gerrit.hyperledger.org/r/#/c/30734/];;;",,,,,,,,,,,,,,,,
Sync Node lifecycle and fabric terminology.,FABN-1198,39106,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,negupta,negupta,negupta,06/Apr/19 12:15 AM,13/Apr/19 12:08 AM,28/Oct/23 3:25 AM,13/Apr/19 12:08 AM,,,,,,,,,,0,,,,,,Ensure that node SDK tutorial is aligned with terms and documentation in the Fabric documentation.,,negupta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jtb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),negupta,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Simplify token owner input parameter,FABN-1199,39108,36648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,wenjian,wenjian,wenjian,06/Apr/19 12:22 AM,08/Feb/22 8:26 PM,28/Oct/23 3:25 AM,12/Apr/19 1:30 AM,,,,,,v2.0.0,,,,0,fabtoken,,,,,"Simplify token owner to be a flat field for better usability.

In the future, if new owner type is supported, we can add another field ownerType.",,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00jtj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),wenjian,,,,,,,,,,dev,main,,,,,,,,,true,"06/Apr/19 12:27 AM;wenjian;[https://gerrit.hyperledger.org/r/#/c/30771/];;;",,,,,,,,,,,,,,,,
Provider the asynchorized method for signing the proposal. ,FABN-1200,39134,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,fifahuihua,fifahuihua,fifahuihua,08/Apr/19 2:44 PM,30/Oct/19 8:40 AM,28/Oct/23 3:25 AM,30/Oct/19 8:40 AM,,,,,,,,,,0,sdk-triaged,,,,,"Now, the method of signing proposal is synchronized, it will not work if we use third platform to sign (For example, using microsoft azure to sign proposal). So we need to provide an asynchorized method to sign the proposal for signature intergration with third platform.

 ",,davidkhala,fifahuihua,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i00jz3:",,,,Yes,Unset,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,fifahuihua,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,"08/Apr/19 7:33 PM;davidkhala;For any third party signing, please refer and make use of 'offline client side signing' features with design documented in https://docs.google.com/document/d/1gj5XB7yS-pfjpvZEUQh5lBGSIE6aQemu8A69tAYQtTc

The implement is available from fabric-sdk-node release-1.3 and on. 
;;;","10/Apr/19 9:55 AM;fifahuihua;hi, [~davidkhala] I reviewed the design document attached by you. And I found that this design can't match my requirement, because we can't get the certification from third signature platform, we just send the content to be signed by signature server, can't get the content of keys and certification. So we have to continue follow this issue. Thanks.;;;","10/Apr/19 10:32 AM;davidkhala;if certificate not provided there is no way any software can verify your signature. And it is not your requirement scope. it means even we provide async signature function, you can not go through transaction flow;;;","11/Apr/19 12:27 PM;fifahuihua;The certification issued by CA server, we saved it into local db, and can get it.  

Sorry, it seems that I misunderstand the method
const \{ proposal, txId } = channel.generateUnsignedProposal(transactionProposalReq, mspId, certPem);
For this code line, the certPem should be CA issued certification, not the certification of third signature platform.;;;","11/Apr/19 5:53 PM;davidkhala;[~fifahuihua] yes, this is the certificate issued to a fabric user, not the ca root cert , of course;;;","23/May/19 6:41 AM;harrisob@us.ibm.com;I see that you are assigned this issue, are you planning to work on it ?;;;","30/Oct/19 8:40 AM;harrisob@us.ibm.com;external signing is now built in to the new low level of 2.0 see fabric-common, soon to be fabric-base;;;",,,,,,,,,,
timeOutTest error observed consistently while running run-tape-e2e in node sdk.,FABN-1201,39184,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,vijaypunugubati,vijaypunugubati,10/Apr/19 6:39 AM,12/Apr/19 4:32 AM,28/Oct/23 3:25 AM,12/Apr/19 4:32 AM,v2.0.0,,,,,v1.4.1,v2.0.0,,,0,ci-blocker,,,,,"timeOutTest error in FabricCAServices: Test enroll() With Dynamic CSR while running run-tape-e2e in node sdk consistently.
{code:java}
/00:13:01.560 not ok 93 should throw error after SO_TIMEOUT
00:13:01.561   ---
00:13:01.561     operator: equal
00:13:01.561     expected: 'Calling /aMethod endpoint failed, READ Timeout'
00:13:01.566     actual:   'Calling /aMethod endpoint failed, CONNECTION Timeout'
00:13:01.566     at: timeOutTest (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:529:5)
00:13:01.566     stack: |-
00:13:01.567       Error: should throw error after SO_TIMEOUT
00:13:01.567           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:226:54)
00:13:01.567           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:13:01.568           at Test.equal (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:386:10)
00:13:01.568           at Test.bound [as equal] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:13:01.568           at timeOutTest (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:529:5)
00:13:01.568           at process._tickCallback (internal/process/next_tick.js:68:7)/ code placeholder
{code}
Build log:

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/5158/consoleFull",,harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00k87:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,rameshthoomu,vijaypunugubati,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"fabcar fails with ""Failed to enroll admin: Error: Cannot find module 'elliptic' """,FABN-1202,39186,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,denyeart,denyeart,10/Apr/19 11:39 AM,10/Apr/19 1:54 PM,28/Oct/23 3:25 AM,10/Apr/19 1:54 PM,v2.0.0,,,,,,,,,0,,,,,,"In latest fabric-samples fabcar.
{code:java}
npm install{code}
then
{code:java}
node enrollAdmin.js{code}
resulted in
{code:java}
Failed to enroll admin: Error: Cannot find module 'elliptic'{code}
 
{code:java}
npm install elliptic{code}
fixes it",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00k8n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,dev,main,,,,,,,,,true,"10/Apr/19 1:54 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/30852/;;;",,,,,,,,,,,,,,,,
[fabric-network] Missing documentation around the event handling capability,FABN-1203,39193,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,davidkel,davidkel,10/Apr/19 9:37 PM,03/Jul/19 5:46 PM,28/Oct/23 3:25 AM,03/Jul/19 5:46 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"Noticed various issues and areas where more doc would be useful around the reference documentation published on https://fabric-sdk-node.github.io
Here is a list of what I have found so far.

1. Classes BaseCheckpointer and BaseWallet aren't prefixed with fabric-network in the classes pulldown
2. should fabric-network.RoundRobinEventHubSelectionStrategy be published in the API ? 
3. should AbstractEventHubSelection be called BaseEventHubSelection to be consistent (probably too late now to change for 1.4)
4. Contract.addContractListener parameters do not match the signature of the api. Also it returns a CommitEventListener which isn't what I would expect to be returned from this api but also CommitEventListener is not documented anywhere. No documentation about the available options in the options object that are available. No information about the meaning or requirements of what the listenerName is
5. Network.addBlockListener, no documentation about the available options, No information about the meaning of listenerName, no documented return value
6. Network.addCommitListener, same as addBlockListener plus why would an end user ever want to override the eventhub and what does that actually mean ?
7. Transaction.addCommitListener has similar issues to the above

",,14gracel,davidkel,florianc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00k9j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,florianc,,,,,,,,dev,main,,,,,,,,,true,"30/Apr/19 9:59 PM;florianc;Random dev here: I completely agree. I am currently stuck because the addContractListener doc says I am able to specify a startBlock/endBlock in options. Tried, does not work (with startBlock). Same for ""filtered"", if I had not seen it on stackoverflow and in another Jira issue, I would not have known fast how ""unfilter"" events. To be honest, the outdated (or missing) documentation is a very (very) big problem from my dev point of view.;;;","21/Jun/19 6:57 PM;14gracel;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32017;;;",,,,,,,,,,,,,,,
[fabric-network] When connecting a chaincode listener 1 or more chaincode events can be received before the application submits a transaction when not using replay,FABN-1204,39194,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,14gracel,davidkel,davidkel,10/Apr/19 9:43 PM,03/Jul/19 5:48 PM,28/Oct/23 3:25 AM,03/Jul/19 5:48 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"If the latest block when a listener is connected has 1 or more transactions in it that emits chaincode events then these chaincode events are emitted which is not expected.

Consider an application that is only interested in events from transactions it sends while it is up. The application starts but is user driven as to when transactions are submitted but as soon as it connects it receives events from previous transactions it's not interested in or may have even processed previously.

I suspect this issue will also apply to the block listener as well.

For listeners that don't use replay the listener should be attached after the eventhub has been connected.",,14gracel,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00k9r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,"24/May/19 2:14 AM;harrisob@us.ibm.com;The fabric-network should do the connect before the register when working with chaincode events that are expected from the current transaction. Keep in mind that the doing a connect to the peer's event service will immediately send the latest block. When the connect is done after the registration of the chaincode event and the latest block has chaincode event that matches the one just registered the callback will be notified even though the current transaction has not been commit yet.;;;","03/Jul/19 5:48 PM;14gracel;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32017;;;",,,,,,,,,,,,,,,
[fabric-network] Chaincode events do not contain the event data set by chaincode,FABN-1205,39195,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,14gracel,davidkel,davidkel,10/Apr/19 9:49 PM,24/May/19 5:25 PM,28/Oct/23 3:25 AM,24/May/19 5:25 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"The problem here is that the default for chaincode event listeners is to connect and receive filtered blocks. There is no documentation or guidance about how to receive full blocks. Handling filtered chaincode events is going to be a niche use (or not used at all) and that the common use case is to use full blocks. 

Ideally the default for chaincode (and possibly block) events should be to use full blocks and use an option to disable rather than having to specify an undocumented option to set filtered to false.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00k9z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[fabric-network] Unable to submit a transaction if I register for chaincode events with filtered set to false,FABN-1206,39197,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,14gracel,davidkel,davidkel,10/Apr/19 9:57 PM,01/May/19 4:58 PM,28/Oct/23 3:25 AM,18/Apr/19 7:31 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"I have a simple program of which a snippet is shown here

{code:java}
    // create the gateway
    const gateway = new Gateway();

	try {
		await gateway.connect(ccp, {
            wallet: inMemoryWallet,
            identity: userNameWalletLabel,
            discovery: {enabled: false}
		});

        const network = await gateway.getNetwork(channel);
        const contract = network.getContract(contractName);

        // invoke a transaction that emits an event
        const namespace = 'org.example.trading';

        const trade = {
            commodityId: 'C1',
            newOwnerId: 'T2'
        }

        // contrived way to wait until the event has been received.
        let eventReceived, eventError;
        let eventPromise = new Promise((resolve, reject) => {
            eventReceived = resolve;
            eventError = reject;
        })
        //await contract.submitTransaction('tradeCommodity', JSON.stringify(trade));

        // register a listener
        contract.addContractListener('some-useless-string', 'trade-network',
            (err, event, blkNum, txid, status) => {
                console.log('event received', status, event, blkNum, txid);
           },
           {filtered: false}
        );

        // send transaction
        try {
            await contract.submitTransaction('tradeCommodity', JSON.stringify(trade));
            // wait forever
            await eventPromise;

            console.log('------- TX ACTIONS END --------\n\n\n')
        } catch(err) {
            console.log(err);
        } finally {

        }

	} catch(error) {
		console.log(error);
	} finally {
        gateway.disconnect();
		//process.exit(0);  // needed because using HSM causes app to hang at the end.
	}
{code}

If I create a gateway and connect and then register to listen for chaincode events turning off filtering (so I can actually get the event data) then when the submitTransaction is called I get the error


{noformat}
(node:11393) UnhandledPromiseRejectionWarning: Error: Cannot use a fixed event hub without setting an event hub 11cae5a84469e63790e2a9b06f2286de99a9c12cc90272fa5e3b346def7733ff0.7021344370624867
    at CommitEventListener._registerWithNewEventHub (/home/dave/code/bnaport/trade-network/native/client-new-js/node_modules/fabric-network/lib/impl/event/commiteventlistener.js:91:10)
    at CommitEventListener.register (/home/dave/code/bnaport/trade-network/native/client-new-js/node_modules/fabric-network/lib/impl/event/commiteventlistener.js:38:22)
    at <anonymous>
(node:11393) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
(node:11393) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
{noformat}

If I remove the option to turn filtering off, then the problem doesn't occur
If I submit a transaction before I set up the listener then the problem doesn't occur (but this would not be a common scenario, the common scenario would be to setup the listener first before sending a transaction)

",,andrew-coleman,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ka7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,,,,,,,,,dev,main,,,,,,,,,true,"18/Apr/19 7:29 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/30998/];;;",,,,,,,,,,,,,,,,
"Unable to stop chaincode event listener when providing startBlock, endBlock and disconnect options",FABN-1207,39229,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,florianc,florianc,11/Apr/19 11:16 PM,21/May/19 9:25 PM,28/Oct/23 3:25 AM,21/May/19 9:25 PM,,,,,,,,,,0,help-wanted,node-SDK,,,,"Issue created as advised [in rocket.chat|https://chat.hyperledger.org/channel/fabric-sdk-node?msg=jKoGSirzQKkrkXXx4]

As a reference, [here is the link to registerChaincodeEvent.|https://fabric-sdk-node.github.io/release-1.4/ChannelEventHub.html#registerChaincodeEvent__anchor]

 SDK 1.4.0

As per the documentation (see above), for the function registerChaincodeEvent, setting the endBlock option automatically sets the disconnect options to true.

However, this causes the listener (or something else) to crash after receiving the first event.

To counter this problem, I explicitly set the disconnect option to false. But this causes the listener to not stop (which seems logical).

 

So my question is: How can I stop the listener when setting the endBlock option? Checking for the number of the block containing the current received event is not an option, as there may not be an event in the block with the same number as the endBlock options value.

 

The following code causes the listener to never stop:

 
{code:java}
async function subscribeToEvent(peer, channel, chaincodeName, eventName, startBlock, endBlock, eventCallback) {
 let eventHub = channel.newChannelEventHub(peer);
event = eventHub.registerChaincodeEvent(chaincodeName, eventName, (event, blockNumber, txid, status) => {
 var eventData = {
 payload: event.payload.toString('utf8'),
 blockNumber: blockNumber,
 txid: txid,
 status: status
 };
 eventCallback(eventData);
 }, (error) => {
 console.log(error);
 throw new Error(error);
 }, {
 startBlock: startBlock,
 endBlock: endBlock,
 disconnect: false
 });
 eventHub.connect(true);
}
{code}
 

 

The following code crashes the listener:

 
{code:java}
async function subscribeToEvent(peer, channel, chaincodeName, eventName, startBlock, endBlock, eventCallback) {
 let eventHub = channel.newChannelEventHub(peer);
event = eventHub.registerChaincodeEvent(chaincodeName, eventName, (event, blockNumber, txid, status) => {
 var eventData = {
 payload: event.payload.toString('utf8'),
 blockNumber: blockNumber,
 txid: txid,
 status: status
 };
 eventCallback(eventData);
 }, (error) => {
 console.log(error);
 throw new Error(error);
 }, {
 startBlock: startBlock,
 endBlock: endBlock/*,
 disconnect: false*/
 });
 eventHub.connect(true);
}
{code}
 

 

Error:
{noformat}
λ node basic-event-listener.js
We do something with the event--------
{ payload:
 '{""identityId"":""XXX"",""providerId"":""XXX""}',
 blockNumber: '11',
 txid:
 '1b8fc894c4463bbd443fb9b1fa06904c355515516259aa867d2c8e087e069f4c',
 status: 'VALID' }
Error: Shutdown due to disconnect on transaction id registration
 at cbtable.forEach (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1564:23)
 at Set.forEach (<anonymous>)
 at ChannelEventHub._callChaincodeListener (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1549:11)
 at ChannelEventHub._processChaincodeEvents (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1519:14)
 at ClientDuplexStream._stream.on (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:515:11)
 at ClientDuplexStream.emit (events.js:189:13)
 at addChunk (_stream_readable.js:284:12)
 at readableAddChunk (_stream_readable.js:265:11)
 at ClientDuplexStream.Readable.push (_stream_readable.js:220:10)
 at Object.onReceiveMessage (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\grpc\src\client_interceptors.js:1292:19)
2019-04-11T14:12:32.856Z - warn: [ChannelEventHub.js]: Error notifacation callback failed message=Error: Shutdown due to disconnect on transaction id registration, stack=Error: Error: Shutdown due to disconnect on transaction id registration
 at EventRegistration.eventHub.registerChaincodeEvent [as _onErrorFn] (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\basic-event-listener.js:107:15)
 at EventRegistration.onError (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1709:9)
 at cbtable.forEach (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:879:30)
 at Set.forEach (<anonymous>)
 at cc_closer (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:876:12)
 at Array.forEach (<anonymous>)
 at ChannelEventHub._closeAllCallbacks (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:885:43)
 at ChannelEventHub._disconnect (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:625:8)
 at cbtable.forEach (C:\Users\FlorianCastelain\Documents\GitHub\node-red-contrib-fabric\no-node\node_modules\fabric-client\lib\ChannelEventHub.js:1564:11)
 at Set.forEach (<anonymous>){noformat}",,florianc,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00kfr:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),florianc,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"16/Apr/19 12:59 AM;harrisob@us.ibm.com;Would you provide a trace log.
export HFC_LOGGING='{""debug"":""console""}'

Are you saying that the listener was not stopped even though the end block was received ?;;;","16/Apr/19 1:01 AM;harrisob@us.ibm.com;Yes you have found a bug with the registration if you set an end block and do not set the disconnect, you automatically get the disconnect after the event, this will be corrected.
 ;;;","16/Apr/19 4:04 PM;florianc;Ok. Do you still need the trace log?;;;","17/Apr/19 3:43 AM;harrisob@us.ibm.com;No, I think I see the problems, thanks;;;","29/Apr/19 3:56 PM;florianc;Hi again. I've been through this again and I have a question regarding the way this option works:
Currently, if I set the ``disconnect`` option to true, the listener is disconnected when the very first event is seen, even with an ``endBlock`` set. 
This is not really what a developer (at least me) would expect when setting ``disconnect`` and ``endBlock``. 
As an example, if I want to get all event matching a name or regex on an interval of blocks, in the current state I will only get the very first one and not all of them.

The same applies for the ``unregister`` option. In the current state, if I set ``unregister`` to true with an ``endBlock``, I will only get the first event and not all the next ones.

Is this the expected behaviour?;;;","30/Apr/19 1:13 AM;harrisob@us.ibm.com;Yes that is how it was designed to work ... the unregister and disconnect options when specified will occur after the event listener is triggered, when specified and the endBlock is also specified they will also control the action when the endBlock is seen and also control the action when an event is seen. I understand your confusion, I have to look at the code to see how it works also. These options were put in to help the applications, such that the application did not have to worry about doing the unregisters and/or disconnects if they wished to just see the one event. I tried to not add too many options, like maybe I should I add `unregister_on_getting_event` and 'unregister_when_endblock_seen` and so on.

I think for 2.0 I will remove all these confusing settings and have the applications take full control and not provide automatic and default behaviors.

thanks for feedback;;;","30/Apr/19 3:55 PM;florianc;Well, I think removing it completely is not the best solution, as it would have been a very nice ""functionality"" from my developer point of view.

 

Instead of removing it, here is the beginning of a possible solution:

Before going through, here is one assumption/expectation I consider true: When I specify an interval of block, the SDK should not consider I am looking for only one event, but for all the events within this range matching the given regex/name.

Considered as ""interval"": [oldest, newest] , [x, newest] , [oldest, y]

Why: I don't think the SDK should ""make assumption"" on anything on behalf of the developer. If the developer asks the SDK to return events of a specific name within a range of blocks, the SDK should return all the matching elements, not only one, not only x of them. (Although this could be answered in another way, check at the end of this comment). The developer should handle by himself the results and filter them if required.

You keep the discover and unregister options, but you change a bit how it works depending on the endBlock and startBlock property.

 
----
 

Case 1:
 * startBlock = undefined
 * endBlock = undefined
 * discover/unregister = undefined

=> Basic behaviour, listen for all events from block 0 to newest block. discover/unregister set by default to false. Never stops by itself

 
----
 

Case 2:
 * startBlock = x
 * endBlock = undefined
 * discover/unregister = undefined

=> Same as current behaviour: listen for all events from block x to newest block. discover/unregister set by default to false. Never stops by itself

 
----
 

Case 3:
 * startBlock = x || undefined
 * endBlock = y (with y != newest)
 * discover/unregister = undefined

=> Listen for all events from block x to block y. Unregister set by default to true (Indeed, there is no point to keep listenning if we reached the end of the interval if this end is not the newest block). Disconnect set by default to false.

 
----
 

I may have forgotten cases, but I think this demonstrate the basic idea of my proposition. Let me add that I of course am not completely familiar with the SDK, thus what I proposed may not be possible or follow the ideology of it. If so, just ignore this proposition ^^.

 
----
 

Limiting the number of results

As said above, I think the SDK should not handle how many events matching the regex in the interval of blocks should be returned. The developer can handle it by himself. However, if you provide another option, let say, ""limit"", representing the maximum number of event that should be returned by the listener, it might make it easier for the developer as he won't have to handle this.

Indeed, here I fear my lack of experience may make my statement wrong, but asynchronicity makes it not really ""hard"", but a bit messy.

 
----
 

I hope my ideas can help you in a way or another.;;;",,,,,,,,,,
Release notes should be linked off of the fabric-sdk-node.github.io site,FABN-1208,39256,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,12/Apr/19 1:52 AM,28/May/19 10:29 AM,28/Oct/23 3:25 AM,28/May/19 10:29 AM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"Although release notes exist, the only way people can find them is to know where in the source code they are. Users of the node sdk are not likely to try to inspect the source code to find published documentation and they should be easier to find than they currently are. Ideally would be good to have the release notes on the main fabric doc site as well.

This is especially important if breaking changes are to be done in fix releases where users may be using a package reference of ""^1.4.0"" and inadvertently get broken due to the breaking changes.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00kpb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish 2.0.0-alpha,FABN-1209,39264,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Apr/19 6:45 AM,17/Apr/19 6:52 AM,28/Oct/23 3:25 AM,17/Apr/19 6:52 AM,,,,,,,,,,0,,,,,,publish to NPM a 2.0.0-alpha,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00kqv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Client applications should receive all chaincode events in a block as an array,FABN-1210,39286,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,davidkel,davidkel,13/Apr/19 12:34 AM,24/May/19 4:22 PM,28/Oct/23 3:25 AM,21/May/19 9:24 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"In the current implementation of the node-sdk, a client application registers to listen for chaincode events as follows

{code:java}
       this.handle = this.eventHub.registerChaincodeEvent(this.contractName, 'trade-network',
            (event: ChaincodeEvent, blockNum: number, txID: string, status: string) => {
...
{code}
When the node-sdk receives a block with multiple chaincode events, the call back is invoked for each of those chaincode events.
The problem here is that although the client application is told the block number and tx id it actually has no idea how many chaincode events are part of the block. Without this knowledge if a client application wants to replay events it doesn't know which block to replay from as it won't know which chaincode events from a block it may have missed. 

The proposal here is to allow the registerChaincodeEvent to pass all the events from a block in a single callback rather than a callback for each one. This has 2 benefits
1. The client application knows exactly how many events there are to handle up front
2. It will be slightly more performant as code path execution would be reduced 
The client can then easily track which chaincode events it has processed successfully and thus which blocks have been successfully handled such that if replay is required then it can determine the correct block to start from again.
",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00kuv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"13/Apr/19 12:37 AM;harrisob@us.ibm.com;This must also include an update to the event tutorial;;;",,,,,,,,,,,,,,,,
"As a developer, I want the chaincode event listener to unregister itself after listening for events in an interval of blocks",FABN-1211,39314,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,florianc,florianc,15/Apr/19 9:42 PM,14/Aug/19 1:49 AM,28/Oct/23 3:25 AM,14/Aug/19 1:49 AM,,,,,,,,,,0,,,,,,"I am looking for a way to smoothly stop the listener. As I have an issue with the [disconnect|https://jira.hyperledger.org/browse/FABN-1207] option, I am looking into the {{unregister}}  option.

The problem is the following (with {{registerChaincodeEvent}}): When I specify in the {{options}} object {{unregister: true}}, {{startBlock: X}} and {{endBlock: Y}}, the listener stops right after the very first event received.

However, quoting the [documentation|https://fabric-sdk-node.github.io/release-1.4/global.html#RegistrationOpts] : 

{noformat}
This options setting indicates the registration should be removed (unregister) when the event is seen
{noformat}

{noformat}
For chaincode listeners the default will be false as the match filter might be intended for many transactions rather than a specific transaction or block as in the other listeners.
{noformat}


As a developer, I would like the chaincode event listener to unregister itself after it reached the block number endBlock.

Context: It is useful when I don't want to continuously listen for events. For example, when I want to build an history of an asset, based on events emmited by the chaincode, I am looking for a bunch of events (with the same name), from a block to another. As per my understanding, the only way to unregister the listener is to set a timeout, which works, but (IMO) is not very ""developer friendly""
",,florianc,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00l0n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),florianc,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"14/Aug/19 1:49 AM;harrisob@us.ibm.com;being worked as part of the refactor of the low level NodeSDK. Will be included in the new package 'fabric-base'. All listeners will unregistered and the event hub shutdown when endblock has been processed.

https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32889
;;;",,,,,,,,,,,,,,,,
Fabric new lifecycle instantiate cannot find file,FABN-1212,39399,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,xuchenhao001,xuchenhao001,19/Apr/19 12:00 PM,23/May/19 5:54 AM,28/Oct/23 3:25 AM,23/May/19 5:54 AM,v2.0.0,,,,,,,,,0,chaincode,node-SDK,,,,"I have tried new lifecycle of chaincode. But I cannot init (invoke) my chaincode.

Fabric version: 
{code:java}
v2.0.0-alpha
{code}
Fabric sdk node version:
{code:java}
fabric-client@2.0.0-snapshot.221
{code}
 

When I install, approve, and commit chaincode, I set
{code:java}
chaincode = client.newChaincode('examplecc', 'v1.0');
{code}
And when I send init request, I set chaincodeId as `examplecc` again:
{code:java}
let request = {
 chaincodeId : 'examplecc',
 fcn: 'Init',
 args: args,
 txId: tx_id,
 is_init: true
 };
{code}
However, I got an error from node sdk while instantiating:
{code:java}
chaincode definition for 'examplecc' exists, but chaincode is not installed
{code}
from sdk. And errors from peer:
{code:java}
[ccprovider] ExtractStatedbArtifactsForChaincode -> INFO 099 Error while loading installation package for ccname=examplecc, ccversion=v1.0. Err=open /var/hyperledger/production/chaincodes/examplecc.v1.0: no such file or directory
{code}
After attached to the peer container, I found a file:
{code:java}
/var/hyperledger/production/chaincodes/examplecc:v1.0:7d9d39f879b466ecfdf9e947ad410c77363dafd67b1a93ad18b3885be28ce3ef.bin
{code}
How could this happened? 
What's the correct parameter in for *chaincodeId* under *Step 6: Initialize*?

I refered docs here: https://fabric-sdk-node.github.io/master/tutorial-chaincode-lifecycle.html

Thanks!",,xuchenhao001,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lhj:",,,,Unset,Unset,,,,,,,,,,,"All of these steps done by node sdk:
1. Create channel named `mychannel`
2. Join Org1, Org2 to `mychannel`
3. Install chaincode named `examplecc`, version `v1.0` to Org1, Org2
4. Approve chaincode from Org1, Org2
5. Commit chaincode
6. Init (invoke) chaincode, error occurred",,Unset,,,,,,Unset,,Unset,,(Please add usage information),xuchenhao001,,,,,,,,,,,,,,,,,,,,,"19/Apr/19 4:53 PM;xuchenhao001;After query installed chaincode on peer, the result shows that there is no chaincode installed:
{code:java}
{""chaincodes"":[]}
{code}
But how could this happen? Since that chaincode has already been installed on my peer successfully:
{code:java}
# docker exec -ti peer0.org1.example.com sh
/opt/gopath/src/github.com/hyperledger/fabric/peer # cd /var/hyperledger/production/chaincodes/
/var/hyperledger/production/chaincodes # ls
examplecc:v1.0:7d9d39f879b466ecfdf9e947ad410c77363dafd67b1a93ad18b3885be28ce3ef.bin
{code}
And here is how I install my chaincode with node sdk:
{code:java}
// get the chaincode instance associated with the client
chaincode = client.newChaincode(chaincodeName, chaincodeVersion);
chaincode.setEndorsementPolicyDefinition(endorsementPolicy);
chaincode.setInitRequired(true);
chaincode.setSequence(1);

// package the source code
let package_request = {
  chaincodeType: 'golang',
  goPath: gopath,
  chaincodePath: chaincodePath
};
let cc_package = await chaincode.package(package_request);
chaincode.setPackage(cc_package);

let peer = client.getPeer(peerName);
let install_request = {
  target: peer,
  request_timeout: 10000 // give the peers some extra time
};
let package_id = await chaincode.install(install_request);
logger.info('chaincode has been successfully installed on peer: ' + peerName
  + ' with chaincode package id: ' + package_id);
{code}
 ;;;","19/Apr/19 7:06 PM;xuchenhao001;Problem solved, that's because chaincode approve need parameter *_package_id* in chaincode instance:
{code:java}
let request = {
  targets: peers,
  // This chaincode instance needs four parameters: 
  // _name, _version, _sequence, and _package_id
 chaincode: chaincode,
 txId: tx_id
};
// send to the peer to be endorsed
let approveResponse = await channel.approveChaincodeForOrg(request);
{code}
So why my chaincode is not installed on my peers according to fabric sdk? After read the sdk's source code, I found that:

*fabric- client/lib/Client.js, queryInstalledChaincodes*:
{code:java}
const request = {
 targets: targets,
 chaincodeId: Constants.LSCC, // Here, the LSCC is defined as 'lscc'
 txId: txId,
 signer: signer,
 fcn: 'getinstalledchaincodes',
 args: []
};
{code}
while new lifecycle using a newer chaincode name: *_lifecycle*

So, addition to this question, the function 
{code:java}
client.queryInstalledChaincodes(){code}
needs to be updated to new lifecycle too.

 ;;;",,,,,,,,,,,,,,,
Fix Client.getChannel() doc,FABN-1213,39486,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,24/Apr/19 10:58 PM,23/May/19 5:54 AM,28/Oct/23 3:25 AM,23/May/19 5:54 AM,v1.4.2,v2.0.0,,,,,,,,0,,,,,,Fix the doc to indicate that the same channel instance will be returned if a channel with that name has already been created.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lx3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proposal Responses with Status other than 200 are rejected as invalid in sendTransaction(),FABN-1214,39488,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,pprice,pprice,24/Apr/19 11:54 PM,29/Jul/20 5:43 PM,28/Oct/23 3:25 AM,29/Jul/20 5:43 PM,,,,,,,,,,1,node-SDK,sdk-triaged,,,,"When writing chaincode, the peer.Response object allows a REST-like status code to be returned to callers in addition to the Payload field (for successful transactions) or Message field when errors are encountered.

When a REST API is used to provide client applications access to the chaincode, it is ideal for the REST layer to pass back the status code returned by the chaincode directly to the client.  As such, there are scenarios in which the standard ""200 OK"" response is not appropriate.  For example, if a document gets created in the database it makes more sense to return a ""201 Created"", or if a document is deleted a ""204 No Content"" should be returned to indicate the object has been removed.

When chaincode is written to attempt to take advantage of these status codes, the Fabric Node SDK rejects the proposal responses returned from the peers and fails to add the peer endorsements to send to the Orderer because the status code does not exactly equal 200.  Instead, the Fabric Node SDK _SHOULD_ accept any status code within the 200-299 range as valid and add the endorsement to send to the orderer.",,bestbeforetoday,chrisf,david_dornseifer,harrisob@us.ibm.com,heatherp,jyellick,pprice,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00lxb:",,,,Unset,Unset,,,,,,,,,,,"1.  Write chaincode that returns status code 201.
2.  Use the Fabric Node SDK to send the proposal to peers and receive responses with channel.sendTransactionProposal().
3.  Attempt to send the proposal and responses to the orderer with channel.sendTransaction().
4.  Observe error where the SDK complains about there being no valid endorsements.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,chrisf,david_dornseifer,harrisob@us.ibm.com,heatherp,jyellick,pprice,,,,,,,,,,,,,,,"23/May/19 5:56 AM;harrisob@us.ibm.com;This is not a NodeSDK issue, please open against Fabric (FAB);;;","15/Jan/20 9:50 PM;david_dornseifer;Hello, 

looking into the protobuf definition, the return status code should follow the HTTP standard: [https://github.com/hyperledger/fabric-protos-go/blob/master/peer/proposal_response.pb.go#L114-L115]. 

The java SDK also accepts all response status codes < 300.  The NodeJS SDK ([https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-common/lib/Commit.js#L74]) should follow the same approach. 

 ;;;","21/Jan/20 11:19 PM;heatherp;[~denyeart] [~jyellick] I've chatted to the other maintainers about this one - can I get your opinions please?
Whilst we absolutely want SDK behaviour to be consistent across the different languages, how much status code processing are we expecting of the SDKs?;;;","23/Jan/20 2:39 AM;jyellick;Personally, I think the chaincode REST-style response codes were probably not the right way to approach the problem.  I'd hesitate to extend this pattern by returning more specific codes regarding document creation, deletion, etc.  It also becomes unclear when an invocation returns no creations, but does return an event.  Regardless, this feels more like a feature request than a bug, and should probably go through an RFC if we're interested in implementing it.;;;","23/Jan/20 6:57 AM;harrisob@us.ibm.com;I think the SDK's should not interpret or make decisions based on the status code. The SDK's should return the status to the application to do that both on endorsements that will be committed or endorsement that or just a query. When sending a collection of proposal responses to the orderer to be committed, the SDK's should not check status of the proposal response (which NodeSDK checks for 200), they should just check that there is an 'endorsement' in the proposal response.;;;","29/Jul/20 5:43 PM;bestbeforetoday;The behaviour was changed during refactoring as part of the v2 release of the Node SDK. The SDK now accepts any endorsed proposal responses, regardless of the status code. So I think this issue has been resolved in the v2.2 release. Please reopen if not.;;;",,,,,,,,,,,
Fix license statements,FABN-1215,39506,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,mastersingh24,mastersingh24,mastersingh24,25/Apr/19 6:29 PM,25/Apr/19 6:39 PM,28/Oct/23 3:25 AM,25/Apr/19 6:39 PM,,,,,,v2.0.0,,,,0,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15232,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m07:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mastersingh24,,,,,,,,,,dev,main,,,,,,,,,true,"25/Apr/19 6:34 PM;mastersingh24;https://gerrit.hyperledger.org/r/31089;;;",,,,,,,,,,,,,,,,
package.json add node10 support,FABN-1216,39540,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,zhaochy,zhaochy,zhaochy,28/Apr/19 12:05 PM,16/May/19 2:31 PM,28/Oct/23 3:25 AM,16/May/19 2:31 PM,,,,,,,,,,0,,,,,,"By Node.js release plan, Node8 will be end of life at 2019-12-31

https://nodejs.org/fr/about/releases/

The build team is going to change master to use 10 and adding a nightly job that uses 10 on release-1.4

update package.json to add node10 support",,MariWade,zhaochy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m6n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),MariWade,zhaochy,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
No documentation available for fabric-network module,FABN-1217,39543,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,Aniket.1,Aniket.1,29/Apr/19 2:32 PM,25/Oct/19 5:28 PM,28/Oct/23 3:25 AM,25/Oct/19 5:28 PM,,,,,,,,,,0,,,,,,"In [v1.4.1 release|https://github.com/hyperledger/fabric-chaincode-node/releases] logs, it is mentioned: 
{quote}{{On the client application side, a new NPM package `fabric-network` is added which contains the classes and methods for writing blockchain enabled applications in node.js using javascript or typescript.See [https://fabric-sdk-node.github.io/module-fabric-network.html]}}
{quote}
 

But given link doesn't contain any documentation which seems required to understand its usage.",,Aniket.1,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m7b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Aniket.1,heatherp,,,,,,,,,,,,,,,,,,,,"01/May/19 2:16 PM;Aniket.1;I see it is available here : [https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.html]

Probably that URL needs to be updated at some places.;;;","25/Oct/19 5:28 PM;heatherp;Hi [~Aniket.1], I've been going through the node sdk backlog with the maintainers - it looks like you found an incorrect link in the fabric-chaincode-node release notes, which we won't be fixing. The correct links are available here: [https://hyperledger-fabric.readthedocs.io/en/release-1.4/getting_started.html,] so I'm closing this for now.;;;",,,,,,,,,,,,,,,
Approach to pass key for crypto operations on chaincode interaction,FABN-1218,39544,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,Aniket.1,Aniket.1,29/Apr/19 4:27 PM,23/May/19 6:01 AM,28/Oct/23 3:25 AM,23/May/19 6:01 AM,,,,,,,,,,0,,,,,,"I see [fabric-shim-crypto|https://github.com/hyperledger/fabric-chaincode-node/tree/master/fabric-shim-crypto] library for performing encryption & signing in chaincode. This suggests to pass key through transient data.

I think about another approach in which we can add it as an custom attribute in the certificate during certicate generation. This way whenever user interact with the chaincode, key can be retrieved by accessing the certificate and perfrom related crypto operation.

Please provide the views regarding the security & implementation  point of view.

(This is here to know the views of devs, not sure if it belongs here)",,Aniket.1,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m7j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Aniket.1,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"23/May/19 6:00 AM;harrisob@us.ibm.com;certificates are stored with the block, so I do not think this will work, however this issue should be presented to the FAB project as the client side does not have any say in this matter.;;;",,,,,,,,,,,,,,,,
Modify FabricCAClient.js file to convert to ES6 syntax.,FABN-1219,39548,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,29/Apr/19 10:39 PM,02/Sep/19 3:27 PM,28/Oct/23 3:25 AM,02/Sep/19 3:27 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"A task assigned by [~davidkhala].
 # Delete ""'use strict';"" in ES5 syntax, because ES6 modules are always in strict mode.
 # Using template literals in ES6 instead of concatenated strings, because of the readability and expression friendliness.",,davidkhala,Hengming-Zhang,,,,,,,,,,,,,,,,FABN-1250,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-681,,FABN-1372,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00m8f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,Hengming-Zhang,,,,,,,,,dev,main,,,,,,,,,true,"30/Apr/19 9:23 PM;davidkhala;Hi hengming, you can comment of your gerrit commit url, Then it can be easily traced;;;","01/May/19 3:30 PM;Hengming-Zhang;Thx [~davidkhala], @all here is the gerrit commit url: [https://gerrit.hyperledger.org/r/c/31125/.|https://gerrit.hyperledger.org/r/c/31125/];;;","03/May/19 1:08 PM;davidkhala;[~harrisob@us.ibm.com] addition: hengming is one of our internship candidates helping on my proposed internship project: [https://wiki.hyperledger.org/display/INTERN/Fabric+nodejs+SDK+security+extension]

Actually this issue is a his answer of candidate exam(open source code test part);;;",,,,,,,,,,,,,,
Typescript definition requires 'fabric-ca-client' but package does not depend on it,FABN-1220,39563,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,jlcs,jlcs,30/Apr/19 10:47 PM,21/Jun/19 5:45 AM,28/Oct/23 3:25 AM,21/Jun/19 5:42 AM,v1.4.1,,,,,,,,,0,node-SDK,,,,,"When compiling with TypeScript, importing fabric-client@1.4.1, and not having included fabric-ca-client as a dependency in my package.json, the following error shows:

```
node_modules/fabric-client/types/index.d.ts:9:35 - error TS2307: Cannot find module 'fabric-ca-client'.

9 import FabricCAServices = require('fabric-ca-client');
```

 

Either include fabric-ca-client as a dependency in fabric-client or remove line 9 and 40 of index.d.ts ( [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/types/index.d.ts] ):
9 import FabricCAServices = require('fabric-ca-client');
40 public getCertificateAuthority(): FabricCAServices;",,jlcs,,,,,,,,,,,,,,,,,FABN-1278,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00mbb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jlcs,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[fabric-network] submitTransaction returns no endorsement plan found,FABN-1221,39567,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,florianc,florianc,01/May/19 12:15 AM,15/Jan/20 8:59 PM,28/Oct/23 3:25 AM,15/Jan/20 8:59 PM,,,,,,,,,,1,contract,external,transaction,,,"I am switching from 1.4.0 to 1.4.1.

The code was working fine in 1.4.0.

The error happens with 1.4.1.

 

When submitting a transaction, I have the following error:

 

 
{code:java}
2019-04-30T15:07:49.201Z - error: [Channel.js]: Channel:defaultchannel received discovery error:failed constructing descriptor for chaincodes:<name:""badge-manager"" >
- error: [DiscoveryEndorsementHandler]: endorse - no endorsement plan found for {""chaincodes"":[{""name"":""badge-manager""}]}
- Error: No endorsement plan available for {""chaincodes"":[{""name"":""badge-manager""}]}{code}
 

 

This is the code I am using:

Getting the contract and network objects:

 
{code:java}
async function connect(identityName, channelName, contractName, node) {
 node.log(`connect ${identityName} ${channelName} ${contractName}`);
 const parsedProfile = JSON.parse(node.connection.connectionProfile);
 const client = await fabricClient.loadFromConfig(parsedProfile);
 node.log('loaded client from connection profile');
 const mspid = client.getMspid();
 node.log('got mspid,' + mspid);
 const wallet = new fabricNetwork.FileSystemWallet(node.connection.walletLocation);
 node.log('got wallet');
 const options = {
 wallet: wallet,
 identity: identityName,
 discovery: {
 asLocalhost: true
 }
 };
await gateway.connect(parsedProfile, options);
 node.log('connected to gateway');
 const network = await gateway.getNetwork(channelName);
 node.log('got network');
 const contract = await network.getContract(contractName);
 node.log('got contract');
 return { contract: contract, network: network };
 }
{code}
 

 

Submitting the transaction:
{code:java}
function submit(contract, payload, node) {
 node.log(`submit ${payload.transactionName} ${payload.transactionArgs}`);
 return contract.submitTransaction(payload.transactionName, ...payload.transactionArgs);
 }{code}
 

As I stated above, I did not make any change to the code when switching from 1.4.0 to 1.4.1. The documentation does not indicate that any change is required.

 

 ",,florianc,heatherp,Mihir2.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00mc7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),florianc,heatherp,Mihir2.0,,,,,,,,,,,,,,,,,,,"30/Oct/19 12:47 AM;heatherp;Hi [~florianc] I'm working through the backlog with the maintainers - could you recreate this issue on the latest version of fabric-network (1.4.4) please? Do you still see this issue? Thanks;;;","15/Jan/20 8:58 PM;heatherp;Closing, as we've had no response since October - please feel free to re-open;;;",,,,,,,,,,,,,,,
Issue when loading a channel with peers defined in Network Config,FABN-1222,39580,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Test Error,harrisob@us.ibm.com,jeffywu,jeffywu,02/May/19 2:53 AM,31/May/19 4:38 AM,28/Oct/23 3:25 AM,31/May/19 4:38 AM,,,,,,,,,,0,,,,,,"I'm running into an issue where peers are not mapped into a channel even though they are defined in the Network Config:

 

This is the network config:
{code:java}
{
	""name"": ""test-channel"",
	""description"": ""Network on IBP v2"",
	""version"": ""1.0.0"",
	""client"": {
		""organization"": ""org""
	},
	""organizations"": {
		""Org0MSP"": {
			""mspid"": ""msp"",
			""peers"": [
				""peer0""
			]
		}
	},
	""orderers"": {
		""orderer"": {
			""url"": ""grpcs://orderer:30001"",
			""tlsCACerts"": {
				""path"": ""crypto/cert.pem""
			}
		}
	},
	""peers"": {
		""peer0"": {
			""url"": ""grpcs://peer:30003"",
			""tlsCACerts"": {
				""path"": ""crypto/cert.pem""
			}
		}
	},
	""channels"": {
		""mychannel"": {
			""orderers"": [""orderer""],
			""peers"": [
				""peer0""
			]
		}
	}
}
{code}
 

When I run the following code, I get the error:
{code:javascript}
> const hfc = require('fabric-client');
> client = hfc.loadFromConfig(NETWORK_CONFIG)
Client {
  _cryptoSuite: null,
  _mspid: null,
  _stateStore: null,
  _userContext: null,
  _network_config:
   NetworkConfig_1_0 {
     _network_config:
      { name: 'test-channel',
        description: 'Network',
        version: '1.0.0',
        client: [Object],
        organizations: [Object],
        orderers: [Object],
        peers: [Object],
        channels: [Object] },
     _client_context: [Circular],
     _peers: Map {},
     _channel: Map {},
     _orderers: Map {} },
  _msps: Map {},
  _devMode: false,
  _adminSigningIdentity: null,
  _tls_mutual: {},
  _organizations: Map {},
  _certificateAuthorities: Map {},
  _channels: Map {},
  _connection_options: {} }
> client.getChannel(""mychannel"")
Channel {
  _name: 'mychannel',
  _channel_peers: Map {},
  _anchor_peers: [],
  _orderers:
   Map {
     'orderer' => Orderer {
     _options: [Object],
     clientCert: undefined,
     _url: 'grpcs://orderer:30001',
     _endpoint: [Object],
     _name: 'orderer',
     _request_timeout: 45000,
     _grpc_wait_for_ready_timeout: 3000,
     _ordererClient: [Object],
     _sendDeliverConnect: false } },
  _kafka_brokers: [],
  _clientContext:
   Client {
     _cryptoSuite: null,
     _mspid: null,
     _stateStore: null,
     _userContext: null,
     _network_config:
      NetworkConfig_1_0 {
        _network_config: [Object],
        _client_context: [Circular],
        _peers: Map {},
        _channel: Map {},
        _orderers: Map {} },
     _msps: Map {},
     _devMode: false,
     _adminSigningIdentity: null,
     _tls_mutual: {},
     _organizations: Map {},
     _certificateAuthorities: Map {},
     _channels: Map { 'mychannel' => [Circular] },
     _connection_options: {} },
  _msp_manager: MSPManager { _msps: {} },
  _discovery_interests: Map {},
  _discovery_results: null,
  _last_discover_timestamp: null,
  _discovery_peer: null,
  _use_discovery: false,
  _as_localhost: true,
  _endorsement_handler: null,
  _commit_handler: null }
> client.getChannel(""mychannel"").newChannelEventHub(""peer0"")
Error: Peer with name ""peer0"" not assigned to this channel
    at Channel._getTargets (/usr/src/app/node_modules/fabric-client/lib/Channel.js:3462:13)
    at Channel.newChannelEventHub (/usr/src/app/node_modules/fabric-client/lib/Channel.js:948:22)
{code}
However, if I add the peer manually, everything works fine. Wondering if there's an issue with the parsing in the Network Config part?
{code:javascript}
> client.getChannel(""mychannel"").addPeer(client.getPeer(""peer0""));
> client.getChannel(""mychannel"").newChannelEventHub(""peer0"");
{code}
 

 

 ",,harrisob@us.ibm.com,jeffywu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzgss:",,,,Unset,Unset,,,,,,,,,,,See Description,,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,jeffywu,,,,,,,,,,,,,,,,,,,,"31/May/19 4:38 AM;harrisob@us.ibm.com;Your JSON for defining the Peers within a channel should key/value, like
""peers"": {""peer0"": {""endorsingPeer"": false}, ""peer1"": {} }
Where peer0 has the endorsingPeer role explicitly defined and peer1 will default to true for that role as it not defined.
 ;;;",,,,,,,,,,,,,,,,
"TypeScript compile errors due to missing ""base.d.ts"" file",FABN-1223,39591,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,davidkhala,sstone1,sstone1,02/May/19 11:58 PM,02/Oct/19 10:21 PM,28/Oct/23 3:25 AM,02/Oct/19 10:21 PM,,,,,,,,,,0,,,,,,"> tsc

node_modules/fabric-ca-client/types/index.d.ts:18:28 - error TS2307: Cannot find module './base'.

18 import { BaseClient } from './base';

This base.d.ts file is not in fabric-ca-client/types.",,bestbeforetoday,davidkhala,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1353,,FABN-1309,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00mgv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,sstone1,,,,,,,,,,,,,,,,,,,"02/May/19 11:58 PM;sstone1;This happens with the latest Fabric v2.0 SDK.;;;","03/May/19 11:23 AM;davidkhala;thanks [~simonstone1]  I can follow up;;;","10/May/19 8:05 PM;davidkhala;https://gerrit.hyperledger.org/r/#/c/31319/
in progress;;;","02/Oct/19 10:21 PM;bestbeforetoday;I made a sticking-plaster fix as part of FABN-1353. A better fix should appear as part of a refactor of low-level API in FABN-1347.;;;",,,,,,,,,,,,,
[fabric-network] fabric-network needs to support endorsement_hint,FABN-1224,39598,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,davidkel,davidkel,03/May/19 6:01 PM,05/May/20 10:54 PM,28/Oct/23 3:25 AM,01/Apr/20 6:09 PM,v1.4.1,v2.0.0,,,,v1.4.4,v2.0.0,,,0,sdk-triaged,,,,,"According to the documentation, although optional it looks like endorsement hint is required for certain scenarios

{noformat}
	 * @property {DiscoveryChaincodeInterest} [endorsement_hint] Optional. A
	 *           of {@link DiscoveryChaincodeInterest} object that will be used by
	 *           discovery service to calculate an appropriate endorsement plan.
	 *           The parameter is only required when the endorsement will be preformed
	 *           by a chaincode that will call other chaincodes or if the endorsement
	 *           should be made by only peers within a collection or collections.
{noformat}
This means currently fabric-network has limitations that only the low level API can satisfy",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,FABN-1551,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6w",,,,Unset,Unset,14th-21st Feb 2020,21st-28th Feb 2020,28th-6th March 2020,6th-13th Mar 20,13th-21st Mar 20,20-27th March 2020,27-3rd Apr 20,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"04/Dec/19 4:54 AM;harrisob@us.ibm.com;Do you think we need to support chaincode to chaincode hints for discovery or just collections ?
[~andrew-coleman], [~bestbeforetoday], [~sstone1], [~heatherp];;;","11/Feb/20 2:38 AM;harrisob@us.ibm.com; How should the discovery interest be added to the high level NodeSDK. the interest will contain chaincode names and collection names and it would be sent to the peer's discovery service to get an endorsement plan that would consider the different chaincodes that will be called along with the collections for those chaincodes (by default we send an interest with the contract's chaincode name (chaincoded). I am thinking that it should be a method called setDiscoveryInterest() on the Contract object, it should not be on the Transaction object like the setTransient as it applies to all transactions that are built from this contract.

The method would take a JSON object of the form ==>

```
{color:#6a9955} * {color}{color:#569cd6}@property{color} {color:#6a9955}{DiscoveryChaincode}{color} {color:#6a9955}[interest]{color}{color:#6a9955} - Optional. An{color}
{color:#6a9955} * array of {color}{color:#6a9955}{{color}{color:#569cd6}@link{color}{color:#6a9955} DiscoveryChaincodeInterest}{color}{color:#6a9955} that have chaincodes{color}
{color:#6a9955} * and collections to calculate the endorsement plans.{color}
{color:#6a9955} * {color}{color:#569cd6}@example{color} {color:#569cd6}<caption>{color}{color:#6a9955}""single chaincode""{color}{color:#569cd6}</caption>{color}
{color:#6a9955} * [{color}
{color:#6a9955} * \{ name: ""mychaincode""}{color}
{color:#6a9955} * ]{color}
{color:#6a9955} * {color}{color:#569cd6}@example{color} {color:#569cd6}<caption>{color}{color:#6a9955}""chaincode to chaincode""{color}{color:#569cd6}</caption>{color}
{color:#6a9955} * [{color}
{color:#6a9955} * \{ name: ""mychaincode""}, \{ name: ""myotherchaincode""}{color}
{color:#6a9955} * ]{color}
{color:#6a9955} * {color}{color:#569cd6}@example{color} {color:#569cd6}<caption>{color}{color:#6a9955}""single chaincode with a collection""{color}{color:#569cd6}</caption>{color}
{color:#6a9955} * [{color}
{color:#6a9955} * \{ name: ""mychaincode"", collection_names: [""mycollection""] }{color}
{color:#6a9955} * ]{color}
{color:#6a9955} * {color}{color:#569cd6}@example{color} {color:#569cd6}<caption>{color}{color:#6a9955}""chaincode to chaincode with a collection""{color}{color:#569cd6}</caption>{color}
{color:#6a9955} * [{color}
{color:#6a9955} * \{ name: ""mychaincode"", collection_names: [""mycollection""] },{color}
{color:#6a9955} * \{ name: ""myotherchaincode"", collection_names: [""mycollection""] }}{color}
{color:#6a9955} * ]{color}
{color:#6a9955} * {color}{color:#569cd6}@example{color} {color:#569cd6}<caption>{color}{color:#6a9955}""chaincode to chaincode with collections""{color}{color:#569cd6}</caption>{color}
{color:#6a9955} * [{color}
{color:#6a9955} * \{ name: ""mychaincode"", collection_names: [""mycollection"", ""myothercollection""] },{color}
{color:#6a9955} * \{ name: ""myotherchaincode"", collection_names: [""mycollection"", ""myothercollection""] }}{color}
{color:#6a9955} * ]{color}
{color:#6a9955} */{color}

{color:#6a9955}/**{color}
{color:#6a9955} * {color}{color:#569cd6}@typedef{color} {color:#6a9955}{Object}{color} {color:#6a9955}DiscoveryChaincodeInterest{color}
{color:#6a9955} * {color}{color:#569cd6}@property{color} {color:#6a9955}{DiscoveryChaincodeCall[]}{color} {color:#6a9955}interest{color}{color:#6a9955} - An array of{color}
{color:#6a9955} * {color}{color:#6a9955}{{color}{color:#569cd6}@link{color}{color:#6a9955} DiscoveryChaincodeCall}{color}{color:#6a9955} objects.{color}
{color:#6a9955} */{color}

{color:#6a9955}/**{color}
{color:#6a9955} * {color}{color:#569cd6}@typedef{color} {color:#6a9955}{Object}{color} {color:#6a9955}DiscoveryChaincodeCall{color}
{color:#6a9955} * {color}{color:#569cd6}@property{color} {color:#6a9955}{string}{color} {color:#6a9955}name{color}{color:#6a9955} - The name of the chaincode{color}
{color:#6a9955} * {color}{color:#569cd6}@property{color} {color:#6a9955}{string[]}{color} {color:#6a9955}[collection_names]{color}{color:#6a9955} - The names of the related collections{color}
{color:#6a9955} */{color}

```

[~andrew-coleman], [~bestbeforetoday], [~sstone1], [~heatherp];;;",,,,,,,,,,,,,,,
Package.fromDirectory on Windows builds invalid Go package,FABN-1225,39662,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,07/May/19 7:32 PM,07/May/19 9:28 PM,28/Oct/23 3:25 AM,07/May/19 9:28 PM,,,,,,v1.4.2,v2.0.0,,,0,,,,,,"The ""path"" in the chaincode deployment spec contains Windows path separators, which causes instantation to fail. We should replace these Windows path separators with Linux path separators to avoid this (we already do this elsewhere in the code).",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00mvj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,dev,main,,,,,,,,,true,"07/May/19 7:39 PM;sstone1;https://gerrit.hyperledger.org/r/31250
https://gerrit.hyperledger.org/r/31251;;;",,,,,,,,,,,,,,,,
Misleading message when chaincode throws an error,FABN-1226,39689,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,andrew-coleman,andrew-coleman,07/May/19 11:08 PM,29/Jun/19 12:25 AM,28/Oct/23 3:25 AM,09/May/19 11:52 PM,v1.4.1,,,,,,,,,0,,,,,,"Scenario:
 * A function in chaincode throws an error - e.g. queryCar() is invoked with argument ""CAR33"" - this car doesn't exist, so throws appropriate error message
 * In client application, when calling evaluateTransaction (i.e. query) on the queryCar chaincode function with arg ""CAR33"", then the error that gets caught has the message ""Error evaluating transaction: No peers available to query"".  It then contains the actual error that is returned by the chaincode function.

The error handler in 'singlequeryhandler.js' in fabric-network is assuming that all errors are caused by lack of connection to a peer rather than an explicit error raised by the chaincode function.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1367,,,,,,,,,,,,,,,,,,,,,FABN-1239,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n0n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[fabric-network] fabric-sdk-node.github.io/release-1.4 has no reference to fabric-network classes,FABN-1227,39706,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,davidkel,davidkel,08/May/19 5:18 PM,31/May/19 5:09 PM,28/Oct/23 3:25 AM,31/May/19 5:09 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"Under the classes directory the following are not available
- Gateway
- Network
- Contract
- Transaction
- any of the listeners


",,andrew-coleman,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n4f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,,,,,,,,,,,,,,,,,,,,"31/May/19 5:09 PM;andrew-coleman;This has now been resolved.  They all appear under the fabric-network module, and are listed under classes prepended with 'fabric-network.';;;",,,,,,,,,,,,,,,,
[fabric-network] Using addCommitListener could result in a memory leak,FABN-1228,39707,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,davidkel,davidkel,08/May/19 5:24 PM,29/Jul/19 11:56 PM,28/Oct/23 3:25 AM,29/Jul/19 11:53 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"Unlike block event listeners and chaincode event listeners. A commit listener could only be listening for a single event So once the event has been received. Then that listener is redundant. There is no guidance on what an application should do in this event so a natural assumption would be that it cleans itself up so the application is at liberty to add another commit listener for a specific transaction id.
This is likely to cause a leak as the commit listeners are not cleaned up.",,14gracel,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n4n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,,,,,,,,,,,,,,,,,,,,"21/Jun/19 6:57 PM;14gracel;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32017;;;",,,,,,,,,,,,,,,,
[fabric-network] No documented way to remove a listener,FABN-1229,39708,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,davidkel,davidkel,08/May/19 5:26 PM,03/Jul/19 5:46 PM,28/Oct/23 3:25 AM,03/Jul/19 5:46 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"If an application registers and contract listener, generic transaction listener, block listener, apart from destroying the gateway object and starting again, how should an application cleanly remove these registered listeners ?",,14gracel,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n4v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,,,,,,,,,,,,,,,,,,,,"21/Jun/19 6:57 PM;14gracel;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32017;;;",,,,,,,,,,,,,,,,
[fabric-network] The tutorial on fabric network event listening needs more detail.,FABN-1230,39709,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,davidkel,davidkel,08/May/19 5:29 PM,03/Jul/19 5:47 PM,28/Oct/23 3:25 AM,03/Jul/19 5:47 PM,v1.4.1,,,,,v2.0.0,,,,0,,,,,,"For example when it describes the commit listener, it presents 2 options but doesn't describe the difference between the 2.

Also in the comments of the example code you will see for both options

{code:java}
/**
 * @param {String} transactionId the name of the event listener
 * @param {Function} callback the callback function with signature (error, transactionId, status, blockNumber)
 * @param {Object} options
**/
{code}
For option 1, it has a variable name of transactionId and then describes it as the name for the event listener which is confusing
For option 2, transactionId should not be in the comments",,14gracel,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00n53:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,,,,,,,,,,,,,,,,,,,,"03/Jul/19 5:47 PM;14gracel;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31691;;;",,,,,,,,,,,,,,,,
Missing connect info in channel event tutorial,FABN-1231,39761,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,10/May/19 3:30 AM,21/May/19 9:24 PM,28/Oct/23 3:25 AM,21/May/19 9:24 PM,,,,,,v1.4.2,v2.0.0,,,0,,,,,,Add some description on how to use the channel event hub and when to connect,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nfr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
update main gulp test entrance,FABN-1232,39769,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,davidkhala,davidkhala,davidkhala,10/May/19 6:07 PM,10/May/19 10:18 PM,28/Oct/23 3:25 AM,10/May/19 10:18 PM,v1.4.1,,,,,,,,,0,tests,,,,,"gulp test is missing, it seems using this now:

{color:#c3e88d}run-test{color}",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nhj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,System Test,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,,,,,,,"10/May/19 6:16 PM;davidkhala;[https://gerrit.hyperledger.org/r/#/c/31318/]


for release-1.4 only, there is no problem in master branch;;;",,,,,,,,,,,,,,,,
"fabric-sdk-node-daily-release-1.4, fabric-merge-end-2-end jobs: Segmentation fault on run gulp target end-2-end",FABN-1233,39775,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,andrew-coleman,sambhavdutt,sambhavdutt,10/May/19 10:27 PM,10/Sep/19 2:21 AM,28/Oct/23 3:25 AM,10/Sep/19 2:18 AM,v1.4.2,v2.0.0,,,,,,,,0,ci-blocker,,,,,"Chaincode instantiation is failing in gulp end-to-end tests for node 10 at 'process._tickCallback'

*Branch:* release-1.4, master
 *Platform:* x86_64
 *Error Snippet:*
{code:java}
00:19:06.622 ok 484 Successfully instantiated chaincode on the channel
00:19:07.268 /tmp/jenkins8852997161481530879.sh: line 119: 27680 Segmentation fault      (core dumped) gulp run-end-to-end
00:19:07.268 --------> ERROR!!! gulp end-2-end tests failed for node 10.15.3 <---------
{code}
*Build Log*
[https://jenkins.hyperledger.org/view/Daily/job/fabric-sdk-node-daily-release-1.4-x86_64/39/console]

 ",,btl5037,davidkhala,denyeart,dereckluo,harrisob@us.ibm.com,heatherp,sambhavdutt,vijaypunugubati,wlahti,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,49f496925df1e66198d7ec794849536c9f8b104b,Unset,No,,,"1|i00nin:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,davidkhala,denyeart,dereckluo,harrisob@us.ibm.com,heatherp,sambhavdutt,vijaypunugubati,wlahti,,dev,main,,,,,,,,,true,"06/Aug/19 2:48 AM;vijaypunugubati;Now, this error hits on 'fabric-merge-end-2-end-x86_64 job"" consistently. 

and observed on this job from Aug 5, 2019

{color:#172b4d}+*[Started from this build|https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/6007/console]:*+{color}

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/6007/console]
{code:java}
/00:19:23.103 ok 484 Successfully instantiated chaincode on the channel
00:19:24.016 /tmp/jenkins4014418976961939553.sh: line 112: 22696 Segmentation fault      (core dumped) gulp run-end-to-end
00:19:24.016 --------> ERROR!!! gulp end-2-end tests failed <---------
00:19:24.038 Build step 'Execute shell' marked build as failure/ code placeholder
{code};;;","07/Aug/19 12:02 AM;dereckluo;With changes of FABN-1233 *NodeSDK segment fault* merged in yesterday, the *fabric-merge-end-2-end* job is still failing as observed this morning with the same error. 
[~harrisob@us.ibm.com] can you take another look?

{code:java}
07:47:49 ok 481 The chaincode instantiate transaction has been committed on peer localhost:7051
07:47:49 ok 482 The chaincode instantiate transaction was valid.
07:47:49 ok 483 Successfully sent instantiatetransaction to the orderer.
07:47:54 ok 484 Successfully instantiated chaincode on the channel
07:47:55 /tmp/jenkins6708848824831413988.sh: line 112: 22591 Segmentation fault      (core dumped) gulp run-end-to-end
07:47:55 --------> ERROR!!! gulp end-2-end tests failed <---------
07:47:55 Build step 'Execute shell' marked build as failure
{code}

*Build Log* 
https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/6030/consoleFull
;;;","09/Aug/19 4:31 AM;vijaypunugubati;[~harrisob@us.ibm.com] tried to run gulp target `end-2-end` with latest node-version 10.16.2 locally on master and the `Segmentation fault` was not produced, by taking this as an initial step for the fix, requested LF guy to update node-version on jenkins plugin.;;;","13/Aug/19 12:01 AM;wlahti;Also seeing this same failure in fabric-ca-merge-end-2-end job: [https://jenkins.hyperledger.org/job/fabric-ca-merge-end-2-end-x86_64/280/console];;;","13/Aug/19 1:01 AM;vijaypunugubati;[~harrisob@us.ibm.com]I tried with node-version `10.16.2` on the sandbox still the error is observed [https://jenkins.hyperledger.org/sandbox/job/fabric-merge-end-2-end-x86_64/1/console] 
{code:java}
/00:12:38.374 npm version ======>
00:12:38.634 6.9.0
00:12:38.639 node version =======>
00:12:38.643 v10.16.2
{code};;;","13/Aug/19 4:03 AM;harrisob@us.ibm.com;could I get the debug log: /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debug.log;;;","13/Aug/19 5:25 AM;vijaypunugubati;In the current build process of end-2-end testing on fabric repo, we are not capturing logs for sdk-node tests while error check, at the same time we do capture on core sdk-node repo builds during error check.



I am testing on sanbox to capture the debug logs.;;;","13/Aug/19 6:22 AM;vijaypunugubati;Please check this log, ran on sandbox [https://jenkins.hyperledger.org/sandbox/job/fabric-end-2-end-daily-master-x86_64/4/console] to check debug.log

Fabric-end-2-end-daily-master-x86_64:

[https://jenkins.hyperledger.org/sandbox/view/All/job/fabric-end-2-end-daily-master-x86_64/lastFailedBuild/artifact/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debug.log]

Fabric-merge-end-2-end-x86_64:

[https://jenkins.hyperledger.org/sandbox/view/All/job/fabric-merge-end-2-end-x86_64/5/consoleFull];;;","14/Aug/19 12:19 AM;harrisob@us.ibm.com;Looks like the segfault is in the HSM simulator. Let's create a limited test for merge and daily that runs just runs the end to end without all the functional testing of NodeSDK.

Please point the merge job and daily jobs to run `gulp run-test-merge`.;;;","14/Aug/19 7:26 PM;vijaypunugubati;Please refer these CR's for above error fix

[https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/32860/]

[https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/32895/]

[https://gerrit.hyperledger.org/r/#/c/ci-management/+/32902/]

The error is resolved now on merge jobs, waiting for consistency in running the success of the sdk-node tests and close the issue. ;;;","15/Aug/19 11:28 AM;btl5037;The cucumber tests are failing on the Merge E2E job as well. I can replicate this error locally. I can also replicate the segfault locally when running the normal merge suite. As a workaround, disabling HSM tests in that test suite lets us get by, only missing the few tests related to HSM support. Can we just export the variable to disable the tests prior to calling gulp for now until we solve this:
{code:java}
export PKCS11_TESTS=false
{code};;;","15/Aug/19 12:51 PM;harrisob@us.ibm.com;Yes, good idea, disable the HSM test.;;;","15/Aug/19 12:51 PM;harrisob@us.ibm.com;Yes, good idea, disable the HSM test.;;;","15/Aug/19 11:42 PM;btl5037;[https://jenkins.hyperledger.org/sandbox/view/fabric/job/fabric-merge-end-2-end-x86_64/9/console]

Running with PKCS11 tests disabled in sandbox now;;;","30/Aug/19 1:21 AM;heatherp;[~vijaypunugubati] [~btl5037] - can this be closed off? I can see the CRs are all merged

 ;;;","10/Sep/19 2:17 AM;denyeart;[~vijaypunugubati] Closed, problem is resolved. Please re-open if something remains.

[~andrew-coleman] [~harrisob@us.ibm.com] HSM tests were disabled to get around the problem. How important is it to determine root cause and re-enable the tests?;;;",
node sdk client cannot communicate with a fabric ca server that has clientauth enabled,FABN-1234,39779,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,,siddjain,siddjain,11/May/19 1:54 AM,02/Dec/20 1:09 AM,28/Oct/23 3:25 AM,,,,,,,,,,,5,community-help-wanted,external,sdk-triaged,,,"This is related to my [email|[https://lists.hyperledger.org/g/fabric/topic/how_to_configure_node_app_to/31570609?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,31570609]] and [FABN-808|https://jira.hyperledger.org/browse/FABN-808]. It looks like a node app will never be able to communicate with a fabric ca server that has clientauth enabled. The support for this does not exist in the Node SDK. I looked at the Node SDK code and see following lines (Lines 291-302 in [FabricCAClient.js|[https://github.com/hyperledger/fabric-sdk-node/blob/c24f702d5746d0add2efd4123405b581fe2cc961/fabric-ca-client/lib/FabricCAClient.js#L291]]):
{quote}{{const requestOptions = {}}{{            hostname: self._hostname,}}{{            port: self._port,}}{{            path: self._baseAPI + api_method,}}{{            method: http_method,}}{{            headers: {}}{{                Authorization: self.generateAuthToken(requestObj, signingIdentity)}}{{            },}}{{            ca: self._tlsOptions.trustedRoots,}}{{            rejectUnauthorized: self._tlsOptions.verify,}}{{            timeout: CONNECTION_TIMEOUT}}{{        };}}
{quote}
showing that the client cert and key is never added to Http options. This should be fixed.",,crashmark93,flpautot,haggis,philippe06guerton,RicNtt,rossiluk,siddjain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i008",,,,Unset,Unset,,,,,,,,,,,"Connect to a fabric-ca-server that has clientauth enabled from a node app.

Observed:
Error: Calling enrollment endpoint failed with error [Error: write EPROTO 139713218058048:error:14094412:SSL routines:ssl3_read_bytes:sslv3 alert bad certificate:../deps/openssl/openssl/ssl/s3_pkt.c:1498:SSL alert number 42

139713218058048:error:1409E0E5:SSL routines:ssl3_write_bytes:ssl handshake failure:../deps/openssl/openssl/ssl/s3_pkt.c:659:

]

    at ClientRequest.request.on (/app/node_modules/fabric-ca-client/lib/FabricCAClient.js:487:12)

    at emitOne (events.js:116:13)

    at ClientRequest.emit (events.js:211:7)

    at TLSSocket.socketErrorListener (_http_client.js:401:9)

    at emitOne (events.js:116:13)

    at TLSSocket.emit (events.js:211:7)

    at onwriteError (_stream_writable.js:417:12)

    at onwrite (_stream_writable.js:439:5)

    at _destroy (internal/streams/destroy.js:39:7)

    at TLSSocket.Socket._destroy (net.js:568:3)

Expected:
No error",,Unset,,,,,,Unset,,Unset,,(Please add usage information),crashmark93,flpautot,haggis,philippe06guerton,RicNtt,rossiluk,siddjain,,,,,,,,,,,,,,,"25/Nov/19 10:21 PM;flpautot;+1

I was also trying to implement the mutual TLS authentication between the node SDK and the Fabric CA, but it just seems there are no options available. If there are any workarounds available I would gladly try them.;;;","06/Dec/19 1:24 AM;RicNtt;+1, same issue here,;;;",,,,,,,,,,,,,,,
BlockEventListener always gives blockNumber NaN,FABN-1235,39781,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,14gracel,nasht00,nasht00,12/May/19 9:10 PM,05/Jun/19 9:46 PM,28/Oct/23 3:25 AM,24/May/19 5:36 PM,v1.4.2,,,,,,,,,0,events,,,,,"I've been trying to follow the tutorials:
 * [https://fabric-sdk-node.github.io/release-1.4/tutorial-listening-to-events.html]
 * [https://fabric-sdk-node.github.io/release-1.4/tutorial-event-checkpointer.html]

To create a very simple BlockEventListener that prints the data. 

When trying to enable the default checkpointer, I noticed that:
 * It never replays
 * The checkpoint generated on the filesystem always says ""blockNumber"":null

I did some investigation already, I put a breakpoint in blockeventlistener.js:62

I see that this line fails:

const blockNumber = Number(block.number);

Because, according to the documentation for ""Block"" ( [https://fabric-sdk-node.github.io/release-1.4/global.html#Block__anchor] ), the block number should be under ""block.header.number"".",,harrisob@us.ibm.com,nasht00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00njz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,nasht00,,,,,,,,,dev,main,,,,,,,,,true,"23/May/19 6:22 AM;harrisob@us.ibm.com;The block number will be in at `block.header.number` with unfiltered blocks (full blocks)
and be at `block.number` with filtered blocks;;;","05/Jun/19 9:46 PM;nasht00;Hi thanks for the fix.

Anyone can clarify the process and ETA to be propagated onto the public NPM repository?

I'm trying to decide whether to wait or to implement things differently?;;;",,,,,,,,,,,,,,,
Discovery service endorsement plan with wrong fields,FABN-1236,39799,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,icarrascol,icarrascol,14/May/19 5:45 AM,23/May/19 6:29 AM,28/Oct/23 3:25 AM,23/May/19 6:29 AM,v1.4.0,,,,,,,,,0,discovery,fabric-node-sdk,node-SDK,,,"Hello everyone i am trying to use the discovery service with node sdk client the problem is that the endorsement fails because discovery retrieves an endorsement plan with missmatching name fields.
i am attaching the endorsing plan, the failing debug log as it sends the proposal to the same peer, and the channel.getChannelPeers() so u can see that the plan is setting the wrong names.


{code:java}
 {code}",,harrisob@us.ibm.com,icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14/May/19 5:41 AM;icarrascol;channelpeers;https://jira.hyperledger.org/secure/attachment/17230/channelpeers","14/May/19 5:40 AM;icarrascol;debuglog;https://jira.hyperledger.org/secure/attachment/17231/debuglog","14/May/19 5:40 AM;icarrascol;plan;https://jira.hyperledger.org/secure/attachment/17229/plan",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nnj:",,,,Unset,Unset,,,,,,,,,,,"add discovery:true to the peers on your network configuration
add client.setConfigSetting('initialize-with-discovery', true) after getting the client
add await channel.initialize({discover:true, asLocalhost:true}); after getting the channel

",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,icarrascol,,,,,,,,,,,,,,,,,,,,"23/May/19 6:28 AM;harrisob@us.ibm.com;The issue is that when using discovery and docker-compose and your application is not running in the virtual world than you must have unique ports on each of your peers when they get mapped to the ""localhost""

https://fabric-sdk-node.github.io/release-1.4/tutorial-discovery.html;;;",,,,,,,,,,,,,,,,
[fabric-network] BaseCheckpointer not exposed by the node client SDK,FABN-1237,39803,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,daanporon,daanporon,14/May/19 5:53 PM,24/May/19 5:26 PM,28/Oct/23 3:25 AM,24/May/19 5:26 PM,,,,,,,,,,0,,,,,,"I was following this documentation to implement your own Checkpointer by extending the BaseCheckpointer. But the BaseCheckpointer class isn't exposed by the node client at the moment.

[https://fabric-sdk-node.github.io/release-1.4/tutorial-event-checkpointer.html]

I can see that in the snapshot of 1.4.2 the FileSystemCheckpointer will be exposed",,daanporon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nof:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),daanporon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add typescript definitions for new lifecycle,FABN-1238,39816,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/May/19 2:53 AM,21/May/19 9:21 PM,28/Oct/23 3:25 AM,21/May/19 9:21 PM,,,,,,v2.0.0,,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nrb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Missing status of error when invoke submitTransaction with fabric-network api,FABN-1239,39847,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,logannwu,logannwu,16/May/19 5:45 PM,24/May/19 6:24 PM,28/Oct/23 3:25 AM,24/May/19 6:24 PM,v1.4.0,v1.4.1,,,,v1.4.0,,,,0,fabric-network,,,,,"Scenario:
 # Start a basic-network, and invoke submitTransaction in fabcar example. If chaincode throw a error with status set to as 503, the application cannot get the status field, just the error msg. 

!image-2019-05-16-16-45-43-138.png!

 

2.  The error output like this:

Error: No valid responses from any peers. 1 peer error responses:
 Invalid Smart Contract function name.
 at Transaction._validatePeerResponses (//fabric-samples/fabcar/javascript/node_modules/fabric-network/lib/transaction.js:205:10)
 at Transaction.submit (/fabric-samples/fabcar/javascript/node_modules/fabric-network/lib/transaction.js:134:33)
 at <anonymous>

3. As application developer, we want to get the error code (status) to distinguish the reason of error.

 ",,bestbeforetoday,logannwu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1226,,,,,,,"16/May/19 5:45 PM;logannwu;image-2019-05-16-16-45-43-138.png;https://jira.hyperledger.org/secure/attachment/17238/image-2019-05-16-16-45-43-138.png",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nxb:",,,,Unset,Unset,,,,,,,,,,,"1. git clone fabric-sample
2. cd fabcar && startfabric.sh
3. cd javascipt; modify invoke.js, change invoke function name from ""createCar' into 'createCar11', or reduce the input pramas number.
4. response error don't include status.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,logannwu,,,,,,,,,dev,main,,,,,,,,,true,"17/May/19 3:22 AM;bestbeforetoday;I am not currently working this issue.;;;","17/May/19 3:24 AM;bestbeforetoday;Perhaps additional information could be attached to the error thrown, such as an array of responses. A more specialised error type might be useful for this case.;;;","17/May/19 11:04 AM;logannwu;This is a bug,because chaincode response is
type Response struct {
    // A status code that should follow the HTTP status codes.
    Status int32 `protobuf:""varint,1,opt,name=status,proto3"" json:""status,omitempty""`
    // A message associated with the response code.
    Message string `protobuf:""bytes,2,opt,name=message,proto3"" json:""message,omitempty""`
    // A payload that can be used to include metadata with this response.
    Payload []byte `protobuf:""bytes,3,opt,name=payload,proto3"" json:""payload,omitempty""`
 
}
But Query API, evaluateTransaction failed, the error include status field.;;;","22/May/19 11:14 PM;bestbeforetoday;Do you have any preference on how this information is passed back? It would be useful to know how you would like to examine the error (for example: programmatically or just having a human readable message to aid debugging).

You should already be seeing the bad proposal response (including the status code and details of the peer) logged as a warning. This might be enough for somebody to debug the problem but certainly isn't ideal if you want to examine the status codes returned in your application code.

Two possible changes spring to mind:
 # Just include the status code (and possibly peer name?) in the error message to make it easier to debug without looking at the log, so your error would have read:

{noformat}
Error: No valid responses from any peers. 1 peer error responses:
503: Invalid Smart Contract function name.{noformat}

 # Augment the Error object that is thrown with some additional properties to make it easier to interrogate programmatically, such as adding an array of response objects to a _responses_ property on the error object.

 

Or we could make both of the above changes if they are useful. What do you think?

 ;;;","23/May/19 10:50 AM;logannwu;I think the first solution is just OK for app developer.
{noformat}
message: Invalid Smart Contract function name.
status: 503

{noformat};;;","23/May/19 7:50 PM;bestbeforetoday;I've made a change at [https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31506] so the message should come out looking something like:
{noformat}
No valid responses from any peers. 3 peer error responses:
    peer=peer1, status=503, message=Invalid Smart Contract function name.
    peer=peer2, status=500, message=Something went wrong
    peer=peer3, status=418, message=I'm a teapot{noformat};;;",,,,,,,,,,,
Node SDK compatibility changes for v2.0 ,FABN-1240,39855,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,andrew-coleman,andrew-coleman,16/May/19 11:52 PM,16/Jun/20 5:08 PM,28/Oct/23 3:25 AM,16/Jun/20 5:08 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"The new Fabric programming model defines a set of high-level abstractions and API for writing client applications  that invoke transactions in a smart contract.  The client side API has been implemented in the `fabric-network` package for the Node SDK.  This is designed to be the entry point for developers who need to invoke smart contracts.

The `fabric-client` package will continue to exist as a low-level 'implementation' API, and will no longer be intended to be used directly by the client developer.  As such, it will be deprecated for this purpose.  The `fabric-client` API and implementation code will be radically simplified and rationalised in order to improve maintainability.  The `fabric-network` API will continue to pick up capabilities (i.e. some of the admin APIs) in order to support this transition.

This Epic contains a number of proposed changes to the node SDK that take advantage of the major version bump from v1.4.x to v2.0.0.  Some of these changes will mean that applications written using the low-level `fabric-client` (at v1.x) APIs might need code changes to continue working with the v2.0.0 `fabric-client` module.  It is intended that client applications written to the high-level `fabric-network` API will continue to work unchanged when moving to the v2 SDK.

 

 ",,andrew-coleman,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-15337,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-14,,Node SDK compatibility changes for v2.0 ,To Do,No,,Unset,No,,,"1|i00nyv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove KV store from fabric-client 2.0.0,FABN-1241,39856,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,andrew-coleman,andrew-coleman,16/May/19 11:57 PM,25/Oct/19 2:50 AM,28/Oct/23 3:25 AM,25/Oct/19 2:50 AM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"The need for a key/value store in the `fabric-client` API is no longer relevant now that the Wallet is available in the `fabric-network` API.

 ",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00nz3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move support for CCP from fabric-client to fabric-network,FABN-1242,39857,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,andrew-coleman,andrew-coleman,17/May/19 12:03 AM,22/Jan/20 11:48 PM,28/Oct/23 3:25 AM,22/Jan/20 11:48 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"The common-connection profile (CPP) is a high-level abstraction to simplify the definition of fabric networks to the SDK.  To simplify the low-level fabric-client API and make it as stateless as possible, the API (& implementation) to parse and process the CCP should be moved from `fabric-client` to `fabric-network`.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00nzb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consistent API signature in fabric-client,FABN-1243,39858,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,andrew-coleman,andrew-coleman,17/May/19 12:07 AM,25/Oct/19 2:54 AM,28/Oct/23 3:25 AM,25/Oct/19 2:54 AM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"In order to simplify and rationalise the fabric-client API, class methods will be refactored to provide a consistent signature:
 * All signatures will take a request object and return a response object
 * use javascript parameter syntax to reduce code and test code for parameter validation and default values
 * ChanneEventHub will only have one callback with two parms (error, response)",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00nzj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Break apart compound methods into single action APIs,FABN-1244,39859,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,andrew-coleman,andrew-coleman,17/May/19 12:13 AM,25/Oct/19 3:17 AM,28/Oct/23 3:25 AM,25/Oct/19 3:17 AM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"The `fabric-client` API has grown in complexity with many 'convenience' methods that combine actions.  In some cases this is at odds with some of the higher level abstractions in the `fabric-network` API that implements the Fabric programming model.  This story will break apart these compound methods into single action APIs
 * build protobuf
 * sign
 * send

All of the compound steps will be moved up into `fabric-network`

 ",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00nzr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Decouple user/identity from client object,FABN-1245,39860,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,andrew-coleman,andrew-coleman,17/May/19 12:17 AM,25/Oct/19 3:01 AM,28/Oct/23 3:25 AM,25/Oct/19 3:01 AM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"As part of the simplification and rationalisation of `fabric-client`, we should decouple the user/identity object from the client object.
 * Removes 'state' from `fabric-client` API
 * Identity will be passed on transaction context
 * The user/identity code will be moved to `fabric-common`
 * This is required in order to support the integration of IDEMix into the Node SDK",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,,,FABN-1,FABN-879,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00nzz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consistent lifecycle management and network objects,FABN-1246,39861,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,andrew-coleman,andrew-coleman,17/May/19 12:19 AM,25/Oct/19 3:13 AM,28/Oct/23 3:25 AM,25/Oct/19 3:13 AM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"* Allow reuse of Client object instances from `fabric-network`, and therefore Channels
 * Channel will own peers/orderers and not shared across channels
 * Allow both new and reuse ChannelEventHubs
 * Connect methods to start the connection to remote
 * Have a check connection or reconnect

 ",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00o07:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Push proto implementations down into fabric-proto package,FABN-1247,39862,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,andrew-coleman,andrew-coleman,17/May/19 12:21 AM,16/Jun/20 5:07 PM,28/Oct/23 3:25 AM,16/Jun/20 5:07 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,Move all protobuf code into `fabric-proto` with a simplified API around its implementation.  This will also reduce the amount of code duplication that is currently in `fabric-client`,,andrew-coleman,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00o0f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,,,,,,,,,,,,,,,,,,,,"16/Jun/20 5:07 PM;bestbeforetoday;I think we've done whatever we're going to do on this for v2.0 with the refactor of the low level;;;",,,,,,,,,,,,,,,,
Policy syntax consistent with fabric and CLI,FABN-1248,39863,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,caroline-church,andrew-coleman,andrew-coleman,17/May/19 12:23 AM,13/Jan/21 12:04 AM,28/Oct/23 3:25 AM,13/Jan/21 12:04 AM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"Currently, `fabric-client` uses a JSON based endorsement policy syntax that is not compatible with any other fabric component or SDK. This should be removed and replaced by the same syntax used by fabric and the CLI.
 * Fabric and cli’s syntax is smaller and simpler
 * Easier to transport between organizations",,andrew-coleman,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i00zll:2",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,lesleyannj,,,,,,,,,,,,,,,,,,,,"13/Jan/21 12:04 AM;lesleyannj;Backlog Review - Closing.;;;",,,,,,,,,,,,,,,,
Fix README to run tests correctly,FABN-1249,39907,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,yuki-kon,yuki-kon,yuki-kon,18/May/19 6:25 AM,06/Jun/19 2:34 AM,28/Oct/23 3:25 AM,06/Jun/19 2:34 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"fabric-sdk-node/README.md requires some minor fixes to run tests correctly.

- Command to generate the required crypto material
README has the instruction below.
{noformat}
`install-and-generate-certs` to generate the required crypto material used by the tests
{noformat}
Actually, the `gulp` command is used to generate crypto material. We need to make it clear in the README.

- Process to build fabric-nodeenv
The integration test and scenario test require the fabric-nodeenv docker image.
We need to add the step to build the fabric-nodeenv before running tests.
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1180,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00o6v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yuki-kon,,,,,,,,,,,,,,,,,,,,,"06/Jun/19 2:34 AM;yuki-kon;README was improved by https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/31534/;;;",,,,,,,,,,,,,,,,
Modify FabricCAClient.js file to convert to ES6 syntax,FABN-1250,39911,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Won't Do,lancelot96,lancelot96,lancelot96,20/May/19 12:53 PM,13/Jan/21 12:28 AM,28/Oct/23 3:25 AM,13/Jan/21 12:28 AM,v2.0.0,,,,,v2.0.0,,,,0,external,sdk-triaged,,,,"A task assigned by [~davidkhala].
 # Change the function that returns `promise` to async function
 # Change the format string to a template string
 # Use object literals ",,davidkhala,lancelot96,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,FABN-1219,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zlm:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,lancelot96,lesleyannj,,,,,,,,,,,,,,,,,,,"22/May/19 10:23 AM;davidkhala;Would you mind add your gerrit change link as comment here? then it will be easily tracked. ;;;","22/May/19 10:24 AM;lancelot96;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31438;;;","10/Dec/20 9:46 PM;lesleyannj;[~lancelot96] we are reviewing the backlog.  Can this jira be closed?;;;","12/Dec/20 12:02 AM;davidkhala;I think it can be stale. [~lesleyannj];;;","13/Jan/21 12:28 AM;lesleyannj;Backlog Review - Closing.;;;",,,,,,,,,,,,
Unable to specify startBlock and endBlock with addContractListener,FABN-1251,39963,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,florianc,florianc,21/May/19 4:28 PM,10/Jul/19 6:23 PM,28/Oct/23 3:25 AM,03/Jul/19 5:46 PM,,,,,,,,,,0,fabric-network,node-SDK,,,,"Package: fabric-network 1.4.1

Function: _addContractListener_

When using _addContractListener_ , the [documentation|https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Contract.html#addContractListener__anchor] says that we can specify a start block and an end block, as we can for fabric-client [registerChaincodeEvent|https://fabric-sdk-node.github.io/release-1.4/ChannelEventHub.html#registerChaincodeEvent].

However, I am not able to find how to pass these parameters. Indeed, documentation has +absolutely no information+ about it.

Moreover, I checked what +I believe+ is the [function definition|https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/impl/event/contracteventlistener.js] (sorry if I am incorrect). It does not seem that it takes into account any option (at least for start and end block) when creating the listener.

Here is a sample code I tried to use:
{code:java}
try {
            contract.addContractListener(msg.payload.listenerName, ""createBadge"",
                (error, event, blockNumber, txId) => {
                    console.log(error);
                    console.log(event.payload.toString());
                    console.log(blockNumber);
                    console.log(txId);
                    node.send(event);
                }, {
                    filtered: false,
                    //start: 10
                    startBlock: 10
                });
        } catch (error) {
            return error;
}
{code}
None of start or startBlock, as well as end or endBlock, works.

So my question is: Is it doable? If so, how can we do it? Can someone update the documentation?
 If not doable, what is the point using it instead of the fabric-client? Ok it is simpler, but it does not provide the useful functionalities we need from a client perspective.",,14gracel,florianc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ofr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,florianc,,,,,,,,,dev,main,,,,,,,,,true,"21/Jun/19 6:57 PM;14gracel;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32017;;;","10/Jul/19 6:23 PM;florianc;Hi. I am looking into this again since the issue has been closed, but there is still no documentation about start/end block option even though it is the purpose of the commit. Can you explain how to achieve that?;;;",,,,,,,,,,,,,,,
Missing Channel API call to get total number of transaction count,FABN-1252,39973,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,KameshPalani,KameshPalani,21/May/19 6:47 PM,23/May/19 6:36 AM,28/Oct/23 3:25 AM,23/May/19 6:36 AM,v1.2.0,,,,,,,,,0,common-components,Ledger,node-SDK,,,We need or I don't see an API to understand the total transaction count from ledger. Can someone please kindly assist,,harrisob@us.ibm.com,KameshPalani,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-1329,,,No,,Unset,No,,,"1|i00ohr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,KameshPalani,,,,,,,,,,,,,,,,,,,,"23/May/19 6:36 AM;harrisob@us.ibm.com;use the ChannelEventHub and a block listener with startBlock: 0 to see all blocks and transactions;;;",,,,,,,,,,,,,,,,
FileKeyValueStore sometimes resolves with empty content,FABN-1253,40061,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Environment Issue,harrisob@us.ibm.com,mseshachalam,mseshachalam,22/May/19 10:31 PM,25/Oct/19 3:12 AM,28/Oct/23 3:25 AM,25/Oct/19 3:12 AM,,,,,,,,,,0,sdk-triaged,,,,,"I have seen it resolve to empty content even though file has content and causes

Error: Cannot save null userContext.
server:     at Client.setUserContext (/home/Akhil/stream-x/backend/node_modules/fabric-client/lib/Client.js:1519:10)
server:     at FabricControllerAdapter.<anonymous> (/home/Akhil/stream-x/backend/node_modules/@worldsibu/convector-common-fabric-helper/src/client.helper.ts:147:23)

 

https://github.com/hyperledger/fabric-sdk-node/blob/0d24cec10f7a3e0153fcf3f0158a89c5eaa0cfab/fabric-client/lib/impl/FileKeyValueStore.js#L70",,harrisob@us.ibm.com,mseshachalam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00orw:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,mseshachalam,,,,,,,,,,,,,,,,,,,,"23/May/19 2:23 PM;mseshachalam;I have tried reading file with native `fs` and also observed the same behavior, resolving  with empty string.

I didnt have many files open or anything like that. Probably a race condition between reads and writes.;;;","24/May/19 3:14 PM;mseshachalam;A temporary workaround is to write(not atomic) to a temp file and rename(atomic action) it to original name.;;;","30/May/19 1:31 AM;harrisob@us.ibm.com;Are you still seeing this, could I get a trace of the failure
export HFC_LOGGING='{""debug"":""console""}';;;",,,,,,,,,,,,,,
Lifecycle APIs test is failing constantly as chaincode installation failed on peers,FABN-1254,40132,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,yuki-kon,sambhavdutt,sambhavdutt,24/May/19 11:37 PM,29/May/19 1:09 AM,28/Oct/23 3:25 AM,29/May/19 1:09 AM,v2.0.0,,,,,,,,,0,ci-failure,,,,,"Lifecycle APIs test is failing constantly as chaincode installation failed on peer1 and peer2, observed invalid label 'mychaincode:v1'

*Branch:* master
*Platform:* x86_64
*Error Snippet:*

{code:java}
14:44:03 not ok 1435 Failed to Install on peer1, Error:Error: failed to invoke backing implementation of 'InstallChaincode': could not parse as a chaincode install package: invalid label 'mychaincode:v1'. Label must be non-empty, can only consist of alphanumerics, '_', and '-' and can only begin with alphanumerics
14:44:03   ---
14:44:03     operator: fail
14:44:03     at: Test.test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/test.js:673:11)
14:44:03     stack: |-
14:44:03       Error: Failed to Install on peer1, Error:Error: failed to invoke backing implementation of 'InstallChaincode': could not parse as a chaincode install package: invalid label 'mychaincode:v1'. Label must be non-empty, can only consist of alphanumerics, '_', and '-' and can only begin with alphanumerics
14:44:03           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:226:54)
14:44:03           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
14:44:03           at Test.fail (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:319:10)
14:44:03           at Test.bound [as fail] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
14:44:03           at Test.test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/test.js:673:11)
14:44:03           at <anonymous>
14:44:03           at process._tickCallback (internal/process/next_tick.js:188:7)
14:44:03   ...
{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/5404/consoleFull",,bestbeforetoday,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,d693bc3,Unset,No,,,"1|i00p6c:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,yuki-kon,,,,,,dev,main,,,,,,,,,true,"25/May/19 6:39 AM;yuki-kon;This error happens because the character restrictions for package label was merged by FAB-14597.
Label must be non-empty, can only consist of alphanumerics, '_', and '-' and can only begin with alphanumerics.

fabric-client creates a label for a Chaincode in the constrictor of the Chaincode class. The invalid character ‘:’ is used in the label.
{code:JavaScript}
                this._label = name + ':' + version;
{code}
https://github.com/hyperledger/fabric-sdk-node/blob/4d5ff98557f725aaa89e2042b9fe8cd37633f47a/fabric-client/lib/Chaincode.js#L82

The separator should be replaced with “_” to satisfy the restrictions.;;;","25/May/19 6:43 AM;yuki-kon;CR is here. [https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/31551/];;;",,,,,,,,,,,,,,,
ES6 syntax apply in typeScript test,FABN-1255,40166,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Duplicate,davidkhala,davidkhala,davidkhala,27/May/19 1:03 PM,28/May/20 11:38 AM,28/Oct/23 3:25 AM,28/May/20 11:38 AM,v1.4.2,v2.0.0,,,,,,,,0,external,sdk-triaged,,,,"as titled, we could improve via:
- use less .then clause, use async/await",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-681,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pd0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,,,,,,,"27/May/19 3:33 PM;davidkhala;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31556;;;",,,,,,,,,,,,,,,,
'discovery-as-localhost' config setting should be false,FABN-1256,40184,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,29/May/19 1:20 AM,04/Jun/19 3:41 AM,28/Oct/23 3:25 AM,04/Jun/19 3:41 AM,v1.4.0,,,,,v1.4.2,,,,1,,,,,,'discovery-as-localhost' config setting should be false by default. Or we should change the tutorial and API docs to reflect that the default is true. This was changed in 1.4.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pgs:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,"29/May/19 1:43 AM;harrisob@us.ibm.com;I would be happy to work on this, but will need your take on what should be done ?;;;",,,,,,,,,,,,,,,,
Reconnecting EventHub causes timeout error,FABN-1257,40204,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,yoheiueda,yoheiueda,yoheiueda,29/May/19 11:35 PM,18/Mar/20 2:43 AM,28/Oct/23 3:25 AM,30/Jul/19 10:00 AM,,,,,,,,,,0,node-SDK,,,,,"I observed a timeout error when I disconnect a EventHub connection, and immediately  reconnect the same EventHub connection. The timeout error occurs in 45 seconds after EventHub is reconnected. This error shutdown the reconnected EventHub connection.

{{2019-05-29T13:30:35.795Z - error: [ChannelEventHub.js]: _connect - timed out after:45000}}

I attached a snippet to reproduce the problem below.  If I uncomment the sleep between the disconnect and connect, the problem disappear.
{code:javascript}
const sdk = require('fabric-client');

async function main() {
    const client = await sdk.loadFromConfig('connection-profile.yaml');
    const channel = client.getChannel('mychannel');
    const eventhub = channel.getChannelEventHub('peer1.org1.example.com');
    eventhub._peer._request_timeout = 3000; // Shortens timeout for debugging

    eventhub.connect(false);
    await sleep(1000);
    eventhub.disconnect();

    //await sleep(1000);

    eventhub.connect(false);
    await sleep(5000);
    eventhub.disconnect();
}

function sleep(msec) {
    return new Promise(resolve => setTimeout(resolve, msec));
}

main().then(() => {
    process.exit(0);
}).catch(err => {
    console.error(err);
    process.exit(1);
});{code}
Simplified debug logs are as follows.
{quote}2019-05-29T13:30:32.791Z - debug: [ChannelEventHub.js]: disconnect - start - hub:1
 2019-05-29T13:30:32.791Z - debug: [ChannelEventHub.js]: _disconnect - start - hub:1
 2019-05-29T13:30:32.791Z - debug: [ChannelEventHub.js]: _disconnect - called due to:: ChannelEventHub has been shutdown, peer:localhost:7051
 2019-05-29T13:30:32.791Z - debug: [ChannelEventHub.js]: _shutdown - shutdown existing stream
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: _disconnect - end – called due to:: ChannelEventHub has been shutdown, peer:localhost:7051
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: connect - start - hub:1
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: connect - start peerAddr:localhost:7051
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: connect - filtered block stream set to:true
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: connect - signed event:false
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: _connect - start - Wed May 29 2019 22:30:32 GMT+0900 (Japan Standard Time)
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: _checkReplay - start
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: _checkReplay - end
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: _connect - start stream: 2
 2019-05-29T13:30:32.792Z - debug: [ChannelEventHub.js]: _connect - options \{""grpc.http2.min_time_between_pings_ms"":120000,""grpc.keepalive_timeout_ms"":20000,""grpc.keepalive_time_ms"":120000,""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.http2.max_pings_without_data"":0,""grpc.keepalive_permit_without_calls"":1,""name"":""peer1.org1.example.com"",""grpc.ssl_target_name_override"":""peer1.org1.example.com"",""grpc.default_authority"":""peer1.org1.example.com""}
 2019-05-29T13:30:32.798Z - debug: [ChannelEventHub.js]: _connect - end stream: 2
 2019-05-29T13:30:32.798Z - debug: [ChannelEventHub.js]: connect - end localhost:7051
 {color:#ff8b00}*2019-05-29T13:30:32.799Z - debug: [ChannelEventHub.js]: on.error - block stream:1 _current_stream:2 peer:localhost:7051*{color}
 {color:#ff8b00}*2019-05-29T13:30:32.799Z - debug: [ChannelEventHub.js]: on.error - incoming message was from a cancelled stream*{color}
 {color:#ff8b00}*2019-05-29T13:30:32.799Z - debug: [ChannelEventHub.js]: on.error - Wed May 29 2019 22:30:32 GMT+0900 (Japan Standard Time) Error: 1 CANCELLED: Cancelled*{color}
 {color:#ff8b00}*2019-05-29T13:30:32.799Z - debug: [ChannelEventHub.js]: on status - status received: \{""code"":1,""details"":""Cancelled"",""metadata"":{""_internal_repr"":{}}} peer:localhost:7051*{color}
{quote}
 

The problem here is that an incoming cancel message for the first stream is accidentally handled during the initialization of the second stream.  The current code for handling this situation reset connection initialization as follows:
{quote}{{self._connect_running = false;}}
 {{clearTimeout(connection_setup_timeout);}}
{quote}
Note that the first line resets a value in object, but the second line refers to a local variable in the method call of _{{connect()}} for the first stream.

I will submit a CR to fix this issue.

 ",,heatherp,xnxiexn,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1512,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pks:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,xnxiexn,yoheiueda,,,,,,,,dev,release-1.4,main,,,,,,,,true,"29/May/19 11:50 PM;yoheiueda;My CR is: https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31589;;;","30/Jul/19 12:30 AM;heatherp;[~yoheiueda] can this be closed off? I can see your CR was merged
I'm attempting to clean up the number of open node-SDK bugs, which is why I'm asking;;;","30/Jul/19 10:02 AM;yoheiueda;[~heatherp]

I closed this issue. Thank you!;;;",,,,,,,,,,,,,,
How a new created channel jion a system channel,FABN-1258,40212,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,ritel126,ritel126,30/May/19 11:40 AM,05/Aug/19 9:01 PM,28/Oct/23 3:25 AM,05/Aug/19 9:01 PM,,,,,,,,,,0,,,,,,"When I do the operation of add organization to a channel. The organization created successfully and it can jion the exist channel. invoke and query chaincode function all worked normal.

But then I meet a problem: The new organization can not create a channel by itself. 

Maybe the reason is that the new organization hasn't join the system channel. But how to join a system channel? Anyone can help me ?

Thank you very much! 

 

Here is the log of orderer pod:

2019-05-30 10:10:13.326 CST [common.configtx] policyForItem -> DEBU 7da Getting policy for item Application with mod_policy ChannelCreationPolicy

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7db Manager Channel looking up path []

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7dc Manager Channel has managers Orderer

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7dd Manager Channel has managers Application

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7de Manager Channel looking up path [Application]

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7df Manager Channel has managers Orderer

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7e0 Manager Channel has managers Application

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7e1 Manager Channel/Application looking up path []

2019-05-30 10:10:13.326 CST [policies] Manager -> DEBU 7e2 Manager Channel/Application has managers Org1MSP

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7e3 == Evaluating *policies.implicitMetaPolicy Policy /Channel/Application/ChannelCreationPolicy ==

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7e4 This is an implicit meta policy, it will trigger other policy evaluations, whose failures may be benign

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7e5 == Evaluating *cauthdsl.policy Policy /Channel/Application/Org1MSP/Admins ==

{color:#de350b}2019-05-30 10:10:13.326 CST [cauthdsl] deduplicate -> ERRO 7e6 Principal deserialization failure (MSP Org2MSP is unknown) for identity 0{color}

2019-05-30 10:10:13.326 CST [cauthdsl] func1 -> DEBU 7e7 0xc000af75f0 gate 1559182213326664953 evaluation starts

2019-05-30 10:10:13.326 CST [cauthdsl] func2 -> DEBU 7e8 0xc000af75f0 signed by 0 principal evaluation starts (used [false])

2019-05-30 10:10:13.326 CST [cauthdsl] func2 -> DEBU 7e9 0xc000af75f0 principal evaluation fails

2019-05-30 10:10:13.326 CST [cauthdsl] func1 -> DEBU 7ea 0xc000af75f0 gate 1559182213326664953 evaluation fails

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7eb Signature set did not satisfy policy /Channel/Application/Org1MSP/Admins

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7ec == Done Evaluating *cauthdsl.policy Policy /Channel/Application/Org1MSP/Admins

2019-05-30 10:10:13.326 CST [policies] func1 -> DEBU 7ed Evaluation Failed: Only 0 policies were satisfied, but needed 1 of [ Org1MSP.Admins ]

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7ee Signature set did not satisfy policy /Channel/Application/ChannelCreationPolicy

2019-05-30 10:10:13.326 CST [policies] Evaluate -> DEBU 7ef == Done Evaluating *policies.implicitMetaPolicy Policy /Channel/Application/ChannelCreationPolicy

2019-05-30 10:10:13.326 CST [orderer.common.broadcast] ProcessMessage -> WARN 7f0 [channel: xchannel-2] Rejecting broadcast of config message from 172.17.94.1:56650 because of error: error authorizing update: error validating DeltaSet: policy for [Group]  /Channel/Application not satisfied: Failed to reach implicit threshold of 1 sub-policies, required 1 remaining

2019-05-30 10:10:13.326 CST [orderer.common.server] func1 -> DEBU 7f1 Closing Broadcast stream

2019-05-30 10:10:13.326 CST [comm.grpc.server] 1 -> INFO 7f2 streaming call completed \{""grpc.service"": ""orderer.AtomicBroadcast"", ""grpc.method"": ""Broadcast"", ""grpc.peer_address"": ""172.17.94.1:56650"", ""grpc.code"": ""OK"", ""grpc.call_duration"": ""27.296026ms""}

2019-05-30 10:16:28.931 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f3 client/metadata fetching metadata for all topics from broker kafka-2.kafka:9092

2019-05-30 10:16:29.355 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f4 client/metadata fetching metadata for all topics from broker kafka-3.kafka:9092

2019-05-30 10:18:03.818 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f5 client/metadata fetching metadata for all topics from broker kafka-0.kafka:9092

2019-05-30 10:18:04.132 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f6 client/metadata fetching metadata for all topics from broker kafka-0.kafka:9092

2019-05-30 10:26:28.931 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f7 client/metadata fetching metadata for all topics from broker kafka-2.kafka:9092

2019-05-30 10:26:29.355 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f8 client/metadata fetching metadata for all topics from broker kafka-3.kafka:9092

2019-05-30 10:28:03.818 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7f9 client/metadata fetching metadata for all topics from broker kafka-0.kafka:9092

2019-05-30 10:28:04.132 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7fa client/metadata fetching metadata for all topics from broker kafka-0.kafka:9092

2019-05-30 10:36:28.930 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7fb client/metadata fetching metadata for all topics from broker kafka-2.kafka:9092

2019-05-30 10:36:29.355 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7fc client/metadata fetching metadata for all topics from broker kafka-3.kafka:9092

2019-05-30 10:38:03.820 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7fd client/metadata fetching metadata for all topics from broker kafka-0.kafka:9092

2019-05-30 10:38:04.133 CST [orderer.consensus.kafka.sarama] RefreshMetadata -> DEBU 7fe client/metadata fetching metadata fo",,ritel126,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pmc:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ritel126,sstone1,,,,,,,,,,,,,,,,,,,,"05/Aug/19 9:01 PM;sstone1;[~ritel126] this is not a bug in the Node.js SDK, this is a usage question - please can you ask this question on the Fabric mailing list or on Stack Overflow.;;;",,,,,,,,,,,,,,,,
Request Timeout,FABN-1259,40217,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,Jakeeyturner,Jakeeyturner,30/May/19 8:10 PM,11/Jun/19 5:26 PM,28/Oct/23 3:25 AM,11/Jun/19 5:26 PM,,,,,,,,,,0,,,,,,"When I submit a transaction using _fabric-network_ which takes a long time (over 45 seconds), I receive the error:

 
{code:java}
No peers available to query. Errors: [{""message"":""REQUEST_TIMEOUT"",""stack"":""Error: REQUEST_TIMEOUT\n\tat Timeout.sendProposal.setTimeout (/Users/jake/Documents/blockchain-vscode-extension/client/node_modules/fabric-network/node_modules/fabric-client/lib/Peer.js:120:19) \n\tat ontimeout (timers.js:427:11)\n\tat tryOnTimeout (timers.js:289:5)\n\tat listOnTimeout (timers.js:252:5)\n\tat Timer.processTimers (timers.js:212:10)"",""vslsStack"":[{},{},{},{},{}]}]
{code}
 

Before I submit the transaction I can change this 45 second timeout using:

 
{code:java}
const client: Client = this.gateway.getClient();
client.setConfigSetting('request-timeout', 9999999); // Changes the timeout
{code}
  

(Note: CORE_CHAINCODE_EXECUTETIMEOUT must be set, in the docker-compose, otherwise another error will be thrown).

 

Some work could be done around this so that I don't need to call getClient in order to set a transaction timeout.",,andrew-coleman,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pn8:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,Jakeeyturner,,,,,,,,,dev,main,,,,,,,,,true,"11/Jun/19 5:26 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31717];;;",,,,,,,,,,,,,,,,
npm run compile is failing consistently in gulp tests,FABN-1260,40220,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,sambhavdutt,sambhavdutt,30/May/19 11:36 PM,31/May/19 3:15 AM,28/Oct/23 3:25 AM,31/May/19 3:15 AM,v2.0.0,,,,,,,,,0,ci-failure,,,,,"npm run compile is failing consistently in gulp tests, observed error 

_+test/typescript/test.ts(744,2): error TS2563: The containing function or module body is too large for control flow analysis in gulp tests+_

*Branch:* master
*Platform:* x86_64
*Error Snippet:*

{code:java}
*12:56:41* > tsc --project test/typescript*12:56:41* *12:56:45* test/typescript/test.ts(744,2): error TS2563: The containing function or module body is too large for control flow analysis.*12:56:45* npm ERR! code ELIFECYCLE*12:56:45* npm ERR! errno 2*12:56:45* npm ERR! fabric-sdk-node@2.0.0-snapshot compile: `tsc --project test/typescript`*12:56:45* npm ERR! Exit status 2*12:56:45* npm ERR! *12:56:45* npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot compile script.*12:56:45* npm ERR! This is probably not a problem with npm. There is likely additional logging output above.*12:56:45* *12:56:45* npm ERR! A complete log of this run can be found in:*12:56:45* npm ERR!     /home/jenkins/.npm/_logs/2019-05-29T16_56_45_654Z-debug.log*12:56:45* [16:56:45] 'compile' errored after 4.92 s*12:56:45* [16:56:45] Error in plugin ""gulp-shell""*12:56:45* Message:*12:56:45*     Command `npm run compile` failed with exit code 2*12:56:45* [16:56:45] 'run-end-to-end' errored after 6.74 s*12:56:45* [16:56:45] Error in plugin ""run-sequence(compile)""*12:56:45* Error*12:56:45*     at finish (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/run-sequence/index.js:82:12)*12:56:45*     at Gulp.onError (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/run-sequence/index.js:93:3)*12:56:45*     at emitOne (events.js:121:20)*12:56:45*     at Gulp.emit (events.js:211:7)
 
{code}

*Build Log*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/5430/",,btl5037,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,309dc10485fb83c7157f7f46dc2d09228d18515e,Unset,No,,,"1|i00po4:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Discovery service assigned peer names dont map correctly,FABN-1261,40254,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,icarrascol,icarrascol,01/Jun/19 1:58 AM,02/Dec/20 12:50 AM,28/Oct/23 3:25 AM,01/Dec/20 11:18 PM,,,,,,,,,,1,discovery,external,fabric-node-sdk,sdk-triaged,v1.4.1,"using Node SDK and fabric v 1.4.1.

When service discovery is active  and runs it assigns its own names to the peers consisting on hostname:port, when you use a configuration file  and you are not working in localhost and do an invoke request from the sdk when it tries the endorsing it fails because the names assigned by discovery dont map to the host ips.
 The real names should be the hostname as assigned in the network config file for it to be mapped correctly to the real url and not hostname:port.",,icarrascol,lesleyannj,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:qz",,,,Unset,Unset,,,,,,,,,,,"-mount the hyperledger network in different hosts
- on node sdk  network config, asign the respective urls using the host ip for orderers, peers and ca.
- activate service discovery on the sdk using asLocalhost:false",,Unset,,,,,,Unset,,Unset,,(Please add usage information),icarrascol,lesleyannj,nekia,,,,,,,,,,,,,,,,,,,"01/Dec/20 11:18 PM;lesleyannj;Restructured in v2.0;;;",,,,,,,,,,,,,,,,
[fabric-network] Guaranteed event delivery while application is running only possible if checkpointing is used,FABN-1262,40269,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,davidkel,davidkel,03/Jun/19 4:08 PM,09/Oct/19 10:16 PM,28/Oct/23 3:25 AM,09/Oct/19 10:16 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"As fabric-network controls the event hubs and their registration, unless checkpointing is enabled then there is a window of opportunity where loss of an event hub connection and registration of a new event hub connection 1 or more blocks could have been committed and as such a block could be missed and thus events could be missed. 

If developers want to do their own checkpoint management (not using the checkpoint interface) for example they already track the block number as part of handling the event received and when the application restarts will provide that block number as part of the registration however they cannot do this while the application is up and running as they don't have control of the event hub registration on a failure (unless they somehow deregister the listener if an error is received and re-register the listener but this is getting complex and it's not clear if there could be timing consequences between the application code and the fabric-network code in facilitating this)

The issue here is : Should checkpointing be the ONLY way to provide guaranteed event delivery and if so then does allowing a user to specify startBlock (or even endBlock) value have any practical value ?

Maybe a solution is that unless a checkpointing request is explicitly made, fabric-network implements an in memory checkpoint mechanism that is used to ensure that while an application is running events are guaranteed to be delivered. Then the application can decide whether to implement a checkpoint interface or pass startBlock when registering depending on how they want to do things.

If not then it should be explicitly documented on what is required to achieve guaranteed event delivery on a practical level, both for development testing and production (ie file system checkpoint is not a practical option in most cases)",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00pws:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK 1.4 On Node 10 Is failing on HSM tests,FABN-1263,40357,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Not Supported,,davidkel,davidkel,04/Jun/19 4:50 PM,01/Nov/19 7:04 PM,28/Oct/23 3:25 AM,01/Nov/19 7:04 PM,v1.4.1,,,,,v1.4.2,,,,0,sdk-triaged,,,,,"To be able to support node 10 for the node sdk 1.4 there needs to be a clean build of the 1.4 branch. The only build to run under Node 10.15.3 is a daily build, but this is constantly failing when it attempts to perform the first HSM test through the fabric-network tests.

{noformat}
23:31:40 ok 484 Successfully instantiated chaincode on the channel
23:31:40 # 
23:31:40 
23:31:40 ****** Network End-to-end flow: import identity into wallet using hsm *****
23:31:40 
23:31:40 /tmp/jenkins5334209965162965844.sh: line 119: 24892 Segmentation fault      (core dumped) gulp run-end-to-end
23:31:40 --------> ERROR!!! gulp end-2-end tests failed for node 10.15.3 <---------
23:31:40 Build step 'Execute shell' marked build as failure
{noformat}

This has been seen more than once but the builds are not kept long enough so not worth putting a build link in. But they all fail with a segmentation fault.

Because this breaks the build is also not possible to confirm if non HSM tests that may run subsequently pass either.",,davidkel,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1386,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i00qbo:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,davidkhala,,,,,,,,,,,,,,,,,,,,"19/Sep/19 9:56 PM;davidkel;This is due to mismatch of libcrypto versions in the ssl package. softhsm is using 1 version and node uses another. softhsm should be compiled to use the headers from the version of node being used and explicitly NOT link to libcrypto (ie no -lcrypto) when it is built. This will ensure that when softhsm2 library is loaded into the node address space that they correctly use the same version of crypto capabilities and them the HSM tests will pass.;;;","27/Sep/19 12:57 AM;davidkel;The ideal time to address this would be for the work to move from jenkins to azure pipelines.;;;","14/Oct/19 2:55 PM;davidkhala;PS: I saw similar error including ""Segmentation fault      (core dumped)"" even for ubuntu:bionic machine with  nodejs 8.16 and softHSM2 installed (via APT);;;",,,,,,,,,,,,,,
Ensure that gateway is connected and prevent multiple connections on a single gateway,FABN-1264,40437,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,florianc,florianc,06/Jun/19 6:41 PM,18/Jun/20 7:21 PM,28/Oct/23 3:25 AM,18/Jun/20 7:21 PM,v1.4.1,v2.0.0,,,,v1.4.2,v2.0.0,,,0,external,sdk-triaged,,,,"Hello. This issue is raised after [this discussion|https://chat.hyperledger.org/channel/fabric-sdk-node?msg=s49JsNpPBWa22ynyg]

 

According to the [documentation|https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Gateway.html#Gateway__anchor] there is no way to verify if a gateway is connected or not.

It would be helpful to be able to ask the gateway if it is currently connected or not.
 For example:
{code:java}
gateway.connected()
{code}
This way the developer could avoid using annex variable, such as:

 
{code:java}
if (!gatewayConnected) {
 await gateway.connect(parsedProfile, options);
 node.log('connected to gateway');
 gatewayConnected = true;
 } else {
 node.log(""Gateway already connected"");
 }{code}
 

Moreover, as outlined by [~davidkel] during the discussion, preventing a gateway to connect multiple times could avoid problems

 

Thank you.

 

SDK Version: 1.4",,bestbeforetoday,davidkel,florianc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qp0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,florianc,,,,,,,,,,,,,,,,,,,"06/Jun/19 6:47 PM;davidkel;Regarding calling connect on a gateway multiple times, because an identity currently has a 1-1 relationship with a gateway, calling connect on an already connected gateway should throw an error.;;;","18/Jun/20 7:21 PM;bestbeforetoday;The connect is just an initialization step, and the create (new) and connect of a gateway really should always happen together. There is no value in keeping unconnected gateway objects. Once a gateway is disconnected you are better off throwing it away and creating a new instance when a new connection is required.;;;",,,,,,,,,,,,,,,
Remove logging from GO chaincode,FABN-1265,40445,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,06/Jun/19 11:43 PM,21/Jun/19 5:47 AM,28/Oct/23 3:25 AM,21/Jun/19 5:47 AM,v2.0.0,,,,,,,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qqs:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Checkpointing should wait for event to be processed,FABN-1269,40489,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Won't Do,,nasht00,nasht00,10/Jun/19 5:57 PM,21/May/20 11:32 PM,28/Oct/23 3:25 AM,21/May/20 11:32 PM,,,,,,,,,,1,external,sdk-triaged,,,,"UPDATE: 
See the below comment for a detailed analysis of the problem:
https://jira.hyperledger.org/browse/FABN-1269?focusedCommentId=68492&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-68492


I am writing a block events listener as described here:

[https://fabric-sdk-node.github.io/release-1.4/tutorial-listening-to-events.html]

My listener looks something like:
  
{code:java}
    const listener = await network.addBlockListener(
      ""my-block-listener3"",
      async (error, block) => {
        if (error) {
          console.error(error);
          return;
        }
        console.log(""Successfully received the block "", block.header.number);
        await this.doSomethingAsync(block);
        console.log(""After processing block "", block.header.number);
      },
      { filtered: false, replay: true, checkpointer: this.checkpointer }
    );{code}
 
 I am also using the checkpointing feature: 

[https://fabric-sdk-node.github.io/release-1.4/tutorial-event-checkpointer.html]

When doing an event replay (things go fast) I noticed that the event hub does not wait for my listener to finish processing the previous block. I can see in the logs all the block being received really fast, not processed yet.

This makes things difficult to make sure I am processing them in order and not creating conflicts.

Also, this brings up the question: How does the checkpointer know I finished processing the block? My assumption is that it does not know. Instead, just like in my code, it will increase the block number as soon as it it received, instead of waiting for it to be processed.

Maybe the fabric-network implementation should include a queue to solve both these issues?

 

FYI, some context about my use for block event listening.

I want to run complex queries and build reports. According to Fabric documentation the recommendation is to keep an external database in sync with the ledger, using BlockEvents. So my code is subscribing to block events, extracting one write set at a time and applying it to my local database. Order is obviously important...",,bestbeforetoday,georgejdli,nasht00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1524,FABN-1523,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qzo:",,,,Unset,Unset,,,,,,,,,,,"1) Have a network with multiple block on it already
2) create a simple block listener with replay: true and use the fault file system checkpointer
3) If needed add console logs to fabric-network/lib/impl/event/blockeventlistener.js
4) See that the checkpointer updates are happening out of sequence",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,georgejdli,nasht00,,,,,,,,,,,,,,,,,,,"04/Jul/19 3:59 AM;nasht00;Here is another bit of information that strengthen the need for a solution.

As I said, the event hub bombards me with events and does not wait for me to process one before sending me the next.

Which means, I need to keep each event (block) in memory to process them gradually (a queue for example).

That's fine if you have a handful of blocks in the history. However imagine (my case), you have thousands of blocks to sync. Imagine the blockchain has been running for days/months/years with a block every 2 seconds.

Now EventHub will try to dump on me the ENTIRE blockchain history in one shot.

In my simple in-memory queue solution, I'm getting javascript ""JavaScript heap out of memory"".

Ideally I would like EventHub to not retrieve the next block until I tell it too, when I'm ready to process...;;;","04/Mar/20 3:19 AM;georgejdli;I know this is an old issue but it was something I was looking into as well.

Digging through the source code for tag v1.4.2 I can see that checkpointing will wait for the eventCallback to finish before running:

 
{noformat}
async _onEvent(block) {
		let blockNumber;
		if (!this._filtered) {
			blockNumber = Number(block.header.number);
		} else {
			blockNumber = Number(block.number);
		}

		try {
			await this.eventCallback(null, block);
			if (this.useEventReplay() && this.checkpointer instanceof BaseCheckpointer) {
				const checkpoint = await this.checkpointer.load();
				if (!checkpoint.blockNumber || Number(checkpoint.blockNumber) <= Number(blockNumber)) {
					await this.checkpointer.save(null, blockNumber);
				}
			}
		} catch (err) {
			logger.error(util.format('Error executing callback: %s', err));
		}
		if (this._registration.unregister) {
			this.unregister();
		}
	}
{noformat}

But that means the eventCallback must return a Promise and resolve that promise once the async processing is done. If the eventCallback doesn't return a resolvable promise (i.e. a synchronous function) then I've noticed that the checkpointing doesn't always work as expected (doesn't always update the blockNumber to the last block processed).

;;;","22/Mar/20 7:32 AM;georgejdli;tl;dr Checkpointing doesn't work as expected. In fact the current implementation is flawed (in 1.4.8 and v2).

...And after further digging because I started seeing the same issues as Nathan is looks like the issue is with how the listeners are handled within fabric-client.

Testing with a simple blocklistener using the default FileSystemCheckpointer:

{code:javascript}
 const listener = await network.addBlockListener(
      ""my-block-listener"",
     (error, block) => {
        if (error) {
          console.error(error);
          return;
        }
        console.log(""Successfully received the block "", block.header.number);
      },
      { filtered: false, replay: true}
    );
{code}

And adding some console.logs to  fabric-network/lib/impl/event/blockeventlistener.js :

{code:javascript}

async _onEvent(block) {
		let blockNumber;
		if (!this._filtered) {
			blockNumber = Number(block.header.number);
		} else {
			blockNumber = Number(block.number);
		}

		try {
			await this.eventCallback(null, block);
			if (this.useEventReplay() && this.checkpointer instanceof BaseCheckpointer) {
				console.log(""Current"")
				const checkpoint = await this.checkpointer.load();
				console.log(`Current checkpoint: ${checkpoint.blockNumber}`)
				if (!checkpoint.blockNumber || Number(checkpoint.blockNumber) <= Number(blockNumber)) {
					await this.checkpointer.save(null, blockNumber);
					console.log(`Finished saving checkpointers for: ${blockNumber}`)
				}
			}
		} catch (err) {
			logger.error(util.format('Error executing callback: %s', err));
		}
		if (this._registration.unregister) {
			this.unregister();
		}
	}
{code}

Running this on a network which already has 7 blocks:
{code:bash}
$ node blockEventsProcessor.js 
Successfully received the block  1
Successfully received the block  2
Successfully received the block  3
Successfully received the block  4
Successfully received the block  5
Successfully received the block  6
Successfully received the block  7
Current
Current checkpoint: 0
Current checkpoint: 0
Current checkpoint: 0
Current checkpoint: 0
Current checkpoint: 0
Finished saving checkpointers for: 2
Finished saving checkpointers for: 1
Finished saving checkpointers for: 3
Finished saving checkpointers for: 5
Finished saving checkpointers for: 4
Finished saving checkpointers for: 6
Finished saving checkpointers for: 7
{code}
We can see that checkpointing is occurring ""out of sync"" to from the even processing itself. Checkpointing should happen after even each was successfully processed but it's actually running asynchronously without being waited on (file IO are async operations in Node.js).

I identified the following issues in fabric-client/lib/ChannelEventHub.js (where these listeners are called):
1) The callback on the GRPC stream handler should be an async function
2) On the GRPC stream 'data' handler, we should pause the stream so we can do async stuff with the block
3) The internal process event functions (_processBlockEvents) should be async
4) EventRegistration onEvent method should be async and await on this._onEvent(...args) call
You can view the changes I made here to get it working as expected: https://github.com/georgejdli/fabric-sdk-node/compare/v1.4.8...georgejdli:sequential-block-processing?expand=1

Running again with the above changes we get the sequential processing behavior:
{code:bash}
$ node blockEventsProcessor.js 
Successfully received the block  1
Current checkpoint: 0
Finished saving checkpointers for: 1
Successfully received the block  2
Current checkpoint: 1
Finished saving checkpointers for: 2
Successfully received the block  3
Current checkpoint: 2
Finished saving checkpointers for: 3
Successfully received the block  4
Current checkpoint: 3
Finished saving checkpointers for: 4
Successfully received the block  5
Current checkpoint: 4
Finished saving checkpointers for: 5
Successfully received the block  6
Current checkpoint: 5
Finished saving checkpointers for: 6
Successfully received the block  7
Current checkpoint: 6
Finished saving checkpointers for: 7
{code}

By no means am I suggesting that my code changes be merged into the project but perhaps they could be used as a guide for any future rearchitecting efforts. Looking at the source code for v2 I see the same problems remain.

I have a tight deadline so I'll be using my monkey patch in production :P.
;;;","21/May/20 8:16 PM;bestbeforetoday;[~georgejdli] I would appreciate it if you could try the v2.1.x version of fabric-network to see if the problem of event and checkpoint ordering still exist as I believe they are fixed following a complete rewrite of the event handling in the fabric-network layer. This layer now decouples the synchronous event receipt from asynchronous event delivery to block, commit and contract listeners attached to Network and Contract objects. So events should be delivered strictly in order and checkpointing should be done exactly at the end of each successful event notification.

I don't think using an async function as the event emitter callback is safe. The emitter is expecting to drive a synchronous callback and may deliver another message immediately after the callback function invocation is complete, which in the case of an async function doesn't necessarily mean that any of the code within the function has run.

With some ad-hoc testing I have driven tens of thousands of replayed events through the v2 API without observing any issues. The implementation does buffer events to achieve both deduplication and the decoupling of synchronous and async code, so it is possible that the buffer could grow to the point that the heap is exhausted depending on how quickly client listeners handle events. Pausing the stream at appropriate points as you suggest seems like a good approach to dealing with this. I don't know if this really addresses any overflow issues or just pushes the problem further down into the GRPC and/or network layer. It just isn't something I got to investigating or implementing in the time available.;;;","21/May/20 11:32 PM;bestbeforetoday;This issue should be resolved in the v2.1.0 release;;;",,,,,,,,,,,,
Empty named affiliation can be created using Node.js SDK,FABN-1270,38933,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,bkseo,bkseo,02/Apr/19 12:26 PM,27/Jan/21 11:02 PM,28/Oct/23 3:25 AM,27/Jan/21 11:02 PM,v1.4.0,,,,,,,,,0,external,sdk-triaged,,,,"Empty named affiliation can be created when parameter is passed with \{ name : "".org1"", force: true }

 

I think empty root affiliation is created when affiliation path starts with "".""(period)

 

 ",,bkseo,denyeart,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i007",,,,Unset,Unset,,,,,,,,,,,"1. create affiliation with affiliation service with Node.js SDK
2. pass parameter with affiliation name starts with "".xxx"" and 'force'
 ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bkseo,denyeart,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,"04/Jun/19 5:27 AM;denyeart;[~angelo.decaro] [~harrisob@us.ibm.com] Should this be validated on CA or SDK side? or both?;;;","04/Jun/19 6:57 AM;harrisob@us.ibm.com;What is the actual problem ... seems that if they use the force then they get what they want ?;;;","06/Jun/19 5:48 AM;denyeart;[~bkseo] Please clarify expected behavior vs actual behavior. What change are you suggesting?;;;","06/Jun/19 6:22 AM;bkseo;It happens on SDK(nodejs) side only.

And empty root affiliation should not be created even if affiliation creation request parameter passed with 'force',  and the returning result should be fail with error description.

 

 ;;;","10/Jun/19 6:41 PM;denyeart;Ok, changed the project to FABN to indicate Node.js SDK fix is requested.;;;","27/Jan/21 11:02 PM;lesleyannj;Re-open if seen in v2.x;;;",,,,,,,,,,,
"As an MSP only client application, I can easily interact with a Fabric network",FABN-1271,40513,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,11/Jun/19 4:57 PM,26/Feb/21 2:12 AM,28/Oct/23 3:25 AM,04/Dec/20 12:31 AM,,,,,,,,,,0,sdk-triaged,,,,,"Fabric allows any valid organisation/MSP to be a member of a channel, as long as they are a member of the consortium managed by that ordering service. An organisation/MSP can also be a member of a channel without having any peers that have joined that channel, whether they are endorsing peers (that run the smart contracts) or just validating peers (that maintain a copy of the ledger).

The Fabric SDK does not support these organisations/MSPs very well. Applications must explicitly switch to another built in event handler strategy, NETWORK_SCOPE_ANYFORTX, as the default of MSPID_SCOPE_ANYFORTX does not work if you don't have any peers with your MSP ID. Applications must provide their own query strategy, as the default of MSPID_SCOPE_SINGLE does not work. And finally, applications must provide their own event hub selection strategy, as the default of MSPID_SCOPE_ROUND_ROBIN does not work.

We should introduce additional built in strategies that cover these cases for queries and event hub selection, and also consider where the default should be something like ""prefer peers with my MSP ID, but use other peers if there are no peers with my MSP ID"".

There's a related JIRA around querying and service discovery here:
https://jira.hyperledger.org/browse/FABN-1122

That one covers the case of client application with an organisation/MSP that has a peer that is a member of a channel, but that peer is not an endorsing peer and does not have the smart contract that the client application is trying to interact with.
",,bestbeforetoday,bmos299,heatherp,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1122,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,"As an MSP only client application, I can easily interact with a Fabric network",To Do,No,,Unset,No,,,"1|hzwqev:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,bmos299,heatherp,sstone1,,,,,,,dev,main,,,,,,,,,true,"24/Oct/19 11:48 PM;heatherp;We've got quite a few issues lying around relating to this so, so moving this to an epic and hopefully associate the related ones;;;","26/Oct/19 2:10 AM;bestbeforetoday;The same requirement applies to Java/Gateway SDK. Doing one without the other would kinda suck for consistent user experience across SDK languages. I'm not sure if the best approach is to have this epic span both SDKs or have another equivalent epic for Java, perhaps with a higher level epic enclosing both?;;;","24/Sep/20 9:34 PM;bmos299;I think this feature is very important as many clients do not want to manage their own peer but yet want to transact on the network.   Making it simple for non-peer owning orgs to join a channel is critical. ;;;",,,,,,,,,,,,,,
Check if org joined channel,FABN-1272,40537,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Won't Do,,arman19940326,arman19940326,12/Jun/19 6:53 PM,05/Aug/19 9:06 PM,28/Oct/23 3:25 AM,05/Aug/19 9:06 PM,v1.4.0,,,,,,,,,0,,,,,,Before joining an Org to channel I want to check if the org and its peers are already joined the channel. Is there any api end point that I can use to achieve this?,,arman19940326,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00r8k:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),arman19940326,sstone1,,,,,,,,,,,,,,,,,,,,"05/Aug/19 9:06 PM;sstone1;You can ask a peer for the list of channels that the peer has joined:
https://fabric-sdk-node.github.io/release-1.4/Client.html#queryChannels__anchor

An existing member of the channel can check if another member is a member of the channel by inspecting the latest channel configuration:
https://fabric-sdk-node.github.io/release-1.4/Channel.html#getChannelConfig__anchor

;;;",,,,,,,,,,,,,,,,
Master builds should be using Node 10,FABN-1273,40557,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Not Supported,,davidkel,davidkel,13/Jun/19 9:03 PM,01/Nov/19 7:04 PM,28/Oct/23 3:25 AM,01/Nov/19 7:04 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"As master is the branch being used for 2.0.0 development, the node-sdk for this release should be Node 10 by default as Node 8 is so close to EOL, currently it is still running Node 8.",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i00rbw:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"30/Aug/19 7:53 PM;harrisob@us.ibm.com;This has been done;;;","27/Sep/19 12:56 AM;davidkel;re-opening to ensure that when moved to azure pipelines that either node 10 or node 12 is used for the build. However looking at the merge build in jenkins, the master branch is still using node 8.;;;",,,,,,,,,,,,,,,
gateway documentation needs enhancing,FABN-1274,40558,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,nkl199,nkl199,13/Jun/19 9:21 PM,13/Jun/19 9:55 PM,28/Oct/23 3:25 AM,13/Jun/19 9:55 PM,Future,,,,,Future,,,,0,,,,,,"Gateway doc should indicate that gateways are reusable, and not intended to be a per-transaction use",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rc4:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,"13/Jun/19 9:55 PM;nkl199;complete with CR https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/31892;;;",,,,,,,,,,,,,,,,
Publish v1.4.2 maintenance release,FABN-1275,40687,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,19/Jun/19 10:21 PM,21/Jun/19 5:43 AM,28/Oct/23 3:25 AM,21/Jun/19 5:43 AM,,,,,,,,,,0,,,,,,"Update package.json, changelog and release notes",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rzw:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
typescript definitions for ConnectOptions on ChannelEventHub are incorrect,FABN-1276,40692,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,jesro,jjetten,jjetten,20/Jun/19 12:24 AM,25/Oct/19 12:10 AM,28/Oct/23 3:25 AM,25/Oct/19 12:10 AM,v1.4.1,,,,,,,,,0,sdk-triaged,,,,," 

Connectoptions definition in index.d.ts:
{code:java}
344 export interface ConnectOptions { 
345 full_block?: boolean; 
346 signedEvent?: SignedEvent; 
347 }
{code}
 

 

ConnectOptions from fabric-client/lib/ChannelEventHub.js

 
{code:java}
251 /**
 252 * @typedef {Object} ConnectOptions
 253 * @property {boolean} full_block - Optional. To indicate that the connection
 254 * with the peer will be sending full blocks or filtered blocks to this
 255 * ChannelEventHub.
 256 * The default will be to establish a connection using filtered blocks.
 257 * Filtered blocks have the required information to provided transaction
 258 * status and chaincode events (no payload).
 259 * When using the non filtered blocks (full blocks) the user
 260 * will be required to have access to establish the connection to
 261 * receive full blocks.
 262 * Registering a block listener on a filtered block connection may not
 263 * provide sufficient information.
 264 * @property {Number | string} startBlock - Optional. This will have the connection
 265 * setup to start sending blocks back to the event hub at the block
 266 * with this number. If connecting with a
 267 * a startBlock then event listeners may not be registered with a
 268 * startBlock or endBlock.
 269 * If the event hub should start with the last block it has seen
 270 * use the string 'last_seen'.
 271 * If the event hub should start with the oldest block on the
 272 * ledger use the string 'oldest'.
 273 * If the event hub should start with the latest block on the ledger,
 274 * use the string 'latest' or do use a startBlock.
 275 * Default is to start with the latest block on the ledger.
 276 * @property {Number | string} endBlock - Optional. This will have the connection
 277 * setup to end sending blocks back to the event hub at the block
 278 * with this number. If connecting with a
 279 * a endBlock then event listeners may not be registered with a
 280 * startBlock or endBlock.
 281 * If the event hub should end with the last block it has seen
 282 * use the string 'last_seen'.
 283 * If the event hub should end with the current block on the
 284 * ledger use the string 'newest'.
 285 * Default is to not stop sending.
 286 * @property {SignedEvent} signedEvent - Optional. The signed event to be sent
 287 * to the peer. This option is useful when the fabric-client application
 288 * does not have the user's privateKey and can not sign requests to the
 289 * fabric network.
 290 * @property {Peer | string} target - Optional. The peer that provides the
 291 * fabric event service. When using a string, the {@link Channel}
 292 * must have a peer assigned with that name. This peer will replace
 293 * the current peer endpoint of this channel event hub.
 294 */
{code}",,heatherp,jjetten,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00s10:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,jjetten,,,,,,,,,dev,main,,,,,,,,,true,"25/Oct/19 12:10 AM;heatherp;Hey [~jesro], I'm going through the node-sdk backlog with the maintainers. Looks like you've completed this, so I'm closing it off;;;",,,,,,,,,,,,,,,,
Failed to load the user admin2 from key value store,FABN-1277,40689,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,19/Jun/19 10:30 PM,26/Jul/19 12:24 AM,28/Oct/23 3:25 AM,26/Jul/19 12:24 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,,,,," 
 Failed to load the user admin2 from key value store while using FabricCAServices wih a Cloudant CouchDB KeyValueStore in gulp end2end tests.

*Branch:* master
*Platform:* x86_64
*Error Snippet:*
{code:java}
/00:50:08.716 # Use FabricCAServices wih a Cloudant CouchDB KeyValueStore
00:50:08.716 ok 545 Successfully set Cloudant CouchDB KeyValueStore for client
00:50:09.457 ok 546 Successfully initialized the Fabric CA service.
00:50:09.813 ok 547 Successfully enrolled admin2 with CA server
00:50:10.616 ok 548 Member isEnrolled successfully.
00:50:10.617 not ok 549 Failed to load the user admin2 from key value store. Error:
00:50:10.617   ---
00:50:10.617     operator: fail
00:50:10.617     at: utils.newKeyValueStore.then.then.then.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/cloudant-fabricca-tests.js:159:9)
00:50:10.618     stack: |-
00:50:10.618       Error: Failed to load the user admin2 from key value store. Error:
00:50:10.618           at Test.assert [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:226:54)
00:50:10.619           at Test.bound [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:50:10.619           at Test.fail (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:319:10)
00:50:10.619           at Test.bound [as fail] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:50:10.620           at utils.newKeyValueStore.then.then.then.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/cloudant-fabricca-tests.js:159:9)
00:50:10.620           at process._tickCallback (internal/process/next_tick.js:68:7)/ code placeholder
{code}
*Build log:* [https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-x86_64/148/consoleFull]",,btl5037,harrisob@us.ibm.com,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00s0c:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,harrisob@us.ibm.com,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot install fabric-network npm package,FABN-1278,40718,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,,tlumko,tlumko,20/Jun/19 10:15 PM,21/Jun/19 5:45 AM,28/Oct/23 3:25 AM,21/Jun/19 5:45 AM,v1.4.0,v1.4.1,v1.4.2,,,,,,,0,fabric-ca-client,fabric-network,node-SDK,,,"I'm trying to install fabric-network but it fails :

 _npm i --save fabric-network_ 
 _npm ERR! code ENOLOCAL npm ERR! Could not install from ""node_modules/fabric-network/node_modules/fabric-ca-client"" as it does not contain a package.json file._

It works well if i install deps in existing project via _npm ci_ - looks like the most recent version of fabric-ca-client is broken

 ",,harrisob@us.ibm.com,tlumko,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00s6c:",,,,Unset,Unset,,,,,,,,,,,"create new package: npm init
try to add fabric-netowrk: npm install --save fabric-network
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,tlumko,,,,,,,,,,,,,,,,,,,,"20/Jun/19 10:28 PM;tlumko;It looks like _fabric-network_ v1.4.1 has following dependencies:
_""fabric-ca-client"": ""latest"",_
_""fabric-client"": ""latest"",_

That might cause a problem when a new major version of fabric-client and fabric-ca-client will be released;;;","21/Jun/19 5:45 AM;harrisob@us.ibm.com;Missed a change when putting in the change for FABN-1220, so put in another change to change the version on a release branch.;;;",,,,,,,,,,,,,,,
npm install fails for fabric-network,FABN-1279,40720,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,harrisob@us.ibm.com,harrisob@us.ibm.com,21/Jun/19 12:23 AM,21/Jun/19 5:48 AM,28/Oct/23 3:25 AM,21/Jun/19 5:48 AM,v1.4.2,,,,,,,,,0,,,,,,"the install fails with the 1.4.2 of fabric-network

```
npm ERR! code ENOLOCAL
npm ERR! Could not install from ""node_modules/fabric-ca-client"" as it does not contain a package.json file.
```",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00s6k:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support gencrl in revoke,FABN-1280,40736,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,GuillaumeCisco,GuillaumeCisco,21/Jun/19 7:16 PM,24/Oct/19 10:46 PM,28/Oct/23 3:25 AM,24/Oct/19 10:46 PM,,,,,,,,,,0,,,,,,,,GuillaumeCisco,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00s9o:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),GuillaumeCisco,,,,,,,,,,dev,main,,,,,,,,,true,"21/Jun/19 7:18 PM;GuillaumeCisco;[https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/32019];;;",,,,,,,,,,,,,,,,
Chaincode installation does not follow symlinks.,FABN-1281,40753,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,holzeis,holzeis,holzeis,23/Jun/19 5:55 PM,02/Dec/20 12:50 AM,28/Oct/23 3:25 AM,01/Dec/20 11:22 PM,v1.4.2,,,,,,,,,0,external,sdk-triaged,,,,"The fabric-client uses an older version (^2.0.0) of klaw, where symlinks are not followed. With [https://github.com/jprichardson/node-klaw/pull/29] a fix has been merged and the klaw version was updated to 3.0.0.

I am running in that issue when using k8s.gcr.io/git-sync:v3.0.1 as sidecar container to synchronize chaincode. It pulls changes atomically by flipping a symlink in a subdirectory of the git worktree.",,heatherp,holzeis,richard.holzeis,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:qzi",,,,Unset,Unset,,,,,,,,,,,"1. Create chaincode source folder outside of the $GOPATH.
2. Create a symlink in $GOPATH/src to the chaincode source folder.
3. Install chaincode using the fabric client.

=> The installation will succeed, but remains empty as the symlink is not followed.
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,holzeis,richard.holzeis,,,,,,,,,,,,,,,,,,,"23/Jun/19 10:12 PM;holzeis;I've created a change request at https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32039;;;","24/Oct/19 11:45 PM;heatherp;Hi [~holzeis], I am working through the node sdk with the maintainers, are you still actively working on this?;;;","25/Oct/19 4:31 AM;richard.holzeis;Hi [~heatherp], well I've proposed a fix and would be happy to see it merged. Let me know if you need any additional input.;;;",,,,,,,,,,,,,,
Release-1.4: Fix the integration test part by improving the README and code.,FABN-1282,40754,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,23/Jun/19 8:14 PM,25/Jul/19 11:53 AM,28/Oct/23 3:25 AM,25/Jul/19 11:53 AM,v1.4.0,v1.4.1,v1.4.2,,,v1.4.0,v1.4.1,v1.4.2,,0,macOS,Ubuntu,,,,"This issue fixes two parts of integration test:

 
 # Remove --with-default-names for macOS in README. Reference: [https://stackoverflow.com/questions/30003570/how-to-use-gnu-sed-on-mac-os-x].
 # Fix on logger.js and contracteventlistener.js warnings caused by no-console. Reference: 
{noformat}
[15:48:44] 
/usr/local/Cellar/go/1.11.1/src/github.com/hyperledger/fabric-sdk-node/test/unit/logger.js
   28:1  warning  Unexpected console statement  no-console
   32:2  warning  Unexpected console statement  no-console
   63:2  warning  Unexpected console statement  no-console
   73:2  warning  Unexpected console statement  no-console
  190:2  warning  Unexpected console statement  no-console
  192:2  warning  Unexpected console statement  no-console
  237:2  warning  Unexpected console statement  no-console
  247:2  warning  Unexpected console statement  no-console
  258:2  warning  Unexpected console statement  no-console
  287:2  warning  Unexpected console statement  no-console
✖ 10 problems (0 errors, 10 warnings)
{noformat}
3. Fix on AssertionError in Peer.js. 
{noformat}
1. Before:
 
MacBook-Pro:fabric-sdk-node 5swind$ node_modules/.bin/mocha fabric-client/test/Peer.js --grep=""should log function entry"" 
 
 
  Peer
    #sendProposal
      ✓ should log function entry
(node:11068) UnhandledPromiseRejectionWarning: AssertionError: expected [ Array(1) ] to deeply equal [ Array(4) ]
    at obj.sendProposal.then.catch (/Users/5swind/Downloads/gerrit/hyperledger/fabric-sdk-node/fabric-client/test/Peer.js:108:44)
    at <anonymous>
    at runMicrotasksCallback (internal/process/next_tick.js:122:5)
    at _combinedTickCallback (internal/process/next_tick.js:132:7)
    at process._tickCallback (internal/process/next_tick.js:181:9)
(node:11068) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)
(node:11068) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
 
 
  1 passing (21ms)
 
After:
 
MacBook-Pro:fabric-sdk-node 5swind$ node_modules/.bin/mocha fabric-client/test/Peer.js --grep=""should log function entry"" 
 
 
  Peer
    #sendProposal
      ✓ should log function entry
 
 
  1 passing (23ms)
 
2. Before:
 
MacBook-Pro:fabric-sdk-node 5swind$ node_modules/.bin/mocha fabric-client/test/Peer.js --grep=""should log on entry"" 
 
 
  Peer
    #sendDiscovery
      ✓ should log on entry
(node:12675) UnhandledPromiseRejectionWarning: AssertionError: expected [ Array(1) ] to deeply equal [ '%s - Start', 'sendDiscovery' ]
    at obj.sendDiscovery.then.catch (/Users/5swind/Downloads/gerrit/hyperledger/fabric-sdk-node/fabric-client/test/Peer.js:389:44)
    at <anonymous>
    at runMicrotasksCallback (internal/process/next_tick.js:122:5)
    at _combinedTickCallback (internal/process/next_tick.js:132:7)
    at process._tickCallback (internal/process/next_tick.js:181:9)
(node:12675) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)
(node:12675) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
 
 
  1 passing (22ms)
 
After:
 
MacBook-Pro:fabric-sdk-node 5swind$ node_modules/.bin/mocha fabric-client/test/Peer.js --grep=""should log on entry"" 
 
 
  Peer
    #sendDiscovery
      ✓ should log on entry
 
 
  1 passing (17ms)
{noformat}
 

 ",,Hengming-Zhang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1283,,,,FAB-14715,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,Manual,,Unset,No,,,"1|i00sd0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Pass,Passed with: eslint test.,Integration Test,,(Please add usage information),Hengming-Zhang,,,,,,,,,,,,,,,,,,,,,"23/Jun/19 10:54 PM;Hengming-Zhang;Commit is here: [https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32040.]

Don’t know why - I created branch upon on release-1.4 but here it displays as master.

 ;;;","23/Jun/19 11:38 PM;Hengming-Zhang;Sorry about above, there is a new fixed commit: https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32041.;;;","30/Jun/19 9:46 PM;Hengming-Zhang;The {{2. Fix on logger.js warnings caused by no-console}} also fixes for integration test on Ubuntu. So adding Ubuntu tag to this issue...;;;","05/Jul/19 10:43 PM;Hengming-Zhang;New patch set: [https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32153/4] (submitted together).;;;","09/Jul/19 4:41 PM;Hengming-Zhang;Addition: [~harrisob@us.ibm.com] you can resolve this issue if the related commit is merged.;;;",,,,,,,,,,,,
Help Wanted: Integration test report of release-1.4 branch,FABN-1283,40764,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,24/Jun/19 9:52 PM,13/Jan/21 12:29 AM,28/Oct/23 3:25 AM,13/Jan/21 12:29 AM,v1.4.0,v1.4.1,v1.4.2,,,,,,,0,external,macOS,sdk-triaged,Ubuntu,,"There are some test cases error and warning that need your help.

Because I'm going to fix these issues...

 

1. run-tape-unit test case failed:

 
{noformat}
[18:01:51] Starting 'run-tape-unit'...
{ Error: Cannot find module './build/Release/DTraceProviderBindings'
    at Function.Module._resolveFilename (module.js:548:15)
    at Function.Module._load (module.js:475:25)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/5swind/Downloads/gerrit/hyperledger/fabric-sdk-node/node_modules/restify/node_modules/dtrace-provider/dtrace-provider.js:17:23)
{noformat}
Is this caused by dtrace node package or some else? May I need to remove {{./build}} folder and reinstall it by {{make docker}}?

 

2. run-tape-e2e test case failed:

 
{noformat}
[19:07:35] Starting 'run-tape-e2e'...
 
TAP version 13
not ok 1 test exited without ending
  ---
    operator: fail
    at: process.<anonymous> (/Users/5swind/Downloads/gerrit/hyperledger/fabric-sdk-node/node_modules/tape/index.js:88:19)...
 
TAP version 13
not ok 1 test exited without ending...
1..117
# tests 117
# pass  0
# fail  117
{noformat}
 

There are 117 test cases failed with {{exited without ending}} by node_modules tape package. Anyone knows that?

 

3. gulp-shell error after report creation:

 
{noformat}
[19:07:37] 'test' errored after 2.27 min
[19:07:37] Error in plugin ""gulp-shell""
Message:
    Command `npx nyc gulp run-test` failed with exit code 1
{noformat}
I see this is an error which generated after the test report. But someone see this is a warning: https://jira.hyperledger.org/browse/FABN-1021?focusedCommentId=53514&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-53514.

 

Finally, my test report...

 
{noformat}
=============================== Coverage summary ===============================
Statements   : 88.14% ( 6956/7892 )
Branches     : 85.11% ( 2956/3473 )
Functions    : 95.07% ( 1003/1055 )
Lines        : 88.11% ( 6935/7871 )
================================================================================
{noformat}
 

 

 

 ",,heatherp,Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1282,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,Manual,,Unset,No,,,"1|i010mp:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Fail,,Integration Test,,(Please add usage information),heatherp,Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,"30/Jun/19 9:36 PM;Hengming-Zhang;I'm now creating a new Ubuntu tag for this issue, since I ran the integration test and result coverage is same as macOS, and only for the issue number 1, the run-tape-unit test passed on Ubuntu. ;;;","24/Oct/19 11:44 PM;heatherp;Hi [~Hengming-Zhang] - I am working through the node sdk backlog with the maintainers, we are greatly improving the testing in the master branch but we're not porting these over to 1.4. We've removed the tape unit tests from the master branch, I've fixed the way coverage is reporting and we're in the process of moving to azure pipelines, so it should be easier to run builds and see how they are failing, in comparison to Jenkins. Are these test failures of yours still something you are seeing?;;;","25/Oct/19 12:02 AM;Hengming-Zhang;Yes.[~heatherp];;;","10/Dec/20 9:51 PM;lesleyannj;[~Hengming-Zhang] Is there any status update on this jira which is assigned to you?;;;","13/Jan/21 12:29 AM;lesleyannj;Backlog Review - Closing due to inactivity.  Can be re-opened if work starts again.;;;",,,,,,,,,,,,
Prepare for 1.4.3 snapshots,FABN-1284,40769,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,25/Jun/19 12:10 AM,25/Jun/19 12:49 AM,28/Oct/23 3:25 AM,25/Jun/19 12:49 AM,,,,,,,,,,0,,,,,,Update package.json files to version 1.4.3-snapshot following release of 1.4.2,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sgc:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mutual TLS: Gateway sending wrong certificate,FABN-1285,40802,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,marinkovicvlado,marinkovicvlado,26/Jun/19 9:55 PM,02/Dec/20 12:50 AM,28/Oct/23 3:25 AM,01/Dec/20 11:26 PM,v1.4.1,,,,,,,,,4,Documentation,external,node-SDK,sdk-triaged,Security,"Mutual TLS is enabled on peers and orderer as follows: 
{code:java}
- name: CORE_PEER_TLS_ENABLED          
  value: ""true""        
- name: CORE_PEER_TLS_CERT_FILE          
  value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/blockchain-org1peer1.org1.example.com/tls/server.crt        
- name: CORE_PEER_TLS_KEY_FILE          
  value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/blockchain-org1peer1.org1.example.com/tls/server.key        
- name: CORE_PEER_TLS_ROOTCERT_FILE          
  value: /shared/crypto-config/peerOrganizations/org1.example.com/peers/blockchain-org1peer1.org1.example.com/tls/ca.crt        
- name: CORE_PEER_TLS_CLIENTAUTHREQUIRED          
  value: ""true""        
- name: CORE_PEER_TLS_CLIENTROOTCAS_FILES          
  value: /shared/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/ca.crt        
- name: CORE_PEER_TLS_CLIENTCERT_FILE          
  value: /shared/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.crt        
- name: CORE_PEER_TLS_CLIENTKEY_FILE          
  value: /shared/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.key
{code}
On an app side that uses 'fabric-sdk-node', following connection profile is set:
{code:java}
{
    ""name"": ""bam-network"",
    ""version"": ""1.0.0"",
    ""client"": {
        ""organization"": ""Org1"",
        ""connection"": {
            ""timeout"": {
                ""peer"": {
                    ""endorser"": ""300""
                },
                ""orderer"": ""300""
            }
        },
        ""credentialStore"": {
          ""path"": ""./local_fabric/tmp/hfc-kvs"",
          ""cryptoStore"": {
            ""path"": ""./local_fabric/tmp/hfc-cvs""
          },
          ""wallet"": ""wallet""
        },
        ""tlsCerts"": {
            ""systemCertPool"": true,
            ""client"": {
                ""key"": {
                    ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.key""
                },
                ""cert"": {
                    ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.crt""
                }
            }
        }
    },
    ""channels"": {
        ""channel1"": {
            ""orderers"": [
                ""blockchain-orderer1"",
                ""blockchain-orderer2"",
                ""blockchain-orderer3""
            ],
            ""peers"": {
                ""blockchain-org1peer1"": {
                    ""endorsingPeer"": true,
                    ""chaincodeQuery"": true,
                    ""ledgerQuery"": true,
                    ""eventSource"": true
                },
                ""blockchain-org1peer2"": {
                    ""endorsingPeer"": true,
                    ""chaincodeQuery"": true,
                    ""ledgerQuery"": true,
                    ""eventSource"": true
                }
            }
        }
    },
    ""organizations"": {
        ""Org1"": {
            ""mspid"": ""Org1MSP"",
            ""peers"": [
                ""blockchain-org1peer1"",
                ""blockchain-org1peer2""
            ],
            ""certificateAuthorities"": [
                ""blockchain-ca""
            ],
            ""adminPrivateKey"": [
                ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/key.pem""
            ],
            ""signedCert"": [
                ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/signcerts/Admin@org1.example.com-cert.pem""
            ]
        }
    },
    ""orderers"": {
        ""blockchain-orderer1"": {
            ""url"": ""grpcs://192.168.99.130:31011"",
            ""grpcOptions"": {
                ""ssl-target-name-override"": ""blockchain-orderer1"",
                ""grpc-max-send-message-length"": 4194304
            },
            ""tlsCACerts"": {
                ""path"": ""./local_fabric/certs/crypto-config/ordererOrganizations/example.com/orderers/blockchain-orderer1.example.com/tls/ca.crt""
            }
        },
        ""blockchain-orderer2"": {
            ""url"": ""grpcs://192.168.99.130:31012"",
            ""grpcOptions"": {
                ""ssl-target-name-override"": ""blockchain-orderer2"",
                ""grpc-max-send-message-length"": 4194304
            },
            ""tlsCACerts"": {
                ""path"": ""./local_fabric/certs/crypto-config/ordererOrganizations/example.com/orderers/blockchain-orderer2.example.com/tls/ca.crt""
            }
        },
        ""blockchain-orderer3"": {
            ""url"": ""grpcs://192.168.99.130:31013"",
            ""grpcOptions"": {
                ""ssl-target-name-override"": ""blockchain-orderer3"",
                ""grpc-max-send-message-length"": 4194304
            },
            ""tlsCACerts"": {
                ""path"": ""./local_fabric/certs/crypto-config/ordererOrganizations/example.com/orderers/blockchain-orderer3.example.com/tls/ca.crt""
            }
        }
    },
    ""peers"": {
        ""blockchain-org1peer1"": {
            ""url"": ""grpcs://192.168.99.130:30110"",
            ""grpcOptions"": {
                ""ssl-target-name-override"": ""blockchain-org1peer1"",
                ""grpc.keepalive_time_ms"": 600000
            },
            ""tlsCACerts"": {
                ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/peers/blockchain-org1peer1.org1.example.com/tls/ca.crt""
            }
        },
        ""blockchain-org1peer2"": {
            ""url"": ""grpcs://192.168.99.130:30210"",
            ""grpcOptions"": {
                ""ssl-target-name-override"": ""blockchain-org1peer2"",
                ""grpc.keepalive_time_ms"": 600000
            },
            ""tlsCACerts"": {
                ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/peers/blockchain-org1peer2.org1.example.com/tls/ca.crt""
            }
        }
    },
    ""certificateAuthorities"": {
        ""blockchain-ca"": {
            ""url"": ""https://192.168.99.130:30054"",
            ""registrar"": {
                ""enrollmentID"": ""admin"",
                ""enrollmentSecret"": ""adminpw"",
                ""profile"": ""tls""
            },
            ""httpOptions"": {
                ""verify"": false
            },
            ""tlsCACerts"": {
                ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem"",
                ""client"": {
                    ""key"": {
                        ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.key""
                    },
                    ""cert"": {
                        ""path"": ""./local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.crt""
                    }
                }
            }
        }
    }
}

{code}
Error occurs during invocation of 'getNetwork'
{code:java}
const userIdentity = ""user@org1.example.com"";
const clientKey = fs.readFileSync(path.join(__dirname, 'local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.key'));        
const clientCert = fs.readFileSync(path.join(__dirname, 'local_fabric/certs/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/tls/client.crt'));  
      
const client = Client.loadFromConfig(ccpJSON);        
client.setTlsClientCertAndKey(Buffer.from(clientCert).toString(), Buffer.from(clientKey).toString());

// Create a new gateway for connecting to our peer node.        
const gateway = await utils.connectTlsGateway(ccp, client, userIdentity, 'Admin', 'Org1', 'RegisterUserGateway', wallet);               
// Get the network (channel) our contract is deployed to.        
const network = await gateway.getNetwork(channelName);

{code}
 
{code:java}
// utils.js

connectTlsGateway: async function (ccp, client, identityID, userName, orgName, gatewayName, wallet) {    
    const gateway = new Gateway();    
    const caName = ccp.getCertificatAuthoritiesForOrg(orgName)[0];    
    const tlsIdentity = 'tlsId';
    const tlsIdExists = await wallet.exists('tlsId');    
    if (!tlsIdExists) {        
        tlsIdentity = await utils.identitySetup(wallet, ccp, orgName, 'tlsId');
    }
    const opts = {        
        wallet: wallet,
        identity: identityID,
        discovery: {enabled: false, asLocalhost: false},        
        clientTlsIdentity: tlsIdentity
    };
    await gateway.connect(client, opts);       
    return gateway;
},
identitySetup: async function (wallet, ccp, orgName, identityID) { 
    const org = ccp.getOrganization(orgName); 
    const orgMsp = org.mspid;
    const userCertPath = org.signedCert[0]; 
    const userKeyPath = org.adminPrivateKey[0];
    const cert = fs.readFileSync(userCertPath); 
    const key = fs.readFileSync(userKeyPath); 
    await wallet.import(identityID, X509WalletMixin.createIdentity(orgMsp, cert, key)); 
    return identityID;
}{code}
Peer fails to verify client's certificate, (peer error log):

 
{code:java}
 ServerHandshake -> ERRO 11347[0m TLS handshake failed with error tls: failed to verify client's certificate: x509: certificate signed by unknown authority server=PeerServer remoteaddress=172.17.0.1:61561
{code}
 

I have checked the certificate content and it appears initOptions provide wrong clientCert '/msp/admincerts/Admin@org1...' instead of provided one in the client  !Capture.PNG!

 Current documentation doesn't provide much info:
 [https://fabric-sdk-node.github.io/tutorial-mutual-tls.html]",,dcrough13,icarrascol,lesleyannj,marcello_romani_ocyan,marinkovicvlado,RicNtt,rossiluk,skyfan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"26/Jun/19 9:50 PM;marinkovicvlado;Capture.PNG;https://jira.hyperledger.org/secure/attachment/17343/Capture.PNG",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:x",,,,Unset,Unset,,,,,,,,,,,"- enabel mutual TLS (CORE_PEER_TLS_CLIENTAUTHREQUIRED: true)
- enroll admin user
- submitTransaction via fabric Gateway",,Unset,,,,,,Unset,,Unset,,(Please add usage information),dcrough13,icarrascol,lesleyannj,marcello_romani_ocyan,marinkovicvlado,RicNtt,rossiluk,skyfan,,,,,,,,,,,,,,"06/Dec/19 1:20 AM;RicNtt;Same bug here. Still not fixed?;;;","01/Dec/20 11:26 PM;lesleyannj;[~marinkovicvlado]  is this still a problem with the latest SDK?;;;",,,,,,,,,,,,,,,
[npm audit] Prototype Polluation Vulnerability,FABN-1287,40858,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 1:06 AM,21/Dec/19 12:16 AM,28/Oct/23 3:25 AM,21/Dec/19 12:16 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran  *npm audit*  on master branch

│ *High* │ Prototype Pollution │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Package │ lodash │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Dependency of │ gulp [dev] │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Path │ gulp > vinyl-fs > glob-watcher > gaze > globule > lodash │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ More info │ [https://nodesecurity.io/advisories/782]

https://nodesecurity.io/advisories/577

 

The fix is

Run npm install --save-dev gulp@4.0.2 to resolve 6 vulnerabilities
 *SEMVER WARNING: Recommended action is a potentially breaking change*

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sx0:",,,,Unset,Unset,,,,,,,,,,,run npm audit ,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:16 AM;heatherp;Fixed in master here: https://github.com/hyperledger/fabric-sdk-node/commit/6e398bcfee72da097e7a6142351de59ea0cbafbd;;;",,,,,,,,,,,,,,,,
clientKey displays in log,FABN-1288,40859,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,02/Jul/19 1:26 AM,02/Jul/19 8:27 PM,28/Oct/23 3:25 AM,02/Jul/19 8:27 PM,,,,,,v1.4.2,v2.0.0,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sx8:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[npm audit] Regular Expression Denial of Service Vulnerability,FABN-1289,40860,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 2:08 AM,21/Dec/19 12:15 AM,28/Oct/23 3:25 AM,21/Dec/19 12:15 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran *npm audit* on master branch.

 

│ *High* │ Regular Expression Denial of Service │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Package │ minimatch │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Dependency of │ gulp [dev] │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Path │ gulp > vinyl-fs > glob-stream > glob > minimatch │

   gulp > vinyl-fs > glob-stream > minimatch 

  gulp > vinyl-fs > glob-watcher > gaze > globule > glob > │
 │ │ minimatch 

gulp > vinyl-fs > glob-watcher > gaze > globule > minimatch

├───────────────┼──────────────────────────────────────────────────────────────┤
 │ More info │ [https://nodesecurity.io/advisories/118] │
 └───────────────┴──────────────────────────────────────────────────────────────

 

Step to fix :

 

npm install --save-dev gulp@4.0.2 to resolve 6 vulnerabilities
SEMVER WARNING: Recommended action is a potentially breaking change

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sxg:",,,,Unset,Unset,,,,,,,,,,,run npm audit ,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:15 AM;heatherp;Fixed in master here: https://github.com/hyperledger/fabric-sdk-node/commit/6e398bcfee72da097e7a6142351de59ea0cbafbd;;;",,,,,,,,,,,,,,,,
[npm audit] Memory Exposure Vulnerability,FABN-1290,40861,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 2:22 AM,21/Dec/19 12:15 AM,28/Oct/23 3:25 AM,21/Dec/19 12:15 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran *npm audit* on Master branch.

 

Moderate │ Memory Exposure │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ tunnel-agent │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ log4js [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ log4js > loggly > request > tunnel-agent │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/598

 

Recommended fix :

Run npm install --save-dev log4js@4.4.0 to resolve 7 vulnerabilities
SEMVER WARNING: Recommended action is a potentially breaking change

 

 

 

 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sxo:",,,,Unset,Unset,,,,,,,,,,,run npm audit command,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:15 AM;heatherp;Fixed in master here: https://github.com/hyperledger/fabric-sdk-node/commit/6e398bcfee72da097e7a6142351de59ea0cbafbd;;;",,,,,,,,,,,,,,,,
[npm audit] Denial of Service Vulnerability,FABN-1291,40862,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 2:32 AM,21/Dec/19 12:13 AM,28/Oct/23 3:25 AM,21/Dec/19 12:13 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran *npm audit* on Master branch.

 *Moderate* │ *Denial* *of Service* │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ axios │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ log4js [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ log4js > axios │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/880

 

Proposed fix is :

npm install --save-dev log4js@4.4.0 to resolve 7 vulnerabilities
SEMVER WARNING: Recommended action is a potentially breaking change

 

 

 

 

 

 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sxw:",,,,Unset,Unset,,,,,,,,,,,run npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:13 AM;heatherp;Fixed in master, here: https://github.com/hyperledger/fabric-sdk-node/commit/6e398bcfee72da097e7a6142351de59ea0cbafbd;;;",,,,,,,,,,,,,,,,
[npm audit] Prototype Pollution Vulnerability (hoek package),FABN-1292,40863,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 2:42 AM,21/Dec/19 12:19 AM,28/Oct/23 3:25 AM,21/Dec/19 12:19 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran npm audit

 

│ Moderate │ Prototype Pollution │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Package │ hoek │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Dependency of │ log4js [dev] │
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ Path │ log4js > loggly > request > hawk > hoek │

             log4js > loggly > request > hawk > cryptiles > boom > hoek 

           log4js > loggly > request > hawk > hoek 

          log4js > loggly > request > hawk > sntp > hoek 
 ├───────────────┼──────────────────────────────────────────────────────────────┤
 │ More info │ [https://nodesecurity.io/advisories/566]

 

Proposed fix is :

Run npm install --save-dev log4js@4.4.0 to resolve 7 vulnerabilities
 SEMVER WARNING: Recommended action is a potentially breaking change

 

 

 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sy4:",,,,Unset,Unset,,,,,,,,,,,run npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:19 AM;heatherp;Already fixed under commits delivered under FABN-1039;;;",,,,,,,,,,,,,,,,
[npm audit] Regular Expression Denial of Service Vulnerability(package timespan),FABN-1293,40864,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 2:50 AM,21/Dec/19 12:18 AM,28/Oct/23 3:25 AM,21/Dec/19 12:18 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran *npm audit*

Package │ timespan │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ log4js [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ log4js > loggly > timespan │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/533

 

Proposed fix is :

*npm install --save-dev log4js@4.4.0*

*SEMVER WARNING: Recommended action is a potentially breaking change*

 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00syc:",,,,Unset,Unset,,,,,,,,,,,npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:18 AM;heatherp;Done under FABN-1039;;;",,,,,,,,,,,,,,,,
[npm audit] Prototype Pollution Vulnerability (handlebars package),FABN-1294,40865,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 3:00 AM,21/Dec/19 12:19 AM,28/Oct/23 3:25 AM,21/Dec/19 12:19 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran npm audit on master branch

High │ Prototype Pollution │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ handlebars │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ nyc [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ nyc > istanbul-reports > handlebars │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ [https://nodesecurity.io/advisories/755]

 

Proposed fix :

 

 *npm install --save-dev nyc@14.1.1* 
SEMVER WARNING: Recommended action is a potentially breaking change

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00syk:",,,,Unset,Unset,,,,,,,,,,,run npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:19 AM;heatherp;Fixed under delivery of FABN-1039;;;",,,,,,,,,,,,,,,,
[npm audit] Prototype Pollution Vulnerability (lodash package),FABN-1295,40867,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 3:16 AM,21/Dec/19 12:20 AM,28/Oct/23 3:25 AM,21/Dec/19 12:20 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran npm audit

 

High │ Prototype Pollution │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ lodash │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ mock-couch [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ mock-couch > restify > lodash │

mock-couch > restify > restify-errors > lodash 
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/782

 

The proposed fix is :

npm update lodash --depth 4 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sz0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:20 AM;heatherp;Fixed under FABN-1039 initial commit;;;",,,,,,,,,,,,,,,,
[npm audit]Regular Expression Denial of Service attack Vulnerability(minimatch package),FABN-1296,40868,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 3:24 AM,21/Dec/19 12:18 AM,28/Oct/23 3:25 AM,21/Dec/19 12:18 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran npm audit

 

High │ Regular Expression Denial of Service │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ minimatch │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ mock-couch [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ mock-couch > restify > bunyan > mv > rimraf > glob > │
│ │ minimatch │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/118

 

Proposed fix :

npm update minimatch --depth 7

 

 

 

 

 

 

 

 

 

 ",,ashutosh_kumar,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sz8:",,,,Unset,Unset,,,,,,,,,,,Ran npm audit on main branch,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,"19/Dec/19 6:52 PM;bestbeforetoday;Only used by mock-couch for unit testing for the CouchDB key-value store, so should be resolved by refactor work that removes the key-value stores.;;;","21/Dec/19 12:18 AM;heatherp;Still an issue, I'll fix it under FABN-1039;;;",,,,,,,,,,,,,,,
[npm audit] Regular Expression Denial of Service Vulnerability(package brace-expansion),FABN-1297,40869,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 3:30 AM,21/Dec/19 12:17 AM,28/Oct/23 3:25 AM,21/Dec/19 12:17 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"ran npm audit command

Moderate │ ReDoS │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ brace-expansion │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ mock-couch [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ mock-couch > restify > bunyan > mv > rimraf > glob > │
│ │ minimatch > brace-expansion │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/338

 

Proposed fix :

npm update brace-expansion --depth 8

 

 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00szg:",,,,Unset,Unset,,,,,,,,,,,run npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:17 AM;heatherp;This one is still an issue, again the depth command didn't work so I need to look into why, but I'll do it under the FABN-1039 issue;;;",,,,,,,,,,,,,,,,
[npm audit] Regular Expression Denial of Service Vulnerability(package moment),FABN-1298,40870,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 3:33 AM,21/Dec/19 12:16 AM,28/Oct/23 3:25 AM,21/Dec/19 12:16 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Ran npm audit

 

Low │ Regular Expression Denial of Service │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ moment │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ mock-couch [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ mock-couch > restify > bunyan > moment │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/532

 

Proposed fix

npm update moment --depth 4

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00szo:",,,,Unset,Unset,,,,,,,,,,,run npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:16 AM;heatherp;This one is still an issue, but I'll fix it under FABN-1039. 
I did try the update moment --depth 4 command and it didn't work, so I need to work out why;;;",,,,,,,,,,,,,,,,
[npm audit] Regular Expression Denial of Service Vulnerability(package braces),FABN-1299,40871,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Duplicate,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 3:38 AM,21/Dec/19 12:14 AM,28/Oct/23 3:25 AM,21/Dec/19 12:14 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,Security,,"Low │ Regular Expression Denial of Service │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package │ braces │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Patched in │ >=2.3.1 │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ gulp-watch [dev] │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path │ gulp-watch > anymatch > micromatch > braces │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info │ https://nodesecurity.io/advisories/786

 

Proposed fix :

Look at the advisory for guidance.

 

 

 

 

 

 

 ",,ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1039,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00szw:",,,,Unset,Unset,,,,,,,,,,,Ran npm audit,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,heatherp,,,,,,,,,,,,,,,,,,,,"21/Dec/19 12:14 AM;heatherp;Fixed in master here: https://github.com/hyperledger/fabric-sdk-node/commit/6e398bcfee72da097e7a6142351de59ea0cbafbd;;;",,,,,,,,,,,,,,,,
Remove Deprecated node modules,FABN-1300,40873,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,ashutosh_kumar,ashutosh_kumar,02/Jul/19 6:41 AM,17/Oct/20 3:57 AM,28/Oct/23 3:25 AM,17/Oct/20 3:57 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,There are number of node modules that are deprecated and unsupported. Those needs to be removed.,,ashutosh_kumar,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00t04:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashutosh_kumar,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"17/Oct/20 3:57 AM;harrisob@us.ibm.com;Clean up has been preformed using another JIRA;;;",,,,,,,,,,,,,,,,
Fabric-sdk-node fails to get Fabric images from Nexus,FABN-1301,40894,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,yuki-kon,yuki-kon,yuki-kon,03/Jul/19 9:58 AM,04/Oct/19 1:28 AM,28/Oct/23 3:25 AM,04/Oct/19 1:28 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"When running the npm command “npm run retrieve-images”, the command fails to get Fabric images from Nexus.
The npm command calls a shell script written in /bin/sh. This shell sets the “-o pipefail” option. However, this option does not exist in the POSIX sh.
We need to fix the script to use Bash to make the option available.",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,021cdf78c6fd13962b5ffa1209d0c1631682f12d,Unset,No,,,"1|i00t4c:",,,,Unset,Unset,,,,,,,,,,,"$ cd <fabric-sdk-node>
$ npm install
$ npm run retrieve-images
> fabric-sdk-node@2.0.0-snapshot retrieve-images /opt/gopath/src/github.com/hyperledger/fabric-sdk-node
> ./scripts/utility/fabric_images.sh amd64 2.0.0-stable
./scripts/utility/fabric_images.sh: 7: set: Illegal option -o pipefail
npm ERR! code ELIFECYCLE
npm ERR! errno 2
npm ERR! fabric-sdk-node@2.0.0-snapshot retrieve-images: `./scripts/utility/fabric_images.sh amd64 2.0.0-stable`
npm ERR! Exit status 2",,Unset,,,,,,Unset,,Unset,,(Please add usage information),yuki-kon,,,,,,,,,,dev,main,,,,,,,,,true,"01/Oct/19 1:16 AM;yuki-kon;[https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/32168/];;;",,,,,,,,,,,,,,,,
[fabric-client] There is no Typescript definition for a filtered block,FABN-1302,40899,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,14gracel,14gracel,03/Jul/19 5:53 PM,09/Jul/19 10:49 PM,28/Oct/23 3:25 AM,09/Jul/19 10:49 PM,v1.4.1,v1.4.2,v2.0.0,,,,,,,0,node-SDK,,,,,"The typescript definitions in fabric-client do not specify the contents of a filtered block. 

 

This should look like:  
{code:java}
interface FilteredBlock {     
   channel_id: string;     
   number: string;     
   filtered_transactions: FilteredTransaction[]; 
}
interface FilteredTransaction {     
   Data: string;     
   txid: string; type: string;     
   transaction_actions: any[]; 
}
{code}
 

 ",,14gracel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,v2.0.0,Unset,No,,,"1|i00t5g:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Update to version 1.21 of grpc,FABN-1303,40921,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,caroline-church,caroline-church,04/Jul/19 6:58 PM,05/Jul/19 9:29 PM,28/Oct/23 3:25 AM,05/Jul/19 9:29 PM,,,,,,,,,,0,,,,,,Can we update to grpc version 1.21 as vscode has updated the version of electron and there aren't any pre-built binaries available for 1.17,,andrew-coleman,caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tac:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,caroline-church,,,,,,,,,dev,main,,,,,,,,,true,"04/Jul/19 10:24 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32187];;;",,,,,,,,,,,,,,,,
Failed to authorize invocation due to failed ACL check,FABN-1304,40879,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,harrisob@us.ibm.com,vijaypunugubati,vijaypunugubati,03/Jul/19 2:47 AM,06/Jul/19 3:43 AM,28/Oct/23 3:25 AM,06/Jul/19 3:43 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,,,,,"Failed to query for approval status on fabric-sdk-node test on end-2-end testing, Failed to authorize invocation due to failed ACL check: Unmapped policy for _lifecycle/ QueryApproval Status.

*Branch:* Master**

*Platform:* ** x86_64

*Error* *Snippet:* 
{code:java}
/00:26:40.596 ok 1442 Successfully endorsed the approved on peer2 package ID of mychaincode_v1:0bb6c31dee0e5a9de17337eb6ae57522bd22ce59875aa95e2b67f010306395f7
00:26:40.596 not ok 1443 Failed to query for approval status, Error:Error: Failed to authorize invocation due to failed ACL check: Unmapped policy for _lifecycle/QueryApprovalStatus
00:26:40.596   ---
00:26:40.596     operator: fail
00:26:40.596     at: Test.test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/test.js:756:11)
00:26:40.597     stack: |-
00:26:40.597       Error: Failed to query for approval status, Error:Error: Failed to authorize invocation due to failed ACL check: Unmapped policy for _lifecycle/QueryApprovalStatus
00:26:40.597           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:26:40.597           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:26:40.597           at Test.fail (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:26:40.597           at Test.bound [as fail] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:26:40.597           at Test.test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/test.js:756:11)
00:26:40.598           at process._tickCallback (internal/process/next_tick.js:68:7)
00:26:40.615   ...
00:26:41.212 ok 1444 Successfully endorsed the commit of package ID of mychaincode_v1:0bb6c31dee0e5a9de17337eb6ae57522bd22ce59875aa95e2b67f010306395f7
00:26:41.224 ok 1445 Successfully queried installed chaincode the code with package ID of mychaincode_v1:0bb6c31dee0e5a9de17337eb6ae57522bd22ce59875aa95e2b67f010306395f7
00:26:41.239 ok 1446 Successfully queried installed chaincodes the code with package ID of {""installed_chaincodes"":[{""package_id"":""mychaincode_v1:0bb6c31dee0e5a9de17337eb6ae57522bd22ce59875aa95e2b67f010306395f7"",""label"":""mychaincode_v1""}]}
00:26:41.252 ok 1447 Successfully queried for chaincode definition name:mychaincode, package_id:null
00:26:41.260 ok 1448 Successfully queried for namespace definitions {""namespaces"":{""mychaincode"":{""type"":""Chaincode""}}}
00:26:41.261 not ok 1449 Failed to query for approval status, Error:Error: Failed to authorize invocation due to failed ACL check: Unmapped policy for _lifecycle/QueryApprovalStatus
00:26:41.262   ---
00:26:41.262     operator: fail
00:26:41.262     at: Test.test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/test.js:827:11)
00:26:41.262     stack: |-
00:26:41.262       Error: Failed to query for approval status, Error:Error: Failed to authorize invocation due to failed ACL check: Unmapped policy for _lifecycle/QueryApprovalStatus
00:26:41.262           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:26:41.263           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:26:41.263           at Test.fail (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:26:41.263           at Test.bound [as fail] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:26:41.263           at Test.test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/test.js:827:11)
00:26:41.263           at process._tickCallback (internal/process/next_tick.js:68:7)
00:26:41.271   .../ code placeholder
{code}
*Build* *logs:* [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/5762/]",,dereckluo,harrisob@us.ibm.com,hauturier,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,7ede548f97f6865eb9b4e1bdd8eb2ef68af6adf9,Unset,No,,,"1|i00t10:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dereckluo,harrisob@us.ibm.com,hauturier,vijaypunugubati,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish v1.4.4 maintenance release,FABN-1305,40932,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,05/Jul/19 9:47 PM,30/Aug/19 12:53 AM,28/Oct/23 3:25 AM,30/Aug/19 12:53 AM,,,,,,,,,,0,,,,,,"Update package.json and release v1.4.4

Note that fabric-client v1.4.3 was released previously to fix a publish script issue and went out of step with the other packages.  All of the packages will realign on v1.4.4

 ",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tcs:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,,,,,,,,,,,,"05/Jul/19 10:08 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32196];;;",,,,,,,,,,,,,,,,
1.4.5-snapshot update,FABN-1306,40933,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,andrew-coleman,andrew-coleman,05/Jul/19 10:11 PM,12/Jul/19 12:09 AM,28/Oct/23 3:25 AM,12/Jul/19 12:09 AM,,,,,,,,,,0,,,,,,"Change package.json files:

version: 1.4.5-snapshot

tag: unstable-1.4",,andrew-coleman,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00td0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Fabric-Network] BlockEventListener doesn't propagate all options to ChannelEventHub#registerBlockEvent,FABN-1307,40903,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,Patriq,Patriq,03/Jul/19 7:08 PM,02/Dec/19 6:16 PM,28/Oct/23 3:25 AM,02/Dec/19 6:16 PM,,,,,,v1.4.2,v2.0.0,,,0,node-sdk,sdk-triaged,,,,"In the documentation the method [Network#addBlockListener|https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Network.html#addBlockListener__anchor]  can take an {{options}} parameter of the type [EventListenerOptions|https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Network.html#~EventListenerOptions].

Turns out that from these properties, only {{replay}}, {{checkpointer}} and {{filtered}} are considered! The rest of the options are not considered from the moment they are provided until the registration in the {{ChannelEventHub}}.

One simple test one can perform is:
{code:javascript}
await network.addBlockListener('listener', (error, block) => {
    if (error) {
        console.error(error);
        return;
    }
    console.log(block);
}, {
    unregister: true,
    startBlock: 1
});
{code}

And you will see that it will show the latest blocks no matter the {{startBlock}} you use, and it will keep listening for events after the first one was received!
 ",,14gracel,davidkel,Patriq,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00t6c:",,,,Unset,Unset,,,,,,,,,,,"Add a block listener with options:
{ unregister:  true, startBlock: 1 }
This listener will keep receiving block events instead of unregistering after the first block like supposed to, and it will just show the latest blocks! ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,Patriq,,,,,,,,,,,,,,,,,,,"03/Jul/19 7:44 PM;14gracel;Start/End block

[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32017]

 ;;;","08/Jul/19 4:18 PM;davidkel;moved to fabric-sdk-node jira project;;;",,,,,,,,,,,,,,,
[Fabric-Network] Checkpointer doesn't work with ContractEventListener,FABN-1308,40904,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,Patriq,Patriq,03/Jul/19 7:31 PM,02/Dec/20 12:50 AM,28/Oct/23 3:25 AM,01/Dec/20 11:27 PM,v1.4.4,,,,,,,,,0,external,node-sdk,sdk-triaged,,,"When using [Contract#addContractListener|https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Contract.html#addContractListener__anchor] with the {{checkpointer}} and {{replay}} options, the following happens:


{code:bash}
2019-07-03T01:28:55.609Z - error: [ChannelEventHub.js]: This ChannelEventHub has already been connected to start receiving blocks.
Failed to add a commit listener: Error: Event listeners that use startBlock or endBlock must be registered before connecting to the peer channel-based service
{code}
",,14gracel,davidkel,jfilippone,Patriq,PedroMoura,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:xi",,,,Unset,Unset,,,,,,,,,,,"Add a contract listener with the following options:
{
    replay: true,
    checkpointer: {
        factory: CheckpointFactories.FILE_SYSTEM_CHECKPOINTER,
        options: {basePath: path.join(__dirname, './checkpoints')}
    }
}
And watch it throw an exception.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,davidkel,jfilippone,Patriq,PedroMoura,,,,,,dev,main,,,,,,,,,true,"08/Jul/19 4:19 PM;davidkel;move to fabric-sdk-node jira project;;;","02/Oct/19 2:16 AM;PedroMoura;Is there any development on this issue?

I also noticed that the same error occurs when we just define a ""startBlock"".;;;","11/Oct/19 11:44 PM;jfilippone;I think this is addressed in the changes to contracteventlistener.js in [https://github.com/hyperledger/fabric-sdk-node/commit/5cda959770ab8f1badcf43689ff613fa61268046#diff-b8be7364ec1bcb6ae6add90d04dfd4a0]

 

[~14gracel] Can you confirm that the commit above addresses this issue?;;;","12/Oct/19 5:28 AM;jfilippone;I was having this issue as well but it looks like not this is fixed.  Now the problem looks like that it is disabling replay when start or end block are supplied.  So it will checkpoint the first time when you restart because it will add start block automatically based on what is in the checkpoint file.  But that will disable replay which means that it will not be writing new checkpoints...ever again.  The docs say this:

In the \{@link module:fabric-network~EventListenerOptions} it is possible to specify a `startBlock` and an `endBlock`. This behaves in the same way as the same options on \{@link ChannelEventHub} shown in the tutorial here \{@tutorial channel-events}. Using `startBlock` and `endBlock` disables event replay using a checkpointer for the events received by that listener.

But the code says this:

if ((this.clientOptions.startBlock !== null) && (this.clientOptions.startBlock !== undefined) ||
 (this.clientOptions.endBlock !== null) && (this.clientOptions.endBlock !== undefined)) {
 logger.debug('startBlock and/or endBlock were given. Disabling event replay');
 console.log('startBlock and/or endBlock were given. Disabling event replay');
 this.options.replay = false;
 }

 

The docs say it is disabled when start and end are supplied (which makes intuitive sense to me) but the code disables when either one are supplied. [~14gracel] is this a bug?;;;","15/Oct/19 6:15 PM;14gracel;[~jfilippone] Checkpointing should be disabled when the start or end block is defined. It feels like extended functionality to me;;;","15/Oct/19 10:03 PM;jfilippone;[~14gracel] 

In the scenario that the listening application experiences down time and misses events.  When it comes back up, the addContractListener function is called with the replay option set to true but not with start or end block.  Then the fabric-network automatically sets the start block to the appropriate block based on info from the checkpionter.  And it also sets the replay to false because now the start block is defined.  The resulting behavior is that the proper events are replayed but the checkpointer is not being updated.  From this point, the only way I can see to get the checkpointer to be updated again would be to wipe out the checkpointer file and start fresh.  But of course you lose the benefit of the checkpointer at that point.  

Is this consistent with your thinking of what the behavior is?  Is it the intended behavior?;;;","16/Oct/19 12:24 AM;14gracel;[~jfilippone] Ahh, no this is definitely a bug;;;","16/Oct/19 2:09 AM;jfilippone;[~14gracel] Is there a reason for wanting to disable replay when start or end block is defined?  Otherwise this seems like a very simple fix of taking out the lines that disable event replay.

Should it actually only disable when both start and end are defined? ;;;","02/Dec/19 6:45 PM;14gracel;[https://github.com/hyperledger/fabric-sdk-node/pull/52];;;",,,,,,,,
Refactor typescript types into one fabric-common base.,FABN-1309,40937,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,08/Jul/19 4:57 PM,22/Oct/19 10:52 PM,28/Oct/23 3:25 AM,22/Oct/19 10:52 PM,v2.0.0,,,,,v2.0.0,,,,0,master,,,,,"There are several duplicated typescript types/classes/interfaces that could be merged into one.

 
 # Move base.d.ts into fabric-common folder.
 # tsconfig.json and index.d.ts paths align with the new directory path.
 # Remove the declaration of fabric-ca-client base.d.ts and tsconfig.json in .gitignore.
 # Merge several duplicated imports into one / refer to fabric-common.
 # (temporarily) changed fabric-common to fabric-common/index import.",,Hengming-Zhang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-909,,FABN-1223,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tek:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Hengming-Zhang,,,,,,,,,,,,,,,,,,,,,"09/Jul/19 4:38 PM;Hengming-Zhang;Commit: https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32205.;;;","10/Sep/19 1:05 PM;Hengming-Zhang;About index.d.ts and index.js, changing package imports as /index can be referred to https://stackoverflow.com/questions/51516394/what-is-the-main-usage-of-index-d-ts-in-typescript/51517448.;;;",,,,,,,,,,,,,,,
fabric-network gateway.getNetwork  API block forever,FABN-1310,40951,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Invalid: Environment Issue,,logannwu,logannwu,09/Jul/19 3:55 PM,02/Dec/20 12:50 AM,28/Oct/23 3:25 AM,01/Dec/20 11:28 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"If fabric network don't start, and peer's ip is set into localhost, if we invoke gateway.getNetwork API, it will block forever without timeout.
  If peer's ip is set into other ip such as 127.0.0.1, 0.0.0.0，getNetwork API will terminate with timeout as expected.
  
{code:java}
// Create a new gateway for connecting to our peer node.
 constgateway=newGateway();
 awaitgateway.connect(ccp, { wallet, identity:'user1', discovery:
{ enabled:false }
});
// Get the network (channel) our contract is deployed to.
 constnetwork=awaitgateway.getNetwork('mychannel');
// Get the contract from the network.
 constcontract=network.getContract('fabcar');
{code}
 

!image-2019-07-09-16-08-43-361.png!",,heatherp,lesleyannj,logannwu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"09/Jul/19 5:07 PM;logannwu;image-2019-07-09-16-07-40-791.png;https://jira.hyperledger.org/secure/attachment/17384/image-2019-07-09-16-07-40-791.png","09/Jul/19 5:08 PM;logannwu;image-2019-07-09-16-08-43-361.png;https://jira.hyperledger.org/secure/attachment/17385/image-2019-07-09-16-08-43-361.png",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:xr",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lesleyannj,logannwu,,,,,,,,,,,,,,,,,,,"24/Oct/19 11:39 PM;heatherp;Hi [~logannwu] - I'm working through the node sdk backlog with the maintainers, can you comment with what localhost is defined as? What is it defined as in your /etc/hosts file? Thanks;;;","01/Dec/20 11:28 PM;lesleyannj;More information required.;;;",,,,,,,,,,,,,,,
Private data docs different on read the docs and sdk,FABN-1311,40955,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,harrisob@us.ibm.com,caroline-church,caroline-church,09/Jul/19 10:47 PM,13/Jan/21 1:29 AM,28/Oct/23 3:25 AM,13/Jan/21 1:29 AM,,,,,,,,,,0,sdk-triaged,,,,,On this page [https://hyperledger-fabric.readthedocs.io/en/release-1.4/private-data-arch.html] where it describes what the JSON file should look like for a private data collection is different from what is says it should look like here [https://fabric-sdk-node.github.io/release-1.4/tutorial-private-data.html]. When trying out private data with the node dsk if i used the one from read the docs it complained i didn't have an identities property set,,caroline-church,harrisob@us.ibm.com,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014ek:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,harrisob@us.ibm.com,jtonline,,,,,,,,,,,,,,,,,,,"24/Jul/19 11:47 PM;jtonline;Probably worth checking what works in the other SDKs before updating the read the doc docs. They should all accept the same format?;;;","25/Jul/19 9:59 PM;jtonline;It looks like both formats are in use- the peer chaincode command works with the example in the read the docs doc, but fails with the example from the node sdk https://hyperledger-fabric.readthedocs.io/en/release-1.4/commands/peerchaincode.html;;;","13/Jan/21 1:29 AM;harrisob@us.ibm.com;Both formats are used, the policy must be defined differently based on using the CLI or NodeSDK to package the Chaincode.;;;","13/Jan/21 1:29 AM;harrisob@us.ibm.com;Both documents are correct for the where they are used.;;;",,,,,,,,,,,,,
"npm failed to install from ""node_modules/fabric-ca-client"" ",FABN-1312,41104,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,vijaypunugubati,vijaypunugubati,12/Jul/19 6:18 AM,31/Jul/19 2:47 AM,28/Oct/23 3:25 AM,31/Jul/19 2:47 AM,v2.0.0,,,,,v2.0.0,,,,0,node-SDK,quality,,,,"npm install Could not install from ""node_modules/fabric-ca-client"" as it does not contain a package.json file.

*Branch:* master

*Platform:* *x86_64*

*Error* *Snippet:* 
{code:java}
/00:08:38.676 ======== Performance Test using PTE and NL tools ========
00:08:41.657 npm ERR! code ENOLOCAL
00:08:41.658 npm ERR! Could not install from ""node_modules/fabric-ca-client"" as it does not contain a package.json file.
00:08:43.247 
00:08:43.247 npm ERR! A complete log of this run can be found in:
00:08:43.248 npm ERR!     /home/jenkins/.npm/_logs/2019-07-11T17_58_34_558Z-debug.log
00:08:43.253 FAILED: Failed to install npm. Cannot run pte test suite./ code placeholder{code}
Build console: [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/3114/console]

 And also the developers observed some of the node_modules have the issues when they tried to use them up like  

`npm install fabric-network@2.0.0-snapshot.213`

`npm install fabric-client@2.0.0-snapshot.251 (Not FOUND)`

`npm install fabric-client@2.0.0-snapshot.252 (Broken)`

The issue was resolved now, I recommend to have a document for the future reference. Bret Harrison has fixed it, and it would be more helpful if Bret explains more about this.",,scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tu4:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),scottz,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Imports of Fabric sdk version 1.4.1 are pulling in Fabric CA client latest and not 1.4.1,FABN-1313,41112,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,,MariWade,MariWade,13/Jul/19 12:32 AM,17/Dec/19 11:24 PM,28/Oct/23 3:25 AM,17/Dec/19 11:24 PM,v1.4.1,,,,,,,,,0,sdk-triaged,,,,,"Trying to update our projects to use the fabric sdk and ca client.  Updated both versions to 1.4.1 (then tried 1.4.3).  Node had an error due to mismatch of versions with the  sdk client's CA and the one specified in our project.

Fabric sdk client is pulling in Fabric CA client 'latest' and not the corresponding version.

 ",,bestbeforetoday,heatherp,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tvw:",,,,Unset,Unset,,,,,,,,,,,"Package.json with

    ""fabric-client"": ""~1.4.1"",
    ""fabric-ca-client"": ""~1.4.1"",",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,heatherp,MariWade,,,,,,,,,,,,,,,,,,,"25/Oct/19 10:42 PM;heatherp;Hey [~MariWade], I've been going through the node sdk backlog with the maintainers. I've just installed fabric-client at 1.4.5-snapshot.69 and in it's package.json I can see a dependency of fabric-ca-client at version ""unstable-1.4. Whilst that doesn't sound great, it's not the same as ""latest"" - does this match what you see?
 ;;;","17/Dec/19 11:24 PM;bestbeforetoday;I think this has been resolved in subsequent changes to the `release-1.4` branch. Please reopen if that is not the case.;;;",,,,,,,,,,,,,,,
FabricCAServices.enroll failed when using CryptoSuite_PKCS11,FABN-1314,41202,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,huxd,huxd,huxd,15/Jul/19 3:49 PM,24/Jul/19 1:45 PM,28/Oct/23 3:25 AM,24/Jul/19 1:45 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"when using FabricCAServices.enroll with CryptoSuite_PKCS11 as the crypto suite, it failed with error:
{code:java}
2019-07-15T06:35:45.734Z - error: [FabricCAClientService.js]: Failed to enroll admin, error:%o message=Failed to generate key for enrollment due to error [ReferenceError: key is not defined], stack=Error: Failed to generate key for enrollment due to error [ReferenceError: key is not defined]
 at FabricCAServices.enroll (/home/huxd/hyperledger/fabric-sdk-node/fabric-ca-client/lib/FabricCAServices.js:219:12)
{code}
 

test code used:

 
{code:java}
'use strict';

const FabricCAService = require('fabric-ca-client/lib/FabricCAServices');
const User = require('fabric-common/lib/User')
const utils = require('fabric-common/lib/Utils');

async function test() {

utils.setConfigSetting('crypto-hsm', true);
utils.setConfigSetting('crypto-pkcs11-lib', '/usr/local/lib/softhsm/libsofthsm2.so');
utils.setConfigSetting('crypto-pkcs11-slot', 0);
utils.setConfigSetting('crypto-pkcs11-pin', '98765432');
utils.setConfigSetting('crypto-pkcs11-usertype', 1);
utils.setConfigSetting('crypto-pkcs11-readwrite', true);

const service = new FabricCAService('http://localhost:7054', null, '');
// console.log(service.getCaName());
const result = await service.enroll({enrollmentID: 'admin', enrollmentSecret: 'admin'});
console.log(result);

}

test();{code}
 

 ",,huxd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00txw:",,,,Unset,Unset,,,,,,,,,,,run the above test code using fabric node sdk from latest code in master branch.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),huxd,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[Fabric-Network] Support for Peer/Org targetting,FABN-1315,41248,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,davidkel,davidkel,17/Jul/19 5:16 PM,14/Aug/19 8:04 PM,28/Oct/23 3:25 AM,14/Aug/19 8:04 PM,v1.4.2,,,,,v2.0.0,,,,0,,,,,,"When using Private Data Collections there is a requirement to send proposals containing private data only to orgs that are part of the private data collection. If it were sent to all orgs then there is the potential for orgs not part of the PDC to have visibility of that data (even if it is in the transientMap) and the level of trust may not extend to hoping that org doesn't try to capture this information.

When a submit is made it should be possible to list the orgs that should only receive this data or discovery should be enhanced to capture private data collections so the decision can be made automatically. ",,bestbeforetoday,davidkel,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1344,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00u6c:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,Jakeeyturner,,,,,,,,,,,,,,,,,,,"17/Jul/19 7:31 PM;Jakeeyturner;FYI [~awjh-ibm];;;","14/Aug/19 8:04 PM;bestbeforetoday;I created a duplicate not realising this was open.;;;",,,,,,,,,,,,,,,
Sdk-node tests fail intermittently on fabric end2end testing with Gradle build failure. ,FABN-1316,41302,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Environment Issue,,vijaypunugubati,vijaypunugubati,18/Jul/19 11:30 PM,25/Jul/19 1:00 AM,28/Oct/23 3:25 AM,25/Jul/19 1:00 AM,v2.0.0,,,,,v2.0.0,,,,0,chaincode,ci-failure,node-SDK,,,"Sdk-node tests fail intermittently on fabric end2end testing with Gradle build failure to create image and fallowed by sdk-node test failures.

*Branch:* Master**

*Platform:* ** x86_64

*Error Snippet:* 
{code:java}
/00:56:48.009 #  ***** Java-Chaincode U P G R A D E flow: instantiate chaincode ***** 
00:56:48.016 ok 1014 Successfully retrieved TLS certificate
00:56:48.044 ok 1015 Successfully enrolled user 'admin' (e2eUtil 2)
00:57:20.812 ok 1016 Successfully initialized Channel
00:57:20.812 # Proposal failed to example_java :: Error: error starting container: error building image: docker image build failed: docker build failed: Error returned from build: 1 ""Gradle build
00:57:20.812 # Starting a Gradle Daemon (subsequent builds will be faster)
00:57:20.812 # Download https://plugins.gradle.org/m2/com/github/johnrengelman/shadow/com.github.johnrengelman.shadow.gradle.plugin/2.0.3/com.github.johnrengelman.shadow.gradle.plugin-2.0.3.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/com/github/jengelman/gradle/plugins/shadow/2.0.3/shadow-2.0.3.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm-commons/6.1/asm-commons-6.1.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/apache/ant/ant/1.9.7/ant-1.9.7.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/jdom/jdom2/2.0.6/jdom2-2.0.6.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/apache/ant/ant-parent/1.9.7/ant-parent-1.9.7.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm/6.1/asm-6.1.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm-tree/6.1/asm-tree-6.1.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm-analysis/6.1/asm-analysis-6.1.pom
00:57:20.812 # Download https://plugins.gradle.org/m2/org/apache/ant/ant-launcher/1.9.7/ant-launcher-1.9.7.pom
00:57:20.813 # Download https://plugins.gradle.org/m2/com/github/jengelman/gradle/plugins/shadow/2.0.3/shadow-2.0.3.jar
00:57:20.813 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm-commons/6.1/asm-commons-6.1.jar
00:57:20.814 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm-analysis/6.1/asm-analysis-6.1.jar
00:57:20.814 # Download https://plugins.gradle.org/m2/org/jdom/jdom2/2.0.6/jdom2-2.0.6.jar
00:57:20.814 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm/6.1/asm-6.1.jar
00:57:20.814 # Download https://plugins.gradle.org/m2/org/apache/ant/ant/1.9.7/ant-1.9.7.jar
00:57:20.814 # Download https://plugins.gradle.org/m2/org/apache/ant/ant-launcher/1.9.7/ant-launcher-1.9.7.jar
00:57:20.814 # Download https://plugins.gradle.org/m2/org/ow2/asm/asm-tree/6.1/asm-tree-6.1.jar
00:57:20.814 # 
00:57:20.814 # FAILURE: Build failed with an exception.
00:57:20.814 # 
00:57:20.814 # * What went wrong:
00:57:20.814 # A problem occurred configuring root project 'fabric-chaincode-example-gradle'.
00:57:20.815 # > Could not resolve all artifacts for configuration ':classpath'.
00:57:20.815 # > Could not download shadow.jar (com.github.jengelman.gradle.plugins:shadow:2.0.3)
00:57:20.815 # > Could not get resource 'https://plugins.gradle.org/m2/com/github/jengelman/gradle/plugins/shadow/2.0.3/shadow-2.0.3.jar'.
00:57:20.815 # > Connection reset
00:57:20.815 # > Could not download ant.jar (org.apache.ant:ant:1.9.7)
00:57:20.816 # > Could not get resource 'https://plugins.gradle.org/m2/org/apache/ant/ant/1.9.7/ant-1.9.7.jar'.
00:57:20.816 # > Connection reset
00:57:20.816 # 
00:57:20.816 # * Try:
00:57:20.817 # Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
00:57:20.818 # 
00:57:20.818 # * Get more help at https://help.gradle.org
00:57:20.818 # 
00:57:20.818 # BUILD FAILED in 11s
00:57:20.825 # ""/ code placeholder
{code}
 

And sdk-node tests failures:

 
{code:java}
/00:57:20.825 not ok 1017 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11) at process._tickCallback (internal/process/next_tick.js:68:7)
00:57:20.826   ---
00:57:20.826     operator: fail
00:57:20.826     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
00:57:20.826     stack: |-
00:57:20.826       Error: Error: All proposals were not good
00:57:20.827           at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11)
00:57:20.827           at process._tickCallback (internal/process/next_tick.js:68:7)
00:57:20.827           at Test.assert [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:57:20.827           at Test.bound [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:57:20.827           at Test.fail (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:57:20.828           at Test.bound [as fail] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:57:20.828           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
00:57:20.828           at process._tickCallback (internal/process/next_tick.js:68:7)
00:57:20.828   .../ code placeholder
{code}
{code:java}
/00:57:22.374 not ok 1039 checking query results are correct that value is 110
00:57:22.374   ---
00:57:22.374     operator: equal
00:57:22.374     expected: '110'
00:57:22.374     actual:   '100'
00:57:22.374     at: e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:831:10)
00:57:22.374     stack: |-
00:57:22.374       Error: checking query results are correct that value is 110
00:57:22.375           at Test.assert [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:57:22.375           at Test.bound [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:57:22.375           at Test.equal (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
00:57:22.375           at Test.bound [as equal] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:57:22.376           at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:831:10)
00:57:22.376           at process._tickCallback (internal/process/next_tick.js:68:7)
00:57:22.376   .../ code placeholder
{code}
same error on test number 

{color:#de350b}*not ok 1040 checking query results are correct that value is 110*{color}
{code:java}
/00:57:22.645 not ok 1045 Checking the result has the transientMap value returned by the chaincode
00:57:22.645   ---
00:57:22.645     operator: equal
00:57:22.645     expected: |-
00:57:22.645       'value'
00:57:22.645     actual: |-
00:57:22.645       'Error: transaction returned with failure: Invalid invoke function name. Expecting one of: [""move"", ""delete"", ""query""] but found::testTransient'
00:57:22.645     at: e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:821:9)
00:57:22.645     stack: |-
00:57:22.645       Error: Checking the result has the transientMap value returned by the chaincode
00:57:22.645           at Test.assert [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:57:22.645           at Test.bound [as _assert] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:57:22.645           at Test.equal (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
00:57:22.645           at Test.bound [as equal] (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:57:22.645           at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-end-2-end-daily-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:821:9)
00:57:22.645           at process._tickCallback (internal/process/next_tick.js:68:7)
00:57/ code placeholder
{code}
{color:#172b4d}same on test number {color}

{color:#de350b}*not ok 1046 Checking the result has the transientMap value returned by the chaincode*{color}

 

 

 

*Build Logs:* [https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-master-x86_64/170/consoleFull]

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/5867/console]

 ",,btl5037,harrisob@us.ibm.com,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uh0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,harrisob@us.ibm.com,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,"24/Jul/19 12:23 AM;mbwhite;The errors regarding downloading resources we can't really do much about; we've seen over the last few weeks builds fail as they can't access the Java repositories.  The builds are at the mercy of the internet in some ways. 

 

 ;;;",,,,,,,,,,,,,,,,
The delete function in fabric-ca-client/lib/IdentityService.js does not allow deletion of users based on caName.,FABN-1317,41361,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,,,adityanalge,adityanalge,23/Jul/19 7:27 AM,09/Dec/20 12:06 AM,28/Oct/23 3:25 AM,,,,,,,,,,,0,community-help-wanted,external,sdk-triaged,,,"My cacount is 2.  Assume the default CA's name is CA1 and the internal CA instance's name is CA2.

By default, when I make a call to the delete function, all the requests are redirected to the default ca i.e. CA1 since there is no option to pass caName in the function. In the fabric-ca swagger file, if you try the DELTE /api/v1/identities/\{id} api, there is a clear option to pass the caName as a parameter.",,adityanalge,bk201,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:xy",,,,Unset,Unset,,,,,,,,,,,"Run the following piece of code to delete a user having enrollmentID username -
```
const client = new Client();
 const ca = new FabricCaClient(caInfo.url, { trustedRoots: false, verify: false } ); 
const identityService = ca.newIdentityService();
await identityService.deleteFromCA(userName, registrar);
```

You'll be able to see that the user is only deleted from Users database of CA1 and not CA2. I have created the following pull request (https://github.com/hyperledger/fabric-sdk-node/pull/23) that adds a function called deleteFromCA which allows us to pass caName as paramter to URL while using fabric-sdk-node.
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),adityanalge,bk201,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,"24/Oct/19 11:37 PM;heatherp;Hi [~adityanalge] - I'm working through the node sdk backlog with the maintainers and I noticed that you raised a PR with a fix for this - are you planning on continuing working on this? We are in the process of migrating over to github, so pull requests will be enabled soon.;;;","24/Oct/19 11:49 PM;adityanalge;Yes. It would be easier for me to raise a pr on GITHUB as I do not have experience with gerrit.;;;","25/Oct/19 12:14 AM;heatherp;ok, thanks;;;","05/Jun/20 10:14 PM;bk201;Hi [~heatherp]!

I can continue to work on this issue. I have multi-ca configuration and want to delete identities from particular CA.

This bug is in 1.4.* and 2.0.* versions

Thanks!;;;","01/Dec/20 11:30 PM;lesleyannj;[~bk201] are you working on a fix for this jira?;;;","09/Dec/20 12:06 AM;bk201;[~lesleyannj] 
Unfortunately not;;;",,,,,,,,,,,
link split words in module-fabric-network.html,FABN-1318,41374,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Done,davidkhala,davidkhala,davidkhala,24/Jul/19 8:13 AM,27/Sep/19 11:11 AM,28/Oct/23 3:25 AM,27/Sep/19 11:11 AM,v1.4.2,v2.0.0,,,,,,,,0,,,,,,"A funny design found in module-fabric-network.html
To make the word body is the same with the linked object name, some document  now looks like this 

{code:java}
[Network]{@link module:fabric-network.Network}s
{code}


the 's' is out of the link. ",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00utw:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,main,,,,,,,,,true,"24/Jul/19 8:27 AM;davidkhala;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32471
https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32470;;;",,,,,,,,,,,,,,,,
[fabric-network] Documentation required about the Gateway Lifecycle,FABN-1319,41377,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,davidkel,davidkel,24/Jul/19 5:02 PM,01/Nov/19 7:36 PM,28/Oct/23 3:25 AM,01/Nov/19 7:36 PM,v1.4.1,v1.4.2,,,,v1.4.2,,,,0,Documentation,sdk-triaged,,,,"Users of the fabric-network api are repeating a bad design pattern which is as follows
1. create and connect gateway
2. submitTransaction/evaluateTransaction
3. disconnect gateway
This is probably due to the sample which show a single CLI invocation where this pattern is applicable and you don't invoke the command often. However in real world applications that are constantly making requests, this pattern is bad on performance, will use resources and can result in connectivity problems due to resource starvation. Documentation is required to guide users on the lifecycle of the fabric-network gateway.

Gateway objects have a 1-1 association with an identity, so once you connect a gateway it is bound to the identity provided and cannot be changed. Gateway/Network/Contract/Transaction objects are designed to multiplex which means you can make multiple requests concurrently via these objects to submit or evaluate transactions. 

Therefore for all requests made by a specific identity should always be done through the same gateway/network/contract objects. Note that the gateway object will cache the network and contract objects for you so it is safe to call getNetwork/getContract multiple times.

Only disconnect that Gateway when you have no further use for it. An example of a long running application might do the following
1. Create a Gateway object for each individual identity that makes a request and cache it or use a cached one but only have a single gateway object for that identity
2. Have a stale policy such that if a gateway has not been used in a while then disconnect that gateway. If then that identity comes in again to make a request then a new gateway object can be created.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uuk:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,"01/Nov/19 7:36 PM;davidkel;Guess this jira can serve as the go to information. ;;;",,,,,,,,,,,,,,,,
Node sdk is not tagging releases in github anymore,FABN-1320,41382,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,heatherp,davidkel,davidkel,24/Jul/19 11:03 PM,23/Oct/19 9:59 PM,28/Oct/23 3:25 AM,23/Oct/19 9:59 PM,v1.4.2,,,,,v1.4.2,,,,0,sdk-triaged,,,,,"If you look in github the last tag was 1.4.1.
1.4.4 is out already but not tags have been created for the 1.4.2, 1.4.3 or 1.4.4 releases so it's difficult now to find the commit to match a particular release.

",,davidkel,harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uv0:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,heatherp,,,,,,,,release-2.4,main-emeritius,main,,,,,,,,true,"06/Aug/19 10:17 PM;heatherp;I think:

fabric-sdk-node is missing 1.4.2 and 1.4.4
fabric-sdk-java is missing 1.4.4
We don't think 1.4.3 was real, due to publishing problems;;;","07/Aug/19 12:32 AM;heatherp;Commands I need running by somebody with authority, on release-1.4:

*fabric-sdk-node - DONE*
 ```
 git tag -a v1.4.2 24e7e4099024f48aa823ac6901c08fbb2da3b7bc -F release_notes/v1.4.2.txt
 git push origin v1.4.2 HEAD:refs/heads/release-1.4
 git tag -a v1.4.4 1b7d1287a578ae2d45007609806483da71561e9e -F release_notes/v1.4.4.txt
 git push origin v1.4.4 HEAD:refs/heads/release-1.4
 ```
 *fabric-sdk-java - DONE*

```
 git tag -a 1.4.4 Ie766fc7878545a228d6c3152f1654289a96b4681
 git push origin v1.4.4 HEAD:refs/heads/release-1.4
 ```;;;","07/Aug/19 1:08 AM;harrisob@us.ibm.com;All set for NodeSDK;;;","07/Aug/19 1:29 AM;heatherp;Added the git tag script that used by the manual release process, to both the java and node sdk repos:
 For node sdk: [https://gerrit.hyperledger.org/r/c/fabric-sdk-node/%2B/32742] - DONE
 For java sdk: [https://gerrit.hyperledger.org/r/c/fabric-sdk-java/%2B/32744] - Abandoned, don't think this will be used by azure pipelines

Fixed a bug in the git_tag.sh script in fabric-chaincode-java:
 [https://gerrit.hyperledger.org/r/c/fabric-chaincode-java/%2B/32767]- DONE

 ;;;",,,,,,,,,,,,,
asLocalhost can't be overrided via DISCOVERY_AS_LOCALHOST,FABN-1321,41383,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nekia,nekia,nekia,24/Jul/19 11:04 PM,24/Oct/19 10:33 PM,28/Oct/23 3:25 AM,24/Oct/19 10:33 PM,,,,,,,,,,0,,,,,,"When tried to override dicovery option(asLocalhost) via environment variable 'DISCOVERY_AS_LOCALHOST', it's recongized as true because value is handled as a string. Because of it, the localhost mapping is always enabled whenever the environment value is defined.
 
",,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqry:r",,,,Unset,Unset,,,,,,,,,,,"# Just following setup steps for fabcar sample

$ curl -sSL http://bit.ly/2ysbOFE | bash -s -- 1.4.2 1.4.2 0.4.15
$ export PATH=$PWD/fabric-samples/bin:$PATH
$ cd fabric-samples/fabcar
$ ./startFabric.sh
$ cd javascript
$ npm install
$ node enrollAdmin
$ node registerUser
$ node invoke
# Commented out hard wired asLocalhost configuration
$ git diff .
diff --git a/fabcar/javascript/query.js b/fabcar/javascript/query.js
index 40af411..8395943 100644
--- a/fabcar/javascript/query.js
+++ b/fabcar/javascript/query.js
@@ -27,7 +27,7 @@ async function main() {
 
         // Create a new gateway for connecting to our peer node.
         const gateway = new Gateway();
-        await gateway.connect(ccpPath, { wallet, identity: 'user1', discovery: { enabled: true, asLocalhost: true } });
+        await gateway.connect(ccpPath, { wallet, identity: 'user1', discovery: { enabled: true } });
 
         // Get the network (channel) our contract is deployed to.
         const network = await gateway.getNetwork('mychannel');
$ node query
(fail as expected)
Wallet path: /home/atsushi/hyperledger/fabric-samples/fabcar/javascript/wallet
2019-07-24T13:56:18.425Z - error: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://peer0.org1.example.com:7051
(snip)
$ export DISCOVERY_AS_LOCALHOST=true
$ node query
(success)
$ export DISCOVERY_AS_LOCALHOST=false
(success, bushould be failed)

",,Unset,,,,,,Unset,,Unset,,(Please add usage information),nekia,,,,,,,,,,dev,main,,,,,,,,,true,"25/Jul/19 5:13 PM;nekia;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32489];;;",,,,,,,,,,,,,,,,
[Fabric-Network] Event hub strategy reference docs are incorrect,FABN-1322,41387,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,davidkel,davidkel,24/Jul/19 11:51 PM,27/Jul/19 12:36 AM,28/Oct/23 3:25 AM,26/Jul/19 12:27 AM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"If you look at https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.html#.DefaultEventHandlerStrategies__anchor
(And master as well) the descriptions matching each strategy are not correct. They are confused between network/organisation and any/all.

",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uvw:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[Fabric-Network] timeout handling is confused,FABN-1323,41423,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,davidkel,davidkel,25/Jul/19 6:59 PM,10/Oct/19 12:46 AM,28/Oct/23 3:25 AM,10/Oct/19 12:46 AM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"When interacting with a fabric there are 3 separate stages for which a timeout is required  when submitting a transaction and 1 timeout when evaluating a transaction

1. Timeout waiting for a response from the peer to a proposal (evaluate/submit)
2. Timeout waiting for a response from the orderer to a sendTransaction (submit)
3. Timeout waiting for peers to commit the transaction (submit)

In fabric-network it appears all these timeouts are now set to the value configured for option 3. This seems to me to be very confusing. It also means that any timeouts set in the connection profile are ignored.

I think what is required is that fabric-network should separate these timeouts so that a user has individual control either via code or via the connection profile. Code should override any connection profile settings. If no values are provided for any then fabric-network can decide on an appropriate strategy for default. It might also be good to have a single timeout that covers the complete end to end but shouldn't be the timeout defined for use in option 3",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v1v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Fabric-Network]  Network level eventhub strategy doesn't include event hubs from other orgs,FABN-1324,41424,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,davidkel,davidkel,25/Jul/19 7:36 PM,09/Oct/19 12:22 AM,28/Oct/23 3:25 AM,09/Oct/19 12:21 AM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"{noformat}
            eventHandlerOptions: {
                commitTimeout: 300, // 5 minutes
                strategy: EventStrategies.MSPID_SCOPE_ALLFORTX
            },
            eventHubSelectionOptions: {
                strategy: EventHubSelectionStrategies.MSPID_SCOPE_ROUND_ROBIN,
            }
{noformat}

Event hub management has 2 configurable strategies and the above are the default ones. However If I change the eventHandlerOptions strategy to use NETWORK level scope rather than MSPID scope then it won't include any event hubs from other orgs due to the eventHubSelection strategy, unfortunately this is a regression. I think we need the following

1. There needs to be more inbuilt event hub selection strategies to allow for at least a working environment when any of the inbuilt event handler options are selected

2. Fabric-Network should change the default eventHubSelection strategy to a more appropriate one if the eventHandlerOptions is changed to another built in strategy and eventhubselection is not specified in order to maintain backward compatibility. 

3. validation should be done to ensure that the combination of user selected inbuilt strategies will work together as expected and throw an error if they don't",,bestbeforetoday,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v23:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,,,,,,,,,,,,,,,,,,,,"14/Aug/19 7:59 PM;bestbeforetoday;I think [FABN-1332|https://jira.hyperledger.org/browse/FABN-1332] will have decoupled these two settings. If/when the commit event handling reverts to using the high level eventing API again, this issue needs to be considered.;;;","08/Oct/19 12:42 AM;davidkel;[~bestbeforetoday] so if this is fixed now should this jira be withdrawn ?;;;","09/Oct/19 12:22 AM;davidkel;Moved to done as suggested that this has already been fixed by another jira;;;",,,,,,,,,,,,,,
Update readme for Node.js versions,FABN-1325,41429,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,25/Jul/19 11:59 PM,25/Oct/19 12:12 AM,28/Oct/23 3:25 AM,25/Oct/19 12:12 AM,v1.4.2,v2.0.0,,,,,,,,0,sdk-triaged,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1031,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v37:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
submitTransaction should only wait for commit events from eventing peers,FABN-1326,41432,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,26/Jul/19 12:19 AM,03/Aug/19 12:43 AM,28/Oct/23 3:25 AM,03/Aug/19 12:43 AM,v1.4.2,v2.0.0,,,,,,,,0,,,,,,The default event handler implementations wait for transaction commit events all peers from either the client identity's organization or from the network. Only peers in the eventSource role should be used.,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v3v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[Fabric-Network] Different structure returned from submitTransaction depending on whether discovery is used or not,FABN-1327,41467,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,harrisob@us.ibm.com,davidkel,davidkel,27/Jul/19 10:12 PM,01/Nov/19 7:09 PM,28/Oct/23 3:25 AM,01/Nov/19 7:09 PM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,sdk-triaged,,,,,"Calling submitTransaction on chaincode that returns an error (shim.Error) you get different output depending on whether you have used discovery or not

For example, If I don't use discovery or use the default endorsement handler (not the discovery handler) the result I get is

{noformat}
ERROR Error: No valid responses from any peers. 1 peer error responses:
    peer=peer0.org1.example.com, status=500, message=my shim error
    at Transaction._validatePeerResponses (/home/dave/Documents/gow/src/testclient/node_modules/fabric-network/lib/transaction.js:227:10)
    at Transaction.submit (/home/dave/Documents/gow/src/testclient/node_modules/fabric-network/lib/transaction.js:145:33)
    at <anonymous>
{noformat}

If however I use discovery then the result I get is

{noformat}
ERROR { Error: Endorsement has failed
    at DiscoveryEndorsementHandler._endorse (/home/dave/Documents/gow/src/testclient/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:186:19)
    at <anonymous>
  endorsements: 
   [ { Error: my shim error
    at self._endorserClient.processProposal (/home/dave/Documents/gow/src/testclient/node_modules/fabric-client/lib/Peer.js:140:36)
    at Object.onReceiveStatus (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:1207:9)
    at InterceptingListener._callNext (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:568:42)
    at InterceptingListener.onReceiveStatus (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:618:8)
    at callback (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:845:24)
       status: 500,
       payload: <Buffer >,
       peer: [Object],
       isProposalResponse: true } ] }
{noformat}

Both are error objects, but the message is different and in the latter case all the endorsement responses can be found in as a property of the error object.

The reason for this is that the underlying sendTransactionProposal returns different values depending on the discovery setup (subject of another Jira) however fabric-network processes one but ignores the other.

fabric-network should make the 2 consistent. My suggestion would be
1. In both cases make the error message the same
2. in both cases ensure that the error object has the endorsement property

This should mean it remains backward compatible (apart from the error message for the discovery version which could be a bit more useful)",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,FABN-1329,FABN-1328,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1329,FABN-1330,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v9v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"30/Aug/19 7:28 PM;harrisob@us.ibm.com;The new low level will return consistent results;;;","30/Aug/19 10:11 PM;davidkel;[~harrisob@us.ibm.com] Don't know anything about the new low level stuff, will it continue to work with a 1.4 fabric network ? If it doesn't then we need a solution for the current impl that supports 1.4. If it does then will applications continue to work unchanged irrespective on whether they use discovery ?;;;",,,,,,,,,,,,,,,
Unexpected Warn and Error log entries when chaincode returns a shim.Error,FABN-1328,41468,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,davidkel,davidkel,27/Jul/19 11:44 PM,10/Oct/19 12:44 AM,28/Oct/23 3:25 AM,10/Oct/19 12:44 AM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"While doing some testing of shim.Error returns I noticed log output to the console at warn and error level. However these are not issues with the sdk itself or the infrastructure but rather application level responses and as such probably should be logged at a lower level. The following were noticed for each of the particular calls with and without discovery

*With discovery enabled*
sendTransactionProposal:
2019-07-26T13:32:11.995Z - warn: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - endorsement failed - Error: I'm shim error

evaluateTransaction:
2019-07-26T13:33:36.988Z - warn: [Query]: evaluate: Query ID ""[object Object]"" of peer ""peer0.org1.example.com:17051"" failed: message=I'm shim error, stack=Error: I'm shim error

submitTransaction:
2019-07-26T13:34:05.665Z - warn: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - endorsement failed - Error: I'm shim error


*No Discovery*

submitTransaction:
2019-07-26T13:35:20.472Z - warn: [Transaction]: _validatePeerResponses: Received error response from peer: message=I'm shim error, stack=Error: I'm shim error
2019-07-26T13:35:20.475Z - error: [Transaction]: _validatePeerResponses: No valid responses from any peers. 1 peer error responses:
    peer=peer0.org1.example.com, status=500, message=I'm shim error

evaluateTransaction:
2019-07-26T13:36:34.169Z - warn: [Query]: evaluate: Query ID ""[object Object]"" of peer ""peer0.org1.example.com"" failed: message=I'm shim error, stack=Error:I'm shim error

Note also the [object Object] for the evaluate transaction

Of course these should only be suppressed for chaincode responses. other types of responses such as grpc or peer errors should be logged as before.

Part of this could be addressed when addressing FABN-1327

",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1327,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00va3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"30/Aug/19 7:54 PM;harrisob@us.ibm.com;The new low level will return consistent results;;;","04/Sep/19 7:30 PM;davidkel;[~harrisob@us.ibm.com]This is more around what the fabric-network is doing, not the low level api.;;;",,,,,,,,,,,,,,,
sendTransactionProposal returns completely different things depending on whether discovery is used or not.,FABN-1329,41474,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,,davidkel,davidkel,29/Jul/19 3:17 AM,30/Aug/19 7:29 PM,28/Oct/23 3:25 AM,30/Aug/19 7:29 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"If chaincode returns an error through shim.Error then sendTransactionProposal does completely different things depending on if discovery is used or not. If discovery is not used then it returns an array as follows :-
{noformat}
res [ [ { Error: I'm a shim error
    at self._endorserClient.processProposal (/home/dave/Documents/gow/src/testclient/node_modules/fabric-client/lib/Peer.js:140:36)
    at Object.onReceiveStatus (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:1207:9)
    at InterceptingListener._callNext (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:568:42)
    at InterceptingListener.onReceiveStatus (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:618:8)
    at callback (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:845:24)
      status: 500,
      payload: <Buffer >,
      peer: [Object],
      isProposalResponse: true } ],
  { header: 
...
    payload: 
...
    extension: 
...
 } ]
{noformat}

If however discovery is used, then it doesn't just return, it throws an error as follows
{noformat}
ERROR { Error: Endorsement has failed
    at DiscoveryEndorsementHandler._endorse (/home/dave/Documents/gow/src/testclient/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:186:19)
    at <anonymous>
  endorsements: 
   [ { Error: I'm a shim error
    at self._endorserClient.processProposal (/home/dave/Documents/gow/src/testclient/node_modules/fabric-client/lib/Peer.js:140:36)
    at Object.onReceiveStatus (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:1207:9)
    at InterceptingListener._callNext (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:568:42)
    at InterceptingListener.onReceiveStatus (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:618:8)
    at callback (/home/dave/Documents/gow/src/testclient/node_modules/grpc/src/client_interceptors.js:845:24)
       status: 500,
       payload: <Buffer >,
       peer: [Object],
       isProposalResponse: true } ] }
{noformat}
The api should be consistent irrespective of discovery. Unfortunately it can't be changed for V1, but should be made consistent for V2.",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1327,,,,,,,,,,,,,,,,,,,,,,,,FABN-1327,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vbf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"30/Aug/19 7:29 PM;harrisob@us.ibm.com;The new low level will return consistent results;;;",,,,,,,,,,,,,,,,
Get Chaincode error message using Contract.SubmitTransaction(),FABN-1330,41476,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,ShefaliMittal,ShefaliMittal,29/Jul/19 2:46 PM,16/Jun/20 5:42 PM,28/Oct/23 3:25 AM,16/Jun/20 5:42 PM,v1.4.0,,,,,v2.0.0,,,,0,external,sdk-triaged,,,,"Hi Team,

I have a chaincode in which I have returned some error using shim.Error(""This is error from chaincode""); 
I am invoking chaincode via node sdk using - Contract.SubmitTransaction()
Now when the error is returned from chaincode the catch error says - Error: No valid responses from any peers. 1 peer error responses:
This is error from chaincode

I want to capture only the error i.e ""This is error from chaincode"" and discard other string. 
Please tell me how could I do that",,bestbeforetoday,harrisob@us.ibm.com,ShefaliMittal,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,FABN-1451,,,,,,,,,,,,,,,,FABN-1327,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vbv:",,,,Unset,Unset,,,,,,,,,,,"Create a chaincode and return some error using shim.Error(""Error Message"")

Invoke this chaincode via node sdk using Contract.SubmitTransaction()

Unable to get only error message from chaincode. An error string is returned which contains other info as well. ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,ShefaliMittal,,,,,,,,,,,,,,,,,,,"24/Oct/19 11:22 PM;harrisob@us.ibm.com;With the new low level now providing all information from the endorsement, the high level will be able to provide it also to the user.;;;","16/Jun/20 5:42 PM;bestbeforetoday;All the peer responses are now directly accessible as properties of the error returned by submitTransaction();;;",,,,,,,,,,,,,,,
bccsp_pkcs11 functions should set defaults for opts to avoid errors,FABN-1331,41494,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,huxd,huxd,huxd,30/Jul/19 3:16 PM,19/Aug/19 11:11 AM,28/Oct/23 3:25 AM,19/Aug/19 11:11 AM,v2.0.0,,,,,,,,,0,,,,,,"functions in bccsp_pkcs11.js requires opts as input but the invokers including User, FabricCAServices etc. never provide this, this cause failure and blocks usage of FabricCAServices.enroll, User.setEnrollment etc. APIs with pkcs11 crypto suite.

Functions that causes this problem includes:
createKeyFromRaw
generateEphemeralKey
importKey
  
 Anyway, the functions should check the input parameters and set default when applicable.",,huxd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vf7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),huxd,,,,,,,,,,dev,main,,,,,,,,,true,"30/Jul/19 4:13 PM;huxd;CR: [https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32568];;;",,,,,,,,,,,,,,,,
Performance regression in default fabric-network commit handlers,FABN-1332,41520,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,31/Jul/19 12:31 AM,03/Aug/19 12:44 AM,28/Oct/23 3:25 AM,03/Aug/19 12:44 AM,v1.4.1,v1.4.2,,,,,,,,0,,,,,,"Using a test harness to drive large numbers of transaction invocations concurrently, a drop in throughput is observed when using the default transaction commit handler strategies in Node SDK version 1.4.1 - 1.4.4 compared to version 1.4.0. This performance drop appears to be due the default commit handlers being changed to use the new Network.addCommitListener() mechanism instead of using the low level ChannelEventHub directly.

Rework the default commit handler implementation in defaulteventhandlerstrategies.js to use ChannelEventHub directly.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vkj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[Fabric-Network] Message gives no indication as to why there are no suitable peers to initialize from,FABN-1333,41551,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkel,davidkel,davidkel,01/Aug/19 3:28 AM,13/Oct/19 7:25 PM,28/Oct/23 3:25 AM,13/Oct/19 7:25 PM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"The following code in the network class doesn't provide any help as to why there isn't
{noformat}		
if (ledgerPeers.length === 0) {
	const msg = 'no suitable peers available to initialize from';
	logger.error('_initializeInternalChannel: ' + msg);
	throw new Error(msg);
}
{noformat}
It also varies depending on whether discovery is used or not. So if discovery is used then the reason is that it can't find any peers defined for the invoker organisation. If discovery is off then it cannot find any peers in the channel with the query role. It would be really handy to output something more, for example if the user registers an identity with the wrong mspid and use discovery then you get this error but the user cannot determine their mistake from this.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vqz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,dev,main,,,,,,,,,true,"09/Oct/19 9:08 PM;davidkel;release-1.4: https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/33910/
master: https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/33913/;;;",,,,,,,,,,,,,,,,
channel.js duplicated jsDoc,FABN-1334,41568,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Done,davidkhala,davidkhala,davidkhala,02/Aug/19 2:02 AM,10/Aug/19 11:11 PM,28/Oct/23 3:25 AM,10/Aug/19 11:11 PM,v1.4.0,,,,,,,,,0,,,,,,"in Channel.js, function getPeers == getChannelPeers ,getPeer==getChannelPeer 
We should not duplicate document and code too much",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12234,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00vtv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,,,,,,,"02/Aug/19 2:06 AM;davidkhala;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32641;;;",,,,,,,,,,,,,,,,
[Fabric-Network] It's not clear from the documentation how to set event handling options such as commitTimeout,FABN-1335,41599,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,davidkel,davidkel,02/Aug/19 3:55 PM,04/Oct/19 12:34 AM,28/Oct/23 3:25 AM,04/Oct/19 12:34 AM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,good-first-issue,,,,,The reference documentation does exist here https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.Gateway.html#~DefaultEventHandlerOptions__anchor but this isn't obvious or easy to find. It would be good if the tutorial that talks about how to wait for transactions to be committed provided a reference link to all the possible options and even provide an example of changing the timeout value.,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00w0r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Network End-to-end tests not running in master branch,FABN-1336,41602,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,02/Aug/19 8:36 PM,06/Aug/19 12:44 AM,28/Oct/23 3:25 AM,06/Aug/19 12:44 AM,v2.0.0,,,,,,,,,0,,,,,,"The fabric-network integration tests are not running in the master branch. If this is intentional and the tests have been superseded by scenario (Cucumber) tests then:
 # The redundant integration test code should be removed.
 # The scenario tests should be re-written in Typescript as the integration tests implcitly test the correctness of the Typescript definitions.
 # Coverage of the scenario tests may need to be extended as there are some cases where the integration tests have failed due to code changes where the scenario tests have continued passing.

 

I suspect the tests are being accidentally omitted by the shouldRunTests() function in build/tasts/test.js, but it's not clear to me why this is happening in master and not release-1.4.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00w1f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
keyStore class design refactor,FABN-1337,41634,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,05/Aug/19 8:30 PM,13/Jan/21 12:26 AM,28/Oct/23 3:25 AM,13/Jan/21 12:26 AM,v2.0.0,,,,,v2.0.0,,,,0,external,master,sdk-triaged,,,"The CryptoKeyStore.js has been got a refactoring and becomes a much simpler since the object-oriented class design.

 

This issue solved:
 # Refactor CryptoKeyStore.js and rewrite crypto-key-store.js unit test to ES6 above form grammar.
 # Refactor CryptoKeyStore in Utils.js and utils.js test.
 # Fix CouchDBKeyValueStore's declaration bug and its test failure.
 # Remove _getKeyStore() method in CryptoSuite_ECDSA_AES.js.

 ",,Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010mq:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,"07/Dec/20 11:56 PM;lesleyannj;[~Hengming-Zhang] is there any update on this ticket?  is it still relevant?;;;","13/Jan/21 12:26 AM;lesleyannj;Backlog Review - Closing due to inactivity.  Can be re-opened if work starts again.;;;",,,,,,,,,,,,,,,
TypeScript: fcn cannot be null on instantiate API,FABN-1338,41636,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,sstone1,sstone1,sstone1,05/Aug/19 9:59 PM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,01/Dec/20 11:31 PM,,,,,,,,,,0,sdk-triaged,,,,,"When calling instantiate, the fcn parameter can be undefined - in which case it defaults to ""init"" - or it can be null/empty string. However, in TypeScript, it cannot be null with strict types. The type definitions need updating to match the code.

This affects Fabric v1.4.",,lesleyannj,mania06,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:xz",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,mania06,sstone1,,,,,,,,,,,,,,,,,,,"01/Dec/20 11:31 PM;lesleyannj;Restructured in v2x;;;",,,,,,,,,,,,,,,,
mismatch between typscript defs for cryptosuite creation and implementation,FABN-1339,41661,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,davidkel,davidkel,06/Aug/19 5:22 PM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,01/Dec/20 11:32 PM,v1.4.2,,,,,v1.4.2,v2.0.0,,,0,external,good-first-issue,sdk-triaged,,,"Reported by user on RocketChat

The type definitions for `newCryptoKeyStore` and `newDefaultKeyValueStore` appear to be incorrect. 
 The implementation in BaseClient.js is
{noformat}
...
	 *
	 * @param {api.KeyValueStore} KVSImplClass Optional. The built-in key store saves private keys. The key store may be backed by different
	 * {@link KeyValueStore} implementations. If specified, the value of the argument must point to a module implementing the
	 * KeyValueStore interface.
	 * @param {Object} opts Implementation-specific option object used in the constructor
	 * @returns {CryptoKeyStore} a new instance of the CryptoKeystore
	 */
	static newCryptoKeyStore(KVSImplClass, opts) {
		return sdkUtils.newCryptoKeyStore(KVSImplClass, opts);
	}

	/**
	 * Obtains an instance of the [KeyValueStore]{@link module:api.KeyValueStore} class. By default
	 * it returns the built-in implementation, which is based on files ([FileKeyValueStore]{@link module:api.FileKeyValueStore}).
	 * This can be overriden with a configuration setting <code>key-value-store</code>, the value of which is the
	 * full path of a CommonJS module for the alternative implementation.
	 *
	 * @param {Object} options Specific to the implementation, for initializing the instance. For the built-in
	 * file-based implementation, this requires a single property <code>path</code> to the top-level folder for the store
	 * @returns {Promise} A Promise for a {@link module:api.KeyValueStore} instance of the KeyValueStore implementation
	 */
	static newDefaultKeyValueStore(options) {
		return sdkUtils.newKeyValueStore(options);
	}
{noformat}
whereas the type definitions in base.d.ts is
{noformat}
	public static newCryptoKeyStore(obj?: { path: string }): ICryptoKeyStore;
	public static newDefaultKeyValueStore(obj?: { path: string }): Promise<IKeyValueStore>;
{noformat}",,bestbeforetoday,davidkel,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:xzi",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,lesleyannj,,,,,,,,,,,,,,,,,,,"16/Jun/20 5:34 PM;bestbeforetoday;I think changes in 2.x have resolved this issue there;;;","01/Dec/20 11:32 PM;lesleyannj;Covered in v2x;;;",,,,,,,,,,,,,,,
Fix some typos and dead links in documents,FABN-1340,41693,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,08/Aug/19 8:44 AM,11/Aug/19 5:48 AM,28/Oct/23 3:25 AM,11/Aug/19 5:48 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"There are some typos and dead links in documents. We need to fix the followings.

h5. Dead link to configtxlator in some parts.

h5. Typo in channel-events.md
* Wrong parameter description for ‘last_seen’. ‘oldest’ needs to be replaced with ‘last_seen’.
* Duplicated lines for block events in `How to use a Channel Event Hub`.

h5. Typo in listening-to-events.md
* Wrong callback function's params of addBlockListener().

h5. Typo in CommitHandler.js
* commit() has a wrong return value `ProposalResponseObject`. `BroadcastResponse` is correct.
",,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00whv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yuki-kon,,,,,,,,,,dev,main,,,,,,,,,true,"09/Aug/19 2:07 AM;yuki-kon;[https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/32778/];;;",,,,,,,,,,,,,,,,
Enhance packaging code to allow user to control what gets packaged,FABN-1341,41695,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,08/Aug/19 5:58 PM,04/Dec/20 1:00 AM,28/Oct/23 3:25 AM,04/Dec/20 1:00 AM,v1.4.2,,,,,,,,,0,sdk-triaged,,,,,"The packaging code in the SDK for Fabric v1.4 lacks general purpose options for controlling which files in a directory get packaged into a CDS file. Node.js has the option to handle a .npmignore file, but the other platforms do not have the same option. This is a particular problem with Java, because the build directories containing uber JARs end up in the CDS package, then get dropped the other end.

The solution here is to introduce an optional .fabricignore file that if found, will allow the user to control which files and directories get excluded from the CDS file. This will apply to the new chaincode lifecycle as well, as similar code is in the SDK for packaging new .tar.gz files.",,heatherp,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010ml:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,sstone1,,,,,,,,,,,,,,,,,,,,"24/Oct/19 11:26 PM;heatherp;This needs cherry picking into master before it can be closed [~sstone1];;;",,,,,,,,,,,,,,,,
Packaging large smart contracts is extremely slow using Node.js SDK,FABN-1342,41717,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,09/Aug/19 9:49 PM,29/Nov/19 11:21 PM,28/Oct/23 3:25 AM,29/Nov/19 11:21 PM,v1.4.2,,,,,,,,,0,sdk-triaged,,,,,"The stream-buffers package we use to create smart contract packages in the Node.js SDK is extremely inefficient. It allocates a buffer of size x, then allocates a new one and copies it over when that buffer is exceeded., with an increment of size y. 

It is significantly faster to implement this by implementing a writable stream that stores all of the buffers that it gets passed, and then calling Buffer.concat() after the stream is done. 

My testing shows that this brings the packaging time of a largish Java smart contract down from 235s to 4s, which is very close to the time the 'tar' command takes to do the same thing.",,heatherp,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wl7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,sstone1,,,,,,,,,dev,main,,,,,,,,,true,"09/Aug/19 9:51 PM;sstone1;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32809;;;","24/Oct/19 11:34 PM;heatherp;This is needed in master too;;;","29/Nov/19 7:28 PM;sstone1;https://github.com/hyperledger/fabric-sdk-node/pull/47;;;",,,,,,,,,,,,,,
Improve Node.js event tutorials,FABN-1343,41729,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,negupta,negupta,11/Aug/19 11:21 PM,13/Jan/21 1:13 AM,28/Oct/23 3:25 AM,13/Jan/21 1:13 AM,,,,,,,,,,0,external,sdk-triaged,,,,"Document the pattern for apps to consume and process block events, e.g. to build an off chain data store.

The node.js SDK low level event tutorial mentions the pattern here: [https://fabric-sdk-node.github.io/release-1.4/tutorial-channel-events.html:]

""For example an application could listen for block events and write transaction data to a data store for the purpose of performing queries or other analytics against the channel's data...""

The more comprehensive text needs to be merged into the high level event tutorial as well:

[https://fabric-sdk-node.github.io/release-1.4/tutorial-listening-to-events.html]

It should also point to the sample here:

[https://github.com/hyperledger/fabric-samples/tree/release-1.4/off_chain_data]

 ",,lesleyannj,negupta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:01",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,negupta,,,,,,,,,,,,,,,,,,,,"13/Jan/21 1:13 AM;lesleyannj;Fabric samples have been enhanced over the last few months.  This work has included uplifts the application parts of the sample.   Up-to-date coverage of event handling can be seen in the latest v2.x samples for example https://github.com/hyperledger/fabric-samples/tree/master/off_chain_data
;;;","13/Jan/21 1:13 AM;lesleyannj;Event handle better shown in updated fabric-samples.;;;",,,,,,,,,,,,,,,
Allow endorsing peers to be specified in fabric-network,FABN-1344,41759,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,13/Aug/19 9:13 PM,14/Aug/19 11:55 PM,28/Oct/23 3:25 AM,14/Aug/19 9:27 PM,,,,,,,,,,0,,,,,,"*As a* client application
*I want* to specify the endorsing peers to use for a specific transaction
*So that* the proposal is only sent to peers that have access to private data associated with the transaction

Node SDK equivalent of https://jira.hyperledger.org/browse/FGJ-32.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1315,,,,,,,,,,,,,,,,,,,FGJ-32,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wub:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Node.js SDK: Add DeliverWithPrivateData support for channel event,FABN-1345,41648,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,wenjian,wenjian,06/Aug/19 2:30 AM,14/Feb/20 5:16 AM,28/Oct/23 3:25 AM,14/Feb/20 5:16 AM,,,,,,v2.0.0,,,,0,external,sdk-triaged,,,,,,denyeart,harrisob@us.ibm.com,wenjian,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-12043,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FAB-5108,,,No,,Unset,No,,,"1|i00w8z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,wenjian,,,,,,,,dev,main,,,,,,,,,true,"24/Oct/19 11:21 PM;harrisob@us.ibm.com;The code has been added to the fabric-client, need to now port it to the new low level currently in fabric-common EventService.js ;;;","03/Dec/19 3:14 AM;denyeart;[~harrisob@us.ibm.com]
https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/34121/ should be abandoned and submitted as GitHub PR.;;;","14/Feb/20 5:16 AM;harrisob@us.ibm.com;using https://jira.hyperledger.org/browse/FABN-1461;;;",,,,,,,,,,,,,,
Node.js SDK: Add DeliverWithPrivateData protos,FABN-1346,41779,41648,Sub-task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,14/Aug/19 4:09 AM,28/Oct/19 8:54 PM,28/Oct/23 3:25 AM,28/Oct/19 8:54 PM,,,,,,,,,,0,sdk-triaged,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wyb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node SDK refactor low-level,FABN-1347,41783,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,14/Aug/19 6:01 AM,29/May/20 1:06 AM,28/Oct/23 3:25 AM,22/Jan/20 2:38 AM,,,,,,v2.0.0,,,,1,sdk-triaged,,,,,"fabric-common package will be enhanced with the refactored basic client API's of a the low level NodeSDK, fabric-client package. These include endorsement, query, commit, events, and discovery.",,davidkhala,harrisob@us.ibm.com,huxd,,,,,,,,,,,,,,,FABN-1243,FABN-1241,FABN-1018,FABN-1246,FABN-1245,FABN-1244,FABN-1150,FABN-1185,FABN-1330,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1041,,FABN-1041,FABN-1296,FABN-1455,FABN-1464,FABN-1465,"04/Sep/19 11:39 PM;harrisob@us.ibm.com;NodeSDK 2.pptx;https://jira.hyperledger.org/secure/attachment/17763/NodeSDK+2.pptx","29/May/20 1:05 AM;davidkhala;fabric-client-legacy-found.png;https://jira.hyperledger.org/secure/attachment/18338/fabric-client-legacy-found.png","29/May/20 1:05 AM;davidkhala;fabric-client-legacy.png;https://jira.hyperledger.org/secure/attachment/18339/fabric-client-legacy.png",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7",,,,Unset,Unset,20-27 Jan 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,harrisob@us.ibm.com,huxd,,,,,,,,dev,main,,,,,,,,,true,"29/May/20 1:06 AM;davidkhala; !fabric-client-legacy.png|thumbnail! 
[~harrisob@us.ibm.com]
I could still find some legacy relying on fabric-client
Would you mind me to clean up them?;;;",,,,,,,,,,,,,,,,
NodeSDK should use targets when discovery is on,FABN-1348,41796,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,14/Aug/19 10:39 PM,30/Aug/19 8:01 PM,28/Oct/23 3:25 AM,30/Aug/19 8:01 PM,v1.4.2,,,,,v1.4.2,v2.0.0,,,1,,,,,,"When endorsing a proposal and the channel has been initialized with discovery, the targets parameter is not being used by the discovery handler as the peers to send the proposal.",,harrisob@us.ibm.com,sahilgoel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x1v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,sahilgoel,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-merge-end-2-end job failing due to Node.js sdk integration tests,FABN-1349,41821,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,harrisob@us.ibm.com,denyeart,denyeart,16/Aug/19 1:11 AM,16/Aug/19 4:34 AM,28/Oct/23 3:25 AM,16/Aug/19 4:34 AM,,,,,,v2.0.0,,,,0,ci-blocker,,,,,"https://jenkins.hyperledger.org/job/fabric-merge-end-2-end-x86_64/6126/consoleFull

{code:java}
11:46:35    ✖ And I can call init on chaincode named example_cc_node as organization org1 on channel tokenchannel with args [""a"",""1000"",""b"",""2000""] # test/scenario/features/steps/chaincode_steps.js:201
11:46:35        Error: failed to execute transaction 0629748f117cd78145740f436bd27e77b028b768069fbd58d4f7a2daf327d62f: invalid invocation: chaincode 'example_cc_node' does not require initialization but called as init
{code}

",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x63:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
enhance network-config tutorial,FABN-1350,41833,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,eujungkim,eujungkim,eujungkim,16/Aug/19 5:30 PM,24/Oct/19 10:25 PM,28/Oct/23 3:25 AM,24/Oct/19 10:25 PM,,,,,,,,,,0,,,,,,fix typo in network-config tutorial,,eujungkim,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x8b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),eujungkim,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Preserve build logs in chaincode,FABN-1351,41877,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,mbwhite,nkl199,nkl199,19/Aug/19 11:22 PM,19/Aug/19 11:22 PM,28/Oct/23 3:25 AM,19/Aug/19 11:22 PM,Future,,,,,,,,,0,,,,,,"When chaincode is built, all the logging information relating to the chaincode build is lost when the ""building container"" is thrown away.

 

This information is actually quite useful and it would be really neat if it was possible to persist the build log in the chaincode container that is created so that it is possible to verify all build processes.",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xfv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
add hasOwnProperty method for object,FABN-1352,41908,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,asaningmaxchain123,asaningmaxchain123,asaningmaxchain123,20/Aug/19 10:59 AM,24/Oct/19 11:29 PM,28/Oct/23 3:25 AM,24/Oct/19 11:29 PM,,,,,,,,,,0,,,,,,"in the fabric-common/lib/Config.js, when remove/set/file method should add hasOwnProperty method for judgment",,asaningmaxchain123,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xln:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),asaningmaxchain123,heatherp,,,,,,,,,,,,,,,,,,,,"24/Oct/19 11:29 PM;heatherp;Hi [~asaningmaxchain123], I am working through the node-sk backlog and I noticed you abandoned the change associated with this.
Can you re-open if you are planning on submitting a change for this?;;;",,,,,,,,,,,,,,,,
Simplified wallet structure,FABN-1353,41915,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,20/Aug/19 10:04 PM,19/Dec/19 8:58 PM,28/Oct/23 3:25 AM,28/Sep/19 2:03 AM,,,,,,v2.0.0,,,,0,,,,,,"*As a* client application developer
*I want* a simple structure for both the wallet code and persistent data
*So that* I can easily develop new wallet implementations that are compatible across SDKs

The wallet persistent data structure is tied very closely to internal implementation details of the Node SDK and not any other language SDKs. Much of this data structure is not relevant to the persisted identity and credentials. Additionally, these internal implementation details are being removed for the 2.0 release of the Node SDK. The persistent data needs to include only:
 * Member Services Provider ID.
 * Credentials of varying types, e.g. X.509 certificate and associated private key, X.509 certificate only for HSM, etc.
 * Some version information to allow compatibility with and migration to any future persistent format.

 

The wallet implementation consists of several tightly coupled concerns:
 * De/Serialization.
 * Persistence.
 * Configuration of the SDK using credentials.

 

Users attempting to create new wallet implementation need to understand and implement all of these concerns to be successful, and we provide no assistance in doing this. Typically when a new wallet implementation is created, what they want to provide is just a different persistence layer and not worry about any of the other concerns that have been coupled with the wallet implementation. A new structure should separate the persistence layer from other concerns, making the persistence layer easily pluggable while maintaining control of elements that we need to keep consistent across wallet implementations, such as persistent data format.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1223,FGJ-59,FAB-17287,,,"10/Oct/19 9:30 PM;bestbeforetoday;Wallets.pptx;https://jira.hyperledger.org/secure/attachment/17872/Wallets.pptx",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xn7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Remove token code from Node.js SDK,FABN-1354,41967,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,sstone1,sstone1,22/Aug/19 7:16 PM,27/Aug/19 6:06 PM,28/Oct/23 3:25 AM,27/Aug/19 6:06 PM,,,,,,,,,,0,,,,,,"Token support has been removed as per FAB-16115, we need to remove the Node.js SDK code.",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xwz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,dev,main,,,,,,,,,true,"27/Aug/19 6:06 PM;sstone1;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33115;;;",,,,,,,,,,,,,,,,
Consume protos from hyperledger/fabric-protos instead of hyperledger/fabric,FABN-1355,42005,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sykesm,sykesm,sykesm,24/Aug/19 3:37 AM,27/Aug/19 6:59 PM,28/Oct/23 3:25 AM,27/Aug/19 6:59 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00y4z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
[Fabrc-Network] Should a Gateway only ever manage a single network instance ?,FABN-1356,42081,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,davidkel,davidkel,28/Aug/19 2:14 AM,09/Oct/19 5:53 PM,28/Oct/23 3:25 AM,09/Oct/19 5:53 PM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"Technically network instances own the resources to connect to a channel, not the gateway. The gateway is the identity owner and can have mulitple networks associated with it. To cleanup a network you have to dispose of the gateway but if you only want to dispose the resources for a single network rather than all the networks a gateway is managing this is currently not possible. Is there much overhead to having a 1-1 relationship between gateway and network so if you need to interact with a network have a unique gateway instance rather than reusing the same gateway ?

If there is an overhead worth handling then it should be possible to dispose of a single network from a gateway otherwise you have to dispose of the whole gateway and all it's networks just to cleanup one network.

This could be just a doc about best practice for multiple network connections or an improvement to the gateway implementation

Don't know if the same applies to the equivalent Java Implementation or not.

",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ypn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,"09/Oct/19 5:53 PM;davidkel;no point unless asked for by real users.;;;",,,,,,,,,,,,,,,,
Add go.mod files to chaincode,FABN-1357,42083,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,sykesm,btl5037,btl5037,28/Aug/19 4:06 AM,10/Sep/19 12:29 AM,28/Oct/23 3:25 AM,10/Sep/19 12:29 AM,,,,,,v2.0.0,,,,0,ci-blocker,,,,,The ccenv:2.0.0 image will no longer include the shim. Go chaincode contained in the Node SDK should be modified to support modules by adding a go.mod file to each of the chaincodes that includes the shim as a dependency.,,btl5037,caod,denyeart,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00yq3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,caod,denyeart,sykesm,,,,,,,dev,main,,,,,,,,,true,"31/Aug/19 6:31 AM;caod;Looks like the ccenv change was already merged today thus breaking the merge-end-2-end in node sdk integration tests:
04:08:41 { Error: error in simulation: failed to execute transaction fff840214793555b32bc049bf293662241ca5ae8e99b9c93cdc2f4d7422d174e: could not launch chaincode example_cc_golang_v1:20bd98d63931b961b6e9346a497b5e7631e29547527daabb3c80733fcf406988: error starting container: error building image: failed external (no builders defined) and docker build: docker image build failed: docker build failed: Error returned from build: 1 ""/chaincode/input/src/github.com/example_cc/example_cc.go:24:2: cannot find package ""
[github.com/hyperledger/fabric/core/chaincode/shim|http://github.com/hyperledger/fabric/core/chaincode/shim]
"" in any of:
04:08:41     /usr/local/go/src/github.com/hyperledger/fabric/core/chaincode/shim (from $GOROOT)
04:08:41     /chaincode/input/src/github.com/hyperledger/fabric/core/chaincode/shim (from $GOPATH)
04:08:41     /go/src/github.com/hyperledger/fabric/core/chaincode/shim
04:08:41 /chaincode/input/src/github.com/example_cc/example_cc.go:25:2: cannot find package ""
[github.com/hyperledger/fabric/protos/peer|http://github.com/hyperledger/fabric/protos/peer]
"" in any of:
04:08:41     /usr/local/go/src/github.com/hyperledger/fabric/protos/peer (from $GOROOT)
04:08:41     /chaincode/input/src/github.com/hyperledger/fabric/protos/peer (from $GOPATH)
04:08:41     /go/src/github.com/hyperledger/fabric/protos/peer
This issue will need to be picked up asap, converting to a ci-blocker bug

/cc [~andrew-coleman];;;","31/Aug/19 6:46 AM;denyeart;For reference see how fabric-samples go chaincodes were updated in FAB-15782 and FAB-16401, and the addition of ""GO111MODULE=on go mod vendor"" in FAB-16310.;;;","06/Sep/19 6:11 AM;sykesm;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33388 Vendor package dependencies for go chaincode;;;",,,,,,,,,,,,,,
Update FabricVersion to pull latest images 1.4.3 from docker.,FABN-1358,42090,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,vijaypunugubati,vijaypunugubati,vijaypunugubati,28/Aug/19 5:14 AM,28/Aug/19 11:25 PM,28/Oct/23 3:25 AM,28/Aug/19 11:25 PM,,,,,,,,,,0,,,,,,,,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00yrf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),vijaypunugubati,,,,,,,,,,,,,,,,,,,,,"28/Aug/19 11:25 PM;vijaypunugubati;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33222];;;",,,,,,,,,,,,,,,,
Move HSM support documents into separated page.,FABN-1359,42093,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,28/Aug/19 4:18 PM,29/Aug/19 3:11 PM,28/Oct/23 3:25 AM,29/Aug/19 3:11 PM,v1.4.0,v2.0.0,,,,v1.4.0,v2.0.0,,,0,,,,,,"Move README.md HSM contents into [fabric-sdk-node.github.io.|https://fabric-sdk-node.github.io/release-1.4/]",,Hengming-Zhang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00ys3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Hengming-Zhang,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-end-2-end-daily tests in release-1.2 are failing intermittently due to npm error.,FABN-1360,34572,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,rameshthoomu,sambhavdutt,sambhavdutt,11/Oct/18 12:20 AM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,29/Oct/18 7:53 AM,v1.2.0,,,,,v1.2.0,,,,0,ci-failure,,,,,"Observed the following errors in *fabric-end-2-end-daily tests in release-1.2-x86_64* job, 

{code:java}
23:27:16 Failed tests: 
23:27:16   End2endAndBackAgainNodeIT.setup:35->End2endAndBackAgainIT.runFabricTest:269->End2endAndBackAgainIT.reconstructChannel:733 Peer peer0.org2.example.com is missing instantiated chaincode name: example_cc_node, path:null, version: null
23:27:16   End2endNodeIT.setup:49->End2endIT.runFabricTest:226->End2endIT.runChannel:518 Not enough endorsers for instantiate :1endorser failed with failed to execute transaction 49464b3070f504d2d5898fe00d0332f82291f6325095ea70d5df28ee5f44a26f: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
23:27:16 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/nan-d288489e/nan.h'
23:27:16 npm WARN tar ENOENT: no such file or directory, open '/chaincode/output/node_modules/.staging/@types/node-4d8ae03d/inspector.d.ts'
23:27:16 npm WARN example_cc@1.0.0 No description
23:27:16 npm WARN example_cc@1.0.0 No repository field.
23:27:16 
23:27:16 npm ERR! code EINTEGRITY
23:27:16 npm ERR! sha1-Iqu5ZW00owuVMENnIINeicLlwxY= integrity checksum failed when using sha1: wanted sha1-Iqu5ZW00owuVMENnIINeicLlwxY= but got sha1-Ertl2pR92AQYR/vWFJB89O8CqLs=. (171669 bytes)
23:27:16 
23:27:16 npm ERR! A complete log of this run can be found in:
23:27:16 npm ERR!     /root/.npm/_logs/2018-10-10T03_24_58_961Z-debug.log
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.2-x86_64/102/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.2-x86_64/102/",,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,e6d9c55b0cd556d8d92d74de57c476d393fdf5cd,Unset,No,,,"1|hzzukf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sambhavdutt,,,,,,,,,,,,,,,,,,,,,"18/Oct/18 1:19 AM;sambhavdutt;The latest daily end-2-end is failing with the npm install error again in release-1.2 branch,

*fabric commit: 937b2bc4760f3b3949437e427e11c98f8e2f72ad*

{code:java}
11:36:43 Tests run: 47, Failures: 2, Errors: 0, Skipped: 3, Time elapsed: 271.733 sec <<< FAILURE! - in org.hyperledger.fabric.sdkintegration.IntegrationSuite
11:36:43 setup(org.hyperledger.fabric.sdkintegration.End2endNodeIT)  Time elapsed: 38.676 sec  <<< FAILURE!
11:36:43 java.lang.AssertionError: 
11:36:43 Not enough endorsers for instantiate :1endorser failed with failed to execute transaction 3074b3c11b3175ed91e73b7511cf48b59d5f5e5ae93f3ad44b229a3943b21a99: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm WARN deprecated @types/winston@2.4.4: This is a stub types definition. winston provides its own type definitions, so you do not need this installed.
11:36:43 npm ERR! code EINTEGRITY
11:36:43 npm ERR! sha512-xmhA11h2XhqpSVzDAmoQAYdNQ+swILXpKOiRpAEQ2kX55ioxVADc6v7SkS4zQBxm4klhQHgGqpGKvoL6LGx4VQ== integrity checksum failed when using sha512: wanted sha512-xmhA11h2XhqpSVzDAmoQAYdNQ+swILXpKOiRpAEQ2kX55ioxVADc6v7SkS4zQBxm4klhQHgGqpGKvoL6LGx4VQ== but got sha512-Z5JQ1Th+GiAOAaIcooRjWua+hBnLvqBzxytSWezrKMDtBtoR2Wuy8s3i6weijJ7wVjgOeRckmw5TVTDWUoETkw==. (9415424 bytes)
11:36:43 
11:36:43 npm ERR! A complete log of this run can be found in:
11:36:43 npm ERR!     /root/.npm/_logs/2018-10-17T15_35_05_132Z-debug.log
{code}

*Build Logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.2-x86_64/110/consoleFull

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-end-2-end-daily-release-1.2-x86_64/110/;;;",,,,,,,,,,,,,,,,
fabric-sdk-node8-merge job is failing due to chaincode upgrade.,FABN-1361,34454,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,sambhavdutt,sambhavdutt,05/Oct/18 10:41 PM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,12/Nov/18 9:26 PM,v1.4.0,,,,,v1.4.0,,,,0,ci-failure,,,,,"Observed the following error in sdk-node8-merge-master-x86_64, 

{code:java}
18:17:25 ***** Node-Chaincode U P G R A D E flow: upgrade chaincode *****
18:17:25 
18:17:25 
18:17:25 ok 744 Successfully retrieved TLS certificate
18:17:25 ok 745 Successfully enrolled user 'admin' (e2eUtil 2)
18:17:50 ok 746 Successfully initialized Channel
18:17:50 not ok 747 Error: Failed to test for bad transient map. The chaincode should have rejected the upgrade proposal. at channel.sendUpgradeProposal.then (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:311:15) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:228:7)
18:17:50   ---
18:17:50     operator: fail
18:17:50     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:406:6)
18:17:50     stack: |-
18:17:50       Error: Error: Failed to test for bad transient map. The chaincode should have rejected the upgrade proposal.
18:17:50           at channel.sendUpgradeProposal.then (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:311:15)
18:17:50           at <anonymous>
18:17:50           at process._tickDomainCallback (internal/process/next_tick.js:228:7)
18:17:50           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
18:17:50           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
18:17:50           at Test.fail (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
18:17:50           at Test.bound [as fail] (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
18:17:50           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node8-merge-master-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:406:6)
18:17:50           at <anonymous>
18:17:50           at process._tickDomainCallback (internal/process/next_tick.js:228:7)
18:17:50   ...
18:17:50 not ok 748 Failed to upgrade chaincode 
18:17:50   ---
18:17:50     operator: fail
{code}

*Build Logs*

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-sdk-node8-merge-master-x86_64/176/

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node8-merge-master-x86_64/176/consoleFull",,rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,7bb022ec682db8d9339cf55b79e8aa3bd1972777,Unset,No,,,"1|hzztwv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,"12/Nov/18 9:28 PM;sambhavdutt;The sdk-node-merge tests are working fine from several builds. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/34/;;;",,,,,,,,,,,,,,,,
 'fabric-client/lib/User.js' not in 2.0.0-snapshot.232,FABN-1362,39787,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,harrisob@us.ibm.com,muralisr,muralisr,13/May/19 10:18 PM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,14/May/19 12:55 AM,v2.0.0,,,,,,,,,0,node-SDK,,,,,"The published fabric-client does not contain User.js (and possibly other modules) 

{code:java}
node main.js
Error: Cannot find module 'fabric-client/lib/User.js'
    at Function.Module._resolveFilename (module.js:548:15)
    at Function.Module._load (module.js:475:25)
    at Module.require (module.js:597:17)
    at Object.require (internal/module.js:11:18)
    at Object.<anonymous> (/usr/local/app/src/org/hyperledger/fabric/sdk/interop/user.cljs:6:12)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at global.CLOSURE_IMPORT_SCRIPT (/usr/local/app/src/goog/bootstrap/nodejs.js:80:13)
    at Object.goog.importScript_ (/usr/local/app/src/goog/base.js:951:9)
    at Object.goog.writeScripts_ (/usr/local/app/src/goog/base.js:1394:16)
    at Object.goog.require (/usr/local/app/src/goog/base.js:706:14)
    at Object.<anonymous> (/usr/local/app/main.js:22:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
{code}

Here is the list of files under lib


{code:java}
bash-4.4# ls
BlockDecoder.js          Constants.js             Policy.js                errors
CertificateAuthority.js  EndorsementHandler.js    ProverHandler.js         impl
Chaincode.js             Orderer.js               Remote.js                msp
Channel.js               Organization.js          SideDB.js                packager
ChannelEventHub.js       Package.js               TokenClient.js           token-utils.js
Client.js                Packager.js              TransactionID.js         utils
CommitHandler.js         Peer.js                  client-utils.js
{code}
",,harrisob@us.ibm.com,muralisr,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00nlb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,muralisr,,,,,,,,,,,,,,,,,,,,"14/May/19 12:55 AM;harrisob@us.ibm.com;User class has been moved to `fabric-common` npm module;;;","14/May/19 1:51 AM;muralisr;Ah thanks [~harrisob@us.ibm.com] ... didn't look for the module elsewhere.;;;",,,,,,,,,,,,,,,
fabric-end-2-end-daily-release-1.4-s390 job: fail in DiscoveryEndorsementHandler in gulp end2end test,FABN-1363,40382,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,sambhavdutt,sambhavdutt,04/Jun/19 11:09 PM,10/Sep/19 2:51 AM,28/Oct/23 3:25 AM,10/Sep/19 2:51 AM,v1.4.2,v2.0.0,,,,,,,,0,ci-failure,,,,,"Endorsement has failed at DiscoveryEndorsementHandler._endorse in the gulp end-2-end test.
 *Branch:* master, release-1.4
 *Platform:* s390x
 *Error Snippet:*
{code:java}
00:47:08.441 not ok 489 Error: Endorsement has failed at DiscoveryEndorsementHandler._endorse (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:184:19) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)
00:47:08.441   ---
00:47:08.441     operator: fail
00:47:08.441     at: test (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/integration/network-e2e/invoke.js:123:11)
00:47:08.441     stack: |-
00:47:08.441       Error: Error: Endorsement has failed
00:47:08.442           at DiscoveryEndorsementHandler._endorse (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:184:19)
00:47:08.442           at <anonymous>
00:47:08.442           at process._tickCallback (internal/process/next_tick.js:188:7)
00:47:08.442           at Test.assert [as _assert] (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:47:08.442           at Test.bound [as _assert] (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:47:08.442           at Test.fail (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:47:08.442           at Test.bound [as fail] (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:47:08.442           at test (/w/workspace/fabric-end-2-end-daily-release-1.4-s390x/gopath/src/github.com/hyperledger/fabric-sdk-node/test/typescript/integration/network-e2e/invoke.js:123:11)
00:47:08.442           at <anonymous>
00:47:08.442           at process._tickCallback (internal/process/next_tick.js:188:7)
{code}
*Build Log*

[https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-release-1.4-s390x/98/consoleFull]",,denyeart,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,36fbdc6,Unset,No,,,"1|i00qgk:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,"12/Jun/19 3:35 AM;harrisob@us.ibm.com;The logs are not available. If you see this again, I will have a look then.
;;;","26/Jul/19 3:27 AM;vijaypunugubati;[~andrew-coleman] Could you please look into this issue, consistently failing on fabric-end-2-end-daily-release-1.4-s390x build.;;;","31/Jul/19 2:43 AM;denyeart;Also failing fabric-sdk-node-daily-release-1.4-s390x.;;;","31/Jul/19 2:44 AM;denyeart;[~vijaypunugubati] Can you point to logs of a recent failure.;;;",,,,,,,,,,,,,
GRPC Stream removed issue with HLF SDK NodeJS 1.3,FABN-1364,39846,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,mffrench,mffrench,16/May/19 3:04 PM,20/Aug/21 7:31 PM,28/Oct/23 3:25 AM,20/Aug/21 7:31 PM,,,,,,,,,,1,community-help-wanted,external,sdk-triaged,,,"Hello,

I'm currently facing severals GRPC error with HLF SDK nodejs 1.3 : 



{{```
    error stack : Error: 2 UNKNOWN: Stream removed
        at Object.exports.createStatusError (/usr/src/app/node_modules/grpc/src/common.js:87:15)
        at ClientDuplexStream._emitStatusIfDone (/usr/src/app/node_modules/grpc/src/client.js:235:26)
        at ClientDuplexStream._receiveStatus (/usr/src/app/node_modules/grpc/src/client.js:213:8)
        at Object.onReceiveStatus (/usr/src/app/node_modules/grpc/src/client_interceptors.js:1290:15)
        at InterceptingListener._callNext (/usr/src/app/node_modules/grpc/src/client_interceptors.js:564:42)
        at InterceptingListener.onReceiveStatus (/usr/src/app/node_modules/grpc/src/client_interceptors.js:614:8)
        at /usr/src/app/node_modules/grpc/src/client_interceptors.js:1110:18)
```}}

Currently the only way I see to handle this issue is to reinitialize my hlf client and retry operation where I got this error. 

I'd like to know if you see some ways : 
1) to understand root cause of this issue
2) provide a better resolution

Also I'm wondering if can loose event coming from the network in case I'm subscribing on some chaincode event. Do you have some advices to provide in such case ? 

Thank you !",,bestbeforetoday,Fernando_Diaz_Luque,heatherp,lesleyannj,mffrench,skyfan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:qy",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,Fernando_Diaz_Luque,heatherp,lesleyannj,mffrench,skyfan,,,,,,,,,,,,,,,,"24/Oct/19 11:28 PM;heatherp;Hey [~mffrench] we noticed you raised this a while ago and on 1.3 - are you still hitting it? Can you recreate on 1.4?;;;","25/Oct/19 12:17 AM;skyfan;Hey, I had the same error on 1.4. In my case the problem was TLS handshake between nodejs app and peer failed, and indeed in the connection profile the protocol set was grpc instead of grpcs.

After changing the url from grpc to grpcs, the ""Stream removed"" problem disappeared but was replaced by another one (which I describe here [https://stackoverflow.com/questions/58525230/grpc-communication-fails-between-nodejs-app-and-peer)] so I'm not sure if switching to grpcs really fixed the issue.;;;","26/Oct/19 2:43 AM;Fernando_Diaz_Luque;Hi. The same problem here.
I am running stress tests running Fabric in IBP v2 with two worker nodes. After 20 minutes of testing, first I got the ""2 UNKNOWN: Stream removed"" error message.
After this error, I received repeatedly the error ""Failed to connect before the deadline URL:grpcs:/..."" for almost a minute.

 ;;;","01/Dec/20 11:37 PM;lesleyannj;[~Fernando_Diaz_Luque] can you provide a sample to enable reproduction of the issue.

Please also confirm if this is still an issue with SDK v2x;;;","13/Aug/21 8:04 PM;bestbeforetoday;Can anyone confirm whether this issue exists in the current v2.2 SDK? If not, I will close this issue out as it has been stale a long time and was reported on SDK versions that are no longer supported.;;;","20/Aug/21 7:31 PM;bestbeforetoday;Assuming this is working OK on latest SDK versions since there has been no feedback. Please reopen if you experience issues with the latest v2.2 SDK.;;;",,,,,,,,,,,
CI Fabcar javascript test fails,FABN-1365,40466,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,yuki-kon,lehors,lehors,07/Jun/19 10:48 PM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,18/Jun/19 11:48 PM,,,,,,v2.0.0,,,,0,,,,,," CI builds have been failing fairly consistently for a while. Here is an example:

[https://gerrit.hyperledger.org/r/c/fabric-samples/+/29934]

[https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/283/console]
{code:java}
13:51:40  Wallet path: /w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/wallet
13:51:41  Successfully registered and enrolled admin user ""user1"" and imported it into the wallet
13:51:41  
13:51:41  
13:51:41  
13:51:42  Wallet path: /w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/wallet
13:51:43  2019-06-05T11:51:42.867Z - warn: [Query]: evaluate: Query ID ""[object Object]"" of peer ""peer1.org1.example.com:8051"" failed: message=make sure the chaincode fabcar has been successfully defined on channel mychannel and try again: chaincode definition for 'fabcar' exists, but chaincode is not installed, stack=Error: make sure the chaincode fabcar has been successfully defined on channel mychannel and try again: chaincode definition for 'fabcar' exists, but chaincode is not installed
13:51:43      at self._endorserClient.processProposal (/w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/node_modules/fabric-client/lib/Peer.js:147:36)
13:51:43      at Object.onReceiveStatus (/w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/node_modules/grpc/src/client_interceptors.js:1207:9)
13:51:43      at InterceptingListener._callNext (/w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/node_modules/grpc/src/client_interceptors.js:568:42)
13:51:43      at InterceptingListener.onReceiveStatus (/w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/node_modules/grpc/src/client_interceptors.js:618:8)
13:51:43      at callback (/w/workspace/fabric-samples-verify-x86_64/gopath/src/github.com/hyperledger/fabric-samples/fabcar/javascript/node_modules/grpc/src/client_interceptors.js:845:24), status=500, , url=grpcs://localhost:8051, name=peer1.org1.example.com:8051, grpc.max_receive_message_length=-1, grpc.max_send_message_length=-1, grpc.keepalive_time_ms=120000, grpc.http2.min_time_between_pings_ms=120000, grpc.keepalive_timeout_ms=20000, grpc.http2.max_pings_without_data=0, grpc.keepalive_permit_without_calls=1, name=peer1.org1.example.com:8051, grpc.ssl_target_name_override=peer1.org1.example.com, grpc.default_authority=peer1.org1.example.com, isProposalResponse=true
13:51:43  Failed to evaluate transaction: Error: make sure the chaincode fabcar has been successfully defined on channel mychannel and try again: chaincode definition for 'fabcar' exists, but chaincode is not installed
13:51:43  
13:51:43  
13:51:43  
13:51:43   fabcar-javascript-query test case is FAILED 

{code}
Unfortunately trying to replicate locally brought up what seems to be a different issue: https://jira.hyperledger.org/browse/FAB-15633

 

 ",,lehors,sstone1,yuki-kon,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qv0:",,,,Unset,Unset,,,,,,,,,,,reverify,,Unset,,,,,,Unset,,Unset,,(Please add usage information),lehors,sstone1,yuki-kon,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,true,"11/Jun/19 3:08 AM;sstone1;The last three builds:

https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/284/console (good)
https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/285/console (network failed to start)
https://jenkins.hyperledger.org/job/fabric-samples-verify-x86_64/286/console (proposal response mismatch);;;","11/Jun/19 3:11 AM;sstone1;The last two merge builds are good:

https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-merge-x86_64/67/console
https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-samples-merge-x86_64/68/console;;;","11/Jun/19 6:24 AM;yuki-kon;Hello, [~sstone1] [~lehors]. I found the same problem in my local environment. If the workaround below is reasonable, I will make a patch.
h4. Cause analysis
It seems the root cause is the query handling strategies in fabric-network.
The query handler does not consider if Chaincode is installed on target peers. It sends a query proposal to the first peer among the array of peers having the role ""CHAINCODE_QUERY_ROLE"". By default, all peers have the role ""CHAINCODE_QUERY_ROLE"".
Fabcar installs Chaincode on the peer0.org1.example.com. The array of peers are created by service discovery and  the order of peers are random.
When peer1.org1.example.com comes first, the evaluation fails. Although the peer1 has the role ""CHAINCODE_QUERY_ROLE"", it does not have Chaincode. Then the error “chaincode definition for 'fabcar' exists, but chaincode is not installed” is returned.

https://github.com/hyperledger/fabric-sdk-node/blob/07956d6a023663fce46276c67633566a42712bcc/fabric-network/lib/impl/query/defaultqueryhandlerstrategies.js#L14-L26
https://github.com/hyperledger/fabric-sdk-node/blob/31b208421ef396273d0ac86723176ea2b6368953/fabric-network/lib/impl/query/singlequeryhandler.js#L22-L38

The query handler calls fabric-client/Channel.queryByChaincode internally. This function also does not consider if Chaincode is installed on target peers.
https://github.com/hyperledger/fabric-sdk-node/blob/11b1ad24b5497f6522e8650daad66589aea868c9/fabric-client/lib/Channel.js#L3615-L3640

h4. Solution
When submitting a transaction, target peers are selected from peers having Chaincode by service discovery.
The same mechanism are required for fabric-client and/or fabric-network to send a query proposal to right target peers.
FABN-1122 seems like the same proposal.

h4. Workaround
Before improving fabric-client/fabric-network, we need to fix the CI. The workaround is installing Chaincode on all peers by updating the fabric-samples/fabcar/startFabric.sh.
;;;","11/Jun/19 6:08 PM;lehors;Thank you for investigating this, [~yuki-kon]. I tried that change (installing the chaincode on all peers) and it didn't solve the problem I reported on https://jira.hyperledger.org/browse/FAB-15633 but your analysis sounds good to me and if we can solve the CI problem, it will be progress. Please, go ahead and submit your CR. I'll review it.;;;","12/Jun/19 7:19 AM;yuki-kon;Thank you for a comment, [~lehors]. I submitted a CR to install Chaincode on all peers (https://gerrit.hyperledger.org/r/#/c/fabric-samples/+/31847/).
In my local environment, the problem reported by FAB-15633 was not reproduced. There may be another problem.;;;",,,,,,,,,,,,
SDK-Node tests are failing consistently with Read timeout during testuser registration,FABN-1366,39084,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,05/Apr/19 4:21 AM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,05/Apr/19 10:26 PM,v1.4.1,v2.0.0,,,,,,,,0,ci-failure,,,,,"The sdk-node tests are failing consistently in the end-2-end tests, Failed to register ""testUser"" due to Read Timeout leading to Missing required argument ""registrar"" at checkRegistrar

CI Jobs affected: *fabric-merge-end-2-end-x86_64*

*Branch:* master, release-1.4
*Platform:* x86_64
*Error Snippet:*

{code:java}
09:29:47 not ok 95 Failed to register ""testUser"". Error: Calling register endpoint failed, READ Timeout at ClientRequest.request.setTimeout (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-ca-client/lib/FabricCAClient.js:351:13) at Object.onceWrapper (events.js:313:30) at emitNone (events.js:106:13) at ClientRequest.emit (events.js:208:7) at TLSSocket.emitRequestTimeout (_http_client.js:644:42) at Object.onceWrapper (events.js:313:30) at emitNone (events.js:111:20) at TLSSocket.emit (events.js:208:7) at TLSSocket.Socket._onTimeout (net.js:410:8) at ontimeout (timers.js:498:11) at tryOnTimeout (timers.js:323:5) at Timer.listOnTimeout (timers.js:290:5)
09:29:47   ---
09:29:47     operator: fail
09:29:47     at: caService.enroll.then.then.then.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:113:6)
09:29:47     stack: |-
09:29:47       Error: Failed to register ""testUser"". Error: Calling register endpoint failed, READ Timeout
09:29:47           at ClientRequest.request.setTimeout (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-ca-client/lib/FabricCAClient.js:351:13)
{code}

*Build Log*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/5107/",,denyeart,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1191,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,32d6f7b,Unset,No,,,"1|i00jov:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,sambhavdutt,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"SDK incorrectly reports ""No peers available to query"" when chaincode sends error response",FABN-1367,40830,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,jtonline,jtonline,28/Jun/19 11:48 PM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,30/Jun/19 7:49 PM,,,,,,,,,,0,,,,,,"I can successfully send errors from my chaincode, however the node SDK seems to have a misleading error message when this happens, e.g.
{quote}{{Error evaluating transaction: No peers available to query. Errors: [{""message"":""transaction returned with failure: Car CAR9999999 does not exist""}}
{quote}
There were peers available to query- the (expected) error came from my chaincode.",,bestbeforetoday,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1226,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00sro:",,,,Unset,Unset,,,,,,,,,,,"Send an error response from chaincode (my chaincode was a Java version of fabcar, although the language/sample should not matter)

Evaluate the chaincode from the nodesdk (I evaluated a transaction using the vscode Blockchain extension which uses the node sdk)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,jtonline,,,,,,,,,,,,,,,,,,,,"29/Jun/19 12:25 AM;bestbeforetoday;I think (hope!) this is already fixed in recent builds by FABN-1226.;;;",,,,,,,,,,,,,,,,
Minor API doc issues,FABN-1368,36353,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,bestbeforetoday,bestbeforetoday,bestbeforetoday,21/Dec/18 12:16 AM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,21/Dec/18 12:20 AM,v1.4.0,,,,,,,,,0,,,,,,"The fabric-network API documentation has several small nit-pick issues: typos, bad links.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0047j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,"21/Dec/18 12:20 AM;bestbeforetoday;Oops, created in the wrong project and can't see a way to change it.;;;",,,,,,,,,,,,,,,,
Update build.gradle in node-sdk tests.,FABN-1369,41447,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,mbwhite,mbwhite,mbwhite,26/Jul/19 9:57 PM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,26/Jul/19 10:51 PM,,,,,,,,,,0,,,,,,Update the build.gradle file - for where the node-sdk uses Java contracts for testing. ,,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v77:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,,,,,,,,,,,,"26/Jul/19 10:51 PM;mbwhite;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/32539];;;",,,,,,,,,,,,,,,,
Nodejs SDK user enrollment - CSR Decode failed ,FABN-1370,37413,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,akshay.sood,akshay.sood,04/Feb/19 10:34 PM,12/Oct/19 4:33 PM,28/Oct/23 3:25 AM,16/Jun/19 5:44 PM,v1.4.0,,,,,,,,,0,,,,,,"I am trying to enroll a registered user. When the following code is executued:

 
{code:java}
const enrollment = await ca.enroll({ enrollmentID: username, enrollmentSecret: password, csr: ""-----BEGIN CERTIFICATE REQUEST----- MIICpzCCAY8CAQAwYjELMAkGA1UEBhMCSU4xFDASBgNVBAMMC2V4YW1wbGUuY29t MQ8wDQYDVQQHDAZNb2hhbGkxDjAMBgNVBAoMBURlYnV0MQ8wDQYDVQQIDAZQdWJq YWIxCzAJBgNVBAsMAklUMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA wuLapsnAWQsFfE0gv5f7MH3ofF1Nrj+Wq0LLHxYeJmVzW00hGiV3KmzO5GnIsXEQ U97cI4ZglerMnGUCO0cGyu3QK1h1rh0/rmF2pKMzP0K3njRllM6Agskoz4Alx692 u9oC0tots8wQSZeYuBA88LDjB9Wdlp+H7mWm96g3kbjWkadUqGYa+HX69eKXMxLy K+Et+q6iH1ytUTMjNUajZ6MMQ4rYlGidkhsaxcM0Frhcfl62aj+MoPCwNrWnGhM1 /YrwqttZQkXXJcJyRMR6BwUIse4odBvG5/WdcyTN83Z/YGUi5nns89WisXooJvK4 C5gTBAqCBiN7v6jxxw8NDwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAI1/QyU3 5i8W2D+xNpqInVhwphT8OhjO9lPMPLgpgT5EdP62Rcawe1NoVkXEBdF2Twq5cqvH W+ZILxIQ/ABRSU0njocadb2O2lSufj9Jqy0aHPyo285YWzk7gP7YZqX9I9VHXDVs Mq2k27goBpEVfqS2MngOVoPYyKCu4VtL7Jy5rUUCGHkVEWf7C2L6ChRn52m49U1F 3rUrYLH+kciwyo6MWflWvVyoK08cWFEA7FGQKtRj+2NThxgwIRfW9yWPvTK213ev 5FVkObhzKdKo57bXTiW1Ja2MGExLH8pJqomEWMy7dbOGChDHUYvQggBcfasSeKVF Npw6dg+YAocWtxg= -----END CERTIFICATE REQUEST-----"" })
{code}
 

but I'm getting the following error:

 
{code:java}
2019-02-02T13:47:50.803Z - error: [FabricCAClientService.js]: Failed to enroll akshay2, error:%o message=Enrollment failed with errors [[{""code"":0,""message"":""{\""code\"":9002,\""message\"":\""CSR Decode failed\""}""}]], stack=Error: Enrollment failed with errors [[{""code"":0,""message"":""{\""code\"":9002,\""message\"":\""CSR Decode failed\""}""}]]
    at IncomingMessage.response.on (/Users/akshaysood/Blockchain/public-private-hyperledger/public/sdk/node_modules/fabric-ca-client/lib/FabricCAClient.js:470:22)
    at emitNone (events.js:111:20)
    at IncomingMessage.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:138:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
Error: Enrollment failed with errors [[{""code"":0,""message"":""{\""code\"":9002,\""message\"":\""CSR Decode failed\""}""}]]
    at IncomingMessage.response.on (/Users/akshaysood/Blockchain/public-private-hyperledger/public/sdk/node_modules/fabric-ca-client/lib/FabricCAClient.js:470:22)
    at emitNone (events.js:111:20)
    at IncomingMessage.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:138:11)
    at process._tickCallback (internal/process/next_tick.js:180:9)
{code}
 ",,akshay.sood,mastersingh24,mrudav.shukla,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00afb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),akshay.sood,mastersingh24,mrudav.shukla,,,,,,,,,,,,,,,,,,,"24/Feb/19 6:21 AM;mastersingh24;[~akshay.sood] The value you are using is not actually valid as it will not properly include the line breaks.   

1) You can use a template literal

{code:javascript}
var csr=`-----BEGIN CERTIFICATE REQUEST----- MIICpzCCAY8CAQAwYjELMAkGA1UEBhMCSU4xFDASBgNVBAMMC2V4YW1wbGUuY29t MQ8wDQYDVQQHDAZNb2hhbGkxDjAMBgNVBAoMBURlYnV0MQ8wDQYDVQQIDAZQdWJq YWIxCzAJBgNVBAsMAklUMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA wuLapsnAWQsFfE0gv5f7MH3ofF1Nrj+Wq0LLHxYeJmVzW00hGiV3KmzO5GnIsXEQ U97cI4ZglerMnGUCO0cGyu3QK1h1rh0/rmF2pKMzP0K3njRllM6Agskoz4Alx692 u9oC0tots8wQSZeYuBA88LDjB9Wdlp+H7mWm96g3kbjWkadUqGYa+HX69eKXMxLy K+Et+q6iH1ytUTMjNUajZ6MMQ4rYlGidkhsaxcM0Frhcfl62aj+MoPCwNrWnGhM1 /YrwqttZQkXXJcJyRMR6BwUIse4odBvG5/WdcyTN83Z/YGUi5nns89WisXooJvK4 C5gTBAqCBiN7v6jxxw8NDwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAI1/QyU3 5i8W2D+xNpqInVhwphT8OhjO9lPMPLgpgT5EdP62Rcawe1NoVkXEBdF2Twq5cqvH W+ZILxIQ/ABRSU0njocadb2O2lSufj9Jqy0aHPyo285YWzk7gP7YZqX9I9VHXDVs Mq2k27goBpEVfqS2MngOVoPYyKCu4VtL7Jy5rUUCGHkVEWf7C2L6ChRn52m49U1F 3rUrYLH+kciwyo6MWflWvVyoK08cWFEA7FGQKtRj+2NThxgwIRfW9yWPvTK213ev 5FVkObhzKdKo57bXTiW1Ja2MGExLH8pJqomEWMy7dbOGChDHUYvQggBcfasSeKVF
Npw6dg+YAocWtxg= 
-----END CERTIFICATE REQUEST-----`
{code}

2) You can read the actual CSR from the file system into a buffer and calling toString()

3) You can properly encode the line breaks in a string using \n
;;;","16/Apr/19 12:55 AM;mrudav.shukla;[~akshay.sood]

Were you able to get through this? I'm trying to set csr attributes similar to 'fabric-ca-client enroll' command. I'm creating a csr object in node sdk and setting csr.names='O=Org1,C=IN,ST=Karnataka,L=Bengaluru' and then calling toString() on this object. Then I'm passing this string to ""csr"" argument of the enroll command.;;;",,,,,,,,,,,,,,,
fabric node sdk doesn't handle errors returned from chaincode correctly,FABN-1371,32053,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,davidkel,davidkel,davidkel,19/Jul/18 4:47 PM,29/Aug/19 4:20 AM,28/Oct/23 3:25 AM,21/Jul/18 1:33 AM,v1.2.0,,,,,v1.2.0,,,,0,,,,,,"In fabric 1.1 grpc returned chaincode errors back to the node sdk in the form
{code:java}
[ { Error: 2 UNKNOWN: error executing chaincode: transaction returned with failure: Error: The current identity, with the name 'admin' and the identifier '01899e04161a3a6d64670504fa122e55818295352929b6a616333a3739fde3f2', must be activated (ACTIVATION_REQUIRED)
at new createStatusError (/Users/dave/temp/node_modules/grpc/src/client.js:64:15)
at /Users/dave/temp/node_modules/grpc/src/client.js:583:15
code: 2,
metadata: Metadata { _internal_repr: {} },
details: 'error executing chaincode: transaction returned with failure: Error: The current identity, with the name \'admin\' and the identifier \'01899e04161a3a6d64670504fa122e55818295352929b6a616333a3739fde3f2\', must be activated (ACTIVATION_REQUIRED)' } ]
{code}
ie as a javascript Error object, however something has changed server side in 1.2 (as grpc version has not changed client side) and now a chaincode error is returned in the form
{code:java}
[ { version: 0,
timestamp: null,
response:
{ status: 500,
message: 'transaction returned with failure: Error: The current identity, with the name and the identifier , must be activated (ACTIVATION_REQUIRED)',
payload: <Buffer > },
payload: <Buffer >,
endorsement: null } ]{code}
Unfortunately the node-sdk doesn't take this into account and so doesn't correctly return errors back to the client application

 ",,davidkel,kosullivan_sita,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzzj6v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,kosullivan_sita,,,,,,,,,dev,main,,,,,,,,,true,"19/Jul/18 4:54 PM;davidkel;[https://gerrit.hyperledger.org/r/#/c/24557/]

[https://gerrit.hyperledger.org/r/#/c/24555/]

 ;;;",,,,,,,,,,,,,,,,
"Remove 'use strict'; to convert to ES6 syntax.",FABN-1372,42155,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,02/Sep/19 3:19 PM,13/Jan/21 12:08 AM,28/Oct/23 3:25 AM,13/Jan/21 12:08 AM,,,,,,,,,,0,external,sdk-triaged,,,,"Remove 'use strict';.",,Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1219,FABN-681,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i010mm:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,"04/Dec/20 1:02 AM;lesleyannj;[~Hengming-Zhang] can this jira be closed?;;;","13/Jan/21 12:08 AM;lesleyannj;Backlog Review - Closing due to inactivity.  Can be re-opened if work starts again.;;;",,,,,,,,,,,,,,,
Unclear & intangible comment in code,FABN-1373,42185,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,biligunb,biligunb,04/Sep/19 6:00 PM,24/Oct/19 11:19 PM,28/Oct/23 3:25 AM,24/Oct/19 11:19 PM,v1.4.2,,,,,,,,,0,,,,,,"While looking for *retry* mechanism I found rather uncertain comments from github code.

 - fabric-network/lib/transaction.js#L153 : [link|#L153]]

!image-2019-09-04-17-19-51-458.png!

 

What does `something special` mean?

 ",,biligunb,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/19 6:19 PM;biligunb;image-2019-09-04-17-19-51-458.png;https://jira.hyperledger.org/secure/attachment/17761/image-2019-09-04-17-19-51-458.png",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zaj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),biligunb,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"24/Oct/19 11:19 PM;harrisob@us.ibm.com;internal comments will be adjusted when working on the code;;;",,,,,,,,,,,,,,,,
[fabric-network] document the HA capabilities of the fabric-network api,FABN-1374,42192,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,davidkel,davidkel,05/Sep/19 6:12 AM,09/Oct/19 5:58 PM,28/Oct/23 3:25 AM,09/Oct/19 5:58 PM,v1.4.2,v2.0.0,,,,,,,,0,,,,,,"There is a whole range of HA capabilities in fabric-network (and also in fabric-client which is exploited by fabric-network) which is not fully explained anywhere. It would be good to document this.
1. channel initialisation on get network will try alternative peers in your org if the peer(s) it tries cannot be contacted (discovery enabled), will try alternative peers in the channel (discovery disabled)
2. on submit transaction with discovery, endorsement will be submitted to a set of peers that satisfy the endorsement policy and any failure then submission will be done to alternative sets of peers as required (via the pluggable discovery endorsement handler)
3. on submit transaction, if the endorsements can't be sent to an orderer, alternative available orderers will be tried (via the pluggable basic commit handler)
4. on submit transaction, waiting for commits to occur on the peer will try to ensure that the strategy is satisfied before unblocking even if loss of connectivity to a peer channel event hub occurs (via pluggable event strategies)
5. block/chaincode/transaction event listening should try to ensure that an event is not missed, even if connection to the current peer that events are being listened on are lost and also recovery of missed events if the application is stopped and restarted. (pluggable via event hub selection, checkpointers etc)
6. on evaluate transaction if no response from a peer in your org is obtained, it will try other peers in your org and continue to use the peer (via pluggable query handlers)

Have I missed anything ?",,davidkel,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zb7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As a user of the node SDK, I would like to be able to package go module chaincode",FABN-1375,42203,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sykesm,sykesm,sykesm,06/Sep/19 6:08 AM,24/Oct/19 10:21 PM,28/Oct/23 3:25 AM,24/Oct/19 10:21 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-5177,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zd7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sykesm,,,,,,,,,,dev,main,,,,,,,,,true,"06/Sep/19 6:10 AM;sykesm;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33383 Add packaging support for go module chaincode;;;",,,,,,,,,,,,,,,,
"As an organisation without peers, I want to utilise service discovery to discover information about the network",FABN-1376,42220,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,generak,generak,07/Sep/19 10:04 AM,12/Jan/21 11:55 PM,28/Oct/23 3:25 AM,12/Jan/21 11:55 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Currently, the discovery service only looks at peers within an organisation. While this works fine for organisations with any number of peers, and will allow them to discover information about the network, it does not work for organisations without any peers.

An example of such an organisation would be an organisation as part of a channel's consortium that is used to register and enroll users that are end clients - performing transactions on the network through a web front-end that uses REST calls which in turn utilise the Node SDK and invoke transactions from the requested user. This organisation allows for a logical separation between operators on the network (i.e. 'true' organisations), and clients that utilise the network but do not offer any architecture (aside from a CA used to register/enroll users).

When attempting this in the current state, discovery will fail, and thus the gateway will have no peers to connect to aside from those defined in the CCP. The reason for this is the following line - [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/network.js#L79]

This behaviour can be modified in the current state by connecting through to the gateway with discover: false, and then adjusting the client discovery setting to initialise with discovery, and then reinitialising the channel.

Event handlers, event hub selection and query handlers also only connect through to peers that are part of the same organisation, though custom strategies can be used when connecting to the gateway to allow this behaviour to change.

In short, modifying discovery to utilise any peers on the network would allow for organisations without any running peers to discover information about the network,",,bestbeforetoday,generak,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1271,,,No,,Unset,No,,,"1|i00zll:i",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,generak,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,"24/Oct/19 11:49 PM;heatherp;This issue might belong nested under https://jira.hyperledger.org/browse/FABN-1271;;;","12/Jan/21 11:55 PM;lesleyannj;Enhancements in 2.x - requires to be defined in CCP but doesn't have to be in users organization.

Please re-open if not covered enough in 2.x;;;",,,,,,,,,,,,,,,
"As a user of the node SDK, I want to be able to package go chaincode implemented as a module",FABN-1377,42246,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,sykesm,sykesm,10/Sep/19 2:38 AM,12/Jan/21 11:48 PM,28/Oct/23 3:25 AM,12/Jan/21 11:48 PM,,,,,,,,,,0,external,sdk-triaged,,,,"FABN-1375 added support for packaging a child directory containing a go chaincode module but, given the patterns in the code, only supported chaincode implementations that were at the root of the module.

Proper packaging would, when given a path to a directory, would

1. determine if the directory is part of a go module
2. package the code relative to the root of the go module
3. determine the import path of the package within the module relative to the root and use that as the ""path"" in the chaincode metadata

Alternatively, the SDK should get out of the business of packaging apps. The code does understand go. The implementation:
- does not gather dependencies
- does not understand the difference between a package import path and a file system path
- does not understand module vs gopath

/cc [~mastersingh24], [~denyeart]",,lesleyannj,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010mn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,sykesm,,,,,,,,,,,,,,,,,,,,"12/Jan/21 11:48 PM;lesleyannj;Backlog Review - Closing - from 2.x SDK stopped packaging apps.;;;",,,,,,,,,,,,,,,,
fabric-merge-end-2-end job: Fail to run node.js sdk scenarios on test cucumber intermittently: test/scenario/features/steps/chaincode_steps.js,FABN-1378,42302,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,vijaypunugubati,vijaypunugubati,12/Sep/19 12:34 AM,27/Sep/19 7:25 PM,28/Oct/23 3:25 AM,27/Sep/19 7:25 PM,v2.0.0,,,,,v2.0.0,,,,0,ci-blocker,node-SDK,,,,"{code:java}
// code placeholder
{code}
Scenarios on test cucumber failed to run with a timeout error and these errors were first observed on Sep 9, 2019.

*Branch:* Master

*Error Snippet:*
{code:java}
/00:20:49.382    [31m✖ And I can approve node chaincode at version v1 named example_cc_node as organization org1 on channel lifecyclechannel with endorsement policy both_orgs[39m # [90mtest/scenario/features/steps/chaincode_steps.js:77[39m
00:20:49.382        [31mError: REQUEST_TIMEOUT[39m[90m[39m
00:20:49.382        [90m    at Timeout.setTimeout (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Peer.js:117:19)[39m
00:20:49.382        [90m    at ontimeout (timers.js:436:11)[39m
00:20:49.382        [90m    at tryOnTimeout (timers.js:300:5)[39m
00:20:49.382        [90m    at listOnTimeout (timers.js:263:5)[39m
00:20:49.382        [90m    at Timer.processTimers (timers.js:223:10)[39m
00:20:49.382    [36m- And I can approve java chaincode at version v1 named example_cc_java as organization org1 on channel lifecyclechannel with endorsement policy both_orgs[39m # [90mtest/scenario/features/steps/chaincode_steps.js:77[39m
00:20:49.382    [36m- And I can approve golang chaincode at version v1 named example_cc_golang as organization org1 on channel lifecyclechannel with endorsement policy both_orgs[39m # [90mtest/scenario/features/steps/chaincode_steps.js:77[39m
00:20:49.382    [36m- And I can package node chaincode at version v1 named example_cc_node as organization org2 with goPath na located at ../../../../test/fixtures/chaincode/node_cc/example_cc and metadata located at ../../../../test/fixtures/chaincode/metadata with initrequired[39m # [90mtest/scenario/features/steps/chaincode_steps.js:14[39m
00:20:49.382    [36m- And I can package java chaincode at version v1 named example_cc_java as organization org2 with goPath na located at ../../../../test/fixtures/chaincode/java_cc/example_cc and metadata located at ../../../../test/fixtures/chaincode/metadata with initrequired[39m # [90mtest/scenario/features/steps/chaincode_steps.js:14[39m
00:20:49.382    [36m- And I can package golang chaincode at version v1 named example_cc_golang as organization org2 with goPath ../../../../test/fixtures/chaincode/goLang located at github.com/example_cc and metadata located at ../../../../test/fixtures/chaincode/metadata with initrequired[39m # [90mtest/scenario/features/steps/chaincode_steps.js:14[39m
00:20:49.382    [36m- And I can install node chaincode at version v1 named example_cc_node as organization org2[39m # [90mtest/scenario/features/steps/chaincode_steps.js:54[39m
00:20:49.382    [36m- And I can install java chaincode at version v1 named example_cc_java as organization org2[39m # [90mtest/scenario/features/steps/chaincode_steps.js:54[39m
00:20:49.382    [36m- And I can install golang chaincode at version v1 named example_cc_golang as organization org2[39m # [90mtest/scenario/features/steps/chaincode_steps.js:54[39m
00:20:49.382    [36m- And I can approve node chaincode at version v1 named example_cc_node as organization org2 on channel lifecyclechannel with endorsement policy both_orgs[39m # [90mtest/scenario/features/steps/chaincode_steps.js:77[39m
00:20:49.382    [36m- And I can approve java chaincode at version v1 named example_cc_java as organization org2 on channel lifecyclechannel with endorsement policy both_orgs[39m # [90mtest/scenario/features/steps/chaincode_steps.js:77[39m
00:20:49.382    [36m- And I can approve golang chaincode at version v1 named example_cc_golang as organization org2 on channel lifecyclechannel with endorsement policy both_orgs[39m # [90mtest/scenario/features/steps/chaincode_steps.js:77[39m
00:20:49.382    [36m- And I can query for chaincode example_cc_node for commit status as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:387[39m
00:20:49.382    [36m- And I can query for chaincode example_cc_java for commit status as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:387[39m
00:20:49.382    [36m- And I can query for chaincode example_cc_golang for commit status as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:387[39m
00:20:49.382    [36m- And I can commit node chaincode at version v1 named example_cc_node as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:155[39m
00:20:49.382    [36m- And I can commit java chaincode at version v1 named example_cc_java as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:155[39m
00:20:49.382    [36m- And I can commit golang chaincode at version v1 named example_cc_golang as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:155[39m
00:20:49.382    [36m- And I can call init on chaincode named example_cc_node as organization org1 on channel lifecyclechannel with args [""a"",""1000"",""b"",""2000""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
00:20:49.382    [36m- And I can call init on chaincode named example_cc_java as organization org1 on channel lifecyclechannel with args [""a"",""1000"",""b"",""2000""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
00:20:49.382    [36m- And I can call init on chaincode named example_cc_golang as organization org1 on channel lifecyclechannel with args [""a"",""1000"",""b"",""2000""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
00:20:49.382    [36m- And I can call move on chaincode named example_cc_node as organization org1 on channel lifecyclechannel with args [""a"",""b"",""100""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
00:20:49.382    [36m- And I can call move on chaincode named example_cc_java as organization org1 on channel lifecyclechannel with args [""a"",""b"",""100""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
00:20:49.382    [36m- And I can call move on chaincode named example_cc_golang as organization org1 on channel lifecyclechannel with args [""a"",""b"",""100""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
00:20:49.383    [36m- And I can query for defined chaincode example_cc_node as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:328[39m
00:20:49.383    [36m- And I can query for defined chaincode example_cc_java as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:328[39m
00:20:49.383    [36m- And I can query for defined chaincode example_cc_golang as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:328[39m
00:20:49.383    [36m- And I can query for chaincode example_cc_node for commit status as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:387[39m
00:20:49.383    [36m- And I can query for chaincode example_cc_java for commit status as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:387[39m
00:20:49.383    [36m- And I can query for chaincode example_cc_golang for commit status as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:387[39m
00:20:49.383    [36m- And I can query installed chaincode example_cc_node as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:269[39m
00:20:49.383    [36m- And I can query installed chaincode example_cc_java as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:269[39m
00:20:49.383    [36m- And I can query installed chaincode example_cc_golang as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:269[39m
00:20:49.383    [36m- And I can query installed chaincodes as organization org1 on channel lifecyclechannel[39m # [90mtest/scenario/features/steps/chaincode_steps.js:300[39m
00:20:49.383 
00:20:49.383 8 scenarios ([31m1 failed[39m, [32m7 passed[39m)
00:20:49.383 102 steps ([31m1 failed[39m, [36m33 skipped[39m, [32m68 passed[39m)
00:20:49.383 5m20.072s
00:20:49.416 npm ERR! code ELIFECYCLE
00:20:49.416 npm ERR! errno 1
00:20:49.418 npm ERR! fabric-sdk-node@2.0.0-snapshot test:cucumber: `cucumber-js ./test/scenario/features/*.feature`
00:20:49.418 npm ERR! Exit status 1
00:20:49.419 npm ERR! 
00:20:49.420 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:cucumber script.
00:20:49.420 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
00:20:49.468 
00:20:49.468 npm ERR! A complete log of this run can be found in:
00:20:49.469 npm ERR!     /home/jenkins/.npm/_logs/2019-09-09T18_55_44_807Z-debug.log
00:20:49.477 [18:55:44] 'run-test-cucumber' errored after 5.37 min
00:20:49.478 [18:55:44] [31mError[39m in plugin ""[36mgulp-shell[39m""
00:20:49.478 Message:
00:20:49.478     Command `export HFC_LOGGING='{""debug"":""/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debugc.log""}'; npm run test:cucumber` failed with exit code 1
00:20:49.479 [18:55:44] 'run-test-merge' errored after 5.4 min/ code placeholder
{code}
Build logs:

[https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6311/consoleFull]

[https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/lastFailedBuild/]",,btl5037,denyeart,harrisob@us.ibm.com,heatherp,mbwhite,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zwz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,denyeart,harrisob@us.ibm.com,heatherp,mbwhite,vijaypunugubati,,,,,dev,main,,,,,,,,,true,"13/Sep/19 4:17 AM;denyeart;[~andrew-coleman] Sounds like this one is happening frequently (timeout at different locations), can you take a look?;;;","23/Sep/19 11:59 PM;heatherp;{{The same file is complaining in the latest merge build:}}

{{[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/500/console]}}

{{}}
{code:java}
19:21:05 [31m✖ And I can call init on chaincode named example_cc_node as organization org1 on channel lifecyclechannel with args [""a"",""1000"",""b"",""2000""][39m # [90mtest/scenario/features/steps/chaincode_steps.js:206[39m
19:21:05 [31mError: make sure the chaincode example_cc_node has been successfully defined on channel lifecyclechannel and try again: chaincode definition for 'example_cc_node' exists, but chaincode is not installed[39m[90m[39m{code};;;","24/Sep/19 10:34 PM;mbwhite;Looking at this I would concur that this is a timing issue... the chaincode just isn't ready yet. ;;;","26/Sep/19 8:11 PM;heatherp;[~vijaypunugubati] we believe Simon's latest commits have at least fixed the node sdk merge builds - can you let us know if this fixes the fabric end-2-end tests too?;;;","26/Sep/19 11:10 PM;vijaypunugubati;[~heatherp] It's good to see the sdk-node merge builds were fixed, and in fabric end-2-end testing we hit with new error missing `lib/gateway` module.
Let me give some more info on gulp targets we execute on sdk-node and fabric end2end builds which could help to debug more:

in sdk-node builds we run `gulp test, gulp test-logging and gulp run-test-scenario`

in fabric end -2-end we run `gulp run-test-merge` from this file [https://github.com/hyperledger/fabric-sdk-node/blob/master/build/tasks/test.js]
{code:java}
/00:33:12.130 [13:33:36] Starting 'run-test-cucumber'...
00:33:12.445 
00:33:12.445 > fabric-sdk-node@2.0.0-snapshot test:cucumber /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node
00:33:12.445 > cucumber-js ./test/scenario/features/*.feature
00:33:12.445 
00:33:13.452 Error: Cannot find module './lib/gateway'
00:33:13.452     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:582:15)
00:33:13.452     at Function.Module._load (internal/modules/cjs/loader.js:508:25)
00:33:13.452     at Module.require (internal/modules/cjs/loader.js:637:17)
00:33:13.452     at require (internal/modules/cjs/helpers.js:22:18)
00:33:13.452     at Object.<anonymous> (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/index.js:146:26)
00:33:13.452     at Module._compile (internal/modules/cjs/loader.js:701:30)
00:33:13.452     at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
00:33:13.452     at Module.load (internal/modules/cjs/loader.js:600:32)
00:33:13.452     at tryModuleLoad (internal/modules/cjs/loader.js:539:12)
00:33:13.452     at Function.Module._load (internal/modules/cjs/loader.js:531:3)
00:33:13.452     at Module.require (internal/modules/cjs/loader.js:637:17)
00:33:13.452     at require (internal/modules/cjs/helpers.js:22:18)
00:33:13.452     at Object.<anonymous> (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/scenario/features/lib/network.js:7:28)
00:33:13.452     at Module._compile (internal/modules/cjs/loader.js:701:30)
00:33:13.452     at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
00:33:13.452     at Module.load (internal/modules/cjs/loader.js:600:32)
00:33:13.460 npm ERR! code ELIFECYCLE
00:33:13.460 npm ERR! errno 1
00:33:13.461 npm ERR! fabric-sdk-node@2.0.0-snapshot test:cucumber: `cucumber-js ./test/scenario/features/*.feature`
00:33:13.462 npm ERR! Exit status 1
00:33:13.462 npm ERR! 
00:33:13.463 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:cucumber script.
00:33:13.463 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
00:33:13.471 
00:33:13.472 npm ERR! A complete log of this run can be found in:
00:33:13.472 npm ERR!     /home/jenkins/.npm/_logs/2019-09-26T13_33_37_993Z-debug.log
00:33:13.477 [13:33:38] 'run-test-cucumber' errored after 1.35 s
00:33:13.477 [13:33:38] [31mError[39m in plugin ""[36mgulp-shell[39m""
00:33:13.477 Message:
00:33:13.477     Command `export HFC_LOGGING='{""debug"":""/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debugc.log""}'; npm run test:cucumber` failed with exit code 1
00:33:13.479 [13:33:38] 'run-test-merge' errored after 3.44 s/ code placeholder
{code};;;","27/Sep/19 7:25 PM;heatherp;Ah ok, not good to hear you've hit something new - as it's a different error to this one, could you raise a separate issue please? I'm going to close this one.;;;",,,,,,,,,,,
fabric-sdk-node-merge job: Failed run-tape-e2e test with timeout expired,FABN-1379,42335,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,vijaypunugubati,vijaypunugubati,13/Sep/19 12:27 AM,02/Oct/19 6:21 PM,28/Oct/23 3:25 AM,02/Oct/19 6:21 PM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,node-SDK,,,,"fabric-sdk-node-merge job: Failed run-tape-e2e test with timeout expired.

*Branch:* Master

*Platform:* x86_64

*Error Snippet:*
{code:java}
/not ok 260 checking query results are correct that value is 410[00m[00m[2m[38;5;66m
[2019-09-12T13:53:21.987Z]   ---[00m
[2019-09-12T13:53:21.987Z]     operator: equal
[2019-09-12T13:53:21.987Z]     expected: '410'
[2019-09-12T13:53:21.987Z]     actual:   '400'
[2019-09-12T13:53:21.987Z]     at: e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:831:10)
[2019-09-12T13:53:21.987Z]     stack: |-
[2019-09-12T13:53:21.987Z]       Error: checking query results are correct that value is 410
[2019-09-12T13:53:21.987Z]           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
[2019-09-12T13:53:21.987Z]           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.987Z]           at Test.equal (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
[2019-09-12T13:53:21.987Z]           at Test.bound [as equal] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.987Z]           at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:831:10)
[2019-09-12T13:53:21.987Z]           at <anonymous>
[2019-09-12T13:53:21.987Z]           at process._tickCallback (internal/process/next_tick.js:189:7)[00m[2m[38;5;66m
[2019-09-12T13:53:21.987Z]   ...[00m[00m[1m[38;5;196m
[2019-09-12T13:53:21.987Z] not ok 261 checking query results are correct that value is 410[00m[00m[2m[38;5;66m
[2019-09-12T13:53:21.987Z]   ---[00m
[2019-09-12T13:53:21.987Z]     operator: equal
[2019-09-12T13:53:21.987Z]     expected: '410'
[2019-09-12T13:53:21.988Z]     actual:   '400'
[2019-09-12T13:53:21.988Z]     at: e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:831:10)
[2019-09-12T13:53:21.988Z]     stack: |-
[2019-09-12T13:53:21.988Z]       Error: checking query results are correct that value is 410
[2019-09-12T13:53:21.988Z]           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
[2019-09-12T13:53:21.988Z]           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.988Z]           at Test.equal (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
[2019-09-12T13:53:21.988Z]           at Test.bound [as equal] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.988Z]           at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:831:10)
[2019-09-12T13:53:21.988Z]           at <anonymous>
[2019-09-12T13:53:21.988Z]           at process._tickCallback (internal/process/next_tick.js:189:7)[00m[2m[38;5;66m
[2019-09-12T13:53:21.988Z]   ...[00m[00m[1m[38;5;2m
[2019-09-12T13:53:21.988Z] ok 262 Successfully query chaincode on the channel[00m[00m[2m[38;5;66m
[2019-09-12T13:53:21.988Z] #  ***** Node-Chaincode TransientMap Support in Proposals ***** [00m[00m[1m[38;5;2m
[2019-09-12T13:53:21.988Z] ok 263 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
[2019-09-12T13:53:21.988Z] ok 264 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
[2019-09-12T13:53:21.988Z] ok 265 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;196m
[2019-09-12T13:53:21.988Z] not ok 266 Checking the result has the transientMap value returned by the chaincode[00m[00m[2m[38;5;66m
[2019-09-12T13:53:21.988Z]   ---[00m
[2019-09-12T13:53:21.988Z]     operator: equal
[2019-09-12T13:53:21.988Z]     expected: |-
[2019-09-12T13:53:21.988Z]       'dummyValue'
[2019-09-12T13:53:21.988Z]     actual: |-
[2019-09-12T13:53:21.988Z]       'Error: error in simulation: transaction returned with failure: Unknown action, check the first argument, must be one of \'delete\', \'query\', or \'move\'. But got: testTransient'
[2019-09-12T13:53:21.988Z]     at: e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:821:9)
[2019-09-12T13:53:21.988Z]     stack: |-
[2019-09-12T13:53:21.988Z]       Error: Checking the result has the transientMap value returned by the chaincode
[2019-09-12T13:53:21.988Z]           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
[2019-09-12T13:53:21.988Z]           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.988Z]           at Test.equal (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
[2019-09-12T13:53:21.988Z]           at Test.bound [as equal] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.988Z]           at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:821:9)
[2019-09-12T13:53:21.988Z]           at <anonymous>
[2019-09-12T13:53:21.988Z]           at process._tickCallback (internal/process/next_tick.js:189:7)[00m[2m[38;5;66m
[2019-09-12T13:53:21.988Z]   ...[00m[00m[1m[38;5;196m
[2019-09-12T13:53:21.988Z] not ok 267 Checking the result has the transientMap value returned by the chaincode[00m[00m[2m[38;5;66m
[2019-09-12T13:53:21.988Z]   ---[00m
[2019-09-12T13:53:21.988Z]     operator: equal
[2019-09-12T13:53:21.988Z]     expected: |-
[2019-09-12T13:53:21.988Z]       'dummyValue'
[2019-09-12T13:53:21.988Z]     actual: |-
[2019-09-12T13:53:21.988Z]       'Error: error in simulation: transaction returned with failure: Unknown action, check the first argument, must be one of \'delete\', \'query\', or \'move\'. But got: testTransient'
[2019-09-12T13:53:21.988Z]     at: e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:821:9)
[2019-09-12T13:53:21.988Z]     stack: |-
[2019-09-12T13:53:21.988Z]       Error: Checking the result has the transientMap value returned by the chaincode
[2019-09-12T13:53:21.988Z]           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
[2019-09-12T13:53:21.988Z]           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.988Z]           at Test.equal (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
[2019-09-12T13:53:21.988Z]           at Test.bound [as equal] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T13:53:21.988Z]           at e2eUtils.tlsEnroll.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:821:9)
[2019-09-12T13:53:21.988Z]           at <anonymous>
[2019-09-12T13:53:21.988Z]           at process._tickCallback (internal/process/next_tick.js:189:7)[00m[2m[38;5;66m
[2019-09-12T13:53:21.988Z]   ...[00m[00m[1m[38;5;2m
[2019-09-12T13:53:21.988Z] ok 268 Successfully verified transient map values[00m[00m[2m[38;5;66m/ code placeholder
{code}
{code:java}
/[2019-09-12T14:06:59.612Z] # Proposal failed to e2enodecc :: Error: error in simulation: failed to execute transaction b4e0c4c08e28ddbf651dfb8552332c5f3d2ad2430a4b382617446f7e13e77d13: error sending: timeout expired while executing transaction[00m[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z] # Proposal failed to e2enodecc :: Error: error in simulation: could not launch chaincode e2enodecc:v1568297135773: error starting container: error building image: failed external (no builders defined) and docker build: docker image build failed: docker build failed: Error returned from build: 1 ""npm ERR! Unexpected end of JSON input while parsing near '...""protobufjs"":""5.0.3"",'[00m[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z] # [00m[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z] # npm ERR! A complete log of this run can be found in:[00m[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z] # npm ERR!     /root/.npm/_logs/2019-09-12T14_06_03_805Z-debug.log[00m[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z] # ""[00m[00m[1m[38;5;196m
[2019-09-12T14:06:59.612Z] not ok 1399 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11) at <anonymous> at process._tickCallback (internal/process/next_tick.js:189:7)[00m[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z]   ---[00m
[2019-09-12T14:06:59.612Z]     operator: fail
[2019-09-12T14:06:59.612Z]     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
[2019-09-12T14:06:59.612Z]     stack: |-
[2019-09-12T14:06:59.612Z]       Error: Error: All proposals were not good
[2019-09-12T14:06:59.612Z]           at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:363:11)
[2019-09-12T14:06:59.612Z]           at <anonymous>
[2019-09-12T14:06:59.612Z]           at process._tickCallback (internal/process/next_tick.js:189:7)
[2019-09-12T14:06:59.612Z]           at Test.assert [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
[2019-09-12T14:06:59.612Z]           at Test.bound [as _assert] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T14:06:59.612Z]           at Test.fail (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
[2019-09-12T14:06:59.612Z]           at Test.bound [as fail] (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
[2019-09-12T14:06:59.612Z]           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-sdk-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:411:6)
[2019-09-12T14:06:59.612Z]           at <anonymous>
[2019-09-12T14:06:59.612Z]           at process._tickCallback (internal/process/next_tick.js:189:7)[00m[2m[38;5;66m
[2019-09-12T14:06:59.612Z]   ...[00m[00m[1m[38;5;2m/ code placeholder
{code}
Build logs:

[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/492/consoleText]

[https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-merge-x86_64/lastFailedBuild/]",,btl5037,harrisob@us.ibm.com,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0102j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,harrisob@us.ibm.com,vijaypunugubati,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-merge-end-2-end job: Fail to run node.js sdk scenarios on test cucumber test/scenario/features/steps/network_steps.js,FABN-1380,42360,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,andrew-coleman,denyeart,denyeart,14/Sep/19 10:14 PM,19/Sep/19 6:36 PM,28/Oct/23 3:25 AM,19/Sep/19 6:36 PM,,,,,,,,,,0,ci-blocker,,,,,"The recent fabric-merge-end-2-end jobs are failing in node.js cucumber tests:

https://jenkins.hyperledger.org/job/fabric-merge-end-2-end-x86_64/6323/consoleFull

https://jenkins.hyperledger.org/job/fabric-merge-end-2-end-x86_64/6324/consoleFull


{code:java}
03:42:51    [32m✔ When I use the gateway named test_gateway to submit 5 transactions with args [createValue] for chaincode events01 instantiated on channel mychannel[39m # [90mtest/scenario/features/steps/network_steps.js:72[39m
03:42:51    [31m✖ Then I receive 5 events from the listener unfilteredListener[39m # [90mtest/scenario/features/steps/network_steps.js:110[39m
03:42:51        [31mError: Expected unfilteredListener to be called 5 times, but called 0 times[39m[90m[39m
03:42:51        [90m    at World.Then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/scenario/features/steps/network_steps.js:128:10)[39m
03:42:51    [32m✔ After[39m # [90mtest/scenario/features/support/hooks.js:25[39m
03:42:51 
03:42:51 8 scenarios ([31m3 failed[39m, [32m5 passed[39m)
03:42:51 102 steps ([31m3 failed[39m, [36m17 skipped[39m, [32m82 passed[39m)
03:42:51 12m09.964s
03:42:51 npm ERR! code ELIFECYCLE
03:42:51 npm ERR! errno 1
03:42:51 npm ERR! fabric-sdk-node@2.0.0-snapshot test:cucumber: `cucumber-js ./test/scenario/features/*.feature`
03:42:51 npm ERR! Exit status 1
03:42:51 npm ERR! 
03:42:51 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:cucumber script.
03:42:51 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
03:42:51 
03:42:51 npm ERR! A complete log of this run can be found in:
03:42:51 npm ERR!     /home/jenkins/.npm/_logs/2019-09-14T07_42_51_888Z-debug.log
03:42:51 [07:42:51] 'run-test-cucumber' errored after 12 min
03:42:51 [07:42:51] [31mError[39m in plugin ""[36mgulp-shell[39m""
03:42:51 Message:
03:42:51     Command `export HFC_LOGGING='{""debug"":""/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debugc.log""}'; npm run test:cucumber` failed with exit code 1
03:42:51 [07:42:51] 'run-test-merge' errored after 12 min
03:42:51 [07:42:51] [31mError[39m in plugin ""[36mrun-sequence(run-test-cucumber)[39m""
03:42:51 Error
03:42:51     at finish (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/run-sequence/index.js:82:12)
03:42:51     at Gulp.onError (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/run-sequence/index.js:93:3)
03:42:51     at Gulp.emit (events.js:194:15)
03:42:51     at Gulp.Orchestrator._emitTaskDone (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/index.js:264:8)
03:42:51     at /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/index.js:275:23
03:42:51     at finish (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/lib/runTask.js:21:8)
03:42:51     at cb (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/lib/runTask.js:29:3)
03:42:51     at /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/node_modules/async/dist/async.js:473:16
03:42:51     at iterateeCallback (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/node_modules/async/dist/async.js:988:17)
03:42:51     at /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/node_modules/async/dist/async.js:969:16
03:42:51     at ChildProcess.child.on (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/index.js:72:7)
03:42:51     at ChildProcess.emit (events.js:189:13)
03:42:51     at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)
03:42:52 [31mERROR!!! gulp end-2-end tests failed [0m
03:42:56 Build step 'Execute shell' marked build as failure
{code}
",,andrew-coleman,denyeart,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01063:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,denyeart,heatherp,,,,,,,,,,,,,,,,,,,"18/Sep/19 10:28 PM;heatherp;Probably covered by FAB-16602, but we'll confirm;;;","19/Sep/19 6:36 PM;andrew-coleman;The two event handling scenarios that were failing are now passing in the latest merge build (although the build itself still fails due to FABN-1378):

[https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6370/consoleFull];;;",,,,,,,,,,,,,,,
Update grpc to 1.23.3,FABN-1381,42414,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,caroline-church,caroline-church,19/Sep/19 7:15 PM,27/Sep/19 7:26 PM,28/Oct/23 3:25 AM,27/Sep/19 7:26 PM,,,,,,,,,,0,,,,,,update grpc to 1.23.3,,caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010ez:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use ES7 syntax as much as possible,FABN-1382,42453,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,22/Sep/19 11:07 AM,13/Jan/21 12:07 AM,28/Oct/23 3:25 AM,13/Jan/21 12:07 AM,v1.4.2,,,,,v1.4.2,,,,0,external,sdk-triaged,,,,"- CouchDBKeyValueStore

- FileKeyValueStore

 

and their tests.",,Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-681,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i010mj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,"04/Dec/20 12:42 AM;lesleyannj;[~Hengming-Zhang] can this jira be closed?;;;","13/Jan/21 12:07 AM;lesleyannj;Backlog Review - Closing due to inactivity.  Can be re-opened if work starts again.;;;",,,,,,,,,,,,,,,
Remove Token docs,FABN-1383,42477,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,negupta,negupta,negupta,25/Sep/19 12:21 AM,24/Oct/19 10:15 PM,28/Oct/23 3:25 AM,24/Oct/19 10:15 PM,,,,,,,,,,0,,,,,,,,negupta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010qz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),negupta,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Update grpc levels,FABN-1384,42492,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,25/Sep/19 11:22 PM,26/Sep/19 8:00 PM,28/Oct/23 3:25 AM,26/Sep/19 7:43 PM,,,,,,v1.4.2,v2.0.0,,,0,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010tn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Run builds on Windows,FABN-1385,42509,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,davidkel,davidkel,26/Sep/19 10:15 PM,09/Oct/19 9:30 PM,28/Oct/23 3:25 AM,09/Oct/19 9:30 PM,v1.4.2,v2.0.0,,,,v1.4.2,v2.0.0,,,0,,,,,,"With the imminent move to azure pipelines there is an opportunity to run the node sdk builds on other platforms apart from ubuntu/linux for intel. The first thought would be to have the builds run on native windows.

As a heads up it looks like the build would fail on windows. A quick test using Node v10.16 .3 gave the following issue for the release-1.4 branch

{noformat}
 √ client-utils #buildProposal should return a valid proposal when transientMap is not an object: 0ms
  √ client-utils #sendPeersProposal should return valid responses for one peer where proposals are fulfilled: 0ms
  √ client-utils #sendPeersProposal should return valid responses for one peer where proposals are not fulfilled: 0ms
  √ client-utils #sendPeersProposal should return valid responses for two peers where one proposal is fulfilled and one is not: 1ms
    client-utils #signProposal should return a valid signed proposal: npm[7268]: c:\ws\src\node_file.cc:1722: Assertion `Buffer::HasInstance(args[1])' failed.
 1: 00007FF6323ADD8A v8::internal::GCIdleTimeHandler::GCIdleTimeHandler+4506
 2: 00007FF632388886 node::MakeCallback+4534
 3: 00007FF63238893F node::MakeCallback+4719
 4: 00007FF63234F8F4 uv_loop_fork+38644
 5: 00007FF6328B5BF2 std::vector<v8::internal::compiler::MoveOperands * __ptr64,v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands * __ptr64> >::_Umove+79442
 6: 00007FF6328B707D std::vector<v8::internal::compiler::MoveOperands * __ptr64,v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands * __ptr64> >::_Umove+84701
 7: 00007FF6328B60D6 std::vector<v8::internal::compiler::MoveOperands * __ptr64,v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands * __ptr64> >::_Umove+80694
 8: 00007FF6328B5FBB std::vector<v8::internal::compiler::MoveOperands * __ptr64,v8::internal::ZoneAllocator<v8::internal::compiler::MoveOperands * __ptr64> >::_Umove+80411
 9: 000000F7A35DC5C1
[07:51:02] 'mocha-fabric-client' errored after 4.03 s
[07:51:02] Error in plugin ""gulp-mocha""
Message:
    There were test failures
[07:51:02] 'run-test' errored after 43 s
[07:51:02] Error in plugin ""run-sequence(mocha-fabric-client)""
{noformat}
",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010wr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move fabric-node-sdk to azure pipelines/github,FABN-1386,42520,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,27/Sep/19 7:32 PM,06/Dec/19 5:17 PM,28/Oct/23 3:25 AM,02/Dec/19 8:00 PM,,,,,,v1.4.2,v2.0.0,,,0,sdk-triaged,,,,,"* Migrate from jenkins to azure pipelines for CI
 * Move to Github pull requests for code changes
 * Ensure this move is circulated with maintainers where relevant
 * Move both release-1.4 and master
 * Update any contributing guidelines to explain how to contribute using these tools",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1390,FABN-1263,FABN-1428,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010z7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,"02/Dec/19 8:00 PM;heatherp;I'm happy that the list of tasks listed above are done. Publishing is not currently working, but I can raise a separate issue for that, if this doesn't get resolved soon.;;;",,,,,,,,,,,,,,,,
fabric-network TS definitions bad in published npm module,FABN-1387,42523,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,27/Sep/19 8:09 PM,28/Sep/19 2:03 AM,28/Oct/23 3:25 AM,28/Sep/19 2:03 AM,v2.0.0,,,,,,,,,0,,,,,,"TypeScript definitions in fabric-network refer to TypeScript source files not included in the published npm module, and so are invalid.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010zv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-merge-end-2-end job: Failed to find the module lib/gateway in cucumber test.,FABN-1388,42530,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,vijaypunugubati,vijaypunugubati,27/Sep/19 11:18 PM,01/Oct/19 9:27 PM,28/Oct/23 3:25 AM,01/Oct/19 9:27 PM,v2.0.0,,,,,v2.0.0,,,,0,ci-blocker,node-SDK,,,,"fabric-merge-end-2-end job: Failed to find the module lib/gateway in cucumber test.

*Branch:* Master

*Platform:* x86_64

*Error Snippet:*
{code:java}
/00:31:47.675 [14:20:32] Starting 'run-test-cucumber'...
00:31:47.934 
00:31:47.934 > fabric-sdk-node@2.0.0-snapshot test:cucumber /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node
00:31:47.934 > cucumber-js ./test/scenario/features/*.feature
00:31:47.934 
00:31:48.750 Error: Cannot find module './lib/gateway'
00:31:48.750     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:582:15)
00:31:48.750     at Function.Module._load (internal/modules/cjs/loader.js:508:25)
00:31:48.750     at Module.require (internal/modules/cjs/loader.js:637:17)
00:31:48.750     at require (internal/modules/cjs/helpers.js:22:18)
00:31:48.750     at Object.<anonymous> (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/index.js:146:26)
00:31:48.750     at Module._compile (internal/modules/cjs/loader.js:701:30)
00:31:48.750     at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
00:31:48.750     at Module.load (internal/modules/cjs/loader.js:600:32)
00:31:48.751     at tryModuleLoad (internal/modules/cjs/loader.js:539:12)
00:31:48.751     at Function.Module._load (internal/modules/cjs/loader.js:531:3)
00:31:48.751     at Module.require (internal/modules/cjs/loader.js:637:17)
00:31:48.751     at require (internal/modules/cjs/helpers.js:22:18)
00:31:48.751     at Object.<anonymous> (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/scenario/features/lib/network.js:7:28)
00:31:48.751     at Module._compile (internal/modules/cjs/loader.js:701:30)
00:31:48.751     at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
00:31:48.751     at Module.load (internal/modules/cjs/loader.js:600:32)
00:31:48.758 npm ERR! code ELIFECYCLE
00:31:48.758 npm ERR! errno 1
00:31:48.759 npm ERR! fabric-sdk-node@2.0.0-snapshot test:cucumber: `cucumber-js ./test/scenario/features/*.feature`
00:31:48.764 npm ERR! Exit status 1
00:31:48.764 npm ERR! 
00:31:48.764 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:cucumber script.
00:31:48.764 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
00:31:48.778 
00:31:48.778 npm ERR! A complete log of this run can be found in:
00:31:48.778 npm ERR!     /home/jenkins/.npm/_logs/2019-09-26T14_20_33_816Z-debug.log
00:31:48.782 [14:20:33] 'run-test-cucumber' errored after 1.11 s
00:31:48.783 [14:20:33] [31mError[39m in plugin ""[36mgulp-shell[39m""
00:31:48.783 Message:
00:31:48.783     Command `export HFC_LOGGING='{""debug"":""/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debugc.log""}'; npm run test:cucumber` failed with exit code 1
00:31:48.784 [14:20:33] 'run-test-merge' errored after 2.86 s/ code placeholder
{code}
*Build Logs:* [https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6454/console]

 ",,harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0111f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-merge-end-2-end job on 1.4 branch: Failed to instantiate chaincode on network-e2enodecc,FABN-1389,42531,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,27/Sep/19 11:35 PM,13/Nov/19 1:23 AM,28/Oct/23 3:25 AM,13/Nov/19 1:23 AM,,,,,,,,,,0,ci-failure,node-SDK,sdk-triaged,,,"Failed to instantiate chaincode on network-e2enodecc from the gulp target `run-tape-e2e`.

*Branch:* release-1.4

*Platform:* x86_64

*Error Snippet:* 
{code:java}
/00:27:48.878 #  ***** Network End-to-end flow: instantiate chaincode ***** [00m[00m[1m[38;5;2m
00:27:48.883 ok 475 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
00:27:48.914 ok 476 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
00:28:11.729 ok 477 Successfully initialized Channel[00m[00m[2m[38;5;66m
00:28:11.729 # Proposal failed to network-e2enodecc :: Error: error starting container: error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""npm ERR! Unexpected end of JSON input while parsing near '...--BEGIN PGP SIGNATURE'[00m[00m[2m[38;5;66m
00:28:11.730 # [00m[00m[2m[38;5;66m
00:28:11.730 # npm ERR! A complete log of this run can be found in:[00m[00m[2m[38;5;66m
00:28:11.730 # npm ERR!     /root/.npm/_logs/2019-09-26T17_54_12_603Z-debug.log[00m[00m[2m[38;5;66m
00:28:11.733 # ""[00m[00m[1m[38;5;196m
00:28:11.733 not ok 478 Error: All proposals were not good at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:362:11) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)[00m[00m[2m[38;5;66m
00:28:11.733   ---[00m
00:28:11.734     operator: fail
00:28:11.734     at: e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:410:6)
00:28:11.735     stack: |-
00:28:11.739       Error: Error: All proposals were not good
00:28:11.741           at e2eUtils.tlsEnroll.then.then.then.then.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:362:11)
00:28:11.741           at <anonymous>
00:28:11.741           at process._tickCallback (internal/process/next_tick.js:188:7)
00:28:11.741           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:28:11.741           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:28:11.741           at Test.fail (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:28:11.742           at Test.bound [as fail] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:28:11.742           at e2eUtils.tlsEnroll.then.then.then.then.then.then.catch (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/e2eUtils.js:410:6)
00:28:11.742           at <anonymous>
00:28:11.742           at process._tickCallback (internal/process/next_tick.js:188:7)[00m[2m[38;5;66m
00:28:11.742   ...[00m[00m[1m[38;5;196m
00:28:11.742 not ok 479 Failed to instantiate chaincode [00m[00m[2m[38;5;66m
00:28:11.742   ---[00m/ code placeholder
{code}
{code:java}
/00:28:12.678 not ok 484 Error: No valid responses from any peers. 2 peer error responses: peer=peer0.org1.example.com, status=500, message=make sure the chaincode network-e2enodecc has been successfully instantiated and try again: chaincode network-e2enodecc not found peer=peer0.org2.example.com, status=500, message=make sure the chaincode network-e2enodecc has been successfully instantiated and try again: chaincode network-e2enodecc not found at Transaction._validatePeerResponses (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/transaction.js:241:10) at Transaction.submit (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/transaction.js:159:33) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)[00m[00m[2m[38;5;66m
00:28:12.678   ---[00m
00:28:12.679     operator: fail
00:28:12.679     at: test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke-hsm.js:117:5)
00:28:12.679     stack: |-
00:28:12.679       Error: Error: No valid responses from any peers. 2 peer error responses:
00:28:12.679           peer=peer0.org1.example.com, status=500, message=make sure the chaincode network-e2enodecc has been successfully instantiated and try again: chaincode network-e2enodecc not found
00:28:12.679           peer=peer0.org2.example.com, status=500, message=make sure the chaincode network-e2enodecc has been successfully instantiated and try again: chaincode network-e2enodecc not found
00:28:12.680           at Transaction._validatePeerResponses (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/transaction.js:241:10)
00:28:12.680           at Transaction.submit (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-network/lib/transaction.js:159:33)
00:28:12.680           at <anonymous>
00:28:12.681           at process._tickCallback (internal/process/next_tick.js:188:7)
00:28:12.681           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:28:12.681           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:28:12.681           at Test.fail (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:28:12.681           at Test.bound [as fail] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:28:12.682           at test (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/network-e2e/invoke-hsm.js:117:5)
00:28:12.682           at <anonymous>
00:28:12.682           at process._tickCallback (internal/process/next_tick.js:188:7)[00m[2m[38;5;66m
00:28:12.684   ...[00m[00m[2m[38;5;66m
00:28:12.888 #  ***** Network End-to-end flow: import identity into wallet and configure tls ***** [00m[00m[1m[38;5;2m
00:28:12.888 ok 485 Successfully imported User1@org1.example.com into wallet[00m[00m[2m[38;5;66m
00:28:12.897 #  ***** Network End-to-end flow: invoke transaction to move money using in memory wallet and default event strategy with discovery ***** [00m[00m[1m[38;5;2m
00:28:12.939 ok 486 Connected to the gateway[00m[00m[1m[38;5;2m
00:28:12.939 ok 487 Initialized the network, mychannel[00m[00m[1m[38;5;2m
00:28:12.976 ok 488 Got the contract[00m[00m[1m[38;5;196m/ code placeholder
{code}
*Build Logs:* [https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6457/consoleFull]

[https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-merge-end-2-end-x86_64/6457/]",,harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0111n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,"30/Oct/19 12:46 AM;heatherp;Hi [~vijaypunugubati]- how often are you seeing this? Is there still something that hasn't been merged into fabric due to hitting this problem repeatedly?;;;",,,,,,,,,,,,,,,,
Overhaul node sdk testing,FABN-1390,42565,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,heatherp,heatherp,01/Oct/19 10:53 PM,16/Jun/20 5:18 PM,28/Oct/23 3:25 AM,16/Jun/20 5:18 PM,,,,,,,,,,0,sdk-triaged,,,,,"Following from the recent build troubles that have been impacting us recently, we have had an initial session where we have tried to encapsulate current issues and outline possible solutions. Further sessions will involve conversations on everything below, and breaking down larger identified issues.
 
*As-is Status*
Builds
- Unreliable (timeouts)
- Difficult to determine point of failure (logging issue)
- Too long to complete
- Zero confidence in build result
- Fabric build pulls and runs all sdk tests
 
 
SDK (node/java)
- e2e test failures obfuscated
 
SDK Node
- Unit tape tests remaining
- Test duration too long
- Multiple CC deploys
- Unnecessary testing of components
- Limited scenario testing
 
*Desired Status*
Build
- Reliable fast builds
 
 
SDK
- Common isolated testing
- Focused and fast (to complete) tests",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-599,,,,,,,,,,,,,,,,FABN-1386,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-6,,Overhaul node sdk testing,To Do,No,,Unset,No,,,"1|i0116j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,"31/Oct/19 12:51 AM;heatherp;Some notes about how the node-sdk tests stand at the moment, after discussing with Nick, the folder structure look somewhat like:

integration -> tape integration tests
scenario -> cucumber javascript scenario
ts-fixtures -> resources for typescript cucumbers
ts-scenario -> typescript cucumbers we want to keep
typescript -> needs removing

Notes: 
- We want to use cucumber tags because 1) it makes it easier to debug by specifying just the tagged tests 2) could be run on a channel each, concurrently

Order of tasks:
- Remove the ‘typescript’ folder (In progress, with Nick, now)
- Refactor the javascript cucumber scenario (1396)
- Remove the tape integration tests (1135 / 1398)
- Improve our scenario testing (1137)
- Implement ideal world, see below

Ideal world:
- mocha functional test suite (e.g. see composer) alongside typescript cucumber scenario test suite (1139);;;","27/Nov/19 11:16 PM;heatherp;This is no longer being actively worked on currently, so unassigning me from it. It's still valid though, as there's lots of test tidy up we'd like to do given the time;;;","29/Nov/19 7:35 PM;heatherp;Status of where we got to, as of 1st November:


*Where We Are*
I think we are in a much better place than this time last month:
 * We have a typescript based scenario test suite to ensure that all out typedefs, and the mapped code, are correct.
 * We no longer have *any* typescript tests being run in the e2e test suite
 * We no longer have *any* tape based ""unit"" tests
 * We have a drastically reduced js-scenario test suite (sorry, I couldn't get through it all)
 * We have a drastically reduced e2e test suite
 * We have a faster and more reliable build (less reverifies)
 * We have an entry point for the Fabric Merge build to pick up on, and only run the ts-scenario suite
 
*Pending Tasks*
Ok, cool ... so we are in a good place, but we could be in a better place. I know, I know ... never satisfied. The following are what I would suggest is to be completed as high priority test tasks:
 * Finish porting of base_api scenario tests into ts-scenario .. then delete the entire js-scenario suite. I'd like to witness that one, I'll probably drink a beer as the merge occurs. 
 * Add a HSM feature file to the ts-scenario suite, which is based on a port of the hsm test in the current e2e-network tests ... then delete the entire e2e having ensured we've covered existing scenarios. This will actually remove a large number of e2e tape tests for us and speed up the build nicely.
 * Remove replicated e2e tests ... this is really hard as they are all interdependent .. maybe there is a sneaky way to do this? Perhaps the easiest way to achieve this is port any valid tests into the ts-scenario suite and then delete the e2e suite. Again. I'd love to witness this one ... and I think the removal of that can be celebrated by multiple beers, and a few shorts.
 * Reduce gulp clutter: the gulp tasks file is a monstrosity .. we should look into reducing the clutter in there, which should be helped through the removal of redundant test suites.;;;",,,,,,,,,,,,,,
Remove/refactor tape unit tests in the node sdk repository,FABN-1391,42575,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,02/Oct/19 12:36 AM,21/Oct/19 5:50 PM,28/Oct/23 3:25 AM,21/Oct/19 5:50 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"There are a bunch of existing tape unit tests under the test directory in the node-sdk repository. 
They need refactoring into mocha unit tests for the appropriate modules, or removing altogether where irrelevant",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1140,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,Automated,,Unset,No,,,"1|i0118j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Pass,https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33969,Unit Test,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
install chaincode sometimes times out,FABN-1392,42576,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,02/Oct/19 1:39 AM,25/Oct/19 3:06 AM,28/Oct/23 3:25 AM,25/Oct/19 3:06 AM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"increase the timeout on ""#installchaincode"" tests",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0118r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Pass the base directory from client to node sdk to find the chaincode, when goPath is not exported",FABN-1393,42578,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bharadwajambati1,bharadwajambati1,bharadwajambati1,02/Oct/19 3:52 AM,09/Dec/19 3:31 PM,28/Oct/23 3:25 AM,09/Dec/19 3:31 PM,v2.0.0,,,,,v1.4.5,v2.0.0,,,0,sdk-triaged,,,,,"Clients that have not exported GOPATH should be able to run tests. The client can pass in the relative path to a chaincode, and a base directory, to the node SDK (where it is called ""go path""). The base directory does not seem to be used correctly, and the node SDK defaults to always using whatever GOPATH value has been exported in the environment. This enhancement task is to propagate the parameter down and honor it.

Passing the gopath (or) baseDir to package function in fabric-client/lib/Packager.js from fromDirectory function in fabric-client/lib/Package.js. This fromDirectory function will get that path from installChaincode function in Client.js.",,bharadwajambati1,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01197:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bharadwajambati1,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"02/Oct/19 5:19 AM;bharadwajambati1;https://gerrit.hyperledger.org/r/#/c/fabric-sdk-node/+/33839/;;;",,,,,,,,,,,,,,,,
Provide a subset of node sdk tests for fabric to run,FABN-1394,42584,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Invalid,,heatherp,heatherp,02/Oct/19 6:48 PM,27/Nov/19 11:13 PM,28/Oct/23 3:25 AM,27/Nov/19 11:13 PM,,,,,,,,,,0,sdk-triaged,,,,,"We need to agree on a subset of our cucumber tests to give to the fabric base repository, replacing the tests it currently runs.

Need to liaise with the integration refactoring going on in fabric currently too",,heatherp,,,,,,,,,,,,,,,,,FABN-1396,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i011ab:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,"05/Nov/19 1:11 AM;heatherp;This will be revisited when I've heard from the fabric test team on their plans to refactor fabric's integration test suite;;;","27/Nov/19 11:12 PM;heatherp;Closing this, because based on what I'm hearing from the interop test team, I don't think we need to provide them with a subset of tests to run. I can revisit it if that changes;;;",,,,,,,,,,,,,,,
Setup coverage checking properly,FABN-1395,42587,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,heatherp,heatherp,02/Oct/19 9:19 PM,24/Oct/19 12:52 AM,28/Oct/23 3:25 AM,24/Oct/19 12:52 AM,,,,,,,,,,0,sdk-triaged,,,,,"The nyc coverage checker is checking coverage for gulp setup and test files
there's also an istanbul coverage file lying around in the top level directory

This isn't making me feel great about our linting setup either, so take a look at that too",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1086,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i011az:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Convert existing cucumber tests to typescript,FABN-1396,42613,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,heatherp,heatherp,03/Oct/19 11:07 PM,05/May/20 6:52 PM,28/Oct/23 3:25 AM,05/May/20 6:52 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,,,heatherp,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1399,FABN-1394,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i011ff:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),heatherp,nkl199,,,,,,,,,dev,main,,,,,,,,,true,"16/Oct/19 7:28 PM;nkl199;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33986];;;","18/Feb/20 2:23 AM;heatherp;So I've removed some unused chaincode contracts no longer being called by javascript scenario tests, referencing this issue, in a PR today.
Just added the javascript scenario tests to the overall coverage reporting for the typescript ones and they mostly add extra coverage in fabric-ca-client and fabric-common:

-----------------------------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------------------
File | % Stmts | % Branch | % Funcs | % Lines | 
-----------------------------------|---------|----------|---------|---------|------------------------------------------------------------------------------------------------------------------------------------
All files | 64.13 | 40.89 | 58.33 | 64.12 | 


Master, as of today (2.0.0-beta3):
-----------------------------------|---------|----------|---------|---------|-----------------------
File | % Stmts | % Branch | % Funcs | % Lines | 
-----------------------------------|---------|----------|---------|---------|-----------------------
All files | 63.09 | 39.84 | 57.6 | 63.08 |;;;","05/May/20 6:51 PM;heatherp;Done, here: https://github.com/hyperledger/fabric-sdk-node/pull/212;;;",,,,,,,,,,,,,,
Modify test framework to use cli to bootstrap network,FABN-1397,42614,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,nkl199,heatherp,heatherp,03/Oct/19 11:13 PM,15/Oct/19 5:52 PM,28/Oct/23 3:25 AM,15/Oct/19 5:52 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"The SDK is no longer going to support the creation and joining of channels. This has implications on the tests that require channels to be created!

This Task is to introduce the cli into the fabric network so that it may be used for administrative tasks.",,heatherp,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i011fn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),heatherp,nkl199,,,,,,,,,dev,main,,,,,,,,,true,"11/Oct/19 9:20 PM;nkl199;[https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33941];;;",,,,,,,,,,,,,,,,
Remove channel create/join integration tests,FABN-1398,42615,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,heatherp,heatherp,03/Oct/19 11:16 PM,04/Nov/19 10:49 PM,28/Oct/23 3:25 AM,04/Nov/19 10:49 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,This is a cucumber rework,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i011fv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,"04/Nov/19 10:49 PM;heatherp;I think we'll get this for free when we remove fabric-client, as all the tests will need refactoring, so closing this for now;;;",,,,,,,,,,,,,,,,
Move e2e tape integration tests to cucumber / delete pointless FV ones,FABN-1399,42616,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,heatherp,heatherp,03/Oct/19 11:19 PM,04/Oct/19 12:09 AM,28/Oct/23 3:25 AM,04/Oct/19 12:08 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"From [~nkl199]:


 
This email is mainly to provide my summary of current tape integration test conversion, based on comparing the contents of `/test/integration` with `test/scenario` as well as surface these thoughts:
 * cucumber tests could/should be written in typescript
 * there is a large number of ""should be cucumber"" in the tape integration test
 * there are some tests that should just be deleted in the tape integration test
 * as much as it pains me, we should retain/convert some true FV tests and run them in our own build only
 
*Convert Existing e2e scenario buckets*
A) integration/e2e
 - contains chaincode install failure path
 - contains chaincode upgrade scenario
 - contains private data queries
 
B) integration/javachaincode
 - contains install/instantiate/invoke/query/upgrade of java chaincode
 
C) integration/nodechaincode
 - contains install/instantiate/invoke/query/upgrade of node chaincode
 
D) integration/network-e2e
 - contains typescript use of network model
 
Suggestions:
 - We don't care what chaincode is used to ""flex"" the majority of node-sdk features, and we should be agnostic of what chaincode is used. The chaincode tests should test chaincode features. I suggest we use Node chaincode as the ""main driver"" but we still want to ensure that the SDK can package/deploy any flavour of chaincode. The rest is not our concern.
 
Required Modifications to cucumber suite:
 # Convert cucumber suite to use typescript - can then delete item D `integration/network-e2e`
 # Add node chaincode upgrade scenario and private data query - can then delete items A and C (as well as `integration/e2e.js` that acts as a test bucket)
 # Add a package/install/instantiate/upgrade path for java and goLang chaincode - delete item B
 
Completion of the above will put us in good stead for dramatically reducing the tape test e2e suite, but there is more!!
 
 
*Just Delete*
- configtxlator ... why are we testing channel create/update using a non sdk tool that nobody uses?
- create-configtx-channel .... this is a channel creation test that flexes `client.extractChannelConfig` and that is done in many places
- discovery.js ... already in a scenario test
- eventutil.js ... i can't even see where this utility is used
- get-config.js 
- memory.js ... this appears to be a resource utilisation test, we can do those offline with more appropriate tools. 
- only-admin.js
 
*Convert to Scenario*
- channel-event-hub.js ... registering and receiving events is a scenario
 
 
*Discussion Points - Sceanrio, convert to Mocha FV, or delete?*
 * client.js -> Suggest FV suite as are all `client.createUser()` tests 
 * fabric-ca key/value store tests (we have local couchDB and CloudAntDB store tests ... yep, there is a cloudant DB sat there we are using!) FV suite or delete
 * fabric-ca-* ... Suggest FV Suite as these are all high level actions that interact only with the CA
 * grpc.js .... tests ability to modify grpc settings. Suggest FV suite.
 * install.js .... includes a ""cannot install same name/version chaincode"" style test. We can include as an FV suite with additional valid reject scenarios
 * instantiate.js .... include numerous fail paths for instantiate. Ideal FV test.
 * invoke.js ... includes failure scenarios based on endorsement policy violation, suggest extended scenario with gateway transaction
 * network config ... is a combination of replay tests and network config use. Sounds like this needs to be split out into scenario and FV tests
 * orderer-channel-tests.js ... 3 error cases for orderer (no orderer in config, no data sent to orderer, incorrect orderer URL) FV test 
 * query.js ... lots of query channel actions ... FV suite
 * signTransactionOffline.js ... is this something we want to retain?
 * upgrade.js ... failure scenarios, either move to scenario or a FV suite
 
*Thoughts*
 * Whilst we want to extend the scenario tests, we also want to keep them running as fast as possible.... this generally means only including golden path tests, and detailed testing of the component (along with failure paths) is retained in the FV test bucket. Ideally this FV bucket should be mocha based as the tape suite is not fit for purpose.
 * We should nominate the scenario tests as the tests to be run by the fabric merge build",,heatherp,,,,,,,,,,,,,,,,,FABN-1396,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i011g3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Integration Test,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clean up cryptoSuite key signing.,FABN-1400,42746,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,14/Oct/19 11:02 PM,13/Jan/21 12:26 AM,28/Oct/23 3:25 AM,13/Jan/21 12:26 AM,,,,,,,,,,0,external,sdk-triaged,,,,,,Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0125f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Hengming-Zhang,lesleyannj,,,,,,,,,,,,,,,,,,,,"07/Dec/20 11:40 PM;lesleyannj;[~Hengming-Zhang] is there any progress to update in this ticket?  If there is no update it will be withdrawed in the new year.;;;","13/Jan/21 12:26 AM;lesleyannj;Backlog Review - Closing due to inactivity.  Can be re-opened if work starts again.;;;",,,,,,,,,,,,,,,
Channel peer names returns addresses,FABN-1401,42757,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,Jakeeyturner,Jakeeyturner,15/Oct/19 9:32 PM,24/Oct/19 11:13 PM,28/Oct/23 3:25 AM,24/Oct/19 11:13 PM,,,,,,,,,,0,,,,,,"I'm not too sure if this is a bug or an intended implementation, but when I try to get the name of each channel peer doing something like the following:
{code:java}
const peerNames: string[] = [];

const network: Network = await this.gateway.getNetwork(channelName);
const channel: Client.Channel = network.getChannel();
const channelPeers: Client.ChannelPeer[] = channel.getChannelPeers();

for (const peer of channelPeers) {
 const name: string = peer.getName();
 peerNames.push(name);
}
{code}
 The 'getName' function returns the peer address (CORE_PEER_ADDRESS possibly?) such as 'peer0.org1.example.com:17057' or if not connecting locally, the 'IP:PORT'.
  
 I'm not sure if there's something else that getName could return, such as the CORE_PEER_ID perhaps? My initial instinct is that it shouldn't be returning the full address, but instead the actual defined peer name. Not too sure if this is a problem as a result of using discovery either!",,harrisob@us.ibm.com,Jakeeyturner,TomXu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0126j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,Jakeeyturner,TomXu,,,,,,,,,,,,,,,,,,,"16/Oct/19 12:07 PM;TomXu;I also found the same issue, but not sure if anyone had already utilised this function to retrieve the address with port, even it is not reasonable.

I suggest fixing this, if we can make sure that the impact to the existing versions of Node SDK is minor.;;;","18/Oct/19 12:18 AM;TomXu;But after investigation:
 # For non-discover network, the peer.name depends on the connection profile, so then the name will be arbitrary name what user specifies.
 # For discover network, the peer.name is actually the peer endpoint, what compose of host and port, respond by the discover service of the network, returned by target peer. This is also reasonable, this make the name to be unique.
 # The CORE_PEER_ID will only be used in for the docker vm starting, it seems won't be used to identify the peer.

So then, it seems hard to be fixed now.

Hope anyone can help review this more.;;;","24/Oct/19 11:12 PM;harrisob@us.ibm.com;NodeSDK Discovery has no visibility to the Docker file, it only knows what the fabric peer's discovery service provides, which is just the endpoint address. There are no names provided.;;;","24/Oct/19 11:13 PM;harrisob@us.ibm.com;Working with all the information available;;;",,,,,,,,,,,,,
Missing required option 'file' when require'ing the Node.js SDK,FABN-1402,42759,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,sstone1,sstone1,15/Oct/19 11:20 PM,23/Oct/19 12:12 AM,28/Oct/23 3:25 AM,23/Oct/19 12:12 AM,,,,,,,,,,0,,,,,,"Error: Missing required option `file`
    at new exports.File (/Users/sstone1/git/blockchain-vscode-extension/node_modules/nconf/lib/nconf/stores/file.js:26:11)
    at exports.Provider.Provider.create (/Users/sstone1/git/blockchain-vscode-extension/node_modules/nconf/lib/nconf/provider.js:162:10)
    at exports.Provider.Provider.add (/Users/sstone1/git/blockchain-vscode-extension/node_modules/nconf/lib/nconf/provider.js:133:28)
    at exports.Provider.Provider.file (/Users/sstone1/git/blockchain-vscode-extension/node_modules/nconf/lib/nconf/provider.js:63:15)
    at Config.reorderFileStores (/Users/sstone1/git/blockchain-vscode-extension/node_modules/fabric-network/node_modules/fabric-client/lib/Config.js:71:17)
    at Object.<anonymous> (/Users/sstone1/git/blockchain-vscode-extension/node_modules/fabric-network/node_modules/fabric-client/lib/Client.js:39:8)
    at Object.<anonymous> (/Users/sstone1/git/blockchain-vscode-extension/node_modules/fabric-network/node_modules/fabric-client/lib/Client.js:1938:3)

Under debugging, it appears that the _fileStores array in the Config class has an extra property called ""choose"", that ""for (const ... in ...)"" picks up. I assume this is being added by a dodgy polyfill somewhere.

The problem can be resolved by using ""for (const ... of ...)"" instead, which also makes for better code.",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0126z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,,dev,main,,,,,,,,,true,"15/Oct/19 11:25 PM;sstone1;https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33974
https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33975;;;",,,,,,,,,,,,,,,,
Service discovery does not format the intermediate certs correctly,FABN-1403,42766,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,esaygi,esaygi,16/Oct/19 10:38 AM,15/Jan/20 10:43 PM,28/Oct/23 3:25 AM,03/Dec/19 5:10 PM,,,,,,v1.4.5,v2.0.0,,,0,sdk-triaged,,,,,"If one of the organization in network has multiple intermediate CA certs, service discovery
_discover method returns the result in an incorrect format, resulting TLS handshake errors.
RETURNS

-----END CERTIFICATE----------BEGIN CERTIFICATE-----

EXPECTED

-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----",,esaygi,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"16/Oct/19 10:31 AM;esaygi;Screenshot 2019-10-16 at 9.28.22 AM.png;https://jira.hyperledger.org/secure/attachment/17881/Screenshot+2019-10-16+at+9.28.22+AM.png",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0128j:",,,,Unset,Unset,,,,,,,,,,,"- Launch the network with an organization having multiple TLS intermediate CA certs.
- Use service discovery to initialize the channel
- Send Transaction
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),esaygi,heatherp,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-merge-end-2-end job: install chaincode fail intermittently in run-test:ts-cucumber,FABN-1404,42780,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Works as Expected,heatherp,vijaypunugubati,vijaypunugubati,17/Oct/19 9:15 AM,24/Oct/19 9:31 AM,28/Oct/23 3:25 AM,24/Oct/19 9:31 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-blocker,sdk-triaged,,,,"fabric-merge-end-2-end job: install chaincode failed in run-test:ts-cucumber with error to install chaincode using deprecated API Error.

*Branch:* Master

*Platform:* x86_64

*Error Snippet:*
{code:java}
/00:45:14.860 Using deprecated API to install chaincode with ID fabcar@2.0.0 on organization Org2 peers [peer0.org2.example.com] ...
00:45:44.923 Failed to install chaincode using deprecated API Error: Failed to send install Proposal or receive valid response when using deprecated API: [{""message"":""error in simulation: failed to execute transaction 2d70b824dae0c1d99c4c133a3c0a498457dc78250c1a7b2eca622496fa00a5a0: error sending: timeout expired while executing transaction"",""stack"":""Error: error in simulation: failed to execute transaction 2d70b824dae0c1d99c4c133a3c0a498457dc78250c1a7b2eca622496fa00a5a0: error sending: timeout expired while executing transaction\n    at self._endorserClient.processProposal (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/fabric-client/lib/Peer.js:137:36)\n    at Object.onReceiveStatus (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:1207:9)\n    at InterceptingListener._callNext (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:568:42)\n    at InterceptingListener.onReceiveStatus (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:618:8)\n    at callback (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:845:24)"",""status"":500,""payload"":{""type"":""Buffer"",""data"":[]},""peer"":{""url"":""grpcs://localhost:8051"",""name"":""localhost:8051"",""options"":{""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.keepalive_time_ms"":120000,""grpc.http2.min_time_between_pings_ms"":120000,""grpc.keepalive_timeout_ms"":20000,""grpc.http2.max_pings_without_data"":0,""grpc.keepalive_permit_without_calls"":1,""clientCert"":""-----BEGIN CERTIFICATE-----\nMIICIzCCAcmgAwIBAgIUV104kLSBW9wwTyLpdbxj6oe3lb8wCgYIKoZIzj0EAwIw\nczELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHDAaBgNVBAMT\nE2NhLm9yZzIuZXhhbXBsZS5jb20wHhcNMTkxMDE2MTYwMzAwWhcNMjAxMDE1MTYw\nODAwWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZI\nzj0CAQYIKoZIzj0DAQcDQgAEVjyvcZRknvco+tsIFQU0wEWs73afrJ1NOQiqVqs3\ntYZ4EGjvipya/Rytv/3F1UX+NxiF7rl13f1z3kPi/uQevKOBjDCBiTAOBgNVHQ8B\nAf8EBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB\n/wQCMAAwHQYDVR0OBBYEFH9ZRVOSnLDAywawntb2uOJFmIPuMCsGA1UdIwQkMCKA\nIC0MzA3rtmWHYjt1FexLTzlmTKVvH6cCD3xFbfeUx3zdMAoGCCqGSM49BAMCA0gA\nMEUCIQCFOXvj485YZQkrZYXkL4HmIA07XVYVN3Hd0ixnfIHEcAIgNMsXWcCRBx3E\n12+WDcVaqxTD6OM2Nc4GHJs6YqcvbA0=\n-----END CERTIFICATE-----\n"",""grpc.ssl_target_name_override"":""peer0.org2.example.com"",""grpc.default_authority"":""peer0.org2.example.com""}},""isProposalResponse"":true}]
00:45:44.923     at Object.<anonymous> (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/ts-scenario/steps/lib/deprecatedSDK.ts:112:10)
00:45:44.923     at step (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/ts-scenario/steps/lib/deprecatedSDK.ts:35:23)
00:45:44.923     at Object.next (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/ts-scenario/steps/lib/deprecatedSDK.ts:16:53)
00:45:44.923     at fulfilled (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/ts-scenario/steps/lib/deprecatedSDK.ts:7:58)
00:45:44.923     at process._tickCallback (internal/process/next_tick.js:68:7)
00:45:44.932 Disconnecting from all gateways ...
00:45:44.942 TypeError: this.stream.clearLine is not a function
00:45:44.942     at ProgressBar.interrupt (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/progress/lib/node-progress.js:210:15)
00:45:44.972 npm ERR! code ELIFECYCLE
00:45:44.972 npm ERR! errno 1
00:45:44.976 npm ERR! fabric-sdk-node@2.0.0-snapshot test:ts-cucumber: `cucumber-js ./test/ts-scenario/features/*.feature --require './test/ts-scenario/steps/**/*.ts' --require './test/ts-scenario/support/**/*.ts' --require-module ts-node/register --format progress-bar`
00:45:44.976 npm ERR! Exit status 1
00:45:44.976 npm ERR! 
00:45:44.976 npm ERR! Failed at the fabric-sdk-node@2.0.0-snapshot test:ts-cucumber script.
00:45:44.976 npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
00:45:45.030 
00:45:45.030 npm ERR! A complete log of this run can be found in:
00:45:45.030 npm ERR!     /home/jenkins/.npm/_logs/2019-10-16T16_08_08_365Z-debug.log
00:45:45.045 [16:08:08] 'run-test:ts-cucumber' errored after 2.73 min
00:45:45.046 [16:08:08] [31mError[39m in plugin ""[36mgulp-shell[39m""
00:45:45.046 Message:
00:45:45.046     Command `export HFC_LOGGING='{""debug"":""/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/debugc.log""}'; npm run test:ts-cucumber` failed with exit code 1
00:45:45.047 [16:08:08] 'run-test-merge' errored after 11 min
00:45:45.048 [16:08:08] [31mError[39m in plugin ""[36mrun-sequence(run-test:ts-cucumber)[39m""
00:45:45.048 Error
00:45:45.048     at finish (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/run-sequence/index.js:82:12)
00:45:45.048     at Gulp.onError (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/run-sequence/index.js:93:3)
00:45:45.048     at Gulp.emit (events.js:194:15)
00:45:45.048     at Gulp.Orchestrator._emitTaskDone (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/index.js:264:8)
00:45:45.048     at /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/index.js:275:23
00:45:45.048     at finish (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/lib/runTask.js:21:8)
00:45:45.048     at cb (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/orchestrator/lib/runTask.js:29:3)
00:45:45.048     at /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/node_modules/async/dist/async.js:473:16
00:45:45.048     at iterateeCallback (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/node_modules/async/dist/async.js:988:17)
00:45:45.048     at /w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/node_modules/async/dist/async.js:969:16
00:45:45.048     at ChildProcess.child.on (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/gulp-shell/index.js:72:7)
00:45:45.048     at ChildProcess.emit (events.js:189:13)
00:45:45.048     at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)/ code placeholder
{code}
*Build Logs:* [https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6561/console]

 *Debug logs:*

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-end-2-end-x86_64/6561/artifact/gopath/src/github.com/hyperledger/fabric-sdk-node/]",,harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012b7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,"18/Oct/19 10:29 PM;vijaypunugubati;[~harrisob@us.ibm.com] When i run the cucumber test locally, i ended up with this error 
{code:java}
/ ✔ Given I have deployed a tls Fabric network # test/scenario/features/steps/docker_steps.js:13
   ✖ And I have created and joined all channels from the tls common connection profile # test/scenario/features/steps/admin_steps.js:118
       Error: Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]
           at ClientRequest.request.on (/Users/admin/go/src/github.com/hyperledger/fabric-sdk-node/fabric-ca-client/lib/FabricCAClient.js:484:12)
           at ClientRequest.emit (events.js:189:13)
           at TLSSocket.socketErrorListener (_http_client.js:392:9)
           at TLSSocket.emit (events.js:189:13)
           at emitErrorNT (internal/streams/destroy.js:82:8)
           at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
           at process._tickCallback (internal/process/next_tick.js:63:19)/ code placeholder
{code};;;","21/Oct/19 7:24 PM;heatherp;Hi Vijay, we believe that an increase in timeouts added here: [https://gerrit.hyperledger.org/r/c/fabric-sdk-node/+/33989] should have solved this, can you confirm whether you're still seeing it?;;;",,,,,,,,,,,,,,,
Remove the use of peer roles within CCP and runtime,FABN-1405,42784,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Oct/19 8:10 PM,11/Feb/20 2:19 AM,28/Oct/23 3:25 AM,11/Feb/20 2:19 AM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"The common connection profile defines roles for peers that are assigned to channels.

mychannel: {
   peers: {
      'peer1' : {
           endorsingPeer: true,
           chaincodeQuery: true,
           ledgerQuery: true,
           eventSource: true,
           discover: true
       }
   }
 }

In practice all peers have all roles and should be available for all roles to be load balanced. When using discovery peers will again have all roles as there is no ccp definition for the peer.

Removing peer roles will also provide a consistent definitions of the endpoints within the channel, both orderers and peers will use the name of the endpoint in an array.

mychannel: {
     peers: [ peer1, peeer2, ...],
     orderers: [ orderer1, orderer2, ...]
}
    
   ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1240,,,No,,Unset,No,,,"1|i012c3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong Name When Adding New Peer,FABN-1406,42911,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Won't Do,,arman19940326,arman19940326,21/Oct/19 11:44 PM,24/Oct/19 11:08 PM,28/Oct/23 3:25 AM,24/Oct/19 11:08 PM,v1.4.3,,,,,,,,,0,,,,,,"With the help of Node SDK, I added a new peer (peer2-org1-example-com) to an existing Fabric network with two peers (peer0-org1-example-com and peer1-org1-example-com). I used *newPeer(url, opts)* method from Client class to give peer's parameters like name and certificate.

I gave the name peer2-org1-example-com to the new peer but when I inspected my app in chrome, I noticed that this new peer's name is peer2-org1-example-com:7051 as it can be seen in the attached image.

Is this normal/OK? Or did I forget to set a parameter and it reset to its default? 

!Screenshot from 2019-10-21 18-02-24.png!",,arman19940326,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"21/Oct/19 11:44 PM;arman19940326;Screenshot from 2019-10-21 18-02-24.png;https://jira.hyperledger.org/secure/attachment/17900/Screenshot+from+2019-10-21+18-02-24.png",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012jf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),arman19940326,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"22/Oct/19 1:27 AM;arman19940326;I just read ""How to use the service discovery"" tutorial [[https://fabric-sdk-node.github.io/tutorial-discovery.html]]  and under the ""Using connection profile"" section found this: 

*_The name of a peer will be the host name and port for peers added by the service discovery._*

So apparently using service discovery overwrites peer's actual name?;;;","24/Oct/19 11:08 PM;harrisob@us.ibm.com;The name will not be over written, there will be a new peer added to the channel with the name. ;;;","24/Oct/19 11:08 PM;harrisob@us.ibm.com;This is working as designed;;;",,,,,,,,,,,,,,
Fabric-client typescript defs wrong,FABN-1407,42917,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sstone1,caroline-church,caroline-church,22/Oct/19 12:48 AM,02/Dec/19 5:26 PM,28/Oct/23 3:25 AM,02/Dec/19 5:26 PM,v1.4.3,,,,,,,,,0,sdk-triaged,,,,,"The typescript def for a chaincodeInstantiateUpgradeRequest look like

```
    export interface ChaincodeInstantiateUpgradeRequest {
        targets?: Peer[] | string[];
        chaincodeType?: ChaincodeType;
        chaincodeId: string;
        chaincodeVersion: string;
        txId: TransactionId;
        'collections-config'?: string;
        transientMap?: TransientMap;
        fcn?: string;
        args?: string[];
        'endorsement-policy'?: any;
    }
```

 

however the code lets you pass in the actual collections config rather than just the path. Can the typescript defs be updated please?",,caroline-church,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012kr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,sstone1,,,,,,,,,dev,main,,,,,,,,,true,"29/Nov/19 11:23 PM;sstone1;https://github.com/hyperledger/fabric-sdk-node/pull/38;;;",,,,,,,,,,,,,,,,
fabric-merge-end-2-end job:smart contract install fail consistent in 10 of the EVENTS FEATURE Scenario in run-test:ts-cucumber,FABN-1408,42971,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,vijaypunugubati,vijaypunugubati,24/Oct/19 9:38 AM,12/Nov/19 4:42 AM,28/Oct/23 3:25 AM,12/Nov/19 4:42 AM,v2.0.0,,,,,v2.0.0,,,,0,ci-failure,node-SDK,sdk-triaged,,,"fabric-merge-end-2-end job:smart contract install fail in 10 of the EVENTS FEATURE Scenario in un-test:ts-cucumber

*Branch:* Master

*Platform:* x86_64

*Error Snippet:*

observed a same error in all 10 of the EVENTS FEATURE Scenarios in the ts-cucumber test.
{code:java}
/00:42:59.778 Attempting to install smart contract events@1.0.0 for organization org1 using the CLI
00:42:59.778 SCENARIO CMD: docker exec org1_cli peer chaincode install -l node -n events -v 1.0.0 -p /opt/gopath/src/github.com/chaincode/node/events
00:44:50.153 Failed to install smart contract events using the CLI { code: 1,
00:44:50.153   stderr:
00:44:50.154    '2019-10-22 14:56:58.242 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc\n2019-10-22 14:56:58.242 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc\nError: error endorsing chaincode install: rpc error: code = Unavailable desc = transport is closing\n',
00:44:50.154   stdout: '' }/ code placeholder
{code}
*Build Logs:* [https://jenkins.hyperledger.org/view/Merge/job/fabric-merge-end-2-end-x86_64/6595/artifact/gopath/src/github.com/hyperledger/fabric-sdk-node/test/temp/]",,harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012uz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,"24/Oct/19 11:21 PM;heatherp;Hey [~vijaypunugubati] - that looks like a CLI issue, not directly related to node-sdk, are you seeing this elsewhere?

It's not something we see in node-sdk builds from today;;;","24/Oct/19 11:25 PM;vijaypunugubati;This failure is observed in this job only, and it's consistent. ;;;",,,,,,,,,,,,,,,
"Invokes fail when using service discovery layout, old lifecycle",FABN-1409,42987,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Test Error,,dongming,dongming,25/Oct/19 4:10 AM,30/Oct/19 5:31 AM,28/Oct/23 3:25 AM,30/Oct/19 5:31 AM,,,,,,,,,,0,sdk-triaged,,,,,"PTE invoke proposals fail when using service discovery, with the following images

fabric: f75da78633022d0d63cc01c1df6a1a3d8d061082

fabric-ca:  4cd4192f0366570aa4bed9374b17f98fc0d6015f

sdk-node npm packages: 

├─┬ *fabric*-ca-client@2.0.0-snapshot.296

│ ├─┬ *fabric*-common@2.0.0-snapshot.289

└─┬ *fabric*-client@2.0.0-snapshot.293

  ├── *fabric*-ca-client@2.0.0-snapshot.296 deduped

  ├── *fabric*-common@2.0.0-snapshot.289 deduped

  ├─┬ *fabric*-protos@2.0.0-snapshot.147

 

The logs show grpc 'Failed to connect before the deadline'.  The relevant debug logs are below:  The detailed log is attached, including when the service discovery layout is acquired from the peer. We see two problems:
 # Why doesn't the layout return two options? Our test network has two peers, and either one could do the endorsement, but the layout returned contains only one peer in one layout.
 # Why does the SDK fail to connect to the peer? _Note that the test fails the same way if we wait several minutes and try again to send invokes using serv discov._

_Note that, PTE sends invokes to the same peer0.org1 successfully if not using service discovery.  The network is configured with mutual TLS enabled._

 

 

info: [2019-10-24T19:00:35.642Z PTE 0 main]: stderr: 2019-10-24T19:00:35.642Z - debug: [Remote.js]: getUrl::grpcs://peer0.org1.example.com:7061

 

info: [2019-10-24T19:00:35.643Z PTE 0 main]: stderr: 2019-10-24T19:00:35.642Z - debug: [Peer.js]: sendProposal - Start ----peer0.org1.example.com:7061 grpcs://peer0.org1.example.com:7061

 

info: [2019-10-24T19:00:38.644Z PTE 0 main]: stderr: 2019-10-24T19:00:38.642Z - debug: [Remote.js]: getUrl::grpcs://peer0.org1.example.com:7061

2019-10-24T19:00:38.642Z - error: [Remote.js]: Error: Failed to connect before the deadline URL:grpcs://peer0.org1.example.com:7061 timeout:3000

2019-10-24T19:00:38.643Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G1:0 - not able to get a completed endorsement

2019-10-24T19:00:38.643Z - debug: [DiscoveryEndorsementHandler]: _execute_endorsements - endorsement failed: Error: Failed to connect before the deadline URL:grpcs://peer0.org1.example.com:7061 timeout:3000

2019-10-24T19:00:38.643Z - debug: [DiscoveryEndorsementHandler]: _endorse - layout plan 0 did not complete successfully, try another layout plan

2019-10-24T19:00:38.643Z - error: [DiscoveryEndorsementHandler]: _endorse - endorsement failed::Error: Endorsement has failed

    at DiscoveryEndorsementHandler._endorse (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:185:19)

    at <anonymous>

    at process._tickCallback (internal/process/next_tick.js:188:7)

error: [2019-10-24T19:00:38.643Z PTE 0 exec]: [Nid:chan:org:id=0:testorgschannel1:org1:0 invoke_move_dist_evtBlock] Failed to send transaction proposal due to error:  Error: Endorsement has failed

    at DiscoveryEndorsementHandler._endorse (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/tools/PTE/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:185:19)

    at <anonymous>

    at process._tickCallback (internal/process/next_tick.js:188:7)

 

info: [2019-10-24T19:00:38.646Z PTE 0 main]: stderr: (node:27691) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: Cannot read property 'getName' of undefined

(node:27691) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

 ",,dongming,scottz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-16965,,,,,"25/Oct/19 4:57 AM;dongming;serv-disc.log;https://jira.hyperledger.org/secure/attachment/17906/serv-disc.log",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012xn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),dongming,scottz,,,,,,,,,,,,,,,,,,,,"30/Oct/19 5:31 AM;dongming;This is PTE issue and will be fixed in FAB-16965;;;",,,,,,,,,,,,,,,,
GatewayOptions.identity is used as a wallet label.,FABN-1410,42991,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,Adryx86,Adryx86,25/Oct/19 5:00 PM,12/Nov/19 11:09 PM,28/Oct/23 3:25 AM,30/Oct/19 12:45 AM,v1.4.4,,,,,,,,,0,client,wallet,,,,"Here the scenario:
 * Wallet type: FileSystemWallet
 * Enroll an identity importing it in the wallet using a label (eg: identity = admin, label = XYZ)

The Gateway.connect requires to specify a GatewayOptions with identity and wallet option.
The identity value seems to be 'admin'  and trying it the connect method created a new empty  folder called 'admin' in the wallet path and i got an error like 'admin is not enrolled'.

I went deeper in the source code i found in basewallet.js that the identity will be used as a label accessing to the wallet.
So i replaced the identity value from 'admin' with 'XYZ' and now it works. 

Maybe looking at the source code it's better to introduce a new option in the GatewayOptions to specify the label and distinguish this from the identity, with a default value as the identity wich remains mandatory.





 ",,Adryx86,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012yb:",,,,Unset,Unset,,,,,,,,,,,"Use FileSystemWallet
Enroll an identity
Import enrolled identity in wallet using as a label something different from the identity name
Start a gateway connection specifying the identity as the identity  name (don't works)
Start a gateway connection specifying the identity as the label value (this works)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),Adryx86,heatherp,,,,,,,,,,,,,,,,,,,,"30/Oct/19 12:45 AM;heatherp;Hi [~Adryx86], I'm working through the backlog with the maintainers, and we're happy with the design of this, for users to need to specify the label they've created for the identity when connecting to the gateway. 
Please re-open if you feel that our documentation could better describe this issue;;;","05/Nov/19 5:00 PM;Adryx86;Hi [~heatherp], thanks for reply. I think calling it identity is confusing.. maybe the problem is the ""label"" which could be converted to something like ""identity alias"".. 
I think this way when a developer found an identity attribute can understand without looking at documentation (or source code) he should use the alias if needed.
What do you think about that ? If you agree with me i'll re-open the ticket.;;;","12/Nov/19 11:09 PM;heatherp;Hi [~Adryx86] I'm afraid we're happy with identity.label. Thank you for taking the time to discuss this with this us. If you feel strongly about it, we will soon be accepting pull requests/contributions in github!;;;",,,,,,,,,,,,,,
Remove unnecessary util.promisify in newer nano version.,FABN-1411,43008,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,Hengming-Zhang,Hengming-Zhang,Hengming-Zhang,26/Oct/19 8:08 PM,19/Jun/20 8:07 PM,28/Oct/23 3:25 AM,19/Jun/20 8:07 PM,,,,,,,,,,0,external,sdk-triaged,,,,,,bestbeforetoday,Hengming-Zhang,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0130j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,Hengming-Zhang,,,,,,,,,,,,,,,,,,,,"19/Jun/20 8:07 PM;bestbeforetoday;Note that util.promisify() is not used in v2.x so this is only applicable to the v1.4 codebase. I am not sure it is worth making this kind of minor code clean-up change in a back-level codebase. If you are actively working on this change, go ahead and reopen.;;;",,,,,,,,,,,,,,,,
DiscoverService connecting orderer to an endpoint after adding it to channel,FABN-1413,43187,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,07/Nov/19 5:10 AM,12/Nov/19 10:44 PM,28/Oct/23 3:25 AM,12/Nov/19 10:41 PM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,The addCommitter and addEndorser channel methods now check that the SeviceEndpoints are connected. This makes the endpoints usable by the discovery handlers later.,,Flyyellow,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i013yb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Flyyellow,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"Improve typescript cucumber steps and explain ""legacy"" in the readMe",FABN-1414,43228,,Test Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,,heatherp,heatherp,08/Nov/19 6:49 PM,16/Jun/20 6:41 PM,28/Oct/23 3:25 AM,16/Jun/20 6:41 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"Some of the when when when when when typescript cucumber steps could be improved, separated out into when and then's. Also consider separating out some of the when then when then when then scenarios into individual ones in the same feature file. 
Finally - explain what ""legacy"" means in the readMe",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1390,,,No,,Unset,No,,,"1|i01463:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update ApplicationPolicy references,FABN-1415,43238,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,harrisob@us.ibm.com,caod,caod,09/Nov/19 12:49 AM,22/Nov/19 1:40 AM,28/Oct/23 3:25 AM,22/Nov/19 1:40 AM,,,,,,,,,,0,sdk-triaged,,,,,"As part of FAB-15066, the proto for {{peer.ApplicationPolicy}} will move from {{peer}} package to {{common}} to prevent future import cycles. The peer type has been left alone but marked as deprecated and new/existing references will need to use the new {{common.ApplicationPolicy}} type.

 

[https://github.com/hyperledger/fabric-protos/pull/15]",,caod,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01483:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"12/Nov/19 10:43 PM;harrisob@us.ibm.com;this is just a little bit of work in the fabric-proto to change the source of the proto file used for policies;;;","22/Nov/19 1:40 AM;caod;Withdrawing this since we'll be updating the protos by instead moving {{common/collection.proto}} to {{peer/collection.proto}} rather than moving ApplicationPolicy from peer to common. Opening up FABN-1420 instead and closing this. See FAB-17120 and associated fabric-protos PR [https://github.com/hyperledger/fabric-protos/pull/17|https://github.com/hyperledger/fabric-protos/pull/17/files];;;",,,,,,,,,,,,,,,
NodeSDK create fabric-admin,FABN-1416,43274,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Nov/19 1:00 AM,13/Jan/21 12:27 AM,28/Oct/23 3:25 AM,13/Jan/21 12:27 AM,v2.0.0,,,,,,,,,4,community-help-wanted,sdk-triaged,,,,"Create a new NPM package to handle the administrative functions on a fabric network.
Primarily focused on Chaincode lifecycle both old and new and the queries to support knowing what the state of the chaincode on the network. The secondary focus will be on querying the channel for config and blocks information.",,harrisob@us.ibm.com,krabradosty,lesleyannj,nao,nekia,Pritam 12,siddjain,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1443,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014ej:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,krabradosty,lesleyannj,nao,nekia,Pritam 12,siddjain,,,,,,,,,,,,,,,"14/Aug/20 3:10 PM;krabradosty;Any update on this task? I think administrator functionality should be implemented in SDK like in 1.4. Because CLI is not suitable for large solutions when channels and chaincodes management need to be automated or simplified for specific use cases.;;;","18/Aug/20 3:51 PM;nekia;FYI I've seen a proposal in fabric contributor meeting before. I'm not sure the current status.

[https://wiki.hyperledger.org/display/fabric/Contributor+Meetings+2020]  20200805_contributors_meeting.mp4

 ;;;","13/Jan/21 12:27 AM;lesleyannj;Backlog Review - Closing - no longer doing admin.;;;",,,,,,,,,,,,,,
Sub-optimal default event handler ,FABN-1417,43292,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,nkl199,nkl199,12/Nov/19 11:09 PM,13/Nov/19 1:55 AM,28/Oct/23 3:25 AM,13/Nov/19 1:55 AM,,,,,,,,,,0,,,,,,"The current default event handler, used by the gateway, whilst fully functional is sub-optimal with regards to performance.

 

A user of the SDK should not have to replace it with their own handler in order to get better client side performance, but have one provided for them as a standard option.

This was introduced into v1.4.1 as part of the events work",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014hn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-merge-end-2-end job: integration/fabric-ca-services-tests fail with missing Authority Key Identifier in Parsed certificate to revoke,FABN-1418,43308,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,vijaypunugubati,vijaypunugubati,14/Nov/19 1:22 AM,22/Nov/19 1:24 AM,28/Oct/23 3:25 AM,22/Nov/19 1:24 AM,v1.4.4,,,,,v1.4.4,,,,0,ci-blocker,node-SDK,,,,"fabric-merge-end-2-end job: integration/fabric-ca-services-tests fail with missing Authority Key Identifier in Parsed certificate to revoke.

*Branch:* release-1.4

*Platform:* x86_64

*Error Snippet:*
{code:java}
/00:30:26.911 not ok 89 Subject should be /CN=admin[00m[00m[2m[38;5;66m
00:30:26.912   ---[00m
00:30:26.912     operator: equal
00:30:26.912     expected: 'admin'
00:30:26.912     actual:   undefined
00:30:26.912     at: caService.enroll.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:83:6)
00:30:26.912     stack: |-
00:30:26.912       Error: Subject should be /CN=admin
00:30:26.913           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:30:26.913           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:30:26.913           at Test.equal (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
00:30:26.913           at Test.bound [as equal] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:30:26.913           at caService.enroll.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:83:6)
00:30:26.913           at <anonymous>
00:30:26.913           at process._tickCallback (internal/process/next_tick.js:188:7)[00m[2m[38;5;66m
00:30:26.914   ...[00m[00m[1m[38;5;2m
00:30:26.916 ok 90 Successfully imported public key from the resulting enrollment certificate[00m[00m[1m[38;5;2m
00:30:26.916 ok/ code placeholder
{code}
{code:java}
/00:30:35.508 not ok 102 Parsed certificate does not contain Authority Key Identifier needed for revoke(): {""exports"":{""version"":2,""subject"":{""organizationalUnitName"":""department1"",""commonName"":""testUserY""},""issuer"":{""countryName"":""US"",""stateOrProvinceName"":""California"",""localityName"":""San Francisco"",""organizationName"":""org1.example.com"",""commonName"":""ca.org1.example.com""},""serial"":""47B0D619C8D97FDB2F119D23CDE6974F1FD38D50"",""notBefore"":""2019-11-13T15:56:00.000Z"",""notAfter"":""2020-11-12T16:01:00.000Z"",""subjectHash"":""af5b6f1a"",""signatureAlgorithm"":""ecdsa-with-SHA256"",""fingerPrint"":""72:11:24:B0:9A:59:45:C9:D3:D9:16:3A:73:3F:E4:09:29:02:A2:64"",""publicKey"":{""algorithm"":""id-ecPublicKey""},""altNames"":[],""extensions"":{""X509v3 Key Usage"":""Digital Signature"",""X509v3 Basic Constraints"":""CA:FALSE"",""X509v3 Subject Key Identifier"":""5A:53:04:78:C8:6B:43:38:CD:A8:21:78:18:43:82:F0:81:16:AA:DE"",""X509v3 Authority Key Identifier"":""keyid:91:6B:AF:F8:EF:1B:6B:30:18:20:0A:B3:A2:5B:9D:5F:EF:8D:E3:BC:BF:E0:92:0E:B8:A9:40:73:86:8D:B3:78"",""1.2.3.4.5.6.7.8.1"":""{\""attrs\"":{\""hf.Affiliation\"":\""org2.department1\"",\""hf.EnrollmentID\"":\""testUserY\"",\""hf.Type\"":\""client\""}}""}},""extensions"":{}}[00m[00m[2m[38;5;66m
00:30:35.508   ---[00m
00:30:35.508     operator: fail
00:30:35.508     at: caService.enroll.then.then.then.then.then.then.then.then.then.then.then.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:171:7)
00:30:35.508     stack: |-
00:30:35.509       Error: Parsed certificate does not contain Authority Key Identifier needed for revoke(): {""exports"":{""version"":2,""subject"":{""organizationalUnitName"":""department1"",""commonName"":""testUserY""},""issuer"":{""countryName"":""US"",""stateOrProvinceName"":""California"",""localityName"":""San Francisco"",""organizationName"":""org1.example.com"",""commonName"":""ca.org1.example.com""},""serial"":""47B0D619C8D97FDB2F119D23CDE6974F1FD38D50"",""notBefore"":""2019-11-13T15:56:00.000Z"",""notAfter"":""2020-11-12T16:01:00.000Z"",""subjectHash"":""af5b6f1a"",""signatureAlgorithm"":""ecdsa-with-SHA256"",""fingerPrint"":""72:11:24:B0:9A:59:45:C9:D3:D9:16:3A:73:3F:E4:09:29:02:A2:64"",""publicKey"":{""algorithm"":""id-ecPublicKey""},""altNames"":[],""extensions"":{""X509v3 Key Usage"":""Digital Signature"",""X509v3 Basic Constraints"":""CA:FALSE"",""X509v3 Subject Key Identifier"":""5A:53:04:78:C8:6B:43:38:CD:A8:21:78:18:43:82:F0:81:16:AA:DE"",""X509v3 Authority Key Identifier"":""keyid:91:6B:AF:F8:EF:1B:6B:30:18:20:0A:B3:A2:5B:9D:5F:EF:8D:E3:BC:BF:E0:92:0E:B8:A9:40:73:86:8D:B3:78"",""1.2.3.4.5.6.7.8.1"":""{\""attrs\"":{\""hf.Affiliation\"":\""org2.department1\"",\""hf.EnrollmentID\"":\""testUserY\"",\""hf.Type\"":\""client\""}}""}},""extensions"":{}}
00:30:35.509           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:30:35.509           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:30:35.509           at Test.fail (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:318:10)
00:30:35.509           at Test.bound [as fail] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:30:35.509           at caService.enroll.then.then.then.then.then.then.then.then.then.then.then.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:171:7)
00:30:35.510           at <anonymous>
00:30:35.510           at process._tickCallback (internal/process/next_tick.js:188:7)[00m[2m[38;5;66m
00:30:35.510   ...[00m[00m[1m[38;5;196m
00:30:35.510 not ok 103 TypeError: Cannot read property 'split' of undefined at caService.enroll.then.then.then.then.then.then.then.then.then.then.then.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:176:26) at <anonymous> at process._tickCallback (internal/process/next_tick.js:188:7)[00m[00m[2m[38;5;66m
00:30:35.510   ---[00m/ code placeholder
{code}
 

*Build Logs:* ",,harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014jn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,vijaypunugubati,,,,,,,,,,,,,,,,,,,"19/Nov/19 3:37 AM;vijaypunugubati;Observed the error on the recent build 
{code:java}
/00:28:12.122 #  ** FabricCAServices: Test enroll() With Dynamic CSR ** [00m[00m[1m[38;5;2m
00:28:12.124 ok 88 Successfully enrolled 'admin'.[00m[00m[1m[38;5;196m
00:28:12.125 not ok 89 Subject should be /CN=admin[00m[00m[2m[38;5;66m
00:28:12.125   ---[00m
00:28:12.125     operator: equal
00:28:12.125     expected: 'admin'
00:28:12.125     actual:   undefined
00:28:12.126     at: caService.enroll.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:83:6)
00:28:12.126     stack: |-
00:28:12.126       Error: Subject should be /CN=admin
00:28:12.126           at Test.assert [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:225:54)
00:28:12.126           at Test.bound [as _assert] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:28:12.126           at Test.equal (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:385:10)
00:28:12.130           at Test.bound [as equal] (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:77:32)
00:28:12.130           at caService.enroll.then (/w/workspace/fabric-merge-end-2-end-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:83:6)
00:28:12.130           at <anonymous>
00:28:12.131           at process._tickCallback (internal/process/next_tick.js:188:7)[00m[2m[38;5;66m
00:28:12.133   ...[00m[00m[1m[38;5;2m/ code placeholder
{code};;;","21/Nov/19 2:31 AM;heatherp;Yep we're seeing this on our PR builds in azure too, so I'm investigating;;;","21/Nov/19 11:43 PM;heatherp;I'm hoping this does the trick: https://github.com/hyperledger/fabric-sdk-node/pull/33/;;;","22/Nov/19 1:24 AM;heatherp;ok that PR has been merged so I'm confident that it's fixed the issue in the node sdk builds, can you re-open this if you see the same issue again? Thanks;;;",,,,,,,,,,,,,
[fabric-network] HSMWalletMixin typescript definition is missing constructor args,FABN-1419,43391,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,14gracel,14gracel,14gracel,20/Nov/19 11:28 PM,22/Nov/19 11:30 PM,28/Oct/23 3:25 AM,22/Nov/19 11:30 PM,v1.4.4,,,,,v1.4.5,,,,0,fabric-network,node-SDK,,,,"The js constructor definition of HSMWalletMixin is

 
{code:java}
 -- fabric-network/lib/impl/wallet/hsmwalletmixin.js:40

 
constructor(library = null, slot = null, pin = null, usertype = null)
{code}
 

where as the typescript definition is
{code:java}
-- fabric-network/types/index.d.ts:197

constructor();
{code}",,14gracel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014yz:",,,,Unset,Unset,,,,,,,,,,,"Attempt to specify library, slot, pin or userType on a HSMWalletMixin",,Unset,,,,,,Unset,,Unset,,(Please add usage information),14gracel,,,,,,,,,,,,,,,,,,,,,"21/Nov/19 12:00 AM;14gracel;https://github.com/hyperledger/fabric-sdk-node/pull/30;;;",,,,,,,,,,,,,,,,
Update collection.proto message references,FABN-1420,43416,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,caod,caod,22/Nov/19 1:33 AM,15/Jul/20 11:50 PM,28/Oct/23 3:25 AM,15/Jul/20 11:50 PM,v2.0.0,,,,,v2.0.0,,,,0,external,sdk-triaged,,,,"As part of FAB-17120 the collection.proto was moved from {{common}} to {{peer}} to prevent future import cycles. All messages in the old {{common/collection.proto}} have been marked as deprecated and the following type references will need to be updated:

{{common.CollectionConfigPackage -> peer.CollectionConfigPackage}}

{{common.CollectionConfig -> peer.CollectionConfig}}

{{common.StaticCollectionConfig -> peer.StaticCollectionConfig}}

{{common.CollectionPolicyConfig -> peer.CollectionPolicyConfig}}

 

The {{common.ApplicationPolicy}} type that was introduced in FAB-15066 has also been deprecated so will need to be reverted back to {{peer.ApplicationPolicy}} if they aren't already:

common.ApplicationPolicy -> peer.ApplicationPolicy

 

See PR for reference

[https://github.com/hyperledger/fabric-protos/pull/17|https://github.com/hyperledger/fabric-protos/pull/15]",,caod,denyeart,harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01537:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caod,denyeart,harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,"26/Nov/19 11:00 PM;heatherp;Can you follow this up please Bret? As discussed [~harrisob@us.ibm.com];;;","14/Jul/20 10:51 PM;denyeart;[~harrisob@us.ibm.com] Is this still outstanding?;;;","15/Jul/20 11:49 PM;harrisob@us.ibm.com;NodeSDK v2.0 does not use this, so yes we are good.;;;","15/Jul/20 11:50 PM;harrisob@us.ibm.com;NodeSDK does not use these protos;;;",,,,,,,,,,,,,
split context dependent offline signing functions into static ones ,FABN-1421,43425,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,davidkhala,davidkhala,davidkhala,22/Nov/19 7:16 PM,25/Jun/20 11:33 AM,28/Oct/23 3:25 AM,25/Jun/20 11:33 AM,v1.4.0,,,,,,,,,0,external,sdk-triaged,,,,"offline signing related functions are mostly available in channel object. 
But they are independent of channel object context like embedded fabric user, client. 
It forces developer to make a 'dummy' channel object with only channel name simply in order to use these functions

To make it clear, we could provide static function version of them",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"- `channel#generateUnsignedProposal` have similarity with `client-utils#buildSignedProposal`, we could 
    1. add new static function in client-utils `buildUnsignedProposal`
    2. make channel#generateUnsignedProposal refer to `client-utils#buildUnsignedProposal`
    3. client-utils#buildUnsignedProposal accept all params in channel#generateUnsignedProposal plus addtional param `channelId` and optional param `ClientCertHash` (for mutual TLS)
    4. make `client-utils#buildSignedProposal` refer to `client-utils#buildUnsignedProposal`
- add static function Channel#generateUnsignedTransaction, it cover the major content of channel.generateUnsignedTransaction
- fix channel#sendSignedTransaction {SignedCommitProposal} jsdoc error",Unset,Unset,Unset,,FABN-895,,,No,,Unset,No,,,"1|i0154z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,,,,,,,,,,,,"22/Nov/19 7:21 PM;davidkhala;- `channel#generateUnsignedProposal` have similarity with `client-utils#buildSignedProposal`, we could 
    1. add new static function in client-utils `buildUnsignedProposal`
    2. make channel#generateUnsignedProposal refer to `client-utils#buildUnsignedProposal`
    3. client-utils#buildUnsignedProposal accept all params in channel#generateUnsignedProposal plus addtional param `channelId` and optional param `ClientCertHash` (for mutual TLS)
    4. make `client-utils#buildSignedProposal` refer to `client-utils#buildUnsignedProposal`
- add static function Channel#generateUnsignedTransaction, it cover the major content of channel.generateUnsignedTransaction
- fix channel#sendSignedTransaction {SignedCommitProposal} jsdoc error
;;;",,,,,,,,,,,,,,,,
support serialize chaincodeProposal,FABN-1422,43426,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,davidkhala,davidkhala,davidkhala,22/Nov/19 9:21 PM,28/May/20 11:36 AM,28/Oct/23 3:25 AM,28/May/20 11:36 AM,v1.4.0,,,,,,,,,0,external,sdk-triaged,,,,"offline signing use case includes network communication (such as http) among node-sdk based server and client. 
Object data will be serialized before send and be deserialized after receive
Object deserialized only have data property. 

We should replace getter/setter function by directly referring data property",,davidkhala,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-895,,,No,,Unset,No,,,"1|i01557:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"03/Dec/19 11:26 PM;harrisob@us.ibm.com;The NodeJS side application should be handling this, we should not be changing the grpc objects;;;","03/Dec/19 11:32 PM;davidkhala;[~harrisob@us.ibm.com]
Indeed, it could be fixed by a work around solution. It may look like this:

exports.unsignedTransaction = (proposalResponses, proposal) => {
	const channel = emptyChannel('void');

	proposal = Object.assign({getHeader: () => proposal.header}, proposal); // TODO work around of sdk design
	/**
	 * @type {TransactionRequest}
	 */
	const request = {
		proposalResponses, proposal,

	};
	return channel.generateUnsignedTransaction(request);
};

And again, it is not related to grpc object, but the way we read property in translated JS object. ;;;","04/Dec/19 12:41 AM;davidkhala;per our conversion, we could still decode the proposal_bytes back to grpc message( on nodejs server side) as `proposal` which having auto-generated getter/setter. 
;;;","04/Dec/19 1:30 AM;harrisob@us.ibm.com;we need to show how to use the new low level with an example tutorial for off-line signing;;;",,,,,,,,,,,,,
Add v2.0 lifecycle to release-1.4,FABN-1423,43476,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,27/Nov/19 9:05 AM,03/Dec/19 7:03 PM,28/Oct/23 3:25 AM,03/Dec/19 7:03 PM,,,,,,v1.4.5,,,,0,sdk-triaged,,,,,Back port the fabric-client v2.0 lifecycle implementation to release-1.4,,harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015f7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,"03/Dec/19 7:03 PM;heatherp;We're not doing this, so closing it off;;;",,,,,,,,,,,,,,,,
Build failures in lifecycle scenario tests,FABN-1424,43487,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,28/Nov/19 1:46 AM,28/Nov/19 7:25 PM,28/Oct/23 3:25 AM,28/Nov/19 7:25 PM,v2.0.0,,,,,,,,,0,,,,,,"The *master* branch builds in Azure Pipelines pretty consistently fail with:
{noformat}
1) Scenario: Using the SDK I can run node smart contracts through their lifecycle on a two org network # test/ts-scenario/features/chaincode_lifecycle.feature:14
   ✔ Given I place a scenario start message LIFECYCLE SDK FEATURE # node_modules/stacktrace-js/stacktrace.js:90
   ✔ Given I deploy a tls Fabric network # node_modules/stacktrace-js/stacktrace.js:90
   ✔ And I use the cli to create and join the channel named lifecyclechannel on the deployed network # node_modules/stacktrace-js/stacktrace.js:90
   ✔ Given I package a node contract at version v1 named legacyNode as organizations [Org1,Org2] with initialization required # node_modules/stacktrace-js/stacktrace.js:90
   ✔ When I install a packaged contract named legacyNode as organizations [Org1,Org2] # node_modules/stacktrace-js/stacktrace.js:90
   ✔ Then I can retrieve an installed contract package named legacyNode as organizations [Org1,Org2] on channel lifecyclechannel # node_modules/stacktrace-js/stacktrace.js:90
   ✔ When I approve the installed contract named legacyNode as organizations [Org1,Org2] on channel lifecyclechannel with endorsement policy 1ofAny # node_modules/stacktrace-js/stacktrace.js:90
   ✖ Then I can query commit readiness for contract named legacyNode as organizations [Org1,Org2] on channel lifecyclechannel with expected approvals status of {""Org1MSP"":true,""Org2MSP"":true} # node_modules/stacktrace-js/stacktrace.js:90
       Error: Problem with the Query commit Error: Unexpected approval response from  Org2MSP: expected true but had false
           at Object.logAndThrow (/home/vsts/work/1/s/test/ts-scenario/steps/lib/utility/baseUtils.ts:47:9)
           at Object.<anonymous> (/home/vsts/work/1/s/test/ts-scenario/steps/lib/chaincode.ts:278:13)
           at step (/home/vsts/work/1/s/test/ts-scenario/steps/lib/chaincode.ts:35:23)
           at Object.next (/home/vsts/work/1/s/test/ts-scenario/steps/lib/chaincode.ts:16:53)
           at fulfilled (/home/vsts/work/1/s/test/ts-scenario/steps/lib/chaincode.ts:7:58)
           at process._tickCallback (internal/process/next_tick.js:68:7){noformat}",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015h7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Enable the SDK to select the Endorsing Orgs instead of Peers,FABN-1425,43347,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,ldesrosi,ldesrosi,15/Nov/19 7:03 PM,17/Jul/20 10:25 PM,28/Oct/23 3:25 AM,07/Apr/20 10:11 PM,,,,,,v2.0.0,,,,1,external,sdk-triaged,,,,"The fabric-network Transaction class has a method called *setEndorsingPeers(peers)*. This method is useful when working with private data collections or when the endorsement policies allow the client to select the organisations that should be endorsing.

The client apps are concerned with getting an endorsement from organisations. At the moment, because the method needs to receive a list of peers, it leaves it to the application to use service discovery, the connection profile or another config method to figure out which peers are required.

It would be a nice improvement if you offered a method called either: *setEndorsingOrgs* or *setEndorsingMSPs*, which dynamically determined the peer to use. It would enable the client application to work at the level of abstraction of the Organisation.",,AshishkumarLakshmanan,bestbeforetoday,denyeart,harrisob@us.ibm.com,ldesrosi,rolivieri,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1601,FABJ-526,FABG-987,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014rn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),AshishkumarLakshmanan,bestbeforetoday,denyeart,harrisob@us.ibm.com,ldesrosi,rolivieri,yacovm,,,,,,,,,,,,,,,"20/Nov/19 8:18 PM;bestbeforetoday;Right now you would achieve this result as follows (in Java and TypeScript respectively):
{code:java}
Collection<Peer> org1Peers = network.getChannel().getPeersForOrganization(""org1"");
byte[] result = contract.createTransaction(""foo"")
        .setEndorsingPeers(org1Peers)
        .submit();
{code}
{code:java}
const org1Peers = network.getChannel().getPeersForOrg('org1');
const result = await contract.createTransaction('foo')
        .setEndorsingPeers(org1Peers)
        .submit();
{code}
 

Does adding a *setEndorsingOrganization()* function to the transaction save enough work to be worth the tradeoff of increasing the API footprint?;;;","21/Nov/19 1:17 AM;ldesrosi;When running a transaction *+without+* using the *setEndorsingPeers*, if Service Discovery is enabled, the underlying API will figure out which Orgs needs to endorse and which peers have the chaincode installed.

Calling *getPeersForOrganization* for a specific organization will return every peer, whether they have the chaincode or not.  When requiring the endorsement of 2 organizations you also need to combine both lists into one. Basically, if the network is more complex, figuring out the list of peers to pass to *setEndorsingPeers* will require more work.

The value of *setEndorsingOrganization* would come from having the SDK leverage the Service Discovery to identify the appropriate peers and only send the endorsement request to the selected one.

**
In terms of implementation, it can start simply by having the *setEndorsingOrganization* send a request to all peers returned by the *getPeersForOrganization* call but it would eventually need to be able to select the right peer based on information from the service discovery. 

 

Note that the *setEndorsingOrganization* should be additive... meaning I should be able to do:
 
{code:java}
const result = await contract.createTransaction('foo')
        .setEndorsingOrganization(org1)
        .setEndorsingOrganization(org2)
        .submit();
{code}
 ;;;","21/Nov/19 1:25 AM;bestbeforetoday;I am thinking now that having a *setEndorsingOrganizations()* function would allow us (probably at some point in the future) to be smarter about how we go about obtaining endorsements, particularly when using discovery. So although for a first pass the implementation is likely to be as simple as the code I pasted above, it would avoid the need to users to dip down to the low-level API and also to pick up smarter future behaviour without any code change. So this does sound like a good addition to me.

The questions I have are:
 # What should the API look like.
 # How should *setEndorsingPeers()* and *setEndorsingOrganizations()* interact with each other?

 

For the API then perhaps something like:

 
{code:java}
public interface Transaction {
    /**
     * Set the organizations that should be used for endorsement of transactions submitted to the ledger using
     * {@link #submit(String...)}.
     * @param orgNames Endorsing organization names.
     * @return this transaction object to allow method chaining.
     */
    Transaction setEndorsingOrganizations(Collection<String> orgNames);
}{code}
 

 

This is great for variable numbers of endorsing organizations or where the endorsing organizations are already stored in a collection. The only issue with this is if the typical usage pattern will be for the client to know a specific number of endorsing organizations that are going to be existing variables, such as _buyer_ and _seller_ organizations. In which case the API above would require this client code:
{code:java}
contract.createTransaction(""trade"")
        .setEndorsingOrganizations(Arrays.asList(buyerOrg, sellerOrg))
        .submit(...);
{code}
Perhaps a more suitable API for this usage would be:
{code:java}
public interface Transaction {
    /**
     * Set the organizations that should be used for endorsement of transactions submitted to the ledger using
     * {@link #submit(String...)}.
     * @param firstOrgName First endorsing organization name.
     * @param otherOrgNames Additional endorsing organiation names.
     * @return this transaction object to allow method chaining.
     */
    Transaction setEndorsingOrganizations(String firstOrgName, String... otherOrgNames);
}
{code}
Which gives the following client code:
{code:java}
contract.createTransaction(""trade"")
        .setEndorsingOrganizations(buyerOrg, sellerOrg)
        .submit(...);
{code}
On the interaction between *setEndorsingPeers()* and *setEndorsingOrganizations()*, the simplest option is probably to treat them as mutually exclusive and for it to be an error to call both functions for a transaction invocation. If a more complex interaction is desirable, it would be good to have some use cases to drive the discussion, and this might mean re-thinking what the API should look like.;;;","03/Dec/19 11:22 PM;harrisob@us.ibm.com;So I will add the *setEndorsingOrganizations(org...)* when not using discovery will get all peers for those orgs and when using discovery will tell the low level to filter the discovered peers with the orgs. As for the interaction of the *setEndorsingPeers* and *setEndorsingOrganizations* I think the best thing to do is have the last one called win.;;;","05/Dec/19 3:02 AM;bestbeforetoday;I'm thinking that we should just remove *setEndorsingPeers* and replace it with *setEndorsingOrganizations* in v2. The implementation suggested by [~harrisob@us.ibm.com] sounds great, and is already a win over using *setEndorsingPeers* when using discovery, which should be the typical case.

The only use-case I've heard mentioned that *setEndorsingOrganizations* doesn't cover directly is where the client code wants to manage load balancing of proposal requests across peers. I'm not sure this is a particularly valid use case given that (I think) some randomization of the peers used by the discovery endorsement handler happens anyway but, even if this is something we want to address, I think some future pluggable handler (similar to QueryHandler) is a better solution to that problem than exposing *setEndorsingPeers* in the main API.;;;","08/Jan/20 6:27 AM;denyeart;[~harrisob@us.ibm.com] [~bestbeforetoday] [~yacovm] [~andrew-coleman]

The ability to have the application pick the endorsing orgs is indeed very important. For example if the app from OrgA is doing a transaction with OrgB, and the endorsement policy requires that the two members involved in the transaction endorse it (some combination of chainocde EP, state based endorsement EP, or private data collection EP), then the application will often inherently know the endorsement should be sent to OrgA and OrgB peers, without needing to consult the Service Discovery endorsement service. This is especially true in private data scenarios.

I just have one question about setEndorsingOrganizations (apologies if all this has been discussed before...). It seems there are two valid approaches when using setEndorsingOrganizations. Which approach is targeted? It seems both may actually be important...

*Approach 1 - no endorsement layout query performed*

Application specifies orgs to endorse. Utilize Service Discovery for peer membership query (org to peer mapping). SDK sends endorsement request to an available peer from each specified org. (In this scenario it is assumed that each peer has the chaincode deployed).

*Approach 2 - endorsement layout query performed*

Application specifies orgs to endorse. Utilize Service Discovery for endorsement layout queries. SDK looks at intersection of returned endorsement layouts and specified orgs. In this case the SD endorsement query takes chaincode deployment into consideration. But there is an additional hit on both peer and client side, especially if the layout combinations are large (e.g. an endorsement policy like ""any 3 orgs of 100 channel members"" would have many layouts, and if there are too many layouts, not all will be returned to client, which could result in no intersection with the specified orgs).

 

I think there will be use cases for both patterns.
 To deal with the problem of too many layout combinations, maybe the Service Discovery endorsement query should take the specified orgs as input in the future?

Note - one motivation of this question is that collection-level endorsement policies have been added in v2.0, but Service Discovery does not yet support it (FAB-17279), therefore I'm curious if Approach 1 is an option in the short term.;;;","08/Jan/20 7:02 AM;yacovm;{quote}To deal with the problem of too many layout combinations, maybe the Service Discovery endorsement query should take the specified orgs as input in the future? {quote}

 

Obviously if you have some information that would shrink the number of combinations - it's easy to add some pre-processing for it, however - this is very ad hoc and specific. What if we want to include these orgs in addition to some combination of the EP itself?

I think that if you have a simple EP such as a 3 out of 100, but at the same time you have a state based endorsement that requires you to use specific orgs - then just don't use discovery endorsement queries in the first place (use peer membership queries), since it was decided not to implement support for SBE.;;;","14/Jan/20 3:18 AM;harrisob@us.ibm.com;Going into v2 fabric-network, the high level API we will take a list of orgs and use it to filter the target peers for the submit. The SDK will partially handling both approaches listed by David.

*Approach 1*, If not using discovery: The target list of peers for endorsement will be those peers in the orgs as known  by the channel.  {color:#00875a}Retry and checking to see if the peer has the chaincode installed would need to be added. Also needing to be added is being able to use discovery to initialize the channel but not use it during the submit. {color:#172b4d}The user could use discovery to load the channel (network instance) and then get the list of peers for each org and then build a specific peer target list for the submit, thereby handling it manually.{color}{color}

{color:#de350b}{color:#172b4d}*Approach 2*, If using discovery: The layout peers used for endorsement will be in those in the orgs.{color} {color:#00875a}Since there is a chance that the client will not get all the layouts when the list gets very large, the service discovery query should include orgs to pre-filter the layouts for the client to guarantee that the layouts will contain only peers in the requested orgs. {color}{color}

 ;;;","16/Jul/20 10:14 PM;denyeart;[~harrisob@us.ibm.com]

I'm not quite understanding the last comment about Approach 1... is Service Discovery peers query still used under the covers? What exactly does the client code need to do? Is this documented in one of the SDK tutorials? I expect we'll use this pattern in the secured agreement asset transfer sample application...;;;","17/Jul/20 3:48 AM;harrisob@us.ibm.com;Approach 1 in v2.2 `fabric-network` will filter the known peers that have been configured with an organization when not using discovery (which is not the usual case) or will filter the peer group list of the endorsement layouts when using discovery.

`fabric-network` would have to be enhanced to create a network using discovery (so it discovers all the peers and mspids) and then not use discovery when submitting a transaction (currently turning network discover on also turns on endorsements with discovery). That way when the user sets the {color:#795e26}transaction.setEndorsingOrganizations([msp1, msp2]);{color} , the endorsement will be sent to a filtered list of discovered peers rather then filtering the endorsement layout group of peers based on the policies.;;;","17/Jul/20 9:07 PM;denyeart;Thanks [~harrisob@us.ibm.com] ,

The problem with the approach is the 'endorsing peers' query may return a lot of layouts, and if there are too many, may filter layouts on server side before returning the result to client. Therefore we need an option that uses SD 'peers query' and simply picks available peers based on MSPID.

I've opened FABN-1601;;;",,,,,,
Transition to pulling LAST_CONFIG from SIGNATURES metadata field,FABN-1426,43546,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,wlahti,wlahti,05/Dec/19 1:41 AM,13/Jan/21 12:09 AM,28/Oct/23 3:25 AM,13/Jan/21 12:09 AM,,,,,,v2.0.0,,,,0,external,sdk-triaged,,,,"As with FAB-15795 we are trying to consolidate the assorted block metadata fields in use by the orderer under the single 'signature field'. The last config value is stored in the new way, but, it is still being written to the old location for backwards compatibility reasons.

The SDK should now use the last config index as found in the SIGNATURES field to retrieve the most recent config block.",,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABG-923,,,,,,,,,,,,,,,,,,,,,,,FAB-15817,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015qr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,"17/Dec/19 11:48 PM;heatherp;Just discussed this one with the maintainers - they think it's something we'll get to when we do the fabric-admin package, so assigning to Bret to address when he gets to it;;;","13/Jan/21 12:09 AM;lesleyannj;Backlog Review - Closing due to no development of admin package.;;;",,,,,,,,,,,,,,,
Delete fabric-commmon on npm,FABN-1427,43547,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,ryjones,ryjones,ryjones,05/Dec/19 2:56 AM,12/Dec/19 12:32 AM,28/Oct/23 3:25 AM,12/Dec/19 12:32 AM,,,,,,,,,,0,sdk-triaged,,,,,"There is a package that is a mis-spelling of another package, both published to NPM:

Correct version:

[https://www.npmjs.com/package/fabric-common]

Incorrect:

[https://www.npmjs.com/package/fabric-commmon]

We need to either update the misspelled version (which gets about 7 downloads a week, somehow) or delete it. I'm aware of the issues around name squatting - someone is using this.",,heatherp,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015qz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,ryjones,,,,,,,,,,,,,,,,,,,,"10/Dec/19 10:40 PM;heatherp;Hey [~ryjones] - we're in agreement that this should be deleted but we don't believe we have the privileges to - do you? 
If we're not able to delete it, can it be marked as deprecated or link to fabric-common somehow?;;;","11/Dec/19 2:50 AM;ryjones;[~heatherp] I tried to deprecate or delete it, and I got an error from NPM. I have filed a Helpdesk ticket with NPM to have it deleted.;;;","11/Dec/19 5:02 AM;ryjones;[https://jira.linuxfoundation.org/servicedesk/customer/portal/2/IT-18468];;;","11/Dec/19 6:58 PM;heatherp;Thanks [~ryjones]!;;;","12/Dec/19 12:32 AM;ryjones;Sure thing! It's gone now.

 

[https://www.npmjs.com/package/fabric-commmon]

 

 ;;;",,,,,,,,,,,,
Change API doc references to point to new site,FABN-1428,43548,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,05/Dec/19 3:10 AM,24/Dec/19 8:18 PM,28/Oct/23 3:25 AM,24/Dec/19 8:18 PM,,,,,,,,,,0,sdk-triaged,,,,,"The old Jenkins CI pipeline published docs to: [http://fabric-sdk-node.github.io/]

The new Azure Pipelines CI publishes docs to: [https://hyperledger.github.io/fabric-sdk-node]

All references to the API docs need to be updated to point to the new site. This may include links in the main Fabric docs as well as any README material in the fabric-sdk-node repository.

To avoid confusion and help people migrate to the correct site, all content on the old docs site should be removed and replaced with an index.html and 404.html that point to the new site.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1386,,FGJ-67,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015r7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,mergify/bp/release-2.2/pr-4374,dev,release-2.5,release-2.4,main,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.4/pr-3646,,,true,,,,,,,,,,,,,,,,,
Wrong type definition for responses from CA service,FABN-1430,43557,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,shimos,shimos,shimos,05/Dec/19 8:18 AM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,01/Dec/20 11:43 PM,v1.4.4,v2.0.0,,,,v1.4.5,v2.0.0,,,0,external,sdk-triaged,,,,"In fabric-ca-client, the type definition for `IServiceResponse`, which is used for the responses from `AffiliationService` and `IdentityService`, is wrong.

The members in `IServiceResponse` should start with small letters, which is consistent with the actual code in fabric-ca server: https://github.com/hyperledger/fabric-ca/blob/master/lib/serverendpoint.go

A typescript to reproduce the bug:
{code:js}
    const identityService = caClient.newIdentityService();
    const response = await identityService.getOne(""user1"", adminUser);

    console.log(response);
    console.log(""response.Success ="", response.Success);
    console.log(""response.success ="", (response as any).success);
{code}

The result for the code above:
{code}
{
  result: {
    id: 'user1',
    type: 'client',
    affiliation: '',
    attrs: [ [Object], [Object], [Object] ],
    max_enrollments: -1,
    caname: 'ca-org1'
  },
  errors: [],
  messages: [],
  success: true
}
response.Success = undefined
response.success = true
{code}
",,bestbeforetoday,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,11b5a553c88192e649c2e2b1b8891fe649f3ae15,Unset,No,,,"1|i00o10:",,,,Unset,Unset,,,,,,,,,,,See Description,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,shimos,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"17/Dec/19 11:26 PM;bestbeforetoday;PR: https://github.com/hyperledger/fabric-sdk-node/pull/62;;;",,,,,,,,,,,,,,,,
Two NPM packages point to Gerrit,FABN-1431,43669,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Invalid: Works as Expected,heatherp,ryjones,ryjones,11/Dec/19 4:28 AM,22/Jan/20 3:24 AM,28/Oct/23 3:25 AM,22/Jan/20 3:24 AM,,,,,,,,,,0,external,sdk-triaged,,,,"These packages:
 * [fabric-network|https://www.npmjs.com/package/fabric-network]
 * [fabric-common|https://www.npmjs.com/package/fabric-common]

Point to gerrit as the repo of truth on the NPM site. The code is correct in the repo as far as I can tell; perhaps they need republished?",,heatherp,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s6x",,,,Unset,Unset,20-27 Jan 20,,,,,,,,,,"Visit the NPM links above and see the ""repository"" section",,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,ryjones,,,,,,,,,,,,,,,,,,,,"12/Dec/19 9:47 PM;heatherp;Thanks for raising this [~ryjones] I made sure I removed gerrit references and we published a beta last night which doesn't seem to to have fixed it. Do you know which release npm pays attention to for that link, by any chance?;;;","12/Dec/19 9:51 PM;heatherp;Ok, think I know what it is. We're missing the directory property: [https://docs.npmjs.com/files/package.json#repository] because we've got a few modules in one repo - I'll try to fixing that;;;","12/Dec/19 10:55 PM;ryjones;I think the issue is 1.4.4 is the ""latest"" version and has the old news:

[https://www.npmjs.com/package/fabric-network]

[https://www.npmjs.com/package/fabric-common]

(click the ""versions"" tab)

this change should fix it:
commit 54cc00f29dc9d0a7b5460490a0ebb81308ef84b9 (HEAD)
Author: heatherlp <40789053+heatherlp@users.noreply.github.com>
Date:   Fri Nov 29 14:18:26 2019 +0000

    (Release-1.4) Remove gerrit/jenkins references (#49)
    
    Signed-off-by: heatherlp <heatherpollard0@gmail.com>

but it is quite a few changes after the 1.4.4 tag, which points here:
commit 5491a53b647a378aa0cfbffb5539f567e2850156
Merge: bb2d9aeb 5cda9597
Author: Andrew Coleman <andrew_coleman@uk.ibm.com>
Date:   Mon Jul 1 10:23:14 2019 +0000

    Merge ""[FABN-1251] Added start/end block functionality"" into release-1.4

I suspect adding a 1.4.5 tag and shipping that as ""latest"" would fix it;;;","22/Jan/20 3:21 AM;heatherp;You were right! The links have been fixed :) closing this off;;;","22/Jan/20 3:24 AM;heatherp;The links were fixed by releasing 1.4.5;;;",,,,,,,,,,,,
Publish v2.0.0 beta,FABN-1432,43678,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Dec/19 1:34 AM,13/Dec/19 4:47 AM,28/Oct/23 3:25 AM,13/Dec/19 4:47 AM,,,,,,v2.0.0,,,,0,,,,,,updates to package.json's to publish to NPM a NodeSDK v2 beta,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0165n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Return to snapshot after beta publish,FABN-1433,43682,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,simonstone1,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Dec/19 10:47 PM,08/Jan/20 2:14 AM,28/Oct/23 3:25 AM,08/Jan/20 2:14 AM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,return version and tag to snapshot and unstable to be able to continue development,,harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0166b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,,,,,,,,,dev,main,,,,,,,,,true,"17/Dec/19 11:51 PM;heatherp;This was done after beta.1, but not done after beta.2, and it's consequence is that snapshot builds are failing on master stream;;;","18/Dec/19 12:01 AM;heatherp;https://github.com/hyperledger/fabric-sdk-node/pull/76;;;",,,,,,,,,,,,,,,
NPM package fabric-protos is missing a README,FABN-1434,43689,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,ryjones,ryjones,13/Dec/19 3:05 AM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,01/Dec/20 11:45 PM,,,,,,,,,,0,external,sdk-triaged,,,,"visit https://www.npmjs.com/package/fabric-protos

bq. ""Unable to find a readme for fabric-protos@2.0.0-snapshot.1""",,heatherp,lesleyannj,ryjones,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00o14:",,,,Unset,Unset,,,,,,,,,,,"visit https://www.npmjs.com/package/fabric-protos

bq. ""Unable to find a readme for fabric-protos@2.0.0-snapshot.1""",,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lesleyannj,ryjones,,,,,,,,,,,,,,,,,,,"23/Jan/20 9:18 PM;heatherp;I'm really not clear on why this is happening. fabric-protos has been published and it has a README, here; [https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-protos/README.md]
which is the same place as it for fabric-network etc. I can't see anything in the top level package.json that defines the location for the fabric-network package, differently to say the fabric-protos package.

I'll look into whether we run the publish command for fabric-protos differently, but other than that, I'm stumped.;;;","23/Jan/20 11:02 PM;ryjones;When I look at the GitHub repo, I don't see a branch or a tag for 2.0.0-snapshot.1 - maybe that's the issue?;;;","24/Jan/20 2:06 AM;heatherp;yeah I see what you mean. Maybe this will be fixed by releasing v2.0.0 officially, which will have a tag. I don't think fabric-protos was a thing before v2.0;;;","01/Dec/20 11:45 PM;lesleyannj;Looks like issue is resolved.;;;",,,,,,,,,,,,,
Missing module when using fabric-client,FABN-1435,43710,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,simonstone1,mbwhite,mbwhite,13/Dec/19 7:55 PM,18/Dec/19 1:25 AM,28/Oct/23 3:25 AM,17/Dec/19 11:52 PM,v2.0.0,,,,,,,,,0,node-SDK,,,,,"This is observed when, for example, running the `enrollAdmin` script in the FabCar sample.
 
 
{code:java}
 Error: Cannot find module 'stream-buffers'    Require stack:    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/packager/Lifecycle.js    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/Packager.js    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/Chaincode.js    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/Client.js    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/index.js    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-network/lib/gateway.js    - /home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-network/index.js    - /home/vsts/work/1/s/fabcar/typescript/dist/enrollAdmin.js     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:797:15)     at Function.Module._load (internal/modules/cjs/loader.js:690:27)     at Module.require (internal/modules/cjs/loader.js:852:19)     at require (internal/modules/cjs/helpers.js:74:18)     at Object.<anonymous> (/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/packager/Lifecycle.js:17:14)     at Module._compile (internal/modules/cjs/loader.js:959:30)     at Object.Module._extensions..js (internal/modules/cjs/loader.js:995:10)     at Module.load (internal/modules/cjs/loader.js:815:32)     at Function.Module._load (internal/modules/cjs/loader.js:727:14)     at Module.require (internal/modules/cjs/loader.js:852:19) {     code: 'MODULE_NOT_FOUND',     requireStack: [     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/packager/Lifecycle.js',     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/Packager.js',     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/Chaincode.js',     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/lib/Client.js',     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-client/index.js',     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-network/lib/gateway.js',     '/home/vsts/work/1/s/fabcar/typescript/node_modules/fabric-network/index.js',     '/home/vsts/work/1/s/fabcar/typescript/dist/enrollAdmin.js' {code}
 
 
 
 The issue is that [https://github.com/hyperledger/fabric-sdk-node/pull/47] didn't change the 'lifecycle.js' file to remove 'stream-buffers'.  As 'stream-buffers' was added as a dev-dependency at the top level I suspect that this masked the issue.",,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016cb:",,,,Unset,Unset,,,,,,,,,,,Run fabric-samples build,,Unset,,,,,,Unset,,Unset,,(Please add usage information),mbwhite,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Add node.js SDK support for collection-level endorsement policies,FABN-1437,43749,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,denyeart,denyeart,18/Dec/19 12:35 AM,15/Jul/20 2:07 AM,28/Oct/23 3:25 AM,15/Jul/20 2:07 AM,,,,,,v2.0.0,,,,0,external,sdk-triaged,,,,"As of Fabric v2.0, when defining a private data collection, it is now possible to include a collection-level endorsement policy, and include the collection name in the service discovery request. SDK needs to add support for specifying collection name in the service discovery endorsement request.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-504,,FABN-1595,,,,,,,,,,,,,,,,,,,FAB-15066,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016jv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,,,,,,,,,,,,"15/Jul/20 2:07 AM;denyeart;Looks like this already works since SDK can pass collection names to service discovery already, and the new collection EP support is automatically honored when using Fabric v2.1 and above.

This was made available to high level node SDK in FABN-1224.;;;",,,,,,,,,,,,,,,,
Support Node 12 for SDK v2.0,FABN-1439,43773,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,19/Dec/19 7:02 PM,10/Mar/20 9:05 PM,28/Oct/23 3:25 AM,19/Dec/19 9:10 PM,,,,,,,,,,0,,,,,,"*As an* application developer
*I want* to use the latest long-term support Node version
*So that* I can take advantage of new features and a longer platform support window

Node 12 entered LTS in the second half of 2019. Builds and tests should be run against this Node version, and this should be the (or a) supported version for the v2.0 release of the SDK.

An option is to continue running builds and tests on Node 10 in addition to Node 12, and declare support for both versions.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016oj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Use docstrap for docs theme in master branch,FABN-1440,43783,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,heatherp,heatherp,heatherp,20/Dec/19 7:40 PM,11/Jan/20 12:19 AM,28/Oct/23 3:25 AM,11/Jan/20 12:19 AM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"Since I removed gulp, the jsdoc command that builds the docs is no longer making use of docstrap, which results in the theme of the docs being different between the 1.4 branch and master branch. 

1.4 currently: [https://hyperledger.github.io/fabric-sdk-node/release-1.4/]
master currently: https://hyperledger.github.io/fabric-sdk-node/master/

So gulp was using docstrap under the covers somewhere, so depending on what theme we prefer, we should probably re-enable using docstrap 


Gulp PR: https://github.com/hyperledger/fabric-sdk-node/pull/61",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016rn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,"10/Jan/20 11:05 PM;heatherp;https://github.com/hyperledger/fabric-sdk-node/pull/88;;;",,,,,,,,,,,,,,,,
"Small bugs in api docs, addBlockListener and Block",FABN-1441,43785,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,lesleyannj,heatherp,heatherp,20/Dec/19 10:26 PM,13/Jan/21 11:02 PM,28/Oct/23 3:25 AM,13/Jan/21 11:02 PM,v1.4.4,,,,,v1.4.5,v2.0.0,,,0,community-help-wanted,sdk-triaged,,,,"In addBlockListener():
1) The code snippet fails if copied, because error !== err
 2) No explanation of what a ""block"" is, which is returned - is this a blockEvent?

Affects both master and 1.4, link: [https://hyperledger.github.io/fabric-sdk-node/release-1.4/module-fabric-network.Network.html#addBlockListener__anchor]

In Block: 
block.data.data.legnth
wouldn't work

Link: [https://hyperledger.github.io/fabric-sdk-node/release-1.4/global.html#Block]

 ",,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzzz",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,heatherp,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"19/Jun/20 8:00 PM;bestbeforetoday;Eventing API and documentation has changed in v2.x so this issue is only applicable to v1.4;;;",,,,,,,,,,,,,,,,
How many transactions can a block store?,FABN-1442,43817,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Won't Do,,Flyyellow,Flyyellow,03/Jan/20 9:05 PM,19/Jun/20 7:58 PM,28/Oct/23 3:25 AM,19/Jun/20 7:58 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Recently, I war learning to do some development on Hyperledger Fabric platform. Today, I tried to query  the information stored in a block. I  built a loop body, and put 30 pieces of data into the state database, but when I use
{code:java}
queryBlockByTxID(tx_id,peer,true,false){code}
to query the block where this transaction is, and found there just one piece of transaction in a block. 
configurations of batch： 


{code:java}
BatchTimeout: 30s
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 98 MB
    PreferredMaxBytes: 512 KB{code}
Log of the peer node:

{code:java}

2020-01-03 07:26:10.766 UTC [gossip.privdata] StoreBlock -> INFO 2dc [mychannel] Received block [93] from buffer
2020-01-03 07:26:10.767 UTC [committer.txvalidator] Validate -> INFO 2dd [mychannel] Validated block [93] in 0ms
2020-01-03 07:26:10.825 UTC [kvledger] CommitWithPvtData -> INFO 2de [mychannel] Committed block [93] with 1 transaction(s) in 57ms (state_validation=3ms block_and_pvtdata_commit=5ms state_commit=48ms) commitHash=[31892868d4b19940afe732988f18f74e80cbabdc52d4a902f6898c263f8a8f3c]{code}
In my mind, one block should store more than one transaction, and 30s is enough to submit 10 transactions to blockchain. 
I think
{code:java}
MaxMessageCount:10{code}
means the maximum numbers of transactions that a block can store. but these congfigures don't seem to work. 
In addition, how to query the size of a block? I have not found the API.",,bestbeforetoday,Flyyellow,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016wr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,Flyyellow,heatherp,,,,,,,,,,,,,,,,,,,"08/Jan/20 12:21 AM;heatherp;Hi [~Flyyellow] - it appears this is more of a question rather than a user story, so I've moved this to be a bug.
Have you considered asking on RocketChat? [https://chat.hyperledger.org|https://chat.hyperledger.org/] 

I've reviewed this with some of the other maintainers and we're not necessarily clear on this being a fabric-sdk-node bug.
How are you setting the BatchTimeout?;;;","09/Jan/20 1:33 PM;Flyyellow;The quertion about BatchTimeout, not a matter of fabric-node-sdk. 

BatchTimeout can be setted in configtx.yaml. 

I think fabric-sdk-node should provide a method to get the size of block.;;;","15/Jan/20 1:04 AM;heatherp;So we're thinking you can use queryBlock on a channel: [https://hyperledger.github.io/fabric-sdk-node/release-1.4/Channel.html#queryBlock__anchor|https://hyperledger.github.io/fabric-sdk-node/master/Channel.html#queryBlock__anchor]
which would return you a block: [https://hyperledger.github.io/fabric-sdk-node/release-1.4/global.html#Block|https://hyperledger.github.io/fabric-sdk-node/master/global.html#Block]

There are some typos in those docs that I'll raise issues for, but I'm hoping that gives you a starting point;;;","19/Jun/20 7:58 PM;bestbeforetoday;It seems that either querying a block or getting a block using event listening should provide information on the content of the block: both the number of transactions and the data size. Please reopen if there are client application scenarios that require additional SDK capabilities.;;;",,,,,,,,,,,,,
Add ability to get a list of files in a package,FABN-1443,43830,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,caroline-church,caroline-church,07/Jan/20 8:45 PM,15/Jan/20 12:54 AM,28/Oct/23 3:25 AM,15/Jan/20 12:54 AM,v2.0.0,,,,,,,,,0,,,,,,In version 1.4 of the sdk it was possible to get a list of files added to a package. In version 2 this feature has been taken out. Can this be added back in please,,caroline-church,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1416,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016zf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,heatherp,,,,,,,,,,,,,,,,,,,,"08/Jan/20 2:20 AM;heatherp;I thought these changes were to blame: https://jira.hyperledger.org/browse/FABN-1341

As they aren't in the 2.0 stream, but now I'm not so sure. We've not been messing around in this stuff, as far as I know. 
What's the API that you're calling that's no longer working? So I can delve into the code properly;;;","08/Jan/20 2:23 AM;caroline-church;In Fabric 1.4 i can do this

 
import \{ Package, ChaincodeType } from 'fabric-client';
 const pkg: any = await Package.fromDirectory({
            name: name,
            version: version,
            path: contractPath,
            type: language as ChaincodeType,
            metadataPath: metadataPath ? metadataPath : null
        });

        return pkg.fileNames;
 ;;;","08/Jan/20 2:42 AM;heatherp;What happens when you call it now?
The only difference for that function between 1.4 and 2.0 is another parameter for goPath, which the typescript definitions haven't been updated for, so I suspect it might be that. 
Options currently look like this:
[https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-client/lib/Package.js#L93]

Does it work if you specify a goPath?;;;","08/Jan/20 2:42 AM;heatherp;Corresponding PR is https://github.com/hyperledger/fabric-sdk-node/commit/2815f6d98f38d42a57aafde991e255b66b207f57;;;","08/Jan/20 8:25 PM;caroline-church;Well now you call a different api to package and it doesn't appear to have a way to get the file list

 

const chaincode: Client.Chaincode = new Client.Chaincode(name, version, new Client());

const packageRequest: Client.ChaincodePackageRequest = {
 chaincodeType: language as Client.ChaincodeType,
 chaincodePath: contractPath,
 metadataPath: metadataPath ? metadataPath : null
};

const pkgBuffer: Buffer = await chaincode.package(packageRequest);;;;","15/Jan/20 12:53 AM;heatherp;Right I've spoken to the node-sdk maintainers about this one. This API is due to change under moving of admin functionalities to a fabric-admin package, so closing for now. Feel free to re-open for ensuring we don't miss this in the fabric-admin design;;;",,,,,,,,,,,
Accessing wallet that doesn't exist gives unhelpful error message,FABN-1444,43844,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,mbwhite,mbwhite,08/Jan/20 8:45 PM,09/Jan/20 8:48 PM,28/Oct/23 3:25 AM,09/Jan/20 8:48 PM,,,,,,v2.0.0,,,,0,,,,,,"If you access a wallet (via creating a gateway) that doesn't exist the following error is thrown

""TypeError: Cannot read property 'type' of undefined""

 ",,bestbeforetoday,mbwhite,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0172j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,mbwhite,,,,,,,,,dev,main,,,,,,,,,true,"08/Jan/20 8:54 PM;bestbeforetoday;The issue is specifying an identity that doesn't exist in the wallet during Gateway connect. This might have happened because the wallet was pointed at an incorrect location (and you are therefore using an empty wallet) or because the specified identity label was incorrect. Either way, the issue is that the Gateway code doesn't check that the specified identity exists before trying to use it. It should check that the identity exists and, if not, throw a helpful error. Same for the TLS identity.;;;",,,,,,,,,,,,,,,,
Orderer connections are not re-used or cleaned up,FABN-1445,43864,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,nkl199,nkl199,09/Jan/20 1:33 AM,01/Dec/20 11:46 PM,28/Oct/23 3:25 AM,01/Dec/20 11:46 PM,v1.4.0,v1.4.1,v1.4.2,v1.4.3,v1.4.4,,,,,1,node-SDK,sdk-triaged,,,,"When using the SDK to submit a transaction to the orderer using a Channel.sendTransaction() call, if a string name for the orderer is used, an Orderer object is created using a Client.getTargetOrderer() call that ultimately results in Client.newOrderer() that creates a new grpc connection. 

If repeated Channel.sendTransaction() calls are made, this results in multiple orderers and consequently multiple grpc connections are being made and held open for some time.

An example below is a client process performing multiple Channel.sendTransaction() calls

!https://user-images.githubusercontent.com/45155724/70708204-f11d4480-1d14-11ea-8cad-c33e9619b249.png!

It would be better if either:
- the orderer object is persisted for reuse within the SDK
- there is a cleanup to prevent the growth of grpc connections at the end of the Channel.sendTransaction() call",,lesleyannj,nao,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:k",,,,Unset,Unset,,,,,,,,,,,Submit multiple transactions via Channel.sendTransaction() and observe active grpc connections using grafana.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,nao,nkl199,,,,,,,,,,,,,,,,,,,"01/Dec/20 11:46 PM;lesleyannj;Please re-open if this is still an issue with V2x;;;",,,,,,,,,,,,,,,,
Add compatability matrix to documentation,FABN-1446,43918,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,heatherp,heatherp,10/Jan/20 1:29 AM,22/Jan/20 2:35 AM,28/Oct/23 3:25 AM,22/Jan/20 2:35 AM,v1.4.4,v2.0.0,,,,v1.4.5,v2.0.0,,,0,sdk-triaged,,,,,"This could exist as a wider effort across all fabric components and therefore exist in readTheDocs?
For now, let's discuss adding a table into our docs, readMe perhaps? Explaining what versions of fabric/node we support - at least to point RC users at when we frequently get asked",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABCN-373,,FGJ-69,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i017i3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Release 1.4.5,FABN-1447,43991,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,heatherp,heatherp,15/Jan/20 2:01 AM,16/Jan/20 10:14 PM,28/Oct/23 3:25 AM,16/Jan/20 10:14 PM,,,,,,,,,,0,,,,,,"It's been many moons since we've released, so we need one",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1450,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i017qr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gateway.disconnect() does not disconnect connection if initial connection fails,FABN-1448,43998,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,,caveman7,caveman7,15/Jan/20 11:28 AM,02/Dec/20 1:06 AM,28/Oct/23 3:25 AM,,v1.4.4,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"Referring to [https://github.com/hyperledger/fabric-sdk-node/blob/1b7d1287a578ae2d45007609806483da71561e9e/fabric-network/lib/gateway.js#L287]

In the function _gateway.getNetwork()_ , if _await newNetwork._initialize(this.options.discovery);_ returns an error after it has been established e.g. if there's an access denied error due to wrong certificate or msp ID, _this.networks.set(networkName, newNetwork);_ is not executed, which means the already established connection is not kept in the Map. 

As _disconnect()_ iterates through the networks stored in the Map, the failed connection will not be disconnected",,caveman7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1609,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i004",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caveman7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Publish v1.4.5,FABN-1450,44001,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Jan/20 11:53 PM,18/Jan/20 5:57 AM,28/Oct/23 3:25 AM,18/Jan/20 5:57 AM,,,,,,v1.4.5,,,,0,,,,,,Updates to allow for the publish of the NodeSDK to npm for version 1.4.5,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1447,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:sa",,,,Unset,Unset,13-17 Jan 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Underlying chaincode errors are not accessible when no valid peer responses are returned,FABN-1451,44029,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,andrew-coleman,jonathan-blood,jonathan-blood,20/Jan/20 9:04 PM,16/Jun/20 5:42 PM,28/Oct/23 3:25 AM,05/Feb/20 8:19 PM,v1.4.5,,,,,,,,,0,external,fabric-network,fabric-node-sdk,sdk-triaged,,"In the case where there are no valid peer responses when callling `submitTransaction()`, the underlying chaincode errors are just included a single error message which is then thrown. This makes it impossible to access those underlying errors and handle them accordingly.

The following snippet in [https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-network/src/transaction.js] seems to be the culprit:
{code:java}
if (validResponses.length === 0) {
      const errorMessages = errorResponses.map((response) => util.format('peer=%s, status=%s, message=%s', response.peer.name, response.status, response.message));
      const messages = Array.of(`No valid responses from any peers. ${errorResponses.length} peer error responses:`, ...errorMessages);
      const msg = messages.join('\n    ');
      logger.error('_validatePeerResponses: ' + msg);
      throw new Error(msg);
}
{code}",,jonathan-blood,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s74",,,,Unset,Unset,20-27 Jan 20,31st-7th Feb 2020,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),jonathan-blood,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
add new fabric-common docs - remove fabric-client docs,FABN-1452,44042,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,21/Jan/20 11:28 PM,24/Jan/20 10:59 PM,28/Oct/23 3:25 AM,24/Jan/20 10:59 PM,,,,,,v2.0.0,,,,0,,,,,,update the /docs/jsdoc/json to remove fabric-client and add in the new fabric-common,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s9f",,,,Unset,Unset,20-27 Jan 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Add discovery query handler test,FABN-1453,44048,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,22/Jan/20 4:08 AM,31/Jan/20 9:10 PM,28/Oct/23 3:25 AM,22/Jan/20 11:20 PM,,,,,,v2.0.0,,,,0,,,,,,Add the query handler cucumber scenario test back in after the rewrite had removed them,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1475,,,No,,Unset,No,,,"1|i0180j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Identity type definition not exported for TypeScript,FABN-1454,44050,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,,ashish.cppdev,ashish.cppdev,22/Jan/20 4:25 AM,02/Dec/20 1:15 AM,28/Oct/23 3:25 AM,,v1.4.2,,,,,,,,,0,external,good-first-issue,Identity,sdk-triaged,Wallet,"Type definitions for Identity not correctly exported for TypeScript. This is what the index.d.ts says for fabric-network/types:

{{//-------------------------------------------}}

{{// Wallet Management}}

{{//-------------------------------------------}}

{{export interface Identity \{ type: string;}}}

Wallet.export(label) returns an Identity object. As per [documented definition|[https://hyperledger.github.io/fabric-sdk-node/release-1.4/module-fabric-network.Wallet.html#~Identity]] for Identity type, the available members of the Identity type are
 * type
 * mspId
 * certificate
 * privateKey

 

Without the type definition making these additional elements available, Wallet.export really has no usefulness, unless the Identity type is being repurposed.

 ",,ashish.cppdev,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i007w",,,,Unset,Unset,,,,,,,,,,,N/A,,Unset,,,,,,Unset,,Unset,,(Please add usage information),ashish.cppdev,bestbeforetoday,,,,,,,,,,,,,,,,,,,,"31/Jan/20 12:37 AM;bestbeforetoday;This looks like a valid issue except that, in the case of an HSM-managed identity there will be no _privateKey_ property so that one would be optional.;;;","08/Apr/20 1:57 AM;ashish.cppdev;Hi, is there an update on this? Has this been resolved? 

 

Thank you;;;",,,,,,,,,,,,,,,
Re-enable removed unit tests,FABN-1455,44053,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,22/Jan/20 8:03 PM,14/Feb/20 6:51 AM,28/Oct/23 3:25 AM,14/Feb/20 6:51 AM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"Re-enable unit tests removed as part of the refactor of the gateway API on the new fabric-common base.
* fabric-network/test/impl/event/transactioneventhandler.js
* fabric-network/test/impl/query/queryhandlers.js
* fabric-network/test/transaction.js",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1475,,,No,,Unset,No,,,"1|hzx33q:s7i",,,,Unset,Unset,20-27 Jan 20,31st-7th Feb 2020,7-14th Feb 2020,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,"06/Feb/20 2:23 AM;bestbeforetoday;transactioneventhandler.js and transaction.js are done;;;",,,,,,,,,,,,,,,,
Update Docker configuration for master branch,FABN-1457,44114,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid,,heatherp,heatherp,23/Jan/20 7:40 PM,20/Mar/20 8:19 PM,28/Oct/23 3:25 AM,20/Mar/20 8:19 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"Fabric 2.0 now uses 2-digit version numbers for Docker images, as follows:
* hyperledger/fabric-ca:1.4
* hyperledger/fabric-orderer:2.0
* hyperledger/fabric-peer:2.0
* hyperledger/fabric-tools:2.0

It should be sufficient to just specify the correct image versions in the docker configuration. No local re-tagging should be required. No images should need to be explicitly pulled for baseos, ccenv, javaenv or nodeenv.",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1467,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqi:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,"20/Mar/20 8:19 PM;heatherp;Already covered by recent changes;;;",,,,,,,,,,,,,,,,
Commit with all proposal responses with endorsements,FABN-1458,44116,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,23/Jan/20 10:25 PM,31/Jan/20 9:29 PM,28/Oct/23 3:25 AM,31/Jan/20 9:29 PM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"When building the request for the orderer to have a transaction committed, include all proposal responses that contain endorsements. Currently we are filtering on the status, which must be 200.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s97r",,,,Unset,Unset,24-31st Jan 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Remove extra tsconfig.json files,FABN-1459,44117,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Done,heatherp,heatherp,heatherp,23/Jan/20 11:18 PM,24/Jan/20 1:32 AM,28/Oct/23 3:25 AM,24/Jan/20 1:32 AM,v2.0.0,,,,,,,,,0,,,,,,"We've got a load of extra tsconfig.json files around, especially those in <module>/types that aren't needed, so I'll remove them",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7r",,,,Unset,Unset,20-27 Jan 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
prepare release-1.4 for updates,FABN-1460,44119,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,24/Jan/20 12:27 AM,24/Jan/20 8:28 PM,28/Oct/23 3:25 AM,24/Jan/20 8:28 PM,,,,,,v1.4.5,,,,0,,,,,,Set the package.jsons to have 1.4.6-snapshot and unstable-1.4 to allow for fixes and development in the release branch.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s9g",,,,Unset,Unset,20-27 Jan 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Add private data event to fabric-common,FABN-1461,44120,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,24/Jan/20 12:46 AM,20/Mar/20 7:15 PM,28/Oct/23 3:25 AM,20/Mar/20 7:15 PM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5z",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Enable npm audit and shrinkwrap in the builds,FABN-1462,44121,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,heatherp,heatherp,24/Jan/20 1:23 AM,13/Jan/21 12:12 AM,28/Oct/23 3:25 AM,13/Jan/21 12:12 AM,v1.4.4,v2.0.0,,,,,,,,0,sdk-triaged,,,,,"Separating this task out from FABN-1039
We should enable npm audit and shrinkwrap so that we can be confident there are no security vulnerabilities present in our dependencies. This step should fail the builds.


We'd also like to make it easy for ourselves if a dependency does cause a build break, by enabling some bot or similar to either raise PRs or create Jiras. We'd probably want to enable nightly builds to help with this. 

Another thing to consider:
- we want confidence that users installing individual modules are not going to run into dependency issues. The top-level package.json pulls in different modules to those pulled in by the individual ones. Do we need to run an npm audit check in all of the packages root directories too?",,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0185f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,"24/Jan/20 1:25 AM;heatherp;Currently there are four vulnerabilities, all due to the fact we're using mock-couch. In master, this should be removed by the removal of fabric-client. In release-1.4, we need to perhaps think about using a different module. Due to the former not being actionable yet, this shouldn't be started until fabric-client has disappeared;;;","13/Jan/21 12:12 AM;lesleyannj;Backlog Review - Closing.

Nightly builds now implemented - however decided audit failures shouldn't fail build.

Re shrinkwrap - better suited consuming application.;;;",,,,,,,,,,,,,,,
Allow 'waitForReady' to be optional,FABN-1463,44128,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,24/Jan/20 6:38 AM,31/Jan/20 9:25 PM,28/Oct/23 3:25 AM,31/Jan/20 9:25 PM,,,,,,v1.4.5,,,,0,sdk-triaged,,,,,"The gRPC setup on services is an optional setup step on a service connection that could be bypassed when not required by the application.

Allow for a connection option to skip and move straight to sending the outbound request.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s8k",,,,Unset,Unset,24-31st Jan 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
v2 sample query handler,FABN-1464,44130,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,24/Jan/20 7:44 PM,14/Feb/20 6:51 AM,28/Oct/23 3:25 AM,14/Feb/20 6:51 AM,,,,,,,,,,0,sdk-triaged,,,,,"* Agree Query object implementation (low vs. high level). The implementation must return a well defined object structure where all the expected properties exist. Client code must not be required to check that the return value or expected properties exist.
* Re-implement to match previous behaviour
* No use of *any* type
* Ensure tutorial is up-to-date:
* Points to TypeScript sample
* Has correct code snippets
* Re-enable scenario test",,bestbeforetoday,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1475,,,No,,Unset,No,,,"1|hzx33q:s7k",,,,Unset,Unset,31st-7th Feb 2020,7-14th Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,,,,,,,,,dev,main,,,,,,,,,true,"26/Jan/20 6:59 AM;harrisob@us.ibm.com;Will add in a High level query object to handle the actual sending to fabric and getting the results. The query handlers will just have to work a looking at the results and deciding which peers to send to.

The results from the new high level query will be an object key by peer names and will have either an Error or a Response, where the Error is the error thrown from the sending to the specific peer or the Response is the status, payload, and message from gRPC response object of the endorsement.

The handler will be in charge of interpreting the results and throwing an error or returning a byte[] .. which for the provided query handlers will be the response to the query.;;;",,,,,,,,,,,,,,,,
Remove redundant code for v2.0 release,FABN-1465,44131,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,24/Jan/20 7:46 PM,07/Feb/20 8:06 PM,28/Oct/23 3:25 AM,07/Feb/20 8:06 PM,,,,,,,,,,0,sdk-triaged,,,,,"Specifically, fabric-client and any related code and dependencies (e.g. 'mock-couch').",,baohua,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1347,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1475,,,No,,Unset,No,,,"1|hzx33q:s7o",,,,Unset,Unset,31st-7th Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),baohua,bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,"06/Feb/20 2:25 AM;bestbeforetoday;[~harrisob@us.ibm.com] I think you've already merged most (if not all) of the changes required for this;;;","06/Feb/20 3:58 AM;baohua;The fabric-client module was moved to the npm repo.

And will it still exist in some github repo as all other HL projects?

Curious to know how to contribute code to it.

Thanks!;;;","06/Feb/20 4:08 AM;bestbeforetoday;The capability provided by the fabric-client module has been reimplemented in a new API within the fabric-common module. There will not be a version 2.0 release of fabric-client. Client applications are encouraged to use the higher level APIs provided by the fabric-network module where possible.;;;",,,,,,,,,,,,,,
[TypeError: Cannot read property 'name' of undefined] when a peer disconnects from the network,FABN-1466,44145,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,High,,RicNtt,RicNtt,RicNtt,28/Jan/20 1:28 AM,02/Nov/21 9:57 AM,28/Oct/23 3:25 AM,,v1.4.4,,,,,,,,,0,external,sdk-triaged,,,,"I am testing high availability for Hyperledger Fabric.

I am manually enabling/disabling peer nodes when I insert data into the blockchain and I expect my Node SDK client to send me messages of impossible connection.

This correctly happens when your peer node is down and your Node SDK tries the connection. In this case, the SDK says 'Unable to initialize the channel'. But this not happens if you disable a node at runtime.

In that situation, I receive this error:

 
{code:java}
""Cannot read property 'name' of undefined""
{code}
This comes from the Node SDK and it is clear there is a parameter check missing.

 

Thanks to the debug I understood where the problem is.
Inside *transaction.js* file contained in *node_modules/fabric-network/lib* at row 235 we find:

 
{code:java}
const errorMessages = errorResponses.map((response) => util.format('peer=%s, status=%s, message=%s',const errorMessages = errorResponses.map((response) => util.format('peer=%s, status=%s, message=%s', response.peer.name, response.status, response.message));
{code}
So, the construction of the errorMessages suppose a peer is always online and makes no parameter check on the response. If the peer goes down, the response.peer parameter is undefined and what you get from response.peer.name is undefined too.
And this explains the error I get.

 

 

For a double check, I modified that line of code with:

 
{code:java}
const errorMessages = errorResponses.map((response) => util.format('peer=%s, status=%s, message=%s',const errorMessages = errorResponses.map((response) => util.format('peer=%s, status=%s, message=%s', response.peer? response.peer.name : 'offline', response.status? response.status : 'no status', response.message));
{code}
In this way, you check if the variables are undefined or not before sending a response, and this correctly work for my SDK that now returns:
{code:java}
""message"": ""No valid responses from any peers. 1 peer error responses:\n peer=offline, status=no status, message=Failed to connect before the deadline URL:grpcs://localhost:8051""
{code}
Please fix this bug in order to avoid SDK crash during this situation.

 

 ",,bestbeforetoday,lesleyannj,RicNtt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zlk:r",,,,Unset,Unset,,,,,,,,,,,"Prepare a simulator that insert data continuously to Fabric.
At a certain point, disable a peer. I have a swarm network so I use docker service scale peer1=0.
Catch the error in node_modules/fabric-network/lib/transaction.js at row 235 as explained below.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,lesleyannj,RicNtt,,,,,,,,,,,,,,,,,,,"31/Jan/20 12:42 AM;bestbeforetoday;There may be a deeper problem in that all responses coming back from the send of a proposal to a peer should have the peer details attached to them. So, rather than coding around the case where the peer details do not exist, a better fix might be to find where the peer details are not being set and include them there.;;;","01/Dec/20 11:50 PM;lesleyannj;[~RicNtt] are you still working on this issue?  

We believe this may be addressed in v2x;;;",,,,,,,,,,,,,,,
Don't pull and re-tag Fabric 2.0 Docker images in master build,FABN-1467,44155,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,bestbeforetoday,bestbeforetoday,28/Jan/20 7:31 PM,28/Jan/20 7:52 PM,28/Oct/23 3:25 AM,28/Jan/20 7:52 PM,,,,,,,,,,0,,,,,,"Released Fabric Docker images now exist in DockerHub with tags matching the core.yaml used internally by Fabric to specify Fabric 2.0 Docker images so builds should work out of the box, without pulling down and re-tagging pre-release Docker images.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1457,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:i",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK needs a way to pass --is-init with a transaction,FABN-1470,44184,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,EdMoffatt,EdMoffatt,30/Jan/20 6:57 PM,25/Aug/21 8:02 PM,28/Oct/23 3:25 AM,25/Aug/21 8:02 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"v2 lifecycle allows a definition to include the {{init-required}} flag, which means that the first transaction to be submitted must pass the {{isInit}} flag.

Can't see a way to do this with the SDKs at the moment, so I think you'd need to turn to the CLIs to get a committed contract started if you'd set the {{init-required}} flag. (Transactions without the flag will fail until one _with_ the flag has been completed). Should we add the ability to do this to the SDKs?",,bestbeforetoday,EdMoffatt,heatherp,lesleyannj,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1580,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018gr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,EdMoffatt,heatherp,lesleyannj,tatsu-sato,,,,,,,,,,,,,,,,,"30/Jan/20 11:09 PM;heatherp;Agreed with the maintainers this is something we'll tackle under fabric-admin;;;","13/Jan/21 12:20 AM;lesleyannj;Backlog review - still relevant - done under transaction.;;;","25/Aug/21 7:47 PM;bestbeforetoday;It is possible to set the {{is_init}} property within the Proposal protobuf using the low-level _fabric-common_ API by setting the {{init}} property on the request object passed into {{Endorsement.build()}}. This is not currently exposed on the Transaction object in the high-level _fabric-network_ API. Given that _fabric-network_ is focused on supporting transaction invocation for business applications, not on supporting admin tasks such as chaincode deployment, this seems reasonable to me. Any admin API built on top of _fabric-common_ would be able to submit an init transaction as part of chaincode deployment. CLI commands can also be used, which is the recommended method for chaincode deployment today.;;;","25/Aug/21 8:02 PM;bestbeforetoday;Closing as this is an admin function that can already be achieved with admin tooling used for chaincode deployment;;;",,,,,,,,,,,,,
Compatibility matrix title should say fabric-chaincode-node not java,FABN-1471,44186,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Invalid,,awjh-ibm,awjh-ibm,30/Jan/20 7:54 PM,30/Jan/20 7:56 PM,28/Oct/23 3:25 AM,30/Jan/20 7:56 PM,,,,,,,,,,0,,,,,,The compatibility matrix has a title of fabric-chaincode-java,,awjh-ibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018h7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),awjh-ibm,,,,,,,,,,,,,,,,,,,,,"30/Jan/20 7:56 PM;awjh-ibm;Intended to open in FABCN;;;",,,,,,,,,,,,,,,,
Enable off line signing with fabric-network,FABN-1472,44192,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,harrisob@us.ibm.com,harrisob@us.ibm.com,31/Jan/20 2:51 AM,13/Jan/21 12:24 AM,28/Oct/23 3:25 AM,13/Jan/21 12:24 AM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"Enable the fabric-network applications to provide the signature for a fabric request rather than NodeSDK signing the request with provided identity. The identity provided will have to have a certificate, but will not have to access to a private key.

This will require a different flow for the application, instead of just a submit, a buildSubmit will be needed prior to the actual submit to provide the application with the request. The application will then be responsible for getting the signature. The application will then provide that request and the signature on the actual submit.",,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:r",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,"13/Jan/21 12:24 AM;lesleyannj;Backlog Review - Closing.  Plan going forward with Fabric Gateway;;;",,,,,,,,,,,,,,,,
Remove fabric-ca-client - move to own repository,FABN-1473,44193,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,harrisob@us.ibm.com,harrisob@us.ibm.com,31/Jan/20 2:56 AM,13/Jan/21 12:21 AM,28/Oct/23 3:25 AM,13/Jan/21 12:21 AM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,fabric-ca is not moving at it's own pace and the fabric-ca-client should also. It really has nothing to do with the other fabric npm modules an should be in it's own repository.,,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018ir:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,"13/Jan/21 12:21 AM;lesleyannj;Backlog Review - Closing.  Admin function - going forward do via fabric ca CLI.;;;",,,,,,,,,,,,,,,,
Pick random peer when selecting peers from an org,FABN-1474,44195,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,harrisob@us.ibm.com,harrisob@us.ibm.com,31/Jan/20 3:11 AM,13/Jan/21 12:13 AM,28/Oct/23 3:25 AM,13/Jan/21 12:13 AM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,When applications wish to limit the endorsements to specific orgs and they wish to not use discovery the peer selections should be a random peer from each org.,,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018j7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,"13/Jan/21 12:13 AM;lesleyannj;Completed;;;",,,,,,,,,,,,,,,,
v2.0 beta refresh,FABN-1475,44204,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,31/Jan/20 8:24 PM,05/Jun/20 8:13 PM,28/Oct/23 3:25 AM,14/Feb/20 7:34 PM,,,,,,,,,,0,,,,,,"Deliver a new Node SDK v2.0 beta release based on the new fabric-common implementation and with the old fabric-client implementation removed. This will focus on the high level submit and evaluate transactions invocation, and will not include a high level event handling API.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-2,,2.0.0-beta.3,To Do,No,,Unset,No,,,"1|i018l7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove (comment out) fabric-network eventing APIs,FABN-1476,44205,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,31/Jan/20 8:27 PM,06/Feb/20 10:15 PM,28/Oct/23 3:25 AM,06/Feb/20 10:15 PM,,,,,,,,,,0,sdk-triaged,,,,,"Temporarily remove the fabric-network eventing APIs while they are in transition, ready for a beta fresh.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1475,,,No,,Unset,No,,,"1|hzx33q:s7oi",,,,Unset,Unset,31st-7th Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish 2.0.0-beta.3,FABN-1477,44206,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,31/Jan/20 8:28 PM,14/Feb/20 7:33 PM,28/Oct/23 3:25 AM,14/Feb/20 7:33 PM,,,,,,,,,,0,sdk-triaged,,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1475,,,No,,Unset,No,,,"1|hzx33q:s7p",,,,Unset,Unset,31st-7th Feb 2020,7-14th Feb 2020,14th-21st Feb 2020,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Updated commit listening API,FABN-1478,44207,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,31/Jan/20 9:03 PM,19/Feb/20 4:37 AM,28/Oct/23 3:25 AM,19/Feb/20 4:37 AM,,,,,,,,,,0,sdk-triaged,,,,,"Updated API for v2.0, in line with the Java SDK behaviour:
* Network.addCommitListener()
* Network.removeCommitListener()

Should include:
* Unit test
* Scenario tests
* Documentation

Does *not* include:
* Custom transaction event handler sample
* Using the new API in the implementation of the internal TransactionEventHandler",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1486,FABN-1485,FABN-1495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q",,,,Unset,Unset,31st-7th Feb 2020,7-14th Feb 2020,14th-21st Feb 2020,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Using an HSM fails to initialize the crypto suite,FABN-1479,44231,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,harrisob@us.ibm.com,harrisob@us.ibm.com,04/Feb/20 2:13 AM,05/Feb/20 11:26 PM,28/Oct/23 3:25 AM,05/Feb/20 11:26 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"Seeing these errors:
 # ****** Network End-to-end flow: import identity into wallet using hsm ***** 
not ok 1 TypeError: Parameter 1 MUST be Buffer
 ---
 operator: error
 expected: |-
 undefined
 actual: |-
 [TypeError: Parameter 1 MUST be Buffer]
 at: bound (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:30:12)
 stack: |-
 TypeError: Parameter 1 MUST be Buffer
 at CryptoSuite_PKCS11._pkcs11OpenSession (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/impl/bccsp_pkcs11.js:334:12)
 at new CryptoSuite_PKCS11 (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/impl/bccsp_pkcs11.js:230:8)
 at Object.module.exports.newCryptoSuite (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/Utils.js:82:9)
 at Function.newCryptoSuite (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/BaseClient.js:39:19)
 at IDManager.initialize (/anodesdk/jan29-2020/fabric-sdk-node/test/integration/network-e2e/idmanager.js:22:33)
 at process._tickCallback (internal/process/next_tick.js:68:7)
 at Function.Module.runMain (internal/modules/cjs/loader.js:834:11)
 at startup (internal/bootstrap/node.js:283:19)
 at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)
 ...

(node:46673) UnhandledPromiseRejectionWarning: Error: CKR_TOKEN_NOT_RECOGNIZED:225  at Error (native) C_OpenSession:329 { at CryptoSuite_PKCS11._pkcs11OpenSession (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/impl/bccsp_pkcs11.js:316:33) at new CryptoSuite_PKCS11 (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/impl/bccsp_pkcs11.js:230:8)  at Object.module.exports.newCryptoSuite (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/Utils.js:82:9) at Function.newCryptoSuite (/anodesdk/jan29-2020/fabric-sdk-node/node_modules/fabric-client/node_modules/fabric-common/lib/BaseClient.js:39:19)  at IDManager.initialize (/anodesdk/jan29-2020/fabric-sdk-node/test/integration/network-e2e/idmanager.js:22:33) at process._tickCallback (internal/process/next_tick.js:68:7)  at Function.Module.runMain (internal/modules/cjs/loader.js:834:11) at startup (internal/bootstrap/node.js:283:19)  at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)

 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q9",,,,Unset,Unset,31st-7th Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
missing config and protos from fabric-common,FABN-1480,44276,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,07/Feb/20 12:21 AM,07/Feb/20 11:15 AM,28/Oct/23 3:25 AM,07/Feb/20 11:15 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"after the removal of fabric-client  applications are having issues with missing modules and configuration settings.

update the package.json to include fabric-proto

update the fabric-common/Client class to initialize the low level configuration",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018x7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"Enable node 12 in the builds, remove node 8",FABN-1481,44277,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,heatherp,heatherp,heatherp,07/Feb/20 1:59 AM,10/Mar/20 7:02 PM,28/Oct/23 3:25 AM,13/Feb/20 12:34 AM,v1.4.4,,,,,,,,,0,sdk-triaged,,,,,"I think gulp was part of the reason we couldn't enable node 12 in the builds for node-sdk. I've removed that dependency so it shouldn't cause us problems now. Node 12 is running happily in master

Also allow the builds to run against multiple node versions that we support. I think azure can run these sequentially",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7c",,,,Unset,Unset,31st-7th Feb 2020,7-14th Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"13/Feb/20 12:34 AM;heatherp;After digging around, this ended up meaning:

- running builds against node 10 and node 12
- removing support for node 8 (which is out of LTS very recently) as we saw an issue with HSM tests failing with a Seg Fault on node 8
I've pushed these changes to both master and release-1.4;;;",,,,,,,,,,,,,,,,
add promise-settle to fabric-common dependencies,FABN-1482,44289,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,07/Feb/20 8:52 AM,07/Feb/20 8:36 PM,28/Oct/23 3:25 AM,07/Feb/20 8:36 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,add npm package 'promise-settle' to fabric-common package.json,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018zn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Handler non mutual TLS easier,FABN-1483,44290,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,07/Feb/20 11:09 AM,11/Feb/20 1:33 AM,28/Oct/23 3:25 AM,11/Feb/20 1:33 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,Have the Gateway check if using a TLS client certificate and if not have the low level client instance use a self signed cert as the hash for building the channel header.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018zv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Long values required when using ledger height sorting for discovery,FABN-1484,44291,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,07/Feb/20 11:14 AM,11/Feb/20 1:34 AM,28/Oct/23 3:25 AM,11/Feb/20 1:34 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"When sorting the peers to determine the order of selection within a group a Long value must be provided to the sort function.

switch default selection to be 'random'",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01903:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Use new commit event listener in transactioneventhandler.js,FABN-1485,44292,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,07/Feb/20 7:00 PM,19/Feb/20 4:37 AM,28/Oct/23 3:25 AM,19/Feb/20 4:37 AM,,,,,,,,,,0,sdk-triaged,,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,FABN-1478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q3",,,,Unset,Unset,7-14th Feb 2020,14th-21st Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Update custom transaction event handler sample,FABN-1486,44293,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,07/Feb/20 7:03 PM,19/Feb/20 6:57 PM,28/Oct/23 3:25 AM,19/Feb/20 6:57 PM,,,,,,,,,,0,sdk-triaged,,,,,"* Use new commit listening.
 * Update and re-add tutorial to reference sample.",,bestbeforetoday,,,,,,,,,,,,,,,,,FABN-1478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q6",,,,Unset,Unset,7-14th Feb 2020,14th-21st Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Release node-sdk 1.4.6,FABN-1487,44297,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,heatherp,heatherp,07/Feb/20 8:24 PM,21/Feb/20 11:39 PM,28/Oct/23 3:25 AM,21/Feb/20 9:06 PM,,,,,,,,,,0,sdk-triaged,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6i",,,,Unset,Unset,7-14th Feb 2020,14th-21st Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Evaluate/query does not use service discovery to select peers,FABN-1488,44340,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,sstone1,sstone1,13/Feb/20 11:54 PM,01/Dec/20 11:52 PM,28/Oct/23 3:25 AM,01/Dec/20 11:52 PM,,,,,,,,,,2,sdk-triaged,,,,,"Contract.evaluateTransaction() does not use service discovery to select peers. This means that it will pick any peer that is a member of the channel to perform the query, regardless of whether or not that peer has the smart contract deployed which should be used to execute the query.

This results in random (depending on which peer gets selected) ""cannot retrieve package for chaincode"" errors when querying chaincode which is only installed on a subset of peers in a channel.

We should fix this behaviour so that only peers with the chaincode installed are used to handle queries.",,lesleyannj,sstone1,tvalentin,yasser_mas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqh:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,sstone1,tvalentin,yasser_mas,,,,,,,,,,,,,,,,,,"01/Dec/20 11:52 PM;lesleyannj;Much work has been done in this area in V2.  Please reopen if still an issue in v2.;;;",,,,,,,,,,,,,,,,
Improve cucumber scenario tests surrounding commit event handlers,FABN-1489,44346,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,heatherp,heatherp,14/Feb/20 7:29 PM,20/Feb/20 7:52 PM,28/Oct/23 3:25 AM,20/Feb/20 7:52 PM,,,,,,v2.0.0,,,,0,sdk-triaged,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6r",,,,Unset,Unset,14th-21st Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Programming model - Node SDK v2.1 release,FABN-1490,44347,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,bestbeforetoday,bestbeforetoday,14/Feb/20 9:19 PM,10/Aug/21 9:47 PM,28/Oct/23 3:25 AM,27/Apr/20 8:07 PM,,,,,,v2.1.0,,,,0,sdk-triaged,,,,,Deliver the Node SDK v2.1 release.,,Anurag28,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Node SDK v2.1 released,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,2.0.0 release,To Do,No,,Unset,No,,,"1|i0197f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Anurag28,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Updated realtime block listening API,FABN-1491,44348,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Feb/20 9:25 PM,27/Feb/20 9:16 PM,28/Oct/23 3:25 AM,27/Feb/20 9:16 PM,,,,,,,,,,0,sdk-triaged,,,,,"Updated API for v2.0, in line with the Java SDK behaviour:
* Network.addBlockListener()
* Network.removeBlockListener()

This should provide ordering and deduplication of events, so listeners receive each block event only once and in order. This should be achievable by using the new EventService to listen to a single peer at a time but with failover to other peers, resuming at the next expected block number.

Implementation should be in TypeScript and follow the pattern of the updated commit listener implementation.

Should include:
* Unit test
* Scenario tests
* Documentation

Does *not* include:
* Replay
* Checkpointing",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1493,FABN-1495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q4",,,,Unset,Unset,14th-21st Feb 2020,21st-28th Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Updated realtime contract listening API,FABN-1492,44349,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Feb/20 9:34 PM,12/Mar/20 12:36 AM,28/Oct/23 3:25 AM,12/Mar/20 12:36 AM,,,,,,,,,,0,sdk-triaged,,,,,"Updated API for v2.0, in line with the Java SDK behaviour:
* Contract.addContractListener()
* Contract.removeContractListener()

This should provide ordering and deduplication of events, so listeners receive each contract event only once and in order. This should be achievable by using the new EventService to listen to a single peer at a time but with failover to other peers, resuming at the next expected block number. It may be easier to build this on top of the block listening implementation rather than the low-level chaincode event listener.

Implementation should be in TypeScript and follow the pattern of the updated commit listener implementation.

Should include:
* Unit test
* Scenario tests
* Documentation

Does *not* include:
* Replay
* Checkpointing",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1494,FABN-1495,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q5",,,,Unset,Unset,14th-21st Feb 2020,21st-28th Feb 2020,28th-6th March 2020,6th-13th Mar 20,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Updated replay block listener,FABN-1493,44350,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Feb/20 9:43 PM,29/Feb/20 12:52 AM,28/Oct/23 3:25 AM,28/Feb/20 1:18 AM,,,,,,,,,,0,sdk-triaged,,,,,"Add replay capability to the updated block event listener API, consistent with the behaviour of the Java SDK.",,bestbeforetoday,,,,,,,,,,,,,,,,,FABN-1491,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|i0197n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Updated replay contract listener,FABN-1494,44351,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,bestbeforetoday,bestbeforetoday,14/Feb/20 9:47 PM,11/Mar/20 11:19 PM,28/Oct/23 3:25 AM,11/Mar/20 11:19 PM,,,,,,,,,,0,sdk-triaged,,,,,"Add replay capability to the updated contract event listener API, consistent with the behaviour of the Java SDK.",,bestbeforetoday,,,,,,,,,,,,,,,,,FABN-1492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q6z2",,,,Unset,Unset,28th-6th March 2020,6th-13th Mar 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Remove old event listener APIs,FABN-1495,44352,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,bestbeforetoday,bestbeforetoday,14/Feb/20 10:06 PM,14/Mar/20 12:47 AM,28/Oct/23 3:25 AM,14/Mar/20 12:38 AM,,,,,,,,,,0,sdk-triaged,,,,,The scenario test infrastructure makes use of the old event listening APIs so some of this may need to be reworked based on the new event listening APIs before the old (redundant) event listening code can be entirely removed.,,bestbeforetoday,,,,,,,,,,,,,,,,,FABN-1491,FABN-1492,FABN-1478,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q6z4",,,,Unset,Unset,28th-6th March 2020,6th-13th Mar 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
update test cases to work with node chaincode v2.0.0,FABN-1496,44356,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,16/Feb/20 3:05 AM,18/Feb/20 6:30 PM,28/Oct/23 3:25 AM,18/Feb/20 6:30 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,"string data was being returned with ""<data>"" quotes in previous unstable builds now with v2.0.0 the quotes have been removed",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6x",,,,Unset,Unset,14th-21st Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Return master to unstable,FABN-1497,44366,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,18/Feb/20 1:15 AM,18/Feb/20 6:29 PM,28/Oct/23 3:25 AM,18/Feb/20 6:29 PM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,update package.json files to put the master branch back into future development mode.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6y",,,,Unset,Unset,14th-21st Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
CCP should handle channels with only chaincodes defined,FABN-1498,44375,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,20/Feb/20 12:21 AM,28/Feb/20 9:49 PM,28/Oct/23 3:25 AM,28/Feb/20 9:49 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,"When parsing a common connection profile the network config class should handle a 'channel' definition that only has a 'chaincodes' attribute.

 
channels: {
    mychannel: {
        chaincodes : [ list of chaincodes]
    }
}


(node:96666) UnhandledPromiseRejectionWarning: TypeError: channel_config.orderers is not iterable    at buildChannel (/Users/nkl/git/caliper/node_modules/fabric-network/lib/impl/ccp/networkconfig.js:52:47)    at Function.loadFromConfig (/Users/nkl/git/caliper/node_modules/fabric-network/lib/impl/ccp/networkconfig.js:37:17)    at <anonymous>",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z",,,,Unset,Unset,14th-21st Feb 2020,21st-28th Feb 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
update protos to final v2.0.0,FABN-1499,44382,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,21/Feb/20 6:45 AM,26/Feb/20 7:37 PM,28/Oct/23 3:25 AM,26/Feb/20 7:37 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,update protos to v2.0.0,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z6",,,,Unset,Unset,21st-28th Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Error: Cannot find module './utils.js',FABN-1500,44388,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,davidkhala,davidkhala,21/Feb/20 11:28 PM,26/Feb/20 6:40 PM,28/Oct/23 3:25 AM,22/Feb/20 10:18 AM,v1.4.5,,,,,,,,,0,external,sdk-triaged,,,,"error line in 

fabric-ca-client/lib/FabricCAServices.js:10:15

It appears in `npm fabric-ca-client` starting from 1.4.5+ (inclusive), after install and then use it



*UPDATE*: It is fixed in 1.4.7",,davidkhala,heatherp,Ishee,Lokeshwaran,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1501,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6zc",,,,Unset,Unset,21st-28th Feb 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,heatherp,Ishee,Lokeshwaran,,,,,,,release-1.4,,,,,,,,,,true,"25/Feb/20 6:05 PM;Lokeshwaran;Hi Team - Is this issue resolved?.. I am also facing the same, and using fabric-client and fabric-ca-client 1.4.0;;;","25/Feb/20 6:12 PM;heatherp;Hey, it is, released in fabric-ca-client@1.4.6-snapshot.87 but I appreciate fabric-client@1.4.6 is depending on the latest version of fabric-ca-client. I wouldn't expect to see the same problem with fabric-ca-client@1.4.0 - are you?;;;","25/Feb/20 6:19 PM;Lokeshwaran;yes, I am using 1.4.0 (node modules) and am facing the same

    ""fabric-ca-client"": ""~1.4.0"",

    ""fabric-client"": ""~1.4.0"",;;;","25/Feb/20 6:48 PM;Ishee;Yes, I've also faced the same issue.  is this resolved ?;;;","25/Feb/20 8:02 PM;Lokeshwaran;Hi - I tried to use 1.4.6 on both fabric-client and fabric-ca-client but my docker images are mapped with 1.4.1 Still I could see same issue.  

Do I need to pull in the images with respect to that npm modules?.. please confirm.;;;","25/Feb/20 8:18 PM;heatherp;If you're using *fabric-ca-client*@1.4.1 (or any version before 1.4.6), I wouldn't expect you to see this issue. I believe this issue is in *fabric-ca-client* only and also affects fabric-client because it depends on fabric-ca-client. 

I've raised an issue for the fact that our packages are depending on the latest versions of the other packages published by the fabric-sdk-node repo: FABN-1502. We want to change the logic there. 

I've got a PR open and building for a 1.4.7 release which should resolve this issue, it's here: [https://github.com/hyperledger/fabric-sdk-node/pull/143|https://github.com/hyperledger/fabric-sdk-node/pull/143/checks] I'm hoping this is merged/published in the next couple of hours. 

In the meantime, you should be able to use *fabric-ca-client@1.4.6-snapshot.87* in your package.jsons, which is fabric-ca-client@1.4.6 + this fix.;;;","25/Feb/20 8:56 PM;Lokeshwaran;Hi Heather - I tried again, with the updates you provided, updated the package.json with ""^*1.4.6-snapshot.87""* and re-attempted the same, but got same issue.. 
i verified the fabric-ca-client in node_modules to ensure we have the right version pulled in and I could see the following lines are in package.json and it is usuing the same snapshot.


Please let me know if I need to add anything else?.

 

""_from"": ""fabric-ca-client@^1.4.6-snapshot.87"",

  ""_id"": ""fabric-ca-client@1.4.6"",;;;","25/Feb/20 11:45 PM;davidkhala;[~Lokeshwaran] A silly guess here. would you mind remove the ""^"" modifier before version and remove your `node_modules` folder entire and reinstall again?
And just moment ago, thanks [~heatherp] for prompt reaction, 1.4.7 is published rid of this problem ;;;","26/Feb/20 1:12 AM;Lokeshwaran;oh my bad!, thanks Yuxiang liu for catching that!.. I have updated the package.json to use 1.4.7 and the execuion went through that specific line, but now the execution is stuck in the following.., Keys are not getting stored in directory and it is stuck I guess> is this somthing related to this update ? or should be related to my api endpoint?.. 

 

Reason behind, the same api was working fine last week, and I am runnning the same after updating to 1.4.7.  Any light on this would be really helpful.

 

[2020-02-25 16:09:32.371] [DEBUG] Helper - [FileKeyValueStore.js]: constructor \{ options: { path: '/tmp/fabric-client-kv-org1' } }
[2020-02-25 16:09:32.372] [DEBUG] Helper - [utils.CryptoKeyStore]: _getKeyStore returning ks
[2020-02-25 16:09:32.372] [DEBUG] Helper - [crypto_ecdsa_aes]: generateKey, store.setValue
[2020-02-25 16:09:32.373] [DEBUG] Helper - [ecdsa/key.js]: ECDSA curve param X: 236dbdf3f8f86fc955ee07b3b011f4808c87d38f64bdb8404c4edcfa23f2f1d4
[2020-02-25 16:09:32.373] [DEBUG] Helper - [ecdsa/key.js]: ECDSA curve param Y: 3cde6f8f4ecd17957ef7178554f54d397990e12a46f9b812dda06ccbd6699098
[2020-02-25 16:09:32.377] [DEBUG] Helper - [FileKeyValueStore.js]: setValue { key:
 '76e464356c655be6238bf3c2166355afcb5919da6b23084d2b4fe9a978e03d20-priv' }
[2020-02-25 16:09:32.379] [DEBUG] Helper - [FabricCAClientService.js]: successfully generated key pairs
[2020-02-25 16:09:32.445] [DEBUG] Helper - [FabricCAClientService.js]: successfully generated csr;;;","26/Feb/20 2:08 AM;Lokeshwaran;Pls ignore it!, I think I got it.. If I perform this operation using curl command it works fine. then there must be some issue at my api end.

thanks!!!;;;","26/Feb/20 6:40 PM;heatherp;Right, I'm hoping the 1.4.7 release fixed this fabric-ca-client issue - please let me know if you still see it on 1.4.7+;;;",,,,,,
"TS error due to missing ""base.d.ts"" file in fabric-ca-client@1.4.6",FABN-1501,44396,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,heatherp,geahaad,geahaad,24/Feb/20 7:59 PM,26/Feb/20 6:33 PM,28/Oct/23 3:25 AM,25/Feb/20 7:11 PM,,,,,,,,,,0,external,fabric-ca-client,sdk-triaged,,,"{code:java}
$ tsc
 node_modules/fabric-ca-client/types/index.d.ts:18:28 - error TS2307: Cannot find module './base'.18 import { BaseClient } from './base';
 {{ ~~~~~~~~}}
 Found 1 error.{code}
{noformat}
OS X 10.15.3
Node v12.16.1 and Node v10.19.0
NPM 6.13.7
{noformat}
Workaround:
 Downgrade to fabric-*@1.4.5 and node 8.x",,geahaad,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1500,,,,,,,,,,,,,,,,,,,,,,,,,,"24/Feb/20 7:57 PM;geahaad;fabric-ca-1.4.6-output.log;https://jira.hyperledger.org/secure/attachment/18138/fabric-ca-1.4.6-output.log",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019ff:",,,,Unset,Unset,,,,,,,,,,,"- Updated the dependencies of our application to fabric-*@1.4.6
- Updated the package.json engine directive to
    ""node"": ""^10.15.3 || ^12.15.0"",
    ""npm"": ""^6.4.1""
- Updated our runtime to node 10 (and 12)",,Unset,,,,,,Unset,,Unset,,(Please add usage information),geahaad,heatherp,,,,,,,,,,,,,,,,,,,,"24/Feb/20 8:33 PM;geahaad;update after chatting w/ [~heatherp]

upgrading to
{code:java}
yarn add fabric-ca-client@1.4.6-snapshot.87{code}
did the trick;;;","25/Feb/20 7:11 PM;heatherp;I think I fixed this under FABN-1500, so duplicating. When 1.4.7 is out and if you still see the same issue, please re-open;;;","26/Feb/20 2:31 PM;geahaad;Cool, we confirm that
{code:java}
fabric-*@1.4.7{code}
resolves the issue.

Appreciate your help, [~heatherp] (*);;;","26/Feb/20 6:33 PM;heatherp;woohoo :D;;;",,,,,,,,,,,,,
1.4 packages are depending on latest published,FABN-1502,44409,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,,heatherp,heatherp,25/Feb/20 7:57 PM,01/Dec/20 11:53 PM,28/Oct/23 3:25 AM,01/Dec/20 11:53 PM,v1.4.5,v2.0.0,,,,,,,,0,sdk-triaged,,,,,"I broke fabric-ca-client@1.4.6, and this broke everyone else using any of our packages published out of fabric-sdk-node, because they depend on the ""latest"" version of fabric-client. This made me sad. 

Notes from conversations with Mark:
The dependency of fabric-client on latest fabric-ca-client seems sub-optimal too. A broken latest fabric-ca-client breaks all versions of fabric-client. I thought the publish re-wrote the dependencies so fabric-client depended on the same version of fabric-ca-client. Maybe that is only in master. Or maybe it’s just not working  .

I think the rewriting is supposed to happen in scripts/ci_scripts/azurePublishNpmPackages.sh  

At a quick glance, it looks like it’s setting the dependency versions based on the ""tag"" property in the package.json. Maybe it should really be using the value of the ""version"" tag?

We think this is something we used to do in Jenkins land, so we need to decide how we want this to work, and fix it. Primarily for 1.4.x, but relevant for the 2.0.0 branch too.",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqf:9",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Error location of github tag ""v1.4.7""",FABN-1503,44506,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Lowest,Done,bestbeforetoday,davidkhala,davidkhala,04/Mar/20 10:57 PM,16/Jun/20 7:44 PM,28/Oct/23 3:25 AM,16/Jun/20 7:42 PM,,,,,,,,,,0,external,github,sdk-triaged,,,"https://github.com/hyperledger/fabric-sdk-node/tree/v1.4.7
the tag v1.4.7 is pinned to master branch commit ""FABN-1499 NodeSDK update protos v2.0.0 (#139)"", 
it should be on release-1.4 branch",,bestbeforetoday,davidkhala,heatherp,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqf:2",,,,Unset,Unset,13th-21st Mar 20,20-27th March 2020,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,heatherp,yoheiueda,,,,,,,,,,,,,,,,,,"17/Mar/20 1:30 AM;heatherp;Hey [~davidkhala], unfortunately I can't do anything with the existing v1.4.7 tag locally: 

$ git tag -d v1.4.7
error: tag 'v1.4.7' not found.

So I deleted the release on github. I have released v1.4.8 earlier today;;;","17/Mar/20 1:31 AM;heatherp;Deleting the release didn't delete the tag, so your description link still points to the wrong place;;;","25/Mar/20 10:44 PM;davidkhala;Is it the case you have not yet fetch tags from remote? 
how about `git fetch --tags`;;;","21/Apr/20 7:05 PM;heatherp;Still not working :(

Heathers-MBP:fabric-sdk-node heatherp$ git fetch --tags
Heathers-MBP:fabric-sdk-node heatherp$ git tag -l
...
v1.4.0
v1.4.0-beta
v1.4.0-rc2
v1.4.1
v1.4.2
v1.4.4
v1.4.5;;;","22/Apr/20 10:28 AM;davidkhala;[~heatherp] The result on my side looks like this:
v.1.4.6
v1.0.0
v1.0.0-alpha
v1.0.0-alpha.1
v1.0.0-alpha2
v1.0.0-beta
v1.0.0-rc1
v1.0.1
v1.0.2
v1.0.3
v1.0.4
v1.0.5
v1.0.6
v1.0.7
v1.0.8
v1.1.0
v1.1.0-alpha
v1.1.0-preview
v1.1.1
v1.1.2
v1.2.0
v1.2.1
v1.2.2
v1.3.0
v1.4.0
v1.4.0-beta
v1.4.0-rc2
v1.4.1
v1.4.2
v1.4.4
v1.4.5
v1.4.7
It is quite weird indeed.;;;","22/Apr/20 5:28 PM;heatherp;That is weird, please can you run a `git tag -d v1.4.7` and then ""push"" it, I guess?
Then I can create a correct 1.4.7 tag :);;;","24/Apr/20 3:52 PM;davidkhala;[~heatherp] Non-maintainer is not allowed to operating tag on remote 'hyperledger',
meanwhile I can do that in my personal fork. 
BTW, I am willing to nominate myself as maintainer. :D;;;","16/Jun/20 7:44 PM;bestbeforetoday;I've updated the v1.4.7 tag;;;",,,,,,,,,
Type definition improvement,FABN-1504,44507,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,shimos,Aniket.1,Aniket.1,05/Mar/20 3:33 AM,13/Jan/21 9:31 AM,28/Oct/23 3:25 AM,13/Jan/21 9:31 AM,v1.4.4,,,,,,,,,0,community-help-wanted,external,good-first-issue,sdk-triaged,,"In `fabric-client` npm package type definition, there is:
{code:java}
export interface ConnectionOpts { 
pem?: string; 
clientKey?: string; 
clientCert?: string; 
'request-timeout'?: string; 
'ssl-target-name-override'?: string; 
[propName: string]: any; } {code}
 
`'request-timeout'` should be of type `number`. Giving it as string throws error on runtime and giving it as number shows error on compilation.
 
(I am not sure if this is right place for this issue)",,Aniket.1,shimos,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zlf:i",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Aniket.1,shimos,,,,,,,,,release-1.4,,,,,,,,,,true,"09/Jan/21 4:28 AM;shimos;https://github.com/hyperledger/fabric-sdk-node/pull/410;;;",,,,,,,,,,,,,,,,
Moving dependencies up to fabric-node-sdk breaks build,FABN-1505,44513,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,jfilippone,jfilippone,06/Mar/20 4:11 AM,11/Mar/20 12:44 AM,28/Oct/23 3:25 AM,11/Mar/20 12:44 AM,,,,,,,,,,0,external,sdk-triaged,,,,"When winston ^2.2.0 was moved from the fabric-ca-client package.json to the fabric-node-sdk package.json a level up, it leaves fabric-ca-client without a definition of winston's version.  So if you use a more advanced version of winston (major version 3), in the application that you are importing fabric-ca-client into, it will try to use that one and fail because winston 3 is very different.",,heatherp,jfilippone,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5i",,,,Unset,Unset,6th-13th Mar 20,,,,,,,,,,"Create an application that imports fabric-ca-client 1.4.7 and winston 3.2.1
npm install
Run the application and you should see fabric-ca-client have an issue because the code is trying to use winston 3 instead of winston 2 which it is written for.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,jfilippone,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"07/Mar/20 1:37 AM;heatherp;Hey [~jfilippone] if I update the fabric-ca-client package.json and the other sdk-node packages to depend on a version of winston at 2.x, I think this help solve your problem. But will you still see issues with the fact fabric-ca-client with use an older winston version, than compared with your application using winston 3.2.1?

I might be missing some fundamental understanding of how loggers work here :);;;",,,,,,,,,,,,,,,,
Update documentation for events,FABN-1506,44517,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,heatherp,heatherp,07/Mar/20 12:25 AM,14/Mar/20 12:47 AM,28/Oct/23 3:25 AM,14/Mar/20 12:39 AM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q6z5",,,,Unset,Unset,6th-13th Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Use correct released v2.0 fabric images,FABN-1507,44519,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,bestbeforetoday,heatherp,heatherp,07/Mar/20 12:38 AM,10/Mar/20 10:57 PM,28/Oct/23 3:25 AM,10/Mar/20 10:57 PM,v1.4.4,v2.0.0,,,,,,,,0,sdk-triaged,,,,,"Currently we're using development images, and the builds are failing looking for 2.1 node chaincode images",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5r",,,,Unset,Unset,6th-13th Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Backport Transaction.setEndorsingOrganizations from 2.0 to 1.4,FABN-1508,44525,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkel,davidkel,davidkel,09/Mar/20 8:11 PM,16/Jun/20 7:45 PM,28/Oct/23 3:25 AM,16/Jun/20 7:45 PM,v1.4.4,,,,,v1.4.5,,,,0,sdk-triaged,,,,,"This is a very small change that would be very useful to have in the 1.4 version of the node-sdk. The low-level node-sdk already has it so it will be easy to implement an identical api in the Transaction implementation to make it available.

It will be limited to what the low level makes available which means it will only work with discovery",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019tv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Equivalent to Channel.queryTransaction() in v2.x,FABN-1509,44531,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,fabDev20,fabDev20,10/Mar/20 5:22 PM,04/Jul/20 12:17 AM,28/Oct/23 3:25 AM,04/Jul/20 12:17 AM,v2.0.0,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"In beta 3, Channel.queryTransactoin() and Channel.queryBlock(..) functions are not available. we have to do system chaincode query to get the details. just wondering if they will be added back in v2.0.0. 

 

I would like to get details of transaction based just transactinId (no blockNumber). It would great to get the following information about the transaction 

1) if tx is committed or not? if not commited , reason ?

 2) tx is Valid or not?

3) which block it is included in?

4) tx proposal (input)

5) endorsements

6) tx Response

7) events

=== ",,bestbeforetoday,davidkhala,fabDev20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzz",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,fabDev20,,,,,,,,,,,,,,,,,,,"25/Mar/20 6:42 PM;heatherp;Hi [~fabDev20] there aren't any plans to add these apis back into v2.0.0. 
You can get a lot of the information you've listed here by making use of the apis in fabric-network, by adding a blockListener to a network and accessing the properties on a blockEvent. From the blockEvent, you can get it's transaction events, containing useful properties as listed here: [https://hyperledger.github.io/fabric-sdk-node/master/module-fabric-network.TransactionEvent.html]

Adding a blockListener info here: https://hyperledger.github.io/fabric-sdk-node/master/module-fabric-network.Network.html#addBlockListener__anchor;;;","26/Mar/20 2:00 AM;fabDev20;Hi [~heatherp]

We can get details about the transaction if we have the block number.  However, I am trying to find solution to get transaction details  if I just have transaction id (no block number), similar to transactionReceipt of ethereum.  This could be because of offline transaction or checking history of transactions etc...  

How can I can get achieve this in fabric?;;;","03/Apr/20 7:47 AM;fabDev20;can this issue be reopened? 

adding use cases where transactionId based query will be useful 

Scenario 1) To get the details of which all transactions (with details) changed key history, I can get the txid from from chaincode key history but no block number.

Scenario 2) - in few cases, a client may submit transaction without waiting for commit confirmation or does not get the confirmation because of network or system issues. he just has the transaction id that was submitted we need some way of checking the historical transactions.

it would be great to have api in fabric-sdk-node. ca ;;;","22/Apr/20 1:24 AM;heatherp;queryBlock() functionality is available through using block listening, so I'm just going to change the title of this issue. 
We discussed it amongst the maintainers today and we're currently undecided on how we would go about implementing this.;;;","02/Jun/20 5:15 PM;davidkhala;system chaincode in anyway is also a chaincode
you could use `Proposal.js` to do any chaincode related task along with `Commit.js` if need sending to orderer. 

Here is my way to do it 
https://github.com/davidkhala/fabric-common/blob/master/nodejs/admin/QSCCProposal.js

[~heatherp] This could be labeled as 'Admin Capability';;;","05/Jun/20 9:12 PM;bestbeforetoday;[~fabDev20] I think you should be able to query the transaction by ID by using just the high level (fabric-network) API to evaluate the 
*GetTransactionByID* transaction function on the system chaincode named *qscc.* You would need to pass channel name as the first argument, and transaction ID as the second argument to the transaction function. So something like:
{code:java}
network.getContract('qscc').evaluateTransaction('GetTransactionByID', channelName, transactionId);{code}
What you get back will be a serialized block protobuf, but you can use the protobuf definitions to decode this. Let me know if this works OK for you as I think this (perhaps with some help on the decoding) might be a more workable approach than adding special case functions for everything that can be accessed through system chaincode.;;;","04/Jul/20 12:17 AM;davidkhala;Some proven solutions are provided in above comments;;;",,,,,,,,,,
Update grpc to 1.24.2,FABN-1510,44535,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,11/Mar/20 6:46 PM,17/Mar/20 1:37 AM,28/Oct/23 3:25 AM,17/Mar/20 1:37 AM,,,,,,v1.4.5,,,,0,sdk-triaged,,,,,"VS Code extension team needs this for a current release

needed in fabric-client/fabric-ca-client/fabric-network

I want to think about why we have a hardcoded version too",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5w",,,,Unset,Unset,6th-13th Mar 20,13th-21st Mar 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,release-1.4,main,,,,,,,,true,,,,,,,,,,,,,,,,,
Fix coverage reporting in 2.0.0,FABN-1511,44536,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,heatherp,heatherp,11/Mar/20 10:49 PM,01/Dec/20 11:55 PM,28/Oct/23 3:25 AM,01/Dec/20 11:55 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"We've disabled unit test coverage reporting and had to reduce the scenario test coverage reporting in 2.0.0. 
Mostly because we're seeing coverage not reporting properly with typescript.
We should investigate and fix this",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqf:c",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,"13/Mar/20 12:48 AM;heatherp;Think this might be our typescript problem with nyc: https://github.com/istanbuljs/nyc/issues/1148;;;",,,,,,,,,,,,,,,,
EventHub timeout error still occurs in the latest release version,FABN-1512,44542,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,heatherp,yoheiueda,yoheiueda,12/Mar/20 11:18 AM,18/Mar/20 8:24 PM,28/Oct/23 3:25 AM,18/Mar/20 8:24 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"A commit that fixes FABN-1257 has not yet been included in release-1.4 for some reason.

This PR has was merged 10 months ago.

[https://github.com/hyperledger/fabric-sdk-node/commit/60d160dbdf098acd99ec3d3f636fd4987fe2ee60]

But, the release-1.4 branch does not include the commit.

https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/lib/ChannelEventHub.js

 

As a result, the latest npm package does not include the fix, and the original problem still persists.

[https://www.npmjs.com/package/fabric-client/v/1.4.7]

 

 

 

 

 

 ",,yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1257,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5zy",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),yoheiueda,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"generateCSR method doesn't get extensions, however newCSRPEM method supports it",FABN-1513,44544,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bk201,bk201,bk201,12/Mar/20 4:22 PM,16/Mar/20 6:24 PM,28/Oct/23 3:25 AM,16/Mar/20 6:24 PM,,,,,,,,,,0,,,,,,"To generate TLS key I can add extra DNS. When I use a console tool I can pass host using --csr.hosts flag. If I use Node.js SDK and call generateCSR method, I can not pass extensions object with ""subjectAltName"" key to add extra hosts.  However, the inner private method newCSRPEM supports extensions.

As a solution, I suggest passing ext param to generateCSR method.

  
{code:java}
const key = await cryptoSuite.generateKey();
const csr = key.generateCSR('CN=' + req.enrollmentID);

// Will be better if I can pass ext param
const csr = key.generateCSR('CN=' + req.enrollmentID, [{ subjectAltName: { array: [{ dns: 'host1' }, { dns: 'host2' }] } }]);
{code}
 ",,bk201,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019w3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bk201,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Last block processed recorded by checkpointer is replayed even though it's already marked as processed,FABN-1514,44547,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,eymorale,eymorale,12/Mar/20 10:30 PM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,01/Dec/20 11:56 PM,v1.4.4,,,,,,,,,1,external,sdk-triaged,,,,"Using the File Checkpointer, the last block processed recorded by the checkpointer is replayed on start up even though it was already marked as processed. This situation happens **only** when the listener doesn't have any events to catch up on (i.e. no events came through while the event listener was down). Also, this situation is **exclusive** to the block event listener (i.e. we do not see this issue when using the chaincode event listener).

 

This is seen in fabric-network 1.4.6, but Jira only has v1.4.4 as the latest released version",,eymorale,lesleyannj,rolivieri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1523,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zlf:9",,,,Unset,Unset,,,,,,,,,,,"1. Add block listener for a channel with a checkpointer:
const listener = await network.addBlockListener('event-listener', cb, {
        checkpointer: {
          factory: CheckpointFactories.FILE_SYSTEM_CHECKPOINTER,
          options: {
            basePath: '/some/path',
            maxLength: 1,
          },
        },
        replay: true,
    });

2. Invoke some transactions to bring in events
3. Ensure that the latest block is recorded in the file checkpointer
4. Stop the event listener *and* don't invoke any events
5. Start the event listener and see the latest recored block in the checkpointer be replayed",,Unset,,,,,,Unset,,Unset,,(Please add usage information),eymorale,lesleyannj,rolivieri,,,,,,,,,,,,,,,,,,,"01/Dec/20 11:56 PM;lesleyannj;Believe this is addressed in v2x.  Please reopen if still issue in v2.;;;",,,,,,,,,,,,,,,,
fabric-ca-client on latest snapshot (90) throws instantiation errors on FabricCAServices.enroll,FABN-1515,44549,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Test Error,louismurray,louismurray,louismurray,13/Mar/20 12:21 AM,19/Jun/20 7:20 PM,28/Oct/23 3:25 AM,19/Jun/20 7:20 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"When using FabricCAServices on the latest snapshot and attempting to call `enroll` on an instance of `FabricCAServices` I recieve this error:
{code:java}
error: [FabricCAClientService.js]: Failed to enroll admin, error:%o message=Failed to generate key for enrollment due to error [TypeError: CKS(...).then is not a function    at /Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/utils.js:413:63    at new Promise (<anonymous>)    at CryptoKeyStore._getKeyStore (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/utils.js:409:10)    at CryptoSuite_ECDSA_AES.generateKey (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-common/lib/impl/CryptoSuite_ECDSA_AES.js:104:44)    at FabricCAServices.enroll (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/FabricCAServices.js:216:47)    at /Users/louis.murray@ibm.com/development/project/ts/service/fabirc.integration.test.ts:69:32    at Test.callFn (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/test.js:552:21)    at Test.run (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/test.js:565:23)    at Runner.runSingle (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/runner.js:261:33)    at Runner.runTest (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/runner.js:324:30)], stack=Error: Failed to generate key for enrollment due to error [TypeError: CKS(...).then is not a function    at /Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/utils.js:413:63    at new Promise (<anonymous>)    at CryptoKeyStore._getKeyStore (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/utils.js:409:10)    at CryptoSuite_ECDSA_AES.generateKey (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-common/lib/impl/CryptoSuite_ECDSA_AES.js:104:44)    at FabricCAServices.enroll (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/FabricCAServices.js:216:47)    at /Users/louis.murray@ibm.com/development/project/ts/service/fabirc.integration.test.ts:69:32    at Test.callFn (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/test.js:552:21)    at Test.run (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/test.js:565:23)    at Runner.runSingle (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/runner.js:261:33)    at Runner.runTest (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/runner.js:324:30)]    at FabricCAServices.enroll (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/FabricCAServices.js:219:12)    at processTicksAndRejections (internal/process/task_queues.js:94:5)Error: Failed to generate key for enrollment due to error [TypeError: CKS(...).then is not a function    at /Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/utils.js:413:63    at new Promise (<anonymous>)    at CryptoKeyStore._getKeyStore (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/utils.js:409:10)    at CryptoSuite_ECDSA_AES.generateKey (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-common/lib/impl/CryptoSuite_ECDSA_AES.js:104:44)    at FabricCAServices.enroll (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/FabricCAServices.js:216:47)    at /Users/louis.murray@ibm.com/development/project/ts/service/fabirc.integration.test.ts:69:32    at Test.callFn (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/test.js:552:21)    at Test.run (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/test.js:565:23)    at Runner.runSingle (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/runner.js:261:33)    at Runner.runTest (/Users/louis.murray@ibm.com/development/project/node_modules/ava/lib/runner.js:324:30)]    at FabricCAServices.enroll (/Users/louis.murray@ibm.com/development/project/node_modules/fabric-ca-client/lib/FabricCAServices.js:219:12)    at processTicksAndRejections (internal/process/task_queues.js:94:5)
{code}
looking at the calling code, [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/lib/impl/CryptoKeyStore.js#L72] doesn't seem to be promise based.

I tried to convert that call to not expect the result to be a promise but i had other weird failures where the promise returned by `enroll` on an instance of FabricCAServices. looking at the code, it seemed like the constructor of FileKeyValueStore never got triggered when a crypto suite isn't provided to the instance of FileKeyValueStore. I'm not sure if that is a side effect of my local modification to remove the promise expectation or not though.

This project uses typescript 3.7 and node 12.15",,bestbeforetoday,louismurray,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i019x7:",,,,Unset,Unset,,,,,,,,,,,"1. `npm install fabric-ca-client@unstable-1.4`
2. instantiate an instance of FabricCAServices with just the host url. 
3. attempt to perform an `enroll` function call",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,louismurray,,,,,,,,,release-1.4,,,,,,,,,,true,"13/Mar/20 3:51 AM;louismurray;it looks like the secondary issue is related to having a fabric-common 2.0.0 beta locally. the CKS issue i can write a trivial fix for so I am going to just do it either tonight or tomorrow AM and open a PR.;;;","19/Jun/20 7:20 PM;bestbeforetoday;It sounds from the comments like this issue was resolved by avoiding mixing 1.4.x and 2.0.0-beta code? Please reopen with updated details if there is still an issue that needs fixing.;;;",,,,,,,,,,,,,,,
Publish v2.0.0-beta.4,FABN-1516,44573,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,14/Mar/20 12:40 AM,17/Mar/20 6:45 PM,28/Oct/23 3:25 AM,17/Mar/20 6:45 PM,,,,,,,,,,0,sdk-triaged,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1490,,,No,,Unset,No,,,"1|hzx33q:s7q6z5y",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish v1.4.8,FABN-1517,44574,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,14/Mar/20 12:41 AM,17/Mar/20 2:46 AM,28/Oct/23 3:25 AM,17/Mar/20 2:46 AM,,,,,,,,,,0,sdk-triaged,,,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5z6",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Full block event listeners,FABN-1518,44576,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Mar/20 1:26 AM,18/Mar/20 9:18 PM,28/Oct/23 3:25 AM,18/Mar/20 5:53 PM,,,,,,,,,,0,sdk-triaged,,,,,"*As an* application developer
*I want* to listen for full block events
*So that* I can examine more detailed event information than is available in filtered blocks",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1520,,,No,,Unset,No,,,"1|hzx33q:s7q6z5zc",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Private block event listeners,FABN-1519,44577,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Mar/20 1:28 AM,20/Mar/20 11:56 PM,28/Oct/23 3:25 AM,20/Mar/20 7:13 PM,,,,,,,,,,0,sdk-triaged,,,,,"*As an* application developer
*I want* to listen for full block events
*So that* I can examine more detailed event information than is available in filtered blocks",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1520,,,No,,Unset,No,,,"1|hzx33q:s7q6z5zo",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Node SDK v2.0.1,FABN-1520,44578,,Epic,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,bestbeforetoday,bestbeforetoday,14/Mar/20 1:29 AM,16/Jun/20 5:12 PM,28/Oct/23 3:25 AM,16/Jun/20 5:12 PM,,,,,,,,,,0,,,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-13,,2.0.1 release,To Do,No,,Unset,No,,,"1|i019z7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SetEndpoint not in typescript defs,FABN-1521,44590,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,caroline-church,caroline-church,17/Mar/20 2:07 AM,17/Mar/20 11:20 PM,28/Oct/23 3:25 AM,17/Mar/20 11:20 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,the method setEndpoint on the ServiceEndpoint class is not in the typescript defs but it does appear in the docs,,caroline-church,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5zx",,,,Unset,Unset,13th-21st Mar 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caroline-church,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
loadFromConfig load the value of config.peers instead of config.orderers,FABN-1522,44605,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,kgeonw,kgeonw,kgeonw,19/Mar/20 9:45 AM,19/Mar/20 10:07 PM,28/Oct/23 3:25 AM,19/Mar/20 10:07 PM,,,,,,,,,,0,node-SDK,,,,,"The function called loadFromConfig, load the value of config.peers instead of config.orderers

 The position of loadFromConfig is fabric-sdk-node/fabric-network/src/impl/ccp/networkconfig.js ",,kgeonw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a2z:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),kgeonw,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
File system checkpoint of block events,FABN-1523,44607,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,19/Mar/20 8:20 PM,21/May/20 11:32 PM,28/Oct/23 3:25 AM,30/Mar/20 8:24 PM,,,,,,,,,,0,sdk-triaged,,,,,"*As an* application developer
 *I want* a record of block events received to be recorded to the file system
 *So that* I can resume event playback at the last unprocessed block if an application failure occurs",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1524,,,,,,,,,,,,,,,,,,,,,,,,FABN-1514,,FABN-1269,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1520,,,No,,Unset,No,,,"1|hzxzqf:4",,,,Unset,Unset,20-27th March 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
File system checkpoint of contract events,FABN-1524,44608,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,19/Mar/20 8:22 PM,21/May/20 11:32 PM,28/Oct/23 3:25 AM,30/Mar/20 8:25 PM,,,,,,,,,,0,sdk-triaged,,,,,"*As an* application developer
 *I want* a record of contract events received to be recorded to the file system
 *So that* I can resume event playback of unprocessed transactions in the last unprocessed block if an application failure occurs",,bestbeforetoday,,,,,,,,,,,,,,,,,FABN-1523,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1269,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1520,,,No,,Unset,No,,,"1|i01a3n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
v1.4 to v2.0 migration documentation,FABN-1525,44609,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,19/Mar/20 8:26 PM,24/Mar/20 10:21 PM,28/Oct/23 3:25 AM,20/Mar/20 11:07 PM,,,,,,,,,,0,sdk-triaged,,,,,"*As an* application developer
*I want* to have documentation of changes between the v1.4 and v2.0 APIs
*So that* I can successfully migrate and application developed for Fabric v1.4 to Fabric v2.0",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1520,,,No,,Unset,No,,,"1|hzx33q:s7q6z5xc",,,,Unset,Unset,20-27th March 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Restructure documentation for v2.0 release,FABN-1526,44610,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,19/Mar/20 8:36 PM,27/Mar/20 6:52 PM,28/Oct/23 3:25 AM,27/Mar/20 6:52 PM,,,,,,,,,,0,sdk-triaged,,,,,"*As an* application developer
*I want* to navigate to either Node SDK v2.0 or v1.4 documentation
*So that* I can find documentation on developing client application using either SDK version without requiring any pointers from others

Note that in v1.4 fabric-network is the preferred API while in v2.0 it is the only application client API, with fabric-client removed and fabric-common considered primarily an implementation detail. The capabilities of the two SDK versions is also slightly different, with CLI commands being the tool for admin operations in v2.0 The documentation structure should reflect this by presenting appropriate information at the top level of the documentation for each version.",,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FABN-1520,,,No,,Unset,No,,,"1|hzx33q:s7q6z5xo",,,,Unset,Unset,20-27th March 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,heatherp,,,,,,,,,dev,main,,,,,,,,,true,"24/Mar/20 1:01 AM;heatherp;Nick noticed this tutorial lying around still, can we remove it under this issue? https://github.com/hyperledger/fabric-sdk-node/blob/master/docs/tutorials/app-dev-env-setup.md;;;",,,,,,,,,,,,,,,,
Client.queryChannels() not available in beta.3,FABN-1527,44611,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,nekia,nekia,19/Mar/20 8:57 PM,25/Mar/20 6:45 PM,28/Oct/23 3:25 AM,25/Mar/20 6:45 PM,,,,,,,,,,0,external,,,,,"I'd like to get all the channels that a specified peer has joined.

This one gets needed to detect adding a new channel to an organization in my application.

[https://hyperledger.github.io/fabric-sdk-node/release-1.4/Client.html#queryChannels__anchor]",,heatherp,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a4b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,nekia,,,,,,,,,,,,,,,,,,,,"25/Mar/20 6:45 PM;heatherp;Hi [~nekia], the fabric-client package was refactored into fabric-common in the 2.0.0 branch. For admin functionalities, we suggest that you use the peer cli commands, we don't have plans to add this api back into 2.0.x;;;",,,,,,,,,,,,,,,,
Channel.queryInfo() not available in beta.3,FABN-1528,44612,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,nekia,nekia,19/Mar/20 9:05 PM,25/Mar/20 6:49 PM,28/Oct/23 3:25 AM,25/Mar/20 6:49 PM,,,,,,,,,,0,external,,,,,"I'd like to get block height of a specified channel for showing it in our application. 

[https://hyperledger.github.io/fabric-sdk-node/release-1.4/Channel.html#queryInfo__anchor]",,heatherp,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a4j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,nekia,,,,,,,,,,,,,,,,,,,,"25/Mar/20 6:49 PM;heatherp;Hi [~nekia], this api was removed as part of fabric-client being refactored into fabric-common, and we don't have plans to add this back in. 
For channel admin tasks, we suggest using the peer cli commands;;;",,,,,,,,,,,,,,,,
Channel.queryInstantiatedChaincodes() not available in beta.3,FABN-1529,44613,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,nekia,nekia,19/Mar/20 9:09 PM,25/Mar/20 6:53 PM,28/Oct/23 3:25 AM,25/Mar/20 6:53 PM,,,,,,,,,,0,external,,,,,"I'd like to get the detail of instantiated chaincodes for showing them in our application.

[https://hyperledger.github.io/fabric-sdk-node/release-1.4/Channel.html#queryInstantiatedChaincodes__anchor]",,heatherp,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a4r:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,nekia,,,,,,,,,,,,,,,,,,,,"25/Mar/20 6:53 PM;heatherp;Hi [~nekia], we've removed channel admin apis from the node-sdk packages in the 2.0.0 stream. 
Chaincodes are no longer ""instantiated"" in fabric v2.0, under the new chaincode lifecycle: [https://hyperledger-fabric.readthedocs.io/en/release-2.0/chaincode_lifecycle.html]
so this api is no longer appropriate for fabric v2.0;;;",,,,,,,,,,,,,,,,
transaction timestamp & channelId in event,FABN-1530,44618,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sapthasurendran,fabDev20,fabDev20,20/Mar/20 4:59 AM,03/Sep/21 10:00 PM,28/Oct/23 3:25 AM,03/Sep/21 10:00 PM,v2.0.0,,,,,,,,,0,community-help-wanted,external,good-first-issue,sdk-triaged,,"Expose  transaction timestamp and channelId as part of getTransactionevents() in blockevent. the data is available in protobuffer - transaction - channel_header. 

 ",,bestbeforetoday,fabDev20,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:9",,,,Unset,Unset,20-27th March 2020,27-3rd Apr 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,fabDev20,lesleyannj,,,,,,,,dev,,,,,,,,,,true,"13/Jan/21 12:00 AM;lesleyannj;Information is available from within block event returned.;;;","20/Aug/21 9:48 PM;bestbeforetoday;The channel ID seems less useful since you are listening to events for a specific channel, so you already know the channel ID. Transaction timestamp is a bit fiddly to obtain programmatically from the protobuf structure so it would be a nice convenience to have it available directly from the event object.;;;",,,,,,,,,,,,,,,
Release v2.1.0,FABN-1531,44622,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,20/Mar/20 8:00 PM,20/Apr/20 5:44 PM,28/Oct/23 3:25 AM,20/Apr/20 5:44 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"Fabric v2.1.0 is due mid-April, potentially earlier. So before Easter let's have done the following list. We're going to release from master, essentially making it like a release-2.x branch, until we're due an LTS branch, at which point we'd fork a master branch again.
 * -Merge in a fix for- FABN-1532
 * -Ensure we're testing against Fabric v2.1-
 * -Update docs, references to v2.0.0 etc- - Pr #210
 * -Release, usual stuff: release notes, version number change etc PR #211-
 * -update fabric-samples to use our 2.1.0 version-
 * -Finally: version bump to 2.1.1-snapshots PR #216-",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5xu",,,,Unset,Unset,20-27th March 2020,27-3rd Apr 20,3-9th Apr 2020,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dev,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,true,,,,,,,,,,,,,,,,,
Cannot use fabric-sdk-node with non tls networks,FABN-1532,44623,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,nkl199,nkl199,21/Mar/20 12:10 AM,07/Apr/20 10:08 PM,28/Oct/23 3:25 AM,07/Apr/20 10:08 PM,,,,,,v2.0.0,,,,0,quality,sdk-triaged,,,,"When trying to connect through a gateway to a non tls farbic network, there is (seemingly) an issue with the `build[Peer|Orderer]` command because there is a null entry being passed for the pem, which results in:

`buildPeer - Unable to connect to the endorser peer0.org2.example.com due to TypeError: Channel third argument (options) must be an object with string keys and integer or string values`

`Unable to connect to the committer orderer.example.com due to TypeError: Channel third argument (options) must be an object with string keys and integer or string values`",,heatherp,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1533,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqf:1",,,,Unset,Unset,20-27th March 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,nkl199,,,,,,,,,dev,main,,,,,,,,,true,"30/Mar/20 8:52 PM;heatherp;We're not testing non-tls in release-1.4 either, but we can't cherry pick because the tests are so vastly different between branches. So, need to keep this issue open for release-1.4 work;;;",,,,,,,,,,,,,,,,
Handle non TLS connection profiles,FABN-1533,44624,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,21/Mar/20 12:23 AM,21/Mar/20 2:16 AM,28/Oct/23 3:25 AM,21/Mar/20 2:16 AM,v2.0.0,,,,,v2.0.0,,,,0,,,,,,Update the connection profile parsing and building of the service endpoints to handle missing pems.,,harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1532,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01a5v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,heatherp,,,,,,,,,,,,,,,,,,,,"21/Mar/20 2:16 AM;heatherp;Duplicating to FABN-1532;;;",,,,,,,,,,,,,,,,
Set couchdb 2.3 security,FABN-1534,44680,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,edwardaa,edwardaa,27/Mar/20 12:31 PM,19/Jun/20 7:15 PM,28/Oct/23 3:25 AM,19/Jun/20 7:15 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Should set security for couchdb wallet store when couchdb username/password is set, or else the documents are public.

For example, {{curl [http://localhost:5984/wallet/_all_docs:]}} 
h3. Before setting security
{code:java}
{""total_rows"":3,""offset"":0,""rows"":[ 
{""id"":""admin"",""key"":""admin"",""value"":{""rev"":""2-67dcf1c6561c1d33c1705f8a0519a9d7""}},{""id"":""user1"",""key"":""company2"",""value"":{""rev"":""1-a773a678afbd685f13a7a3cd4442455e""}},{""id"":""user2"",""key"":""company3"",""value"":{""rev"":""1-d8b41146b973dec3c8acef4bfaa681f4""}}
]}
{code}
h3. After setting security
{code:java}
{""error"":""unauthorized"",""reason"":""You are not authorized to access this db.""}
{code}
 

Github PR: [https://github.com/hyperledger/fabric-sdk-node/pull/184]

 ",,bestbeforetoday,edwardaa,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ae3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,edwardaa,,,,,,,,,,,,,,,,,,,,"19/Jun/20 7:15 PM;bestbeforetoday;PR was closed by raiser since in CouchDB 3.0.0 all databases are created by default as admin-only so this change is no longer necessary;;;",,,,,,,,,,,,,,,,
Error reported by node SDK,FABN-1535,44715,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,nkl199,nkl199,31/Mar/20 5:48 PM,17/Jun/21 5:44 PM,28/Oct/23 3:25 AM,17/Jun/21 5:44 PM,v2.0.0,,,,,,,,,0,node-SDK,sdk-triaged,,,,"When using a gateway to submit multiple transactions in a performance run, the follow is reported by the SDK:

2020-03-31T08:35:24.227Z - error: [EventService]: EventService[

[peer0.org1.example.com|http://peer0.org1.example.com/]
] timed out after:3000
2020-03-31T08:35:24.230Z - error: [EventService]: send[
[peer0.org1.example.com|http://peer0.org1.example.com/]
] - #1 - Starting stream to 
[peer0.org1.example.com|http://peer0.org1.example.com/]
 failed
 

Whilst the transactions are in fact successful, and the submission does not fail, the reporting of the above does raise some pretty serious red flags.",,davidkel,harrisob@us.ibm.com,lesleyannj,nkl199,silliman,yasser_mas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,2.0.0-snapshot.384,Unset,No,,,"1|hzwrme:i007r",,,,Unset,Unset,27-3rd Apr 20,3-9th Apr 2020,,,,,,,,,"Submit multiple successive transactions, observe logging",,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,lesleyannj,nkl199,silliman,yasser_mas,,,,,,,,,,,,,,,,"31/Mar/20 11:06 PM;harrisob@us.ibm.com;Is there a trace log available ?;;;","01/Dec/20 11:57 PM;lesleyannj;[~nkl199] is it possible to get trace log?;;;","17/Jun/21 5:43 PM;davidkel;Caliper now uses 2.2.3 as the default node-sdk v2 library and works without issue. This issue can be closed;;;",,,,,,,,,,,,,,
No longer able to retrieve txID from a transaction,FABN-1536,44740,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,nkl199,nkl199,06/Apr/20 8:04 PM,19/May/20 11:07 PM,28/Oct/23 3:25 AM,28/Apr/20 12:13 AM,v2.0.0,,,,,,,,,1,quality,sdk-triaged,,,,"The manner in which transaction IDs are set within transaction.js has changed. Well, changed as in removed.

Previously the txID was set on Transaction instantiation. Now it is available through the internal building of an endorsement at `transaction.js:192` and seemingly not available at all using an `evaluate` route.

Unfortunately this no longer permits a user to have access to the transactionID used within their transactions, unless they modify their smart contracts to also return the txID along with any other pertinent information.... which is a bit much for something that is in theory easily accessed by default and should not be a requirement of a smart contract.

It would be so much more user friendly (and isn't the point of the network model to be user friendly?) to enable the extraction of the txID once the endorsement has been set?

This would require:
 - reinstating the getTransactionId() method (return undefined if the txID is not set?)
 - populating a transactionId property on the transaction object, using `
 endorsement.getTransactionId()` during the `submit` route
 - populating a transactionId property on the transaction object, using an alternative method during the `evaluate` route
 - unit tests to check the trivial cases",,bestbeforetoday,harrisob@us.ibm.com,klenik,nkl199,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FGJ-86,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b89:",,,,Unset,Unset,3-9th Apr 2020,27-1st May 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,klenik,nkl199,silliman,,,,,,dev,main,,,,,,,,,true,"07/Apr/20 6:18 AM;harrisob@us.ibm.com;I do not understand the use case to have a transactionID available on the evaluate, it would not be available on the ledger ?;;;","07/Apr/20 3:48 PM;bestbeforetoday;I’m curious why the client application needs the transaction ID at all. The (only?) obvious case where it is needed is to wait for the transaction to be committed, and the transaction ID is supplied to the commit handler exactly for this purpose.;;;","07/Apr/20 3:52 PM;bestbeforetoday;Worth also bearing in mind that the transaction ID is not available in the Java SDK and, as much as practical, we want the API provide by the SDKs to be consistent. If transaction ID is added back to the Node SDK then it should be added to the Java SDK too.;;;","07/Apr/20 6:05 PM;klenik;TX IDs are the only thing (that I know of) that can provide consistent traceability across the DLT stack. Without it, you can't pair client/peer/chaincode observations, making structured log analysis a bit difficult (if not impossible) for example. You're right that it's not needed when interacting with the SDK, but applications building on the SDK might need it. So if the SDK already has the TX ID available, I don't see why such a piece of important information is hidden. ;;;","07/Apr/20 7:11 PM;bestbeforetoday;The only issue is that, since the internal rework of the SDK, the transaction ID is not generated until partway through the call to submit, so a getTransactionId function has a potentially confusing inconsistent return value; it only returns the transaction ID after the transaction has been submitted. Also, calling submit twice results in a second transaction ID being generated. I wonder if it would be worth tweaking the low-level implementation to allow the transaction ID to be generated when the Transaction object is created (as we used to in 1.4) to improve usability?;;;","07/Apr/20 10:07 PM;harrisob@us.ibm.com;Are we only going to allow the fabric-network.transaction to be used once, for submit or eval ?;;;","07/Apr/20 10:37 PM;bestbeforetoday;In 1.4 you could only submit or evaluate a Transaction once. It was an error to submit (or evaluate) a second time. I'm not sure this is ideal either. Some users I've spoken to are interested in a scenario where the orderer fails after the client has successfully sent the transaction to it for ordering/commit, and the orderer hasn't replicated the transaction state to other orderers so the transaction is lost. At the client end this will show up as a timeout waiting for a corresponding transaction commit event. At this point it might be useful for the client to be able to resubmit the same transaction, with the same transaction ID since this might prevent it accidentally being committed twice if the timeout occurred for another reason. I guess the ideal here is that the SDK takes care of this for them so client code doesn't have to worry about it, but we're not there yet.;;;","16/Apr/20 2:04 AM;harrisob@us.ibm.com;How about we add the ability for the application to request that the fabric-network.transaction set a new transaction ID and the fabric-common.proposal will allow for a transaction ID to be passed in when the proposal is built. This would make the transaction ID available prior to the submit. We will also add some checking for an application assigned transaction ID and will not allow the transaction to be submitted again once that transaction ID has been successfully submitted. The application may request a new transaction ID and then the transaction may be submitted.

[https://github.com/hyperledger/fabric-sdk-node/pull/214]

When not using the application assigned transaction ID, the flow will be same as it is now, the low level will build the transaction ID when building the proposal and the transaction ID will have it available after the submit.

 

However we could change the behavior of the fabric-network.transaction to get the transaction ID when the object is constructed and not allow submitting the transaction again unless it failed. This would make it behave as it did in 1.4, but improved in that we would be tracking the successful completion of the submit to the orderer to mark the transaction as not able to submit again. If then also add the newTransactionID method, the application get reuse the transaction.;;;","23/Apr/20 6:24 PM;bestbeforetoday;[~klenik] note that an exception thrown from the call to *Transaction.submit()* will have a *transactionId* property (in addition to all the proposal responses), so client application code should be able to easily obtain the transaction ID for cases where commit fails (or fails to happen within an expected time window) and allow correlation with activity in the orderer and peers.;;;",,,,,,,,
Default key-value-store saves corrupt data,FABN-1537,44747,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,NilsPe,NilsPe,08/Apr/20 3:44 AM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,01/Dec/20 11:59 PM,v1.4.4,,,,,,,,,0,external,sdk-triaged,,,,"I am using the 1.4 node client with a common connection profile and the default key-value-store settings. In high load scenarios the *setUserContext* call starts to throw exceptions erratically  with message _""SyntaxError: Unexpected string in JSON at position 1131""_. 

Looking at the filesystem, some of the stored user values are indeed corrupt in the way that additional character are appended.

For example a working value ends with   _END CERTIFICATE----\n""}}}_

while a broken value would end with   _END CERTIFICATE----\n""}}}""}}}_

making it an invalid json.

 

I believe this stems from the fact that the usage of fs.writefile in the default kvs implementation cannot be considered safe when there are writes to the same file.

[https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback]",,harrisob@us.ibm.com,lesleyannj,NilsPe,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zlf:4",,,,Unset,Unset,,,,,,,,,,,Call client.setUserContext rapidly with the same UserNamePasswordObject,,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,NilsPe,,,,,,,,,,,,,,,,,,,"15/Apr/20 5:48 PM;NilsPe;Hi [~harrisob@us.ibm.com],

I do not know how it works around here. What happens to reported issues?

Cheers,

Nils;;;","15/Apr/20 10:28 PM;harrisob@us.ibm.com;I have you tried the couchDB key value store ? Production applications should be using their own key value stores and not the sample ones provided. These are not intended to be used in a production system and are provided for testing and development.;;;","16/Apr/20 3:36 AM;NilsPe;Thanks for the comment.

We saw the couchDB approach but decided it was too heavy for our use-case. We opted for an in-memory store, much like the default in 2.0.

 

Apparently we missed the note that the file based store is for testing only. Maybe this can be made more clear with warnings?;;;","01/Dec/20 11:59 PM;lesleyannj;Not an issue with V2;;;",,,,,,,,,,,,,
[release-1.4]provide similar _createClients in orderer.js as in peer.js,FABN-1538,44751,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,davidkhala,davidkhala,davidkhala,08/Apr/20 10:32 AM,04/Jun/20 3:48 PM,28/Oct/23 3:25 AM,22/Apr/20 10:32 AM,v1.4.4,,,,,,,,,0,hygiene,node-SDK,sdk-triaged,,,"Now we have `_createClients` method in peer.js, allow peer object to 'reconnect' after calling `close`. 
I wish orderer.js will have similar ability. ",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01aq3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Limit transaction event listeners when using 'all',FABN-1539,44765,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,09/Apr/20 11:50 PM,12/May/20 9:34 PM,28/Oct/23 3:25 AM,12/May/20 9:34 PM,v2.0.0,,,,,v2.0.0,,,,0,sdk-triaged,,,,,Transaction event listeners are allowed to use the transaction id 'all' to receive an event notification for all transactions within a block. We should limit these to just 'ENDORSER_TRANSACTION' type and not config updates.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:",,,,Unset,Unset,27-1st May 20,1 May to 8 May,7May to 14May,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
remove roles from common connection profiles,FABN-1540,44823,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,16/Apr/20 1:16 AM,27/Apr/20 10:30 PM,28/Oct/23 3:25 AM,27/Apr/20 10:30 PM,,,,,,v2.x,,,,0,sdk-triaged,,,,,"Currently when defining the peers of a channel, the peer also includes the roles that peer has on the channel. These roles are no longer being used by the low level and have not been used by the high level. Removing the roles will allow the peers to be defined as an array of peer names the same way that the orderers are defined on the channel. We will continue to support the previous peer definitions as attribute names, the roles will be ignored.

 ",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b23:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
strategyFail message could be more helpful,FABN-1542,44835,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sapthasurendran,nkl199,nkl199,17/Apr/20 5:52 PM,03/Sep/21 9:59 PM,28/Oct/23 3:25 AM,03/Sep/21 9:59 PM,v2.0.0,,,,,,,,,0,community-help-wanted,good-first-issue,quality,sdk-triaged,,"The gateway options enable the setting of many aspects of the gateway connection, not least the event/query strategies to be used.

In the event of a strategy failure message, i receive the following stack trace:

{{2020-04-16T17:40:20.070Z - [33mwarn[39m: [TransactionEventHandler]: strategyFail: commit failure for transaction ""65acddb82ef95be4f9e918b4e63c1926d684dfb7d28f1ca0e2dd7cb2a7c227ae"": Error: No successful events received}}
{{(node:18210) UnhandledPromiseRejectionWarning: Error: No successful events received}}
{{ at AnyForTxStrategy.checkCompletion (/home/nkl199/.nvm/versions/node/v10.20.1/lib/node_modules/fabric-network/lib/impl/event/anyfortxstrategy.js:31:20)}}
{{ at AnyForTxStrategy.errorReceived (/home/nkl199/.nvm/versions/node/v10.20.1/lib/node_modules/fabric-network/lib/impl/event/transactioneventstrategy.js:61:14)}}
{{ at TransactionEventHandler.eventCallback (/home/nkl199/.nvm/versions/node/v10.20.1/lib/node_modules/fabric-network/lib/impl/event/transactioneventhandler.js:92:27)}}
{{ at CommitListenerSession.start (/home/nkl199/.nvm/versions/node/v10.20.1/lib/node_modules/fabric-network/lib/impl/event/commitlistenersession.js:27:18)}}

 

Whilst I can see the type of error and the strategy (does the Steps dance) to which it relates, it could be a little more helpful. For instance, I do not know how long the wait period was for this - and users may want to confirm that they are configuring the timeout correctly (equally that it is being respected within the strategy (Steps++)


It would be more useful if the error message was similar to:

{{Error: No successful events received within timeout <timeout_value> }}{{at AnyForTxStrategy.checkCompletion }}",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:03",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,,,,,,,,,,true,,,,,,,,,,,,,,,,,
TypeScript declaration file in fabric-common module does not match with the actual implementation,FABN-1543,44836,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,ntchjb,ntchjb,ntchjb,17/Apr/20 10:52 PM,29/Apr/20 8:46 PM,28/Oct/23 3:25 AM,29/Apr/20 8:45 PM,,,,,,,,,,0,sdk-triaged,,,,,"An implementation of a class named {{IdentityContext}} in fabric-common module have the following constructor signature

 
{code:java}
// At lib/IdentityContext.js, line 36
constructor(user = checkParameter('user'), client = checkParameter('client'))
{code}
where {{user}} is an instance of {{User}} class and {{client}} is an instance of {{Client}} class.

However, inside TypeScript declaration file, the constructor is as follow
{code:java}
// At types/index.d.ts, line 329
constructor(signerOrUserContext: IIdentity, admin: boolean)
{code}
which does not match the implementation.

There are also other type definitions that need to be fixed e.g. the signature of {{EventService.send()}} does not match with its implementation. Please see pull request in the comment below for fixes.

 ",,bestbeforetoday,ntchjb,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b4b:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,ntchjb,,,,,,,,,dev,main,,,,,,,,,true,"18/Apr/20 5:37 PM;ntchjb;PR: [https://github.com/hyperledger/fabric-sdk-node/pull/217];;;","29/Apr/20 8:46 PM;bestbeforetoday;I think your PR resolved this issue. If there is any more still to be done, go ahead and reopen it.;;;",,,,,,,,,,,,,,,
Support grpc-js,FABN-1544,44902,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,heatherp,heatherp,22/Apr/20 7:01 PM,24/Jun/20 8:55 PM,28/Oct/23 3:25 AM,15/Jun/20 9:51 PM,,,,,,,,,,0,sdk-triaged,,,,,"Currently the node-sdk depends on grpc-node, which is being deprecated and replaced by grpc-js.

In conjunction, node-sdk currently depends on protobufjs 5, which needs to be converted to protobufjs 6, in order to support grpc-js.

Will be done in master branch to begin with, unsure about release-1.4

So, current work breakdown is:
 * convert from protobufjs 5 to 6
 * convert from grpc-node to grpc-js



Need to think about whether this can be classed as a breaking change, or whether this can go into a 2.1.x release",,heatherp,robmurgai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1145,,,,,,,,,,,,,,,,,,,FABCN-49,,FABCN-395,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:",,,,Unset,Unset,27-1st May 20,1 May to 8 May,7May to 14May,15 May to 22 May 2020,22 May to 29 May,29 May to 5 June,5 June to 12 June,15 June to 19 June,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,robmurgai,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Allow to get the full config block of channel ,FABN-1545,44921,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,vitorduarte,vitorduarte,23/Apr/20 10:39 PM,06/May/20 4:31 AM,28/Oct/23 3:25 AM,28/Apr/20 10:07 PM,,,,,,,,,,0,,,,,,"The *Channel.getChannelConfigFromOrderer* only returns the *ConfigEnvelope* from block. 

{{My suggestion: This }} function should have a optional flag  *{{blockOutput}}*. That will be false as default and if it is true the return of function will be a Block. 

{{I really believe that every developer that is using the Fabric SDK Node to make network transactions, such as add a new organization, have the trouble to get the current block configuration. Because today the SDK only provides access to its envelope}}

 ",,heatherp,lepar,vitorduarte,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i014eo:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lepar,vitorduarte,,,,,,,,,,,,,,,,,,,"28/Apr/20 10:07 PM;heatherp;Hi [~vitorduarte] Thank you for taking the time to raise this issue - unfortunately this isn't something we're planning on implementing in the v2.1 branch, as we've removed admin functionalities from there.;;;","06/May/20 4:31 AM;vitorduarte;[~heatherp] thanks for the answer. I tried to find the discussion about the end of support to admin functionalities but I didn't find. As a developer I wish to do administrative operations in a high level aka not using cli, there is any recommendation? Should I use sdk in go?;;;",,,,,,,,,,,,,,,
Connect Gateway without a wallet,FABN-1546,44930,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,24/Apr/20 2:32 AM,24/Apr/20 5:52 PM,28/Oct/23 3:25 AM,24/Apr/20 5:52 PM,,,,,,,,,,0,,,,,,"*As an* application developer
*I want* to connect a Gateway using only a client identity
*So that* I am not required to create a Wallet for cases where I am using other mechanisms to store my client identity information",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FGJ-58,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bcj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"""Global"" docs page needs some clean up",FABN-1547,44950,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,sapthasurendran,heatherp,heatherp,27/Apr/20 6:19 PM,08/Sep/21 1:10 AM,28/Oct/23 3:25 AM,03/Sep/21 10:09 PM,v2.x,,,,,,,,,0,community-help-wanted,sdk-triaged,,,,"Not sure exactly where this is getting generated: [https://hyperledger.github.io/fabric-sdk-node/master/global.html]

Perhaps it's meant to contain all the apis generated by fabric-sdk-node? but there's lots of <constant> TYPE's at the start of the page, so this needs cleaning up

release-1.4 equivalent page looks ok",,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:02",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,heatherp,,,,,,,,,dev,main,,,,,,,,,true,"28/May/20 6:46 PM;bestbeforetoday;Lots of copyright comments at the beginning of source files begin with */*** instead of */** and so are being treated as JSDoc.

Some internal (non-exported) constants look to have JSDoc comments without a *@private* tag and so are incorrectly included in the docs as global members.

Other cases are where the JSDoc for functions does not correctly define the scope and so they are incorrectly included as global functions.

Really, since this single set of docs covers multiple modules, every piece of JSDoc should use *@memberof* to define which of the modules it belongs to, as we do throughout the JSDoc for _fabric-network_.;;;",,,,,,,,,,,,,,,,
Move HSM from tape to ts-scenario tests,FABN-1548,44954,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,28/Apr/20 12:44 AM,28/Apr/20 10:08 PM,28/Oct/23 3:25 AM,28/Apr/20 9:38 PM,v2.1.0,,,,,v2.1.0,,,,0,sdk-triaged,,,,,Remove the HSM testing done with js 'tape' and create HSM type script test under the cucumber scenario tests.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b84:",,,,Unset,Unset,27-1st May 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Convert remaining javascript files to typescript,FABN-1549,44959,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,heatherp,heatherp,28/Apr/20 10:11 PM,13/May/20 12:35 AM,28/Oct/23 3:25 AM,06/May/20 10:55 PM,v2.1.0,,,,,,,,,0,good-first-issue,sdk-triaged,,,,"We've still got contract.js and gateway.js lying around and this causes some problems for typescript client applications with strict typescript compilers, because that will also go and run strict checks against our code too. I think the easiest way of solving this is to convert those files to typescript too",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:9",,,,Unset,Unset,27-1st May 20,1 May to 8 May,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
NetworkConfig missing await on async call to buildChannel,FABN-1550,44968,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,29/Apr/20 4:08 AM,29/Apr/20 7:17 PM,28/Oct/23 3:25 AM,29/Apr/20 7:17 PM,,,,,,,,,,0,,,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bj7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
bug fix for _findHighest in DiscoveryEndorsementHandler,FABN-1551,44971,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Duplicate,harrisob@us.ibm.com,jbam,jbam,29/Apr/20 12:27 PM,05/May/20 10:54 PM,28/Oct/23 3:25 AM,05/May/20 10:54 PM,v1.4.5,,,,,,,,,0,external,sdk-triaged,,,,"sdk version: 1.4.8

peer.ledger_height should be a Long type object
 However, it lost the type during deep copy (JSON.parse(JSON.stringfy()).
Because peer.ledger_height lost the type, it cannot use a compare function.
it always logs when `preferred_height_gap` is provided and return Long(0) for the highest

 

2020-04-28T12:02:59.094Z - warn: [DiscoveryEndorsementHandler]: problem finding highest block:TypeError: peer.ledger_height.greaterThan is not a function
 at DiscoveryEndorsementHandler._findHighest (/app/src/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:443
 :28)
 at DiscoveryEndorsementHandler._modify_groups (/app/src/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:3
 63:20)
 at DiscoveryEndorsementHandler._endorse (/app/src/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:162:9)
 at DiscoveryEndorsementHandler.endorse (/app/src/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:120:16)
 at async Channel.sendTransactionProposal (/app/src/node_modules/fabric-client/lib/Channel.js:2801:22)
 at async Fabric.propose (/app/src/app/fabric/index.js:167:23)
 at async TransactionInvoker._invokeTransaction (/app/src/app/services/transaction-invoker/index.js:28:23)",,harrisob@us.ibm.com,jbam,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1224,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bjv:",,,,Unset,Unset,,,,,,,,,,,"Provide  preferredHeightGap for channel.sendTransactionProposal parameter

const request = {
      preferredHeightGap: 1,
      sort: 'ledgerHeight',
      chaincodeId,
      fcn,
      args,
      txId
    };
channel.sendTransactionProposal(request);",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,jbam,,,,,,,,,,,,,,,,,,,,"29/Apr/20 1:17 PM;jbam;I found a [modification|https://github.com/hyperledger/fabric-sdk-node/blob/e224076c7a072a925fe2b1c636447c2e2bb32658/fabric-client/lib/impl/DiscoveryEndorsementHandler.js#L357] and I believe it will solve the problem if it is released;;;","05/May/20 10:54 PM;harrisob@us.ibm.com;The fix for this issue was included along with FABN-1224 when back porting the discovery interest changes.

it will be published to NPM on the next release of `fabric-client@1.4.9`;;;",,,,,,,,,,,,,,,
tslint has been deprecated - it should be removed and replaced with eslint,FABN-1553,45001,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,sapthasurendran,heatherp,heatherp,05/May/20 5:36 PM,03/Sep/21 10:02 PM,28/Oct/23 3:25 AM,03/Sep/21 10:02 PM,v1.4.4,v2.1.0,,,,,,,,0,community-help-wanted,good-first-issue,sdk-triaged,,,"Details here: [https://www.npmjs.com/package/tslint]
It can be replaced by eslint",,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bor:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,lesleyannj,,,,,,,,,dev,,,,,,,,,,true,"12/Jan/21 11:45 PM;lesleyannj;Changed in new Fabric Gateway feature work.;;;",,,,,,,,,,,,,,,,
Incorrect HSM Slot Check,FABN-1554,45017,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,davidkel,thienbuinguyen,thienbuinguyen,08/May/20 1:49 PM,29/Jun/21 6:04 PM,28/Oct/23 3:25 AM,29/Jun/21 6:04 PM,v2.1.0,,,,,,,,,0,external,fabric-node-sdk,sdk-triaged,softhsm2,,"For HSM integration, the slot number that must be supplied to the _HsmX509Provider_ is incorrectly the index of a slot rather the actual slot ID. 

In particular, when a token is initialised on a slot with SoftHSM2, it is given a randomised ID (e.g. 2013651327). Passing this ID to _HsmX509Provider_ will not work since an incorrect check is performed on [line 294 of fabric-common/lib/impl/bccsp_pkcs11.js|[https://github.com/hyperledger/fabric-sdk-node/blob/v2.1.0/fabric-common/lib/impl/bccsp_pkcs11.js#L294]] that treats the slot as an index rather than the ID. This results in a ""PKCS11 slot number non-exist"" error even when a slot with that ID does exist.

This is unexpected since order of initialising the slot does not guarantee their order in the slots array. Either the token's label should be given to _HsmX509Provider_ rather than the slot number (which is how HSM integration works with the _fabric_ and _fabric-ca_ repositories) or the correct slot ID should be used. The code in _bccsp_pkcs11_ should then resolve the correct slot by going through each slot and comparing it's label or ID.",,davidkel,thienbuinguyen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/May/20 1:48 PM;thienbuinguyen;code.png;https://jira.hyperledger.org/secure/attachment/18324/code.png","08/May/20 1:48 PM;thienbuinguyen;slot.png;https://jira.hyperledger.org/secure/attachment/18325/slot.png",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i002",,,,Unset,Unset,,,,,,,,,,,"1. Generate multiple tokens with: sudo softhsm2-util --init-token --free --label SOME_LABEL --so-pin 0000 --pin 0000
2. Observe that the order of the tokens is not guaranteed with: sudo softhsm2-util --show-slots",,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,thienbuinguyen,,,,,,,,,dev,main,,,,,,,,,true,"23/Jun/21 9:02 PM;davidkel;To avoid the possibility of breaking backward compatibility and it's not known if the slot list would be different for other HSM providers, the slot mechanism will remain. But to bring it in line with fabric and to support this scenario the label option will be added. Label will be the preferred way to define your PKCS11 login parameters and if both slot and label are provided then slot will be ignored;;;",,,,,,,,,,,,,,,,
EventListener could not support 'newest' or 'oldest' as documented,FABN-1555,45052,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkhala,davidkhala,davidkhala,13/May/20 12:28 AM,19/Jun/20 7:42 PM,28/Oct/23 3:25 AM,19/Jun/20 7:42 PM,v2.1.0,,,,,,,,,0,external,sdk-triaged,,,,"We should either change `@typedef {RegistrationOpts}` to indicate that only number or number-like string are supported. 
Or we have to implement extra handling code. 
I prefer simply change documents
",,bestbeforetoday,davidkhala,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:i",,,,Unset,Unset,15 May to 22 May 2020,22 May to 29 May,29 May to 5 June,5 June to 12 June,15 June to 19 June,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,harrisob@us.ibm.com,,,,,,,,dev,main,,,,,,,,,true,"20/May/20 1:53 AM;harrisob@us.ibm.com;Would you please make this change, thanks;;;","20/May/20 12:28 PM;davidkhala;[~harrisob@us.ibm.com]WIP ;;;","19/Jun/20 7:13 PM;bestbeforetoday;Is this complete now? If so, would be good to close.;;;",,,,,,,,,,,,,,
Broken link in JSDoc tutorial for commit events,FABN-1556,45053,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,andrew-coleman,andrew-coleman,13/May/20 12:34 AM,20/May/20 9:29 PM,28/Oct/23 3:25 AM,20/May/20 9:29 PM,,,,,,,,,,0,sdk-triaged,,,,,"The link at the bottom of the following tutorial is broken:

[https://hyperledger.github.io/fabric-sdk-node/release-1.4/tutorial-transaction-commit-events.html]

 

It currently points to:

[https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/network-e2e/sample-transaction-event-handler.js]

 

but should point to:

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/test/integration/network-e2e/sample-transaction-event-handler.js]

if we want to refer back to the 1.4 branch, or for master (and typescript), it has moved to:

[https://github.com/hyperledger/fabric-sdk-node/blob/master/test/ts-scenario/config/handlers/sample-transaction-event-handler.ts]

 

 ",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:9",,,,Unset,Unset,15 May to 22 May 2020,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
SubmitTransaction fails once peer restarts,FABN-1557,45069,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,ycarmel,ycarmel,14/May/20 8:37 PM,20/May/20 8:33 PM,28/Oct/23 3:25 AM,20/May/20 8:33 PM,v2.1.0,,,,,,,,,0,External,sdk-triaged,,,,"A client application connected to Fabric using a long running Gateway connection, fails to submitTransaction once the underlying endorsing peer restarts.

The transaction itself it sent to the orderer, but the TransactionEventHandler using AllForTxStrategy marks the peer as fails and returns: ""Error: No successful events received""

 

SDK Debug logs when peer disconnects:

```\{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.026Z"",""msg"":""[EventService]: on.error - block peer:grpc://hlf-peer--karga--peer0:7051 - 1""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.030Z"",""msg"":""[EventService]: _startService[hlf-peer--karga--peer0] - #1 - on.error is an Error - Error: 2 UNKNOW
N: Stream removed""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.030Z"",""msg"":""[EventService]: _startService[hlf-peer--karga--peer0] - #1 - close all application listeners - Erro
r: 2 UNKNOWN: Stream removed""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.031Z"",""msg"":""[EventService]: _close[hlf-peer--karga--peer0] - #1 - start - called due to:: 2 UNKNOWN: Stream rem
oved""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.033Z"",""msg"":""[EventService]: _closeAllCallbacks[hlf-peer--karga--peer0] - #1 - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.034Z"",""msg"":""[EventService]: _closeAllCallbacks[hlf-peer--karga--peer0] - #1 - event registrations 0""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.034Z"",""msg"":""[EventService]: _closeAllCallbacks[hlf-peer--karga--peer0] - #1 - clear out the listener list""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.034Z"",""msg"":""[EventService]: _closeAllCallbacks[hlf-peer--karga--peer0] - #1 - end""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[Eventer]: disconnect[hlf-peer--karga--peer0] - start - hub""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[Eventer]: disconnect[hlf-peer--karga--peer0] - shutdown existing stream""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[ServiceEndpoint]: disconnect[Eventer-hlf-peer--karga--peer0] - start ""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[ServiceEndpoint]: disconnect[Eventer-hlf-peer--karga--peer0] Eventer hlf-peer--karga--peer0 - clos
ing grpc service connection hlf-peer--karga--peer0:7051""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[Eventer]: disconnect[hlf-peer--karga--peer0] - end""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[EventService]: _close[hlf-peer--karga--peer0] - #1 - closing stream 1""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.035Z"",""msg"":""[EventService]: _close[hlf-peer--karga--peer0] - #1 - end""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:09:46.036Z"",""msg"":""[EventService]: on status - status received: {\""code\"":2,\""details\"":\""Stream removed\"",\""metadata\
"":\{\""_internal_repr\"":{},\""flags\"":0}} peer:grpc://hlf-peer--karga--peer0:7051 - 1""}

``` 

 

SDK Debug logs when ""Error: No successful events received"" occurs:

```
b5f5e75398abd9bc8d98779c328c2ead31b75b03d0fd""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.128Z"",""msg"":""[Client]: getClientCertHash: gateway client - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.128Z"",""msg"":""[IdentityContext]: serializeIdentity - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.130Z"",""msg"":""[ServiceAction]: sign[EventService:hlf-peer--karga--peer0] - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.130Z"",""msg"":""[IdentityContext]: sign - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[crypto_ecdsa_aes]: ecdsa signature: Signature \{\n r:\n <BN: f92f5d97d7a38fe3b5de29b8f073039d386e617364c34bf03a3cb98d0e92b727>,\n s:\n <BN: 4f57515a4c0698dbebc8a40a3b2cb3c0add2b686a822827e9571baa181241ecb>,\n recoveryParam: 1 }""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[EventService]: send[hlf-peer--karga--peer0] - #1 - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[EventService]: send[hlf-peer--karga--peer0] - #1 - using preassigned targets""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[ServiceAction]: getSignedEnvelope[EventService:hlf-peer--karga--peer0] - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[ServiceEndpoint]: isConnectable[Eventer-hlf-peer--karga--peer0] - start ""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[Eventer]: checkConnection[hlf-peer--karga--peer0] - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.134Z"",""msg"":""[Eventer]: checkConnection[hlf-peer--karga--peer0] - end""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.135Z"",""msg"":""[AllForTxStrategy]: checkCompletion:\{\""success\"":0,\""fail\"":1,\""expected\"":1}""}
{""level"":""warn"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.135Z"",""msg"":""[TransactionEventHandler]: strategyFail: commit failure for transaction \""8213e7bd922a9b4dc9ce0fb44650fddfeefd2f5a5abf6128e6920e488d4acb1e\"": Error: No successful events received""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.135Z"",""msg"":""[TransactionEventHandler]: cancelListening called""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.136Z"",""msg"":""[Transaction]: submit[SearchApp] - use the orderers assigned to the channel""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.136Z"",""msg"":""[Channel]: getCommitters[identities] - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.137Z"",""msg"":""[Channel]: _getServiceEndpoints - start - undefined""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.137Z"",""msg"":""[Channel]: _getServiceEndpoints - Committer added groeifabriek""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.137Z"",""msg"":""[Endorsement]: newCommit[rascc] - start""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.137Z"",""msg"":""[ServiceAction]: ServiceAction.constructor - start [rascc""}
{""level"":""debug"",""fabric_node_sdk"":true,""time"":""2020-05-14T11:10:38.137Z"",""msg"":""[Proposal]: Proposal.constructor[rascc] - start ""}
``` ",,ycarmel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:4",,,,Unset,Unset,15 May to 22 May 2020,,,,,,,,,,"- Create a Gateway and connect to a peer
- Call submitTransaction (will succeed)
- restart the peer
- Call submitTransaction (will fail)
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),ycarmel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Node sdk always throws an exception,FABN-1559,45116,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,,tongliofcary,tongliofcary,20/May/20 11:58 PM,26/May/20 10:08 PM,28/Oct/23 3:25 AM,26/May/20 10:08 PM,,,,,,v2.1.0,,,,0,external,node-SDK,sdk-triaged,,,"When try to connect to a non-local Fabric network, the program will always throw an exception saying ""Error: Endorser must be connected""",,lesleyannj,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1560,,,,,,,,,,,,,,,,,,,,,,,"20/May/20 11:57 PM;tongliofcary;App.js;https://jira.hyperledger.org/secure/attachment/18333/App.js","20/May/20 11:57 PM;tongliofcary;logs.txt;https://jira.hyperledger.org/secure/attachment/18332/logs.txt","20/May/20 11:57 PM;tongliofcary;mychannel_connection_for_nodesdk.json;https://jira.hyperledger.org/secure/attachment/18334/mychannel_connection_for_nodesdk.json",,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01caj:",,,,Unset,Unset,,,,,,,,,,,"1. Setup a 2 or 3 org Fabric network,
2. Use the attached connection profile
3. Set up logging use the following command
   export HFC_LOGGING='{""debug"":""console"",""info"":""console""}'
4. Run the attached program App.js
5. Please see the attached log file. ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,tongliofcary,,,,,,,,,,,,,,,,,,,,"26/May/20 10:04 PM;lesleyannj;This ticket looks like a duplicate of #FABN-1560;;;",,,,,,,,,,,,,,,,
Not able to add a disconnected peer to a defined channel in a connection profile,FABN-1560,45117,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,21/May/20 1:22 AM,19/Aug/20 11:47 PM,28/Oct/23 3:25 AM,19/Aug/20 11:47 PM,v2.1.0,,,,,,,,,0,sdk-triaged,,,,,"When using a connection profile with channels defined with peers will fail to build if the a peer on the list fails to connect. The low level will not allow a peer to be added to a channel if it is not connected at the time that is added to the channel.

The low level should allow the peer (endorser) to be added and the connection state should be check at endorsement.",,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1559,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzi",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,dev,main,,,,,,,,,true,"14/Aug/20 9:39 PM;lesleyannj;Cherry pick to 2.2;;;",,,,,,,,,,,,,,,,
Define a reader-friendly js file to place a common-used jsDoc type definition,FABN-1561,45121,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Won't Do,davidkhala,davidkhala,davidkhala,21/May/20 1:30 PM,04/Dec/20 10:43 PM,28/Oct/23 3:25 AM,04/Dec/20 10:43 PM,,,,,,,,,,0,community-help-wanted,external,sdk-triaged,,,"One of example is if a parameter in function could support both integer, or integer-like string that could be parse into int

we add 
/**
 * @typedef {number} Integer
 */

/**
 * @typedef {integer|string} IntegerLike
 */",,davidkhala,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:004",,,,Unset,Unset,22 May to 29 May,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,lesleyannj,,,,,,,,,,,,,,,,,,,,"04/Dec/20 12:24 AM;lesleyannj;[~davidkhala] - reviewing backlog - any update on this jira?;;;","04/Dec/20 10:43 PM;davidkhala;Stale;;;",,,,,,,,,,,,,,,
embedded pem cert in connection profile fails,FABN-1562,45123,,Bug,Returned,FABN,Fabric SDK Node,software,andrew-coleman,,,High,,,tongliofcary,tongliofcary,22/May/20 12:06 AM,20/Aug/21 8:15 PM,28/Oct/23 3:25 AM,,,,,,,v2.x,,,,0,community-help-wanted,external,node-SDK,sdk-triaged,,"When use a connection profile contains a pem value with \n removed to connect to a peer, the program will fail with the following error.
```
E0521 14:58:52.275489066   32020 ssl_transport_security.cc:643] Could not load any root certificate.
E0521 14:58:52.275771340   32020 ssl_transport_security.cc:1703] Cannot load server root certificates.
E0521 14:58:52.275848967   32020 ssl_security_connector.cc:112] Handshaker factory creation failed with TSI_INVALID_ARGUMENT.
E0521 14:58:52.275915741   32020 secure_channel_create.cc:132] Failed to create secure subchannel for secure name '192.168.56.32:7002'
E0521 14:58:52.275968762   32020 secure_channel_create.cc:50] Failed to create channel args during subchannel creation.
2020-05-21T14:58:55.280Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer1.org0.example.com, url:grpcs://192.168.56.32:7002, connected:false, connectAttempted:true
2020-05-21T14:58:55.282Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.org0.example.com url:grpcs://192.168.56.32:7002 timeout:3000
2020-05-21T14:58:55.284Z - error: [NetworkConfig]: buildPeer - Unable to connect to the endorser peer1.org0.example.com due to Error: Failed to connect before the deadline on Endorser- name: peer1.org0.example.com, url:grpcs://192.168.56.32:7002, connected:false, connectAttempted:true
    at checkState (/home/ubuntu/hl/src/github.com/firstapp/node_modules/grpc/src/client.js:883:16) {
  connectFailed: true
}
```",,bestbeforetoday,tongliofcary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzxzqs:qyi",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,"Setup a fabric network, create connection json profile which contains pem field with value which has \n removed. Then try to use the connection profile to connect to a node.

Expected result is connection can be made.

Actual result is exception thrown. ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,tongliofcary,,,,,,,,,,,,,,,,,,,,"20/Aug/21 8:15 PM;bestbeforetoday;Please could you confirm whether this problem still exists with the latest v2.2 SDK, as some work was done around certificate handling since this issue was raised, which may have fixed it.;;;",,,,,,,,,,,,,,,,
Fabric CA doesn't check TLS certificate when enroll user by NodeJS Fabric SDK,FABN-1563,45007,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,,ChickJoe,ChickJoe,07/May/20 12:45 AM,02/Dec/20 12:06 AM,28/Oct/23 3:25 AM,02/Dec/20 12:06 AM,,,,,,,,,,0,fabric-ca-client,sdk-triaged,,,,"I try to enroll user like in this example: https://github.com/hyperledger/fabric-samples/blob/master/fabcar/typescript/src/enrollAdmin.ts

I change tlsCACerts.pem field in connection-org1.json for ca.org1.example.com to other randomly certificate(for example I paste TLS certificate from connection-org2.json), but unexpectedly example works successuly without errors. 

 ",,ChickJoe,lesleyannj,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:l",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ChickJoe,lesleyannj,mastersingh24,,,,,,,,,,,,,,,,,,,"23/May/20 7:46 PM;mastersingh24;[~ChickJoe]. - which version of the Node fabric-ca-client are you using?;;;","23/May/20 7:51 PM;mastersingh24;[~ChickJoe] - look at [https://github.com/hyperledger/fabric-samples/blob/master/fabcar/typescript/src/enrollAdmin.ts#L19
]

You will need to change `verify` to `true` here otherwise the client will not verify the TLS certificate from the CA;;;","23/May/20 8:10 PM;ChickJoe;[~mastersingh24] I thought the CA should check the TLS certificate when I establish a connection with it, as it happens when I connect through fabric-ca-client in bash terminal. If i paste wrong TLS cert, there will be TLS handshake error. II thought the behavior should be the same with the node fabric-ca-client. I thought server should check TLS certificate. Or I'm wrong?;;;","23/May/20 8:12 PM;ChickJoe;[~mastersingh24] 

Version of fabric-ca-server is 1.4.6

Version of Fabric SDK for Node is 1.4.8;;;","26/May/20 9:57 PM;lesleyannj;[~ChickJoe] 
You will need to change `verify` to `true` here otherwise the client will not verify the TLS certificate from the CA;;;","02/Dec/20 12:06 AM;lesleyannj;Directions for use given.;;;",,,,,,,,,,,
"adding CSR fields like organization, country , state etc during enrollment with nodejs client",FABN-1564,45143,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkhala,davidkhala,davidkhala,28/May/20 11:43 AM,23/Aug/20 10:35 AM,28/Oct/23 3:25 AM,31/Jul/20 1:22 PM,v1.4.4,v2.x,,,,,,,,0,external,sdk-triaged,,,,"Reported by community member [BrajeshA]
 [~fabDev20]
 ??adding CSR fields like organization, country , state etc during enrollment with nodejs client- seems like I can add affiliation, which is added in OU . All these work with fabric-ca-client command line but I would like to use it in nodejs??

Now fabric-ca-client only support setting common name
 (Subject CN)",,davidkhala,fabDev20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzk",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,fabDev20,,,,,,,,,dev,,,,,,,,,,true,"25/Jun/20 12:07 PM;davidkhala;Additional: this logic should also apply to similar part in `re-enroll`;;;","14/Jul/20 8:48 AM;davidkhala;[~fabDev20] It is in CR review 
See in 
https://github.com/hyperledger/fabric-sdk-node/pull/264;;;","30/Jul/20 1:29 PM;fabDev20;Thanks [~davidkhala]. This is great. ;;;","23/Aug/20 6:43 AM;fabDev20;@yuxiang liu , @bestbeforetoday , Can this change be added to 2.2.2 ?;;;","23/Aug/20 10:08 AM;davidkhala;now it is on master, if 2.2.2 is a future release. It should be there;;;","23/Aug/20 10:35 AM;fabDev20;I think release-2.2 branch was created before this commit was merged in master. It would be good to have this commit merged in release-2.2 branch.;;;",,,,,,,,,,,
Incorrect JSDoc for DefaultEventHandlerStrategies in v2.1,FABN-1565,45144,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,28/May/20 6:53 PM,28/May/20 10:24 PM,28/Oct/23 3:25 AM,28/May/20 10:00 PM,,,,,,,,,,0,sdk-triaged,,,,,"[https://hyperledger.github.io/fabric-sdk-node/master/module-fabric-network.html#.DefaultEventHandlerStrategies]

MSPID_SCOPE_ALLFORTX appears three times.

MSPID_SCOPE_ANYFORTX and NETWORK_SCOPE_ALLFORTX are missing.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jz",,,,Unset,Unset,22 May to 29 May,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
v2.0 fabric-network.contract.submit should return transaction error with TxValidationCode,FABN-1566,45158,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,30/May/20 4:31 AM,26/Jun/20 9:32 PM,28/Oct/23 3:25 AM,26/Jun/20 9:32 PM,v1.4.4,,,,,v1.4.4,,,,0,sdk-triaged,,,,,When there is an error on the submit due to a transaction event not being 'valid' the user has to parse the error message to determine the cause. The error should include the TxValidationCode as an attribute of the error.,,bestbeforetoday,harrisob@us.ibm.com,lesleyannj,MariWade,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z4",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,lesleyannj,MariWade,,,,,,,dev,release-1.4,main,,,,,,,,true,"30/May/20 4:34 AM;harrisob@us.ibm.com;users that are migrating from fabric-client had the code as part of the callback to the listener. This is the code that fabric-network is using to determine if it should throw an error.;;;","02/Jun/20 9:44 PM;bestbeforetoday;I think we did something to address this in v2.1. It might be worth doing the same thing in v1.4 to keep the API as consistent as practical and it easier for client applications to migrate forward to Fabric 2

Edit: I _thought_ we had but looking at the code... it seems not. Probably we want the same fix in v1.4 and master in that case!;;;","16/Jun/20 10:44 PM;lesleyannj;Changed completed on 1.4.
Ticket remaining open for push of change to master.;;;",,,,,,,,,,,,,,
Discovered endpoints are being added as duplicates,FABN-1567,45161,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Won't Do,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,31/May/20 10:23 PM,27/Jul/20 11:49 PM,28/Oct/23 3:25 AM,27/Jul/20 11:49 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"When using a connection profile that has peers and orderers assigned to channels and using discovery on the channel, the discovered peers and orderers will be added to the channel. When peers or orderers are requested from the channel, for example when building the event services needed for my organization, a peer will have  two services setup.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1zr",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
"jsrsasign vulnerabilties in fabric-network, fabric-ca-client npm packages",FABN-1568,45166,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,rmscott,rmscott,01/Jun/20 10:53 PM,16/Jun/20 11:47 PM,28/Oct/23 3:25 AM,16/Jun/20 11:47 PM,v1.4.4,,,,,,,,,0,external,sdk-triaged,,,,"the fabric-network, fabric-ca-client, and fabric-client npm packages need updated for vulnerabilities.  I see this with latest 1.4.x and 2.x

High Timing Attack

Package jsrsasign

Patched in >=8.0.13

Dependency of fabric-network

Path fabric-network > fabric-ca-client > jsrsasign

More info https://npmjs.com/advisories/1505",,lesleyannj,rmscott,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1w",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,15 June to 19 June,,,,,,,,"create a new directory e.g. show_error
cd show_error
npm init
npm install fabric-network
       you will see vulnerabilites at the end of the build step
npm audit  to see all the errors and vulnerabilities",,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,rmscott,,,,,,,,,release-1.4,,,,,,,,,,true,"03/Jun/20 1:13 AM;rmscott;Note: I'm using Node 10.19.0 and npm {color:#1d1c1d}6.13.4{color};;;","03/Jun/20 1:17 AM;lesleyannj;In repo while package.json has ""8.0.15"" the package-lock.json file has combination of ""8.0.15"" and  ""jsrsasign"": ""7.2.2""


Steps to reproduce:
_create a new directory e.g. show_error
cd show_error
npm init
npm install fabric-network
       you will see vulnerabilites at the end of the build step
npm audit  to _see all the errors and vulnerabilities

Found using (node 10.19.0 with npm 6.13.4)
jsrsasign shows as ""jsrsasign"": ""7.2.2"" in node_modules.
;;;",,,,,,,,,,,,,,,
Breaking API change,FABN-1569,45197,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,03/Jun/20 10:47 PM,09/Jun/20 5:55 PM,28/Oct/23 3:25 AM,09/Jun/20 5:55 PM,v2.1.0,,,,,,,,,0,sdk-triaged,,,,,"[https://github.com/hyperledger/fabric-sdk-node/pull/208] removed the async keyword from newDefaultKeyValueStore(), which has caused a breakage for tests in other components.

Suggest adding back the async keyword to newDefaultKeyValueStore(), even though the implement is now synchronous.

Check with [~btl5037] to confirm a good approach to fix.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,c7f33a9bfa1ec3d54b685a3870b3fcaa21dfe404,Unset,No,,,"1|i01b83:0i",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-network@2.1.0 depends on latest-2.1 tag of other packages,FABN-1570,45198,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,03/Jun/20 10:48 PM,16/Jul/20 11:50 PM,28/Oct/23 3:25 AM,12/Jun/20 4:58 PM,,,,,,,,,,0,sdk-triaged,,,,,Dependencies should be on specific package versions.,,bestbeforetoday,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1y",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"13/Jun/20 11:07 AM;davidkhala;Is it one of the reason of the problem when I use fabric-network to send tx proposal, it throw `Illegal buffer` error when assembling protobuf message?;;;",,,,,,,,,,,,,,,,
Add discovery options to the transaction submit,FABN-1571,45200,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,04/Jun/20 2:00 AM,14/Sep/20 9:36 PM,28/Oct/23 3:25 AM,14/Sep/20 9:36 PM,v2.0.0,,,,,,,,,0,sdk-triaged,,,,,"The discovery service provides information about the peers that may be used to improve endorsement results, for example the peer ledger height. The fabric-common discovery handler could move the peers with a higher ledger height to the top of the selection list when choosing a peer to perform an endorsement. The current default is to select randomly. The fabric-network currently has no provision to send to the discovery handler optional settings. The fabric-network gateway options for discovery should also include 'endorsementOptions' that should be passed on the endorsement.send().",,bestbeforetoday,denyeart,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8idz",,,,Unset,Unset,5 June to 12 June,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,11Sep to 18Sep,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,harrisob@us.ibm.com,yacovm,,,,,,,dev,main,,,,,,,,,true,"19/Jun/20 7:08 PM;bestbeforetoday;Do we really need this to be a configurable option? Is there a good default we could just use and everyone's happy? I've never heard anyone ask for this.;;;","28/Aug/20 1:21 AM;denyeart;Applications do need to consider height when picking endorsing peers. Consider a scenario when a new peer comes online (or gets restarted after being down for maintenance for a while). It starts processing channel block commits from block 0 and it may take a number of hours to catch up to latest channel height. You don't want applications using this peer for endorsements until it has caught up in height. Fabric hosting platforms have asked for this, so that they can bring up new peers without negatively impacting the application (getting old data back on queries, or submitting transactions with old readsets that will ultimately get invalidated). This is why the height information was added to the service discovery responses.

That being said, the definition for being 'caught up' needs to be configurable. The gossip layer shares information across peers about current peer channel heights. When this information is returned to the client app via service discovery call, some of the peer data may be a few seconds old. For example peer1 reports it is at block 1000 while peer2 reports it is at block 1001, when really both peers are caught up and the difference is simply due to a timing difference of when the peers last reported their heights via gossip. Because the SDKs cache the service discovery results, this can lead to ALL endorsements getting sent to peer2, which is not desirable. So we need a threshold that defines that if multiple peers are within N blocks of each other, then we should load balance across them rather than prefer the (slightly) higher peer.

In terms of the best default of N, maybe [~yacovm] could suggest based on typical peer reported height deviations when using default block cutting and gossip configurations.;;;","28/Aug/20 1:36 AM;yacovm;I guess what I'd do if I was the application, is that once I know I am caught up to the orderers (my latest block event matches the orderer's height or close to it), measure the mean frequency of block production in the latest couple of seconds, and derive from it how much block are produced within a time unit. Then, we know if blocks are produced seldomly or frequently (and how frequently) and given this information we can do quantization of block sequences to buckets of time units and then consider that 2 peers are of the same height if they are within a distance of some blocks.

Another approach would be to simply throw out the ""catching up"" peers - first we ""cluster"" the peers into segments of blocks according to their block heights. For example, for heights 100, 110, 130, 140 we can segment them into 2 segments of 105 and 135. Then we throw out the bottom segment of peers, etc. ;;;","09/Sep/20 10:46 PM;denyeart;https://github.com/hyperledger/fabric-sdk-node/pull/260
https://github.com/hyperledger/fabric-sdk-node/pull/315

When building a group list of peers for the discovery handler,
randomize peers with the highest ledger height. Peers with
a ledger height within one of the highest will be included.
This will avoid the same peer from being called to endorse, yet
not use peers that are not up to date.;;;",,,,,,,,,,,,,
fabricCaClient.js hygiene,FABN-1572,45203,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,davidkhala,davidkhala,davidkhala,04/Jun/20 4:01 PM,27/Jun/20 10:51 AM,28/Oct/23 3:25 AM,27/Jun/20 10:51 AM,,,,,,,,,,0,external,sdk-triaged,,,,"1. it has duplicated http stream handler codes in both  `request` and `enroll` method
2. if any method has potential to return a promise, it should be a async function",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01crf:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Use unique labels for lifecycle chaincode install,FABN-1573,45205,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,04/Jun/20 11:58 PM,06/Jun/20 12:43 AM,28/Oct/23 3:25 AM,06/Jun/20 12:43 AM,Future,,,,,,,,,0,sdk-triaged,,,,,"Scenario tests install the same (Fabcar) chaincode in several different channels using the same label during the *lifecycle chaincode install* step. Fabric now generates an error if an identical chaincode package (based on hash of the package) with the same label has previously been installed. This breaks the existing scenatio tests in the _master_ branch.

The chaincode install steps need to be changed to avoid the error described above. The simplest change is probably to include the channel name in the chaincode package label so different tests can install chaincode on the channel they are using without conflicting with identical chaincode packages that may previously have been installed for other channels.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1i",,,,Unset,Unset,29 May to 5 June,5 June to 12 June,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Support grpc-js in release-1.4,FABN-1574,45263,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,15/Jun/20 9:41 PM,02/Dec/20 12:43 AM,28/Oct/23 3:25 AM,02/Dec/20 12:43 AM,,,,,,v1.4.5,,,,0,sdk-triaged,,,,,"Currently the node-sdk depends on grpc-node, which is being deprecated and replaced by grpc-js.

In conjunction, node-sdk currently depends on protobufjs 5, which needs to be converted to protobufjs 6, in order to support grpc-js.

So, current work breakdown is:
 * convert from protobufjs 5 to 6
 * convert from grpc-node to grpc-js

 ",,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjz",,,,Unset,Unset,15 June to 19 June,19 June to 26 June,29 Jun to 6 Jul,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,NEXT TODO ITEMS,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,"02/Dec/20 12:43 AM;lesleyannj;
Driver for grpc-js in the 1.4 SDK has been removed. 





15:41
so no longer required on our end;;;",,,,,,,,,,,,,,,,
Publish v1.4.9,FABN-1575,45276,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Jun/20 12:27 AM,17/Jun/20 10:02 PM,28/Oct/23 3:25 AM,17/Jun/20 10:02 PM,,,,,,v1.4.5,,,,0,sdk-triaged,,,,,updates to allow for the publish of the v1.4.9,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1x",,,,Unset,Unset,15 June to 19 June,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish v2.1.1 non-LTS,FABN-1576,45277,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Jun/20 12:33 AM,18/Jun/20 9:38 PM,28/Oct/23 3:25 AM,18/Jun/20 9:38 PM,v2.1.0,,,,,,,,,0,sdk-triaged,,,,,"updates to allow for the publish of v2.1.1

Since this is a non-LTS version, it will be publish out of master",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z",,,,Unset,Unset,15 June to 19 June,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
return 1.4.9 to snapshot publishing,FABN-1577,45278,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Jun/20 12:36 AM,18/Jun/20 9:38 PM,28/Oct/23 3:25 AM,18/Jun/20 9:38 PM,,,,,,,,,,0,sdk-triaged,,,,,"Once the release-1.4 branch has published the 1.4.9 packages, return the branch to publishing snapshots at 1.4.10
{color:#9cdcfe}""version""{color}{color:#d4d4d4}: {color}{color:#ce9178}""1.4.10-snapshot""{color}{color:#d4d4d4},{color}",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1yi",,,,Unset,Unset,15 June to 19 June,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
return 2.1.1 to snapshot publishing,FABN-1578,45279,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Jun/20 12:39 AM,22/Jun/20 9:37 PM,28/Oct/23 3:25 AM,22/Jun/20 9:37 PM,,,,,,,,,,0,sdk-triaged,,,,,"Once the master branch has published the 2.1.1 packages, return the branch to publishing snapshots at 2.2.0, getting ready for the LTS
 {color:#9cdcfe}""version""{color}{color:#d4d4d4}: {color}{color:#ce9178}""2.2.0-snapshot""{color}{color:#d4d4d4},{color}",,bestbeforetoday,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z2",,,,Unset,Unset,15 June to 19 June,19 June to 26 June,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"19/Jun/20 6:58 PM;bestbeforetoday;We're already on 2.1.2-snapshot. Is there any benefit to changing that to 2.2.0-snapshot now? The only impact I'm seeing of that change is confusion caused by lowering the version number if we had to push out an urgent fix as 2.1.2 before 2.2.0 ships.;;;",,,,,,,,,,,,,,,,
choose and apply monorepo manager,FABN-1579,45285,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,davidkhala,davidkhala,17/Jun/20 5:50 PM,12/Jan/21 11:46 PM,28/Oct/23 3:25 AM,12/Jan/21 11:46 PM,,,,,,,,,,1,external,sdk-triaged,,,,"sdk-node has been a monorepo for a while
 Now we have `fabric-common`, `fabric-network`, `fabric-ca-client` packages in single source repos.

Other hyperledger project use different tools such as [Rush.js|https://rushjs.io/], [lerna
|https://github.com/lerna/lerna]|

We should apply one among these. It could make management easy without leave project root nor with too much manual scripting.

[~mbwhite] has successfully migrate chaincode-node to use rush.js. May he could help

Personally speaking I prefer to use Lerna, while they are quite similar. 

This would also helpful to simulating sub-project node_modules and making integration test more reliable ",,btl5037,davidkhala,jtonline,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,STL-1683,FABCN-76,FABN-909,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01d5n:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),btl5037,davidkhala,jtonline,lesleyannj,,,,,,,,,,,,,,,,,,"17/Jun/20 5:52 PM;davidkhala;Invite [~nkl199]  to participate this. ;;;","18/Jun/20 6:15 PM;jtonline;I definitely think it would be good to start using a monorepo manager for the SDK. Here's some background on why we chose Rush.js for the chaincode node monorepo.

We had used Lerna on a previous monorepo (Hyperledger Composer) and never managed to successfully lock down the versions of its dependencies: [How can I successfully lock down node module dependencies in a monorepo?|[https://stackoverflow.com/questions/46492597/how-can-i-successfully-lock-down-node-module-dependencies-in-a-monorepo]]

By default Rush.js uses pnpm instead of npm which can cause issues with some modules but we haven't had any big problems getting everything working and so far Rush.js has worked really well.;;;","19/Jun/20 1:15 AM;btl5037;Has anyone looked at npm 7.0's support for mono repos (with first class support for Lerna). Starting with 7 they have first class support for monorepos and internal dependency management. It may be worth waiting if its not a 1-to-1 mapping and waiting for the first class support npm 7 will offer.;;;","25/Jun/20 11:40 AM;davidkhala;[https://blog.npmjs.org/post/186494959890/monorepos-and-npm]


[~btl5037] Dear Bret, I have not found any clues about native support of monorepos in npm v7 roadmap
(at least not found in [here|[https://blog.npmjs.org/post/186983646370/npm-cli-roadmap-summer-2019]]);;;","25/Jun/20 12:00 PM;btl5037;I profess I didn't dig deep into it, but there is a footnote in a blog from the npm team covering the current state(or lacktherof) of monorepos that reads:

""We’re also excited to announce that we plan to bring first-class monorepo support to npm@7. If you use monorepos with npm, we need your feedback! Let us know what you like or dislike about your current monorepo solution."";;;","12/Jan/21 11:46 PM;lesleyannj;Backlog Review - Closing. ;;;",,,,,,,,,,,
fabric-network should support 'init_required' on v2 lifecycle,FABN-1580,45290,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Jun/20 11:48 PM,19/Jun/20 7:32 PM,28/Oct/23 3:25 AM,19/Jun/20 7:32 PM,v2.0.0,,,,,v2.1.0,,,,0,,,,,,"If a user deploys chaincode using v2 lifecycle and indicates that 'init_required' there is no way for the user to send a transaction with the required 'is_init' setting on the proposal.

We could add this ability to the fabric-network/transaction class in a similar way as the 'setTransient()' where it could be an addition call on the transaction instance and then be passed to the low level to tell fabric.",,bestbeforetoday,harrisob@us.ibm.com,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1470,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01d6j:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,tatsu-sato,,,,,,,,,,,,,,,,,,,"19/Jun/20 6:48 PM;bestbeforetoday;We talked about this some time back and the thinking then was that this was an admin operation – part of the chaincode lifecycle / deployment – so we would expect them to be doing this using the CLI commands not fabric-network.;;;",,,,,,,,,,,,,,,,
Explicit fabric version in Fabric Samples,FABN-1581,45315,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Invalid,,Specia1,Specia1,18/Jun/20 6:03 PM,18/Jun/20 7:36 PM,28/Oct/23 3:25 AM,18/Jun/20 7:36 PM,,,,,,,,,,0,sdk-triaged,,,,,"-For the fabric-samples 1.4 branch, docker-compose specifies the version via $IMAGE_TAG, but that version is the latest.([https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/base/peer-base.yaml#L10])-

-Also, in the case of orderer and couch db in docker-compose, the latest version is used because the version is not clearly displayed.([https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/base/docker-compose-base.yaml#L11], [https://github.com/hyperledger/fabric-samples/blob/release-1.4/first-network/docker-compose-couch.yaml#L14])-

-I think our should use a clear version, as this can be confusing for people building a network for the first time using ./byfn.sh up.-

 -- 

-If it is no longer supported other than a critical issue, I think we need to provide an environment where users can change versions for future users.-",,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01dbn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Specia1,,,,,,,,,,,,,,,,,,,,,"18/Jun/20 6:05 PM;Specia1;I'm so sorry. Please delete this issue.

I rewritten in https://jira.hyperledger.org/browse/FAB-18012;;;",,,,,,,,,,,,,,,,
Certain Gateway connection options can leak into other Gateway instances,FABN-1582,45461,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,24/Jun/20 8:08 PM,25/Jun/20 5:09 PM,28/Oct/23 3:25 AM,25/Jun/20 5:09 PM,,,,,,,,,,0,sdk-triaged,,,,,"A single object instance was used for the default Gateway options. Merging of certain user-supplied configuration values (notably including discovery settings) could cause these configuration settings to leak into other Gateway instances as they ended up sharing the same object for parts of their configuration.

Each Gateway instance needs to build its options using a new instance of the default options.

Bug was introduced in v2.1.1.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z19",,,,Unset,Unset,19 June to 26 June,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
protobufjs dependency missing from fabric-protos,FABN-1584,45472,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,25/Jun/20 5:47 PM,29/Jun/20 5:25 PM,28/Oct/23 3:25 AM,25/Jun/20 9:56 PM,v2.1.0,,,,,,,,,0,sdk-triaged,,,,,"The index.js for fabric-protos references bundle.js, which in turn include the statement:
{code:java}
require(""protobufjs/minimal""){code}
fabric-protos does not have a runtime depenency on protobufjs so this fails for client at runtime.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z0i",,,,Unset,Unset,19 June to 26 June,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
jsrsasign Vulnerability: <GHSA-p8c3-7rj8-q963>,FABN-1585,45482,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,davidkhala,davidkhala,davidkhala,27/Jun/20 10:00 AM,09/Jul/20 4:11 PM,28/Oct/23 3:25 AM,30/Jun/20 11:53 PM,,,,,,,,,,0,sdk-triaged,,,,,"[https://github.com/advisories/GHSA-p8c3-7rj8-q963]


Vulnerable versions: >= 4.0.0, < 8.0.19
Patched version: 8.0.19
Impact
Jsrsasign supports ECDSA signature validation which signature value is represented by ASN.1 DER encoding. This vulnerablity may accept a wrong ASN.1 DER encoded ECDSA signature such as:

wrong multi-byte ASN.1 length of TLV (ex. 0x820045 even though 0x45 is correct)
prepending zeros with ASN.1 INTEGER value (ex. 0x00000123 even though 0x0123 is correct)
appending zeros to signature of ASN.1 TLV (ex. 0x3082....1fbc000000 even though 0x3082....1fbc, appending zeros are ignored.)
This vulnerability was fixed by strict ASN.1 DER checking.

Here is an assessment of this vulnerability:

If you are not use ECDSA signature validation, this vulnerability is not affected.
Not ASN.1 format signature like just concatenation of R and S value is not affected such as Bitcoin.
This vulnerability is affected to all ECC curve parameters.
Risk to accept a forged or crafted message to be signed is low.
Risk to raise memory corruption is low since jsrsasign uses BigInteger class.
ECDSA signatures semantically the same to valid one may be accepted as valid. There are many malleable variants.
As discussed here, there is no standards like X9.62 which requires ASN.1 DER. So ASN.1 BER can be applied to ECDSA however most of implementations like OpenSSL do strict ASN.1 DER checking.

Patches
Users using ECDSA signature validation should upgrade to 8.0.19.

Workarounds
Do strict ASN.1 DER checking for ASN.1 encoded ECDSA signature value
",,davidkhala,shruti.gupta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jy6",,,,Unset,Unset,29 Jun to 6 Jul,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,shruti.gupta,,,,,,,,,,,,,,,,,,,,"09/Jul/20 4:10 PM;shruti.gupta;[~davidkhala] This vulnerability is present is latest 1.4.x as well. Is there any plan to fix in latest 1.4.x?;;;",,,,,,,,,,,,,,,,
1.4.9 - handle tlsCaCert options as array,FABN-1586,45516,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,02/Jul/20 4:52 AM,03/Jul/20 9:45 PM,28/Oct/23 3:25 AM,03/Jul/20 9:45 PM,v1.4.4,,,,,v1.4.5,,,,0,sdk-triaged,,,,,,,bmos299,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z6i",,,,Unset,Unset,29 Jun to 6 Jul,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bmos299,harrisob@us.ibm.com,,,,,,,,,release-1.4,,,,,,,,,,true,"02/Jul/20 5:04 AM;bmos299;The connection profile has been changed to now insert brackets for the pem:  shown below.   In the past there were no brackets.  The brackets are causing the register call to fail:
`const secret = await ca.register({enrollmentID: 'user1', role: 'client' }, adminIdentity);`

With the following message:
`Failed to register user ""user1"": TypeError [ERR_INVALID_ARG_TYPE]: The ""options.ca"" property must be one of type string, Buffer, TypedArray, or DataView. Received type object`

The code already treats this key as an array so adding the brackets is creating an array of an array.  Checkout _buildCAfromConfig(ca_info) in Client.js ;;;",,,,,,,,,,,,,,,,
1.4.9 - default verify should  be false,FABN-1587,45517,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,02/Jul/20 4:58 AM,03/Jul/20 9:54 PM,28/Oct/23 3:25 AM,03/Jul/20 9:46 PM,v1.4.4,,,,,v1.4.5,,,,0,sdk-triaged,,,,,"When building a FabricCAService from fabric-client.Client based on a common connection profile and verify has not been specified, the default should be false.",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1zbi",,,,Unset,Unset,29 Jun to 6 Jul,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Intermittent scenario test failure in master branch,FABN-1588,45528,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,02/Jul/20 7:45 PM,14/Aug/20 7:55 PM,28/Oct/23 3:25 AM,14/Aug/20 7:55 PM,v2.1.0,,,,,,,,,0,sdk-triaged,,,,,"Builds in Azure pipelines intermittently but fairly frequently fail as follows:
{noformat}
Scenario: Checkpoint contract event listening # test/ts-scenario/features/events.feature:101
   ✔ Given I place a scenario start message EVENTS FEATURE # test/ts-scenario/steps/debug.ts:11
   ✔ Given I deploy a tls Fabric network at 2.1 version # test/ts-scenario/steps/docker.ts:23
   ✔ And I use the cli to create and join the channel named eventschannel on the deployed network # test/ts-scenario/steps/cli.ts:23
   ✔ And I use the cli to update the channel with name eventschannel with config file eventschannel-anchor.tx on the deployed network # test/ts-scenario/steps/cli.ts:55
   ✔ And I use the cli to lifecycle deploy a node smart contract named events at version 1.0.0 as events for all organizations on channel eventschannel with default endorsement policy and init-required false # test/ts-scenario/steps/cli.ts:105
   ✔ And I have a memory backed gateway named event_gateway with discovery set to true for user User1 using the connection profile named ccp-tls.json # test/ts-scenario/steps/network-model.ts:18
   ✔ When I use the gateway named event_gateway to listen for full contract events named create with a new file checkpoint listener named checkpointContractListener for the smart contract named events on channel eventschannel # test/ts-scenario/steps/event-listeners.ts:44
   ✔ And I use the gateway named event_gateway to submit a transaction with args [createValue] for contract events instantiated on channel eventschannel # test/ts-scenario/steps/network-model.ts:45
   ✖ Then the listener named checkpointContractListener should have contract events with payload containing ""createValueTransactionContent"" # test/ts-scenario/steps/event-listeners.ts:113
       Error: Listener named checkpointContractListener does not have the expected contract event payload [createValueTransactionContent]
           at Object.logAndThrow (/home/vsts/work/1/s/test/ts-scenario/steps/lib/utility/baseUtils.ts:47:9)
           at Object.checkContractListenerPayloads (/home/vsts/work/1/s/test/ts-scenario/steps/lib/listeners.ts:258:13)
           at /home/vsts/work/1/s/test/ts-scenario/steps/event-listeners.ts:114:12
           at step (/home/vsts/work/1/s/test/ts-scenario/steps/event-listeners.ts:36:23)
           at Object.next (/home/vsts/work/1/s/test/ts-scenario/steps/event-listeners.ts:17:53)
           at /home/vsts/work/1/s/test/ts-scenario/steps/event-listeners.ts:11:71
           at new Promise (<anonymous>)
           at __awaiter (/home/vsts/work/1/s/test/ts-scenario/steps/event-listeners.ts:7:12)
           at World.<anonymous> (/home/vsts/work/1/s/test/ts-scenario/steps/event-listeners.ts:113:184)
{noformat}",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1zd",,,,Unset,Unset,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish v1.4.10,FABN-1589,45536,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,03/Jul/20 8:50 AM,03/Jul/20 9:54 PM,28/Oct/23 3:25 AM,03/Jul/20 9:53 PM,v1.4.0,,,,,,,,,0,sdk-triaged,,,,,Publish v1.4.10,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z5",,,,Unset,Unset,29 Jun to 6 Jul,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
No key with SKI error on Node.js restart when using HSM/PKCS11,FABN-1590,45537,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,thienbuinguyen,thienbuinguyen,03/Jul/20 10:39 AM,24/Nov/20 10:56 PM,28/Oct/23 3:25 AM,24/Nov/20 10:56 PM,Future,v2.1.0,,,,,,,,0,external,node-SDK,sdk-triaged,,,"*Description*

When using the new CryptoSuite_PKCS11 cryptosuite (for HSM storage of private keys), an in-memory SKI to key cache is used. This cache does not appear to be reinitialized on a new PKCS11 session. Hence, whenever the Node.js server is restarted (which can be common when running the HF SDK as a Docker container), all subsequent blockchain calls requiring a user context will throw a ""no key with SKI"" error.

*Expected Results*

The SKI to key cache is reinitialized on PKCS11 session login and a user context can be retrieved (i.e. `getUserContext` function).

*Actual Results*

A ""no key with SKI"" error is thrown when attempting to get the user context for a user that has their private key stored in the HSM. Main example is with Gateway connections (`gateway.connect()`).",,harrisob@us.ibm.com,lesleyannj,pooja_kamat,thienbuinguyen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1666,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf3",,,,Unset,Unset,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,20Nov to 29Nov,,,,,,"1. Enroll a bootstrap admin using the CryptoSuite_PKCS11 cryptosuite
2. Register/enroll a new identity using the admin context - observe that we can register/and enroll correctly
3. Restart the Node.js server
4. Attempt to register/enroll another identity again using the admin context (loaded from file wallet for e.g.)
5. Receive ""no key with SKI"" error as the cache has been cleared",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,pooja_kamat,thienbuinguyen,,,,,,,,,,,,,,,,,,"08/Aug/20 12:23 AM;harrisob@us.ibm.com;How do you suggest we handle this, this seems like a simulator  issue and not an issue with the actual base code.;;;","11/Aug/20 5:19 PM;thienbuinguyen;I'm imagining there's a simple way to create the expected key/ski objects from a given certificate pem. The SDK could then just reinitialise the keyToSki map after a simple check if its missing on public key imports, though I haven't looked too much at the source. Alternatively we could also save/restore the cache from a local JSON file for example.

Though, is the current design intentional? Feels a bit odd that the SDK wouldn't try to restore the session state automatically for a user if it crashes/restarts. Apparently there's no way to interact with the blockchain after a restart besides enrolling against the CA again for new certificates to populate the cache?;;;","12/Aug/20 2:39 AM;harrisob@us.ibm.com;Key/ski / (private key and pointer to the private key) and public key are generated together first and then the public key is sent to the certificate authority (CA). The CA then will return a certificate. So one is able to get the public key from a certificate however the private will remain private.

Keep in mind that this is not a real HSM, only an in-memory test tool. Actual users of a real HSM will have the ski and certificate stored for users in their own data store and then make calls to the HSM using the ski when they need it to sign something with the private key that only the HSM has access.;;;","12/Aug/20 10:46 AM;thienbuinguyen;[~harrisob@us.ibm.com] I'm confused about the separate data store part. How come storing the cert/ski isn't a part of the default HSM identities provided? It should fit right in with the current Wallet interface and seems like a common factor for everyone using a HSM, unless I've misunderstood something else.

I agree it makes sense that you would lose data required with the in memory wallet for example, but it's not so obvious that you lose data with the other provided wallets like file system and CouchDB, and require a separate data store.;;;","10/Nov/20 12:23 AM;pooja_kamat;How was this issue resolved? facing the same issue.;;;","10/Nov/20 1:28 AM;harrisob@us.ibm.com;When using a HSM simulator and restarting the simulator, you must delete the wallet data store and enroll users. The private keys will be lost when the simulator is stopped.

This is only an issue with a simulator and not a real HSM. These are used only for testing. A real HSM will persist the private keys.;;;","10/Nov/20 1:05 PM;pooja_kamat;okay, but currently I am using a vendor HSM to store the private keys, but I still seem to get this issue, the first time I run the application, it registers/enrolls the client identity and performs necessary operations using this identity, but the next time I use the same user it throws ""no key with SKI "" error.;;;","24/Nov/20 10:56 PM;lesleyannj;Solution via FABN-1666;;;",,,,,,,,,
Document release process,FABN-1591,45548,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,jtonline,jtonline,03/Jul/20 11:00 PM,16/Jan/21 7:06 PM,28/Oct/23 3:25 AM,09/Jan/21 12:25 AM,,,,,,,,,,0,sdk-triaged,,,,,Add {{RELEASING.md}} file in root of repo documenting the current release process,,jtonline,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzz",,,,Unset,Unset,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,11Jan to 18Jan,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,lesleyannj,,,,,,,,,dev,release-1.4,,,,,,,,,true,"18/Dec/20 11:23 PM;lesleyannj;Add to github  fabric-sdk-node/RELEASING.md 

_Release Process
Using v1.4 and last release being v1.4.15 as an example _

*Pre-check*
* Check top level package.json version and tag are one above the current release and correct for publishing snapshots.  
* Expect v1.4.16-snapshot and unstable-1.4.  
* If this is not the case then create PR and change.

*Submit release PR*
1.	Create jira for publish (Publish v1.4.16).
2.	Run the scripts/changelog.sh script from the project root directory. It takes 2 arguments: last release commit hash, and next release version number.
          a.	./scripts/changelog.sh <commit hash> 1.4.16
3.	Update the version and tag properties in the top-level package.json to the appropriate values.  E.g. the next release version number (to 1.4.16) and the release npm tag of latest-1.4
4.	Create release_notes/v1.4.16.txt file with text “This is a maintenance release containing bug fixes....”
5.	The merge build once the PR is merged will do the npm publishing.  Check it has npm published  https://www.npmjs.com/package/fabric-client and https://www.npmjs.com/package/fabric-common

*Tag Release*
Create in GitHub release draft with similar text to release_notes “This is a maintenance release containing bug fixes.""  
Code > Tags > Releases > Draft a new release.  [Save as draft]  Be sure to set:
•	Tag version > 1.4.16
•	Target Branch > release-1.4
‘Publish release’ publishing the release in GitHub creates a corresponding Git tag.

*Post Release Clean up*
Create jira for Reset snapshot publishing to 1.4.17
Once the release is done, create a second PR to change the top-level package.json verion and tag properties back to the ones for publishing snapshots, which for v1.4 would be 1.4.17-snapshot and unstable-1.4

*Post Release on Slack*
Mention release on fabric-dev slack channel with link to release notes
;;;","07/Jan/21 11:41 PM;lesleyannj;Update
https://github.com/hyperledgendary/hyperledgendary.github.io/wiki/Release-playbook
;;;",,,,,,,,,,,,,,,
Every eventHandlerOptions strategy is not waiting for commit to ledger,FABN-1592,45559,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,andrew-coleman,Matrixik,Matrixik,06/Jul/20 7:43 PM,08/Jul/20 12:55 AM,28/Oct/23 3:25 AM,08/Jul/20 12:55 AM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"I invoke two functions, one immediately after another, from chaincode with fabric sdk node.

First: create transaction from one company to second company.

Second: compute balance for first company.

I need to wait for first to be committed to ledger before running second so balance is calculated properly.

I found [fabric-network: How to wait for transactions to be committed to the ledger|https://hyperledger.github.io/fabric-sdk-node/master/tutorial-transaction-commit-events.html] and added this configuration to my gateway connection options:

{{eventHandlerOptions: {}}

{{strategy: DefaultEventHandlerStrategies.NETWORK_SCOPE_ALLFORTX,}}
 {{},}}

but it's still not making `contract.submitTransaction` wait for commit.

Tested all of the strategies: {{MSPID_SCOPE_ALLFORTX}}, {{MSPID_SCOPE_ANYFORTX}}, {{NETWORK_SCOPE_ALLFORTX}} and {{NETWORK_SCOPE_ANYFORTX}}. They all behave as if `{{null}}` was configured. Non of them wait for commit to ledger.

When using peer binary I can get desired behavior with {{--waitForEvent}} (using {{peer chaincode invoke -}}-waitForEvent). Then invoke properly wait for commit before returning. If I don't use -{{-waitForEvent}} I have same results like using JS code with any strategy (so wrong balance).

As a workaround for now I'm using {{setTimeout}} (in JS code) for 5000ms before executing second function from chaincode.",,andrew-coleman,Matrixik,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"07/Jul/20 10:16 PM;andrew-coleman;fabcar.js;https://jira.hyperledger.org/secure/attachment/18414/fabcar.js",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1zc9",,,,Unset,Unset,3 Jul to 10 Jul,,,,,,,,,,"fabric-network lib: v2.1.2
test-network from fabric-samples with fabric 2.1.0

Unfortunately our code is private.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,Matrixik,,,,,,,,,,,,,,,,,,,,"07/Jul/20 10:21 PM;andrew-coleman;Hi [~Matrixik], I've modified the fabcar sample and attached to this Jira.  It creates a new car, queries it, modifies the owner and queries it again.  The output I see is:

 
{code:java}
createCar has been submitted
Transaction has been evaluated, result is: {""make"":""Honda"",""model"":""Accord"",""colour"":""Black"",""owner"":""Tom""}
changeCarOwner has been submitted
Transaction has been evaluated, result is: {""make"":""Honda"",""model"":""Accord"",""colour"":""Black"",""owner"":""Dave""}
{code}
which indicates that it is waiting for the commit before moving on.

Without seeing your code, it's difficult to diagnose your observations. 

Please can you check that you are using `await` when submitting the transaction?

Failing that, please can you run the attached code against the fabcar network and let us know the results?

 ;;;","08/Jul/20 12:53 AM;Matrixik;You was right with not using `await` properly. I was using `await contract.submitTransaction` to send every transaction but this code was enclosed in two different functions and I was calling this functions without `await` before them :facepalm: ... That what you get for starting writing in completely new language.

 

Thank you for help and sorry for wasting your time. At least in the process I found bug in the docs and fixed it (PR #271) :);;;","08/Jul/20 12:55 AM;Matrixik;My code was wrongly calling functions without `await`.;;;",,,,,,,,,,,,,,
Typescript channel defines incorrect,FABN-1593,45567,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,08/Jul/20 1:03 AM,21/Jul/20 10:29 PM,28/Oct/23 3:25 AM,21/Jul/20 10:29 PM,v2.1.0,,,,,,,,,0,sdk-triaged,,,,,"addMSP should be addMsp

removeMSP should be removeMsp",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhw",,,,Unset,Unset,10 Jul to 24 Jul,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Enable discovery for collection-level endorsement policy,FABN-1595,45601,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,caveman7,caveman7,14/Jul/20 7:38 PM,14/Jul/20 10:25 PM,28/Oct/23 3:25 AM,14/Jul/20 10:25 PM,,,,,,,,,,0,,,,,,"In Fabric 2.X, collection level endorsement policy is introduced ([https://hyperledger-fabric.readthedocs.io/en/release-2.2/whatsnew.html#private-data-enhancements)]

However currently in the SDK, discovery is only limited to chaincode level endorsement policies.

Taking inspiration from the `discover` cli e.g. `
 discover endorsers -chaincode=demo channel=channel1 collection=Org1MSP_Asset -server=peer0.org1.example.com:7051`, it will be good to be able to discover collection-level policies by specifying the collection name.",,caveman7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1437,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01eib:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),caveman7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Node.js SDK support for Service Discovery endorsement ""NoPrivateReads""",FABN-1596,45604,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,15/Jul/20 2:00 AM,19/Aug/20 11:47 PM,28/Oct/23 3:25 AM,19/Aug/20 11:47 PM,,,,,,,,,,0,external,sdk-triaged,,,,"SDKs can pass collection names to the Service Discovery endorsement service, so that service discovery considers peer collection membership and collection level endorsement policy (if set).

The SD endorsement flag ""NoPrivateReads"" can also be passed to indicate to SD that peers that are not members of the collection can also be considered, e.g. in the case of blind writes which is sometimes used to transfer an asset from one org's collection to another org's collection.",,denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,FGJ-97,,,,,,,,,,,,,,,,,,,,,FAB-17308,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id",,,,Unset,Unset,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,,,,,,,,,dev,main,,,,,,,,,true,"14/Aug/20 9:41 PM;lesleyannj;Cherry pick to 2.2;;;",,,,,,,,,,,,,,,,
Enable endorsement proposal result checking,FABN-1598,45610,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,caveman7,caveman7,15/Jul/20 6:06 PM,21/Oct/20 9:41 PM,28/Oct/23 3:25 AM,21/Oct/20 9:41 PM,v2.1.0,,,,,,,,,0,external,sdk-triaged,,,,"The default logic for endorsement handling is that if any peer endorses successfully (status 200), the client will proceed to submit the transaction. Enabling status checking is a critical feature. Ideally, we can switch on/off status checking and print as info that some peers do not send 200 status. 
Furthermore, it will be beneficial to have a function to check whether endorsement result payloads match, like compareProposalResponseResult function in 1.4 ([https://hyperledger.github.io/fabric-sdk-node/release-1.4/Channel.html#compareProposalResponseResults__anchor)] ",,bestbeforetoday,caveman7,denyeart,,,,,,,,,,,,,,,FABN-1613,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qr",,,,Unset,Unset,7 Aug to 14 Aug,16Oct-23Oct,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,caveman7,denyeart,,,,,,,,dev,main,,,,,,,,,true,"04/Aug/20 11:06 PM;bestbeforetoday;In v1.4 the SDK looked at proposal response status codes to identify good responses. In v2 the SDK just looks at whether the proposal response has an endorsement attached. We've then traditionally taken the stance (based on client performance and inconsistent endorsements being a minority case) that the SDK will send the endorsed transaction to the orderer and let the transaction commit take care of checking consistency and that the endorsement policy applicable to given transaction is satisfied.

I'm not convinced that checking endorsements is work that we want to offload on the client application. The whole intent of the Fabric programming model (i.e. the fabric-network API) is to allow the client application code to work at a business application level of abstraction and avoid having to get bogged down with Fabric implementation details. I agree there is a case for doing more rigorous checking in the SDK that endorsements are consistent and meet the endorsement requirements before sending to the orderer.;;;","28/Aug/20 1:27 AM;denyeart;I agree that SDK should ensure that proposal responses match before submitting the transaction to orderer. The minor performance impact on application client side seems preferable to filling up the ledger with transactions that will ultimately get invalidated. Especially when you consider that application clients can be scaled horizontally, while transaction validation on the back end cannot.;;;",,,,,,,,,,,,,,,
discovery service not working,FABN-1599,45615,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Invalid: Works as Expected,harrisob@us.ibm.com,icarrascol,icarrascol,16/Jul/20 7:41 AM,28/Jul/20 10:50 PM,28/Oct/23 3:25 AM,28/Jul/20 10:50 PM,v2.1.0,v2.x,,,,,,,,0,discovery,External,node-SDK,sdk-triaged,,"Hello everyone, i have a test network proved and working with node sdk v1.4, discovery works fine as it generates possible combinations to endorse, i am currently trying to move to sdk v2.1 and i am having 2 problems
 1) With service discovery enabled, a network with 2 endorsing peers and a chaincode with endorsing policy of 1 out of 2, stop 1 peer and try to do an invoke, discovery service doesnt do anything and the connection fails as it is waiting for the 2 peers to be online.

The expected behavior is that discovery generates a new valid combination, that is one with the peer that is online and execute a successful invoke.

2) to enable discovery it is specified that the ports(internal and external) of the peers in the docker compose file should be the same, for some reason this doesnt work as the gateway fails connecting to the peers, so ive been using different ports(internal and external) for the peers. discovery doesnt raise any error about this, it does not work as explained before if you have a peer down but it success in the invokes if you have all the peers working.

 Peer image version ive used to test this are v2.1 and v2.2

Attached some info on my chaincode commit and invoke being successfull using the cli, also attached the error that is being thrown by the sdk with discovery enabled and 1 peer down and my peer2 config file for peer v2.2, as it is shown in the screenshot the container ports arent the same because as i said it doesnt work if i configure it like that.",,harrisob@us.ibm.com,icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"18/Jul/20 12:27 AM;icarrascol;chaincode-commit-invoke.png;https://jira.hyperledger.org/secure/attachment/18427/chaincode-commit-invoke.png","23/Jul/20 1:39 AM;icarrascol;debug.log;https://jira.hyperledger.org/secure/attachment/18435/debug.log","18/Jul/20 12:30 AM;icarrascol;peerConfig.png;https://jira.hyperledger.org/secure/attachment/18429/peerConfig.png","18/Jul/20 12:28 AM;icarrascol;sdkError.png;https://jira.hyperledger.org/secure/attachment/18428/sdkError.png","23/Jul/20 6:57 AM;icarrascol;success.log;https://jira.hyperledger.org/secure/attachment/18436/success.log",,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8i1",,,,Unset,Unset,10 Jul to 24 Jul,23 Jul to 7 Aug,,,,,,,,,"This can be verified using the test network
1.- bring up the test network with CA ./network.sh up -ca
2.- create a channel ./network.sh createChannel
3.- deploy cc ./network deployCC -ccl javascript
4.- stop a peer of the network
5.- use asset transfer basic application in javascript, just run app.js",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,icarrascol,,,,,,,,,,,,,,,,,,,,"21/Jul/20 2:49 AM;icarrascol;i came to the conclusion that for second point, this error is related to the peer listen address env variable used in the docker-compose file it needs to be the same internal and external if u set it using the external port, but if you dont set this variable, by default it uses port 7051, and i wasnt setting it.
The first error still stands as you can try with any network with a peer down and the invoke will fail without trying a new endorsing combination.;;;","23/Jul/20 12:31 AM;harrisob@us.ibm.com;When using discovery on your local system with docker, YOU  MUST assign unique port numbers to each peer AND you must set all the environment settings for the peer to use that port address AND the docker mapping of the port must use the same port address.

for example notice how 9051 is set in many places for this peer
{code:java}
  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:9051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls
        - peer0.org2.example.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9051:9051
    networks:
      - test
{code};;;","23/Jul/20 12:34 AM;harrisob@us.ibm.com;If you still have an issue with discovery place provide a trace log, set the following before running your code, dump the log entries to the console or a file
{code:java}
export HFC_LOGGING='{""debug"":""console""}'
{code};;;","23/Jul/20 1:11 AM;icarrascol;i corrected the port issues last week and discovery doesnt work, as i said if you stop a peer it doesnt check new combinations, anyways i will check now the logs as you said and add a new comment with them;;;","23/Jul/20 1:44 AM;icarrascol;i got the logs from the request, this is with a chaincode with policy 1 out of 2, my network has 2 peers and 1 orderer, with 2 peers active it works fine and i can do the invoke, if i stop 1 peer the expected behavior is a successful invoke anyways because there is still another peer alive and because discovery is enabled, i attached the logs of the attempt with a peer down, also the response from the sdk is this
{code:java}
{   
   ""payload"": {    
      ""message"": ""Endorser must be connected"",
      ""stack"": ""Error: Endorser must be connected\n    at Channel.addEndorser (/home/italo/Documentos/pagare/api_chain/node_modules/fabric-common/lib/Channel.js:259:10)\n    at buildChannel (/home/italo/Documentos/pagare/api_chain/node_modules/fabric-network/lib/impl/ccp/networkconfig.js:50:21)\n    at Object.loadFromConfig (/home/italo/Documentos/pagare/api_chain/node_modules/fabric-network/lib/impl/ccp/networkconfig.js:34:19)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at async Gateway.connect (/home/italo/Documentos/pagare/api_chain/node_modules/fabric-network/lib/gateway.js:279:13)""  }}{code}
Here is the attached log:

[^debug.log]

 ;;;","23/Jul/20 2:50 AM;harrisob@us.ibm.com;Log does not show the submit, only shows the network initialization.;;;","23/Jul/20 3:12 AM;icarrascol;i checked and it doesnt show the submit because it fails before sending,i have a try catch and it seems like it fails at the method gateway.connect()

consider, like i said before, the only thing i am changing is stopping a peer, the code is the same and it works if both peers are up and fails if one is down.

an invoke using the cli is successful if i have one peer down so there is something going on.

i think you can try the test network provided in fabric samples, i tried that one too with the same results.;;;","23/Jul/20 6:58 AM;icarrascol;i dont have the knowledge to understang how the module works but by comparing the error logs with a success log it seems like its practically at the initial steps of the connection setup that its failing, seems not related to discovery as it is not even reaching that point. The error is thrown by this method

[https://github.com/hyperledger/fabric-sdk-node/blob/release-2.2/fabric-common/lib/Channel.js#L259]

i supose at the beginng it is trying to add all the endorsing peers not taking in consideration that the endorsing of this chaincode only needs 1 peer online, so it adds the stopped peer, checks if it is connected and it fails throwing an error, if this is correct i dont think it should be the expected behaviour, as it makes the sdk useless if you have at least 1 endorsing peer offline even if its not needed. 

[^success.log];;;","24/Jul/20 6:40 AM;harrisob@us.ibm.com;I agree with your analysis. The issue is with the required state of an endorser before it is allowed to be added to a channel. During the loading of the common connection profile there is a failing peer assigned to a channel. This is a known issue https://jira.hyperledger.org/browse/FABN-1560.

I will push that Jira to the top of the work queue.;;;",,,,,,,,
Issue with fabric-network depending on latest fabric-client & fabric-ca-client,FABN-1600,45616,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,bestbeforetoday,gauravgiri,gauravgiri,16/Jul/20 3:10 PM,21/Jul/20 9:51 PM,28/Oct/23 3:25 AM,21/Jul/20 9:24 PM,,,,,,,,,,0,external,fabric-network,sdk-triaged,,,"node fabric-network (1.4.8), is inherently dependent on fabric-ca-client (latest, and not fixed), and fabric-client(also latest).

now while node fabric-client (latest) is still 1.4.10, fabric-ca-client (latest) has recently changed from 1.4.10 to 2.2.0. this also introduces dependency on fabric-common (2.2.0).

*in current state fabric-network(1.4.x) is depending on fabric-ca-client(2.2.x).*

the above change causes different User type dependencies being referred to in fabric-network (1.4.8). from fabric-common and fabric-client, with User being referred to by fabric-ca-client (2.2.0), and fabric-client (1.4.10), for below invocation: 

const ca = this.adminGateway.getClient().getCertificateAuthority();
 await *ca.register*(

{       affiliation: '',       enrollmentID: enrollmentID,       role: 'client',     }

, *this.adminGateway.getCurrentIdentity*());

Same issue could be there for other node versions of fabric-network as well, because of depending on latest version of fabric-client and fabric-ca-client.

Kindly suggest.",,bestbeforetoday,davidgsmits,gauravgiri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhr",,,,Unset,Unset,10 Jul to 24 Jul,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidgsmits,gauravgiri,,,,,,,,release-1.4,,,,,,,,,,true,"17/Jul/20 3:28 AM;bestbeforetoday;This should be fixed by the v1.4.11 release;;;",,,,,,,,,,,,,,,,
Need a setEndorsingOrganizations function that picks available endorsing peers based on Service Discovery peers query,FABN-1601,45627,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,17/Jul/20 9:00 PM,08/May/21 11:12 PM,28/Oct/23 3:25 AM,19/Aug/20 11:47 PM,,,,,,,,,,0,external,sdk-triaged,,,,"The Service Discovery 'endorsement query' can return many layouts, and if there is a very large number of layouts, SD will return a reduced list.

For many transactions, there is no need to do the endorsement query at all. For example when doing a transaction between Org1 and Org2 with private data, the client knows that they should target a Org1 peer and a Org2 peer already.

If the 'endorsement query' were used, the SDK either has to filter through many undesired layouts, or worse, desired layouts may have already been filtered out on server side.

Therefore it should be possible to setEndorsingOrganizations simply based on the simpler and faster SD 'peers query', where the SDK picks one of the returned available peers from each targeted MSPID.

In terms of picking a peer, the SDK should first consider peers with the chaincode installed (SD peers query returns this info), then use some combination of highest height and randomization. For example if two peers are within a block of each other, the SDK should randomize the choice. However if one peer is well ahead of another peer, the SDK should choose the higher height peer.",,denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABJ-526,,,,,,,,,,,,,,,,,,,,,FABN-1425,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8i4",,,,Unset,Unset,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,,,,,,,,,dev,main,,,,,,,,,true,"14/Aug/20 9:41 PM;lesleyannj;Cherry-pick to 2.2;;;",,,,,,,,,,,,,,,,
Update published docs to point to v2.2 instead of master,FABN-1603,45630,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,17/Jul/20 9:31 PM,18/Jul/20 12:03 AM,28/Oct/23 3:25 AM,17/Jul/20 11:51 PM,,,,,,,,,,0,,,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01en7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
changed to only one command about installAndGenerateCerts,FABN-1604,45634,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,Specia1,Specia1,Specia1,20/Jul/20 9:05 AM,21/Jul/20 10:10 PM,28/Oct/23 3:25 AM,21/Jul/20 10:10 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Before to [240db1dc|https://github.com/hyperledger/fabric-sdk-node/commit/240db1dcaa0fe39172e21e29342749e5a6f49f9b] commit, installAndGenerateCerts was performed by separating into two commands according to OS.

However, since the [240db1dc|https://github.com/hyperledger/fabric-sdk-node/commit/240db1dcaa0fe39172e21e29342749e5a6f49f9b] command has been integrated, the document does not describe the content, so it is necessary to modify the document.",,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01env:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Specia1,,,,,,,,,,dev,,,,,,,,,,true,"20/Jul/20 9:24 AM;Specia1;https://github.com/hyperledger/fabric-sdk-node/pull/283/;;;",,,,,,,,,,,,,,,,
Remove unnecessary dependencies from fabric-network,FABN-1605,45654,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,21/Jul/20 6:13 PM,24/Jul/20 3:03 AM,28/Oct/23 3:25 AM,24/Jul/20 3:03 AM,,,,,,,,,,0,sdk-triaged,,,,,"The following dependencies are not used at runtime:
 * fabric-ca-client
 * winston

Additionally, _fs-extra_ is not required as it was used to enable recursive mkdir (i.e. mkdirp), and this is possible with Node's built-in _fs_ package since v10.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8i",,,,Unset,Unset,10 Jul to 24 Jul,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Scheduled builds,FABN-1606,45655,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,21/Jul/20 9:51 PM,13/Aug/20 11:32 PM,28/Oct/23 3:25 AM,13/Aug/20 2:52 AM,,,,,,,,,,0,sdk-triaged,,,,,"*As a* maintainer
*I want* regular scheduled builds to run
*So that* integration issues with Fabric can be identified

Recently the v1.4 branch was broken by the removal of the _latest_ Fabric chaincode images, while Fabric peers were still defaulting to these images. This was only identified when a PR build was run but the problem existed for at least some days before this. Running a regular scheduled build would have identified this issue earlier.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8i1r",,,,Unset,Unset,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"13/Aug/20 2:52 AM;bestbeforetoday;Display of build status delivered as part of FABN-1017 in this PR: https://github.com/hyperledger/fabric-sdk-node/pull/298;;;",,,,,,,,,,,,,,,,
EventService start fails with future start block,FABN-1607,45665,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,22/Jul/20 2:08 AM,19/Aug/20 11:47 PM,28/Oct/23 3:25 AM,19/Aug/20 11:47 PM,,,,,,,,,,0,sdk-triaged,,,,,"It looks like the EventService start may fail due to a timeout before data is received on the gRPC stream in cases where a future start block is specified. Assuming this is the case, suggest resolving the EventService start promise at the point where the gRPC stream to the peer is established and do not use the data received timeout _only_ in the case where a start block has been explicitly specified.

Re-attaching a checkpoint listener may result in a future start block being specified. For example:
# Register checkpoint listener
# Remove checkpoint listener (at the point where it is up-to-date with currently committed blocks)
# Re-register the checkpoint listener
# The checkpointer's _next_ expected block is used as the start block when starting the EventService

Problem was reported on RocketChat by [~braduf] - fabric-sdk-node (9th July 20). Text from RocketChat is below.

We are using the node sdk version 2.1.0 and when using a checkpointer for a contract listener or starting the listener from the latest block, the event service times out and we can't start the listener. If we start from older blocks, the listener starts without problems, but since it repeats the newer blocks, it is not what we need. Does anyone knows why this might be happening only when starting the EventService from the latest block?

This is the error log we get:

{noformat}
2020-06-25T15:49:21.600Z - error: [EventService]: EventService[peer0.*.com.co:9051] timed out after:3000
2020-06-25T15:49:21.601Z - error: [EventService]: send[peer0.*.com.co:9051] - #1 - Starting stream to peer0.*.com.co:9051 failed
2020-06-25T15:49:21.601Z - error: [BlockEventSource]: Failed to start event service message=Event service timed out - Unable to start listening, stack=Error: Event service timed out - Unable to start listening
    at Timeout._onTimeout (*/node_modules/fabric-common/lib/EventService.js:40
{noformat}
",,bestbeforetoday,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8i1i",,,,Unset,Unset,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,lesleyannj,,,,,,,,dev,main,,,,,,,,,true,"27/Jul/20 11:51 PM;harrisob@us.ibm.com;Users have noted that with 1.4 they are setting the request timeout long enough to handle this issue. We should wait until a customer has an issue before putting in a change to 1.4.;;;","11/Aug/20 9:38 PM;bestbeforetoday;To avoid the call to *Network.addBlockListener()* blocking while the fabric-common implementation waits for a block to be received (or a timeout waiting for that block), I may change the fabric-network code to request a start block one earlier than the one the user wants (which should exist and be delivered immediately) and then filter out the spurious block in the fabric-network code.;;;","14/Aug/20 9:43 PM;lesleyannj;Cherry pick common PR to 2.2;;;",,,,,,,,,,,,,,
Endorsement error logged on successful endorsement,FABN-1608,45675,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,23/Jul/20 6:01 PM,19/Aug/20 9:49 PM,28/Oct/23 3:25 AM,30/Jul/20 9:58 PM,v2.x,,,,,,,,,0,external,sdk-triaged,,,,"Reported on RocketChat by [~sijo.c] (fabric-sdk-node 22 Jul 20):

Seeing this log in 2.2 node client (not on every run, but every other run or so) but the txn seem to go through fine.
{noformat}
2020-07-22T21:19:53.701Z - error: [DiscoveryHandler]: Error: Endorsement plan group does not contain enough peers (0) to satisfy policy (required:1)
{noformat}

Note: Using setEndorsingOrganizations(mspOrg1) in txn. Policy used ""OR('Org1MSP.peer','Org2MSP.peer')"" in fabric-samples/asset-transfer-private-data chaincode

From the chaincode logs it seem to have worked in committing to ledger, and subsequent reads are seeing the data written from above call.
My code here: https://github.com/hyperledger/fabric-samples/pull/252/",,bestbeforetoday,sijo.c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8i2",,,,Unset,Unset,23 Jul to 7 Aug,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,sijo.c,,,,,,,,,dev,main,,,,,,,,,true,"23/Jul/20 6:02 PM;bestbeforetoday;I suspect what has happened is that one endorsement plan group has an insufficient number of peers but the endorsement handling has gone on to gain successful endorsement using a different endorsement plan group. I'm not sure whether the problem here is that there is a genuine error in the endorsement plan groups returned by discovery, or whether this is an accepted situation (perhaps specific to where you have specified target orgs) and the log should simply not be at error level.;;;","27/Jul/20 2:23 AM;sijo.c;I could not confirm an actual failure in endorsement, in spite of above error seen on node client

 

fwiw: replacing discovery to use the policy on the collections, instead of explicit _setEndorsingOrganizations()_ circumvented above error statement.

 

Now switched to using this:  
{code:java}
contract.addDiscoveryInterest({ name: myChaincodeName, collectionNames: [memberAssetCollectionName, org1PrivateCollectionName] });{code};;;",,,,,,,,,,,,,,,
gateway.disconnect did not clean up client,FABN-1609,45686,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkhala,davidkhala,davidkhala,24/Jul/20 11:28 AM,28/Jul/20 10:18 PM,28/Oct/23 3:25 AM,28/Jul/20 10:18 PM,,,,,,,,,,0,external,,,,,"Reported from Chinese community  “smtCL”

The gateway disconnect could not clean up all grpc connections entirely if client is configured to use with several service endpoints inside.

This is a 'GC leakage'. It might potentially exhaust computing resource if we re-create, close and repeat for gateway.

Plan to fix this is to add a disconnect function to fabric-common/client and add a line of clean client to gateway.ts",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1448,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01exf:",,,,Unset,Unset,,,,,,,,,,,"1. create gateway with client
2. gateway connect 
3. disconnect gateway
4. repeat all above",,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Allow to opt in more details in protos.ChaincodeID,FABN-1610,45734,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,davidkhala,davidkhala,davidkhala,31/Jul/20 4:26 PM,12/Aug/20 4:22 PM,28/Oct/23 3:25 AM,12/Aug/20 4:22 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Now `fabric-common` can only set `name` property in protos.ChaincodeID

In some rare use cases, user would like to write more information to this object such as path, version for audit purpose.  

This require changes in

- fabric-common: Channel #buildChannelHeader
- fabric-common: Proposal #build",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f3f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,,,,,,,,,,true,,,,,,,,,,,,,,,,,
error: [BlockDecoder.js]: Unable to decodeEndorserTransaction,FABN-1611,45771,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,sschulz-t,sschulz-t,10/Aug/20 6:19 PM,19/Aug/20 11:48 PM,28/Oct/23 3:25 AM,19/Aug/20 11:48 PM,,,,,,,,,,0,external,sdk-triaged,,,,"I am facing an issue running the hyperledger explorer in my setup. 

You can find my original issue here: https://jira.hyperledger.org/browse/BE-797

 

As it turns out, BlockDecoder.js fails to process rangeQueryInfoProto.raw_reads in my setup:
{code:java}
2020-08-05T08:26:33.348Z - error: [BlockDecoder.js]: Unable to decodeEndorserTransaction :: TypeError: rangeQueryInfoProto.raw_reads is not iterable
2020-08-05T08:26:33.348Z - error: [BlockDecoder.js]: Unable to decodeEndorserTransaction :: TypeError: rangeQueryInfoProto.raw_reads is not iterable
at decodeRangeQueryInfo (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1515:49)
at decodeKVRWSet (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1468:37)
at decodeReadWriteSets (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1443:22)
at decodeChaincodeAction (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1387:29)
at decodeProposalResponsePayload (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1378:40)
at decodeChaincodeEndorsedAction (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1356:56)
at decodeChaincodeActionPayload (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:1301:19)
at decodeEndorserTransaction (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:836:22)
at decodeBlockDataEnvelope (/opt/explorer/node_modules/fabric-common/lib/BlockDecoder.js:811:28){code}
The corresponding lines are in [https://github.com/hyperledger/fabric-sdk-node/blob/v2.1.1/fabric-common/lib/BlockDecoder.js]
1512	if (rangeQueryInfoProto.raw_reads) \{
1513		range_query_info.raw_reads = {};
1514		range_query_info.raw_reads.kv_reads = [];
1515            for (const kVReadProto of rangeQueryInfoProto.raw_reads) {
To me that looks like a typo, wouldn't

rangeQueryInfoProto.raw_reads.kv_reads 

make more sense instead of 

rangeQueryInfoProto.raw_reads

in this place?
 ",,lesleyannj,nekia,sschulz-t,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhq",,,,Unset,Unset,7 Aug to 14 Aug,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,nekia,sschulz-t,,,,,,,,dev,main,,,,,,,,,true,"14/Aug/20 9:39 PM;lesleyannj;Cherry pick to 2.2;;;",,,,,,,,,,,,,,,,
Cherry pick need changes from master to 2.2,FABN-1612,45827,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,14/Aug/20 11:40 PM,19/Aug/20 11:47 PM,28/Oct/23 3:25 AM,19/Aug/20 11:47 PM,,,,,,,,,,0,sdk-triaged,,,,,"This PR will cherry pick
FABN-1560 add disconnected peer to channel (#288)
FABN-1596 add noPrivateReads (#293)
FABN-1601 discovery required organizations (#291)
FABN-1607 Allow future startBlocks on EventService (#286)
FABN-1608 remove error message from discovery (#289)
FABN-1611 Blockdecoder needs kv_reads array (#297)",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqw",,,,Unset,Unset,7 Aug to 14 Aug,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Client flexibility and validations for handling peer proposal responses,FABN-1613,45833,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,gauravgiri,gauravgiri,17/Aug/20 4:14 PM,09/Sep/20 11:14 PM,28/Oct/23 3:25 AM,09/Sep/20 11:14 PM,v1.4.4,v2.0.0,,,,v1.4.5,v2.0.0,,,0,external,,,,,"In current implementation of fabric-network’s, Transaction.submit(), client flexibility to introspect the peer proposal responses before sending them to the orderer doesn’t exist:

1. Option to decide whether something should be sent to the orderer or not:

   a) if responses return an error, the application may still want these committed to the blockchain, currently the gateway would not allow this if all responses return the same thing

   b) A client may want to check the responses, even if they are a success the results may not be accepted by the client and thus not want them committed to the blockchain. Currently the gateway would submit them without any choice

2. State Based Endorsements: The client may be the only part of the system that knows if it has satisfied the endorsement policy because of the use of State based endorsement, so would need the option to not try to send something that it knows won't validate

3. Peer Proposal Responses Mismatch w.r.t. RW sets: The client may want the option to not send to the orderer if proposals don't match and prevent further processing of these invalid transactions, and not send to orderer.

4. Private Data Transactions: In private data environment committing transactions that will be registered as invalid caused various request by gossip to retrieve data that it can't get. This could be avoided as the client could detect what would be an invalid transaction and not submit to the orderer.

Affected versions: 1.4.x, 2.x",,gauravgiri,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1598,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01flv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gauravgiri,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"09/Sep/20 11:14 PM;harrisob@us.ibm.com;read/write set checking will done during discovery endorsement with NodeSDK v2.2;;;",,,,,,,,,,,,,,,,
Ability for client to selectively target Orgs for endorsement (different from chaincode endorsement policy),FABN-1614,45839,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,gauravgiri,gauravgiri,18/Aug/20 5:04 PM,09/Sep/20 11:16 PM,28/Oct/23 3:25 AM,09/Sep/20 11:16 PM,v1.4.4,,,,,v1.4.5,,,,0,external,,,,,"In the current implementation of fabric-network, the transaction is submitted to Org Peers for endorsements, as per the default chaincode endorsement policy.

However for State Based Endorsement (SBE), we need capability to target Orgs for endorsement different than chaincode endorsement policy.  

 

Current Workaround:

In our current scenario, working with fabric-network 1.4.x, we have default chaincode endorsement policy for 1 out N Orgs endorsing. However for create asset transactions we modify the endorsement policy for the key to be 2 specific Orgs(instead of any 1 default of chaincode) using SBE. 

The current workaround in place is setEndorsingPeers on Transaction, and then submit the transaction.",,gauravgiri,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fmr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),gauravgiri,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"09/Sep/20 11:16 PM;harrisob@us.ibm.com;This is in v2.2;;;",,,,,,,,,,,,,,,,
Can't run retriveImage,FABN-1615,45900,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,Specia1,Specia1,19/Aug/20 7:13 AM,02/Dec/20 12:51 AM,28/Oct/23 3:25 AM,02/Dec/20 12:09 AM,,,,,,,,,,0,community-help-wanted,external,sdk-triaged,,,"I can't run `npm run retriveImage`

However, the readme file write to run using that npm.( https://github.com/hyperledger/fabric-sdk-node#run-integration-tests )

The readme file needs to be modified.",,lesleyannj,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zll:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,Specia1,,,,,,,,,,,,,,,,,,,,"08/Sep/20 10:13 PM;lesleyannj;[~Specia1] please consider submitting a PR for the readme update for review.;;;","02/Dec/20 12:09 AM;lesleyannj;Readme looks like it has been updated.  Please re-open if still an issue and provide further information.;;;",,,,,,,,,,,,,,,
Publish 2.2.1,FABN-1616,45907,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,19/Aug/20 11:46 PM,22/Aug/20 12:16 AM,28/Oct/23 3:25 AM,22/Aug/20 12:16 AM,,,,,,v2.0.0,,,,0,,,,,,Publish update to the NodeSDK 2.2.1,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fqb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
No inputs were found in config file node_modules/fabric-network/tsconfig.json,FABN-1617,45910,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,caveman7,caveman7,20/Aug/20 2:05 PM,09/Sep/20 6:16 PM,28/Oct/23 3:25 AM,09/Sep/20 6:16 PM,v2.1.0,,,,,,,,,0,external,sdk-triaged,,,,"This is has no impact on functionality but i keep seeing this message popup in my code editor when using {{fabric-network@2.2.0:}}

No inputs were found in config file '/path/to/project/node_modules/fabric-network/tsconfig.json'. Specified 'include' paths were '[""src/""]' and 'exclude' paths were '[""node_modules/""]'",,bestbeforetoday,caveman7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id2",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,caveman7,,,,,,,,,dev,main,,,,,,,,,true,"20/Aug/20 6:21 PM;bestbeforetoday;I think *tsconfig.json* just needs to be included in the *fabric-network/.npmignore* file to avoid it being packaged at publish time.;;;",,,,,,,,,,,,,,,,
Prepare for 2.2.2,FABN-1618,45913,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,20/Aug/20 10:40 PM,21/Aug/20 5:34 AM,28/Oct/23 3:25 AM,21/Aug/20 5:34 AM,,,,,,,,,,0,,,,,,Return the 2.2.1 to publish snapshots for 2.2.2,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01frn:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Discovery Handler does not set the Organization propertly,FABN-1619,45914,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,21/Aug/20 12:12 AM,26/Aug/20 4:41 AM,28/Oct/23 3:25 AM,26/Aug/20 4:41 AM,v2.0.0,,,,,,,,,0,,,,,,The low level discovery handler should set the organization from the requiredOrgs argument. The internal endorsement plan did not contain the peer list.,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01frv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish 2.2.2,FABN-1620,45921,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,22/Aug/20 12:19 AM,26/Aug/20 4:41 AM,28/Oct/23 3:25 AM,26/Aug/20 4:41 AM,,,,,,,,,,0,,,,,,Publish 2.2.2,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ft7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
v1.4 - Need to be able to get channel capabilities,FABN-1621,45937,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,lquintai,lquintai,26/Aug/20 10:28 PM,09/Sep/20 11:36 PM,28/Oct/23 3:25 AM,09/Sep/20 11:36 PM,v1.4.4,,,,,,,,,0,node-SDK,sdk-triaged,,,,"When dealing with networks with both v1 and v2 channels, we need to be able to distinguish them. To do this we need the channel capabilities to be accessible.

Please add a method that returns this info.

Note: tried to raise this as an improvement but didn't have that option, so left as bug.",,lquintai,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqz",,,,Unset,Unset,7 Aug to 14 Aug,4 Sep to 11 Sep 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lquintai,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Prepare for 2.2.3,FABN-1622,45949,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,29/Aug/20 10:06 PM,09/Sep/20 11:36 PM,28/Oct/23 3:25 AM,09/Sep/20 11:36 PM,,,,,,,,,,0,sdk-triaged,,,,,"set the package.jsons to be for
{color:#a31515}2.2.3-snapshot{color}",,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqzi",,,,Unset,Unset,7 Aug to 14 Aug,4 Sep to 11 Sep 20,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update elliptic dependency due to security vulnerability with v6.5.2,FABN-1623,45961,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,nognjanovic,nognjanovic,01/Sep/20 7:20 AM,16/Sep/20 5:31 PM,28/Oct/23 3:25 AM,16/Sep/20 5:31 PM,v1.4.4,v2.x,,,,,,,,0,external,sdk-triaged,,,,"Please see issue with elliptic 6.5.2 here:

[https://github.com/indutny/elliptic/issues/226]

 

It appears that fabric-common 2.2.0 and fabric-client 1.4.11 both still have elliptic 6.5.2 as a dependency. Various solutions are reporting a high-severity vulnerability with this version of elliptic and it appears the vulnerability has been addressed in version 6.5.3.

 

I wasn't able to find anything else regarding this issue in relation to Fabric SDK, but is this a known issue and are there any plans to address this? The open vulnerability raises potential issues with using the Node SDK for both 2.x and 1.4.x, as fabric-network appears to have fabric-common or fabric-client dependencies, based on the version used. ",,lesleyannj,nognjanovic,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id4",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,nognjanovic,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"16/Sep/20 5:31 PM;lesleyannj;Updated to 6.5.3 in master, 2.2 and 1.4 branches.;;;",,,,,,,,,,,,,,,,
Gateways unusable if a peer connect fails at start-up,FABN-1624,45962,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,thienbuinguyen,thienbuinguyen,01/Sep/20 1:18 PM,16/Sep/20 11:51 PM,28/Oct/23 3:25 AM,16/Sep/20 11:51 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"When connecting a gateway object, if some peer is unavailable then the gateway will be unusable despite there being other peers available (if any).

 

For example, suppose we have discovery Peers A and B. If Peer A is offline, connecting the gateway object will throw an error for Peer A (see the _gateway.connect()_ call). Because of this, the entire gateway cannot be used to query/invoke Peer B or any non-discovery peers despite them being online.


A workaround is to have multiple connection profiles with a subset of the peers to mitigate when some of them could be offline, but this seems overly convoluted. I propose the gateway connect should always succeed if at least 1 peer in the connection profile is available, and perhaps return a list of peer names that failed to connect instead.

 

*Expected behaviour:*

Gateways require no peers (or perhaps 1 of _n_ to work with the current design) to be available on start-up connection.

 

*Actual behaviour:*

Gateways throw an error if not all connection profile peers are reachable on start-up resulting in an unusable gateway object and no possible queries/invokes from that gateway.

 

 ",,btl5037,lesleyannj,thienbuinguyen,,,,,,,,,,,,,,,FABN-1635,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8idu",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,"1. Start a network with 2 peers in the same org
2. Bring down 1 of the peers
3. Start the Node API with a connection profile (ccp) containing both peers
4. Register/enroll as normal
5. Instantiate a gateway and attempt to connect it via the ccp
6. Observe that the gateway cannot be used to query the other available peer due to the thrown error",,Unset,,,,,,Unset,,Unset,,(Please add usage information),btl5037,lesleyannj,thienbuinguyen,,,,,,,,dev,main,,,,,,,,,true,"02/Sep/20 2:58 AM;btl5037;What was the actual error you saw, presumably since you are using Service Discovery so you couldn't meet the requirements of the endorsement policy and thus it failed. In your example what is your endorsement policy, if you need two peers, and you only provided one org's connection information to Service Discovery, then it couldn't satisfy the policy with the remaining one peer.;;;","02/Sep/20 4:51 PM;thienbuinguyen;You're correct I'm using service discovery. My endorsement policy is 'OR(""Org1MSP"", ""Org2MSP"")' (using a slight modification of the byfn sample v2.2). To clarify, I can query/invoke directly via CLI on the remaining peer (peer0.org1.example.com when taking peer1.org1.example.com offline).

Example logs when attempting to connect the gateway with an offline peer:

```
2020-09-02T07:11:38.398Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Discoverer- name: peer1.org1.example.com, url:grpcs://localhost:8051, connected:false, connectAttempted:true
2020-09-02T07:11:38.398Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.org1.example.com url:grpcs://localhost:8051 timeout:3000
```

The resultant gateway can't be used to retrieve a network/contract because it throws errors, ignoring the successful connection with peer0.org1.example.com. Calls to gateway.getNetwork() also throws similar errors, meaning we can't call network.getContract() to query/invoke.;;;","09/Sep/20 10:37 AM;btl5037;We've been looking into this, and it appears there is no failover logic for choosing the peer it is going to use when using Service Discovery. An enhancement is needed on the SDK to have the SDK automatically failover if the peer is unavailable to one of the other peers mentioned in the connection profile.;;;","14/Sep/20 10:07 PM;lesleyannj;Master and 2.2 branches;;;",,,,,,,,,,,,,
submitTransaction() fails with Discovery error if previous promise is not resolved,FABN-1625,45971,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,calanais,calanais,03/Sep/20 6:37 PM,16/Oct/20 6:27 AM,28/Oct/23 3:25 AM,16/Oct/20 6:27 AM,,,,,,,,,,1,sdk-triaged,,,,,"tested with same effect on fabric-network 2.2.0, 2.2.1 and 2.2.2

In this code, if more than one submitTransaction is called, but the promises are collected and not 'awaited' for, the second submitTransaction fails with 

 
Error: No discovery results found
    at DiscoveryService.getDiscoveryResults (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-common/lib/DiscoveryService.js:367:10)
    at DiscoveryHandler.endorse (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-common/lib/DiscoveryHandler.js:161:40)
    at Endorsement.send (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-common/lib/Proposal.js:408:29)
    at Transaction.submit (/home/matthew/github.com/examples/basic-app-nodejs/node_modules/fabric-network/lib/transaction.js:212:52)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
 

 

 

let promises = [];
 for (let x = 0; x < 2; x++) {

let p = contract.submitTransaction('createMyAsset', `id:${x+6061}`,`BondAlias:${x}`);

}
 await Promise.all(promises);

 

 ",,calanais,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1646,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qz",,,,Unset,Unset,7 Aug to 14 Aug,9Oct to 16Oct,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"16/Oct/20 6:27 AM;harrisob@us.ibm.com;Fixing this issue with FABN-1646;;;",,,,,,,,,,,,,,,,
Periodic Cycle to check Vulnerabilities on Repo,FABN-1626,45976,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,lesleyannj,lesleyannj,lesleyannj,04/Sep/20 11:59 PM,18/Nov/20 8:25 PM,28/Oct/23 3:25 AM,18/Nov/20 8:25 PM,,,,,,,,,,0,sdk-triaged,,,,,,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"04/Sep/20 11:54 PM;lesleyannj;image-2020-09-04-15-54-58-889.png;https://jira.hyperledger.org/secure/attachment/18620/image-2020-09-04-15-54-58-889.png",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf",,,,Unset,Unset,13Nov-20Nov,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,dev,release-1.4,main,,,,,,,,true,,,,,,,,,,,,,,,,,
The result of BlockDecoder.decode for Config block is incorrect,FABN-1627,45981,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,nekia,nekia,06/Sep/20 2:23 PM,17/Sep/20 9:34 PM,28/Oct/23 3:25 AM,17/Sep/20 9:34 PM,,,,,,,,,,0,external,sdk-triaged,,,,"The following keys have been ignored in BlockDecoder.decode()
 * .data.data[0].payload.data.config.channel_group.values.*Capabilities*

 * .data.data[0].payload.data.config.channel_group.groups.Application.values.*Capabilities*

 * .data.data[0].payload.data.config.channel_group.groups.Orderer.values.*Capabilities*

 * .data.data[0].payload.data.config.channel_group.groups.Orderer.groups.[Orderer MSP ID].values.*Endpoints*

 * .data.data[0].payload.data.config.channel_group.groups.Application.values.*ACLs*

I think that another cases for these values should be added to the following switch block:
 [https://github.com/hyperledger/fabric-sdk-node/blob/f31f64a1d3fb2d4cd7678e859e9447ab2537130c/fabric-common/lib/BlockDecoder.js#L1030]
  ",,harrisob@us.ibm.com,lesleyannj,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8y",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,nekia,,,,,,,,dev,main,,,,,,,,,true,"15/Sep/20 8:38 AM;harrisob@us.ibm.com;I will add capabilities and ACLs

I do not see *Endpoints* as a value of an Orderer group in a config, I do see Endpoints with a Discovery response on an Orderer. Orderer groups have *OrdererAddresses* which are being decoded.

;;;","15/Sep/20 9:57 PM;lesleyannj;Required on master and 2.2;;;","17/Sep/20 6:23 PM;lesleyannj;[~harrisob@us.ibm.com] I see commits to 2.2 and master branches, can this ticket be closed?;;;",,,,,,,,,,,,,,
publish 1.4.12,FABN-1628,45982,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,08/Sep/20 1:48 AM,09/Sep/20 11:35 PM,28/Oct/23 3:25 AM,09/Sep/20 11:35 PM,,,,,,,,,,0,sdk-triaged,,,,,Publish 1.4.12,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id1",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
release-2.2 snapshot publishing,FABN-1629,45984,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,08/Sep/20 3:22 AM,25/Sep/20 5:41 PM,28/Oct/23 3:25 AM,09/Sep/20 6:21 PM,,,,,,,,,,0,sdk-triaged,,,,,set release-2.2 to publish snapshot,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqzz",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
release-2.3 snapshot publishing,FABN-1630,45985,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,08/Sep/20 3:23 AM,09/Sep/20 6:21 PM,28/Oct/23 3:25 AM,09/Sep/20 6:21 PM,,,,,,,,,,0,sdk-triaged,,,,,set master to release-2.2 snapshot publishing,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqzy",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,dev,,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-common doesn't declare it's dependency on long in package.json,FABN-1631,45987,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Low,Done,davidkel,davidkel,davidkel,08/Sep/20 6:57 PM,09/Sep/20 1:17 AM,28/Oct/23 3:25 AM,09/Sep/20 1:17 AM,v2.x,,,,,v2.x,,,,0,sdk-triaged,,,,,fabric-common makes use of the long package but doesn't explcitly declare this in package.json as it can pick it up from fabric-network but standalone use of fabric-common will have a problem.,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z99",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve SDK load balancing and fail-over for ordering service nodes,FABN-1632,45990,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,aim8526,ptippett,ptippett,09/Sep/20 7:50 AM,17/Oct/20 3:17 AM,28/Oct/23 3:25 AM,15/Sep/20 9:56 PM,v1.4.6,v2.1.0,,,,,,,,0,external,operator,sdk-triaged,,,"Currently, at least for the Node SDK, when using service discovery and selecting which orderer to use when submitting a transaction, the SDK will iterate through the list of available orderers in the same sequence on each transaction.

 

This is far from ideal since if the orderer(s) at the front of the list are offline, the application will need to wait for those to time out and for the SDK to find a good orderer on each and every transaction.  Users are reporting that this causes delays in their application.

 

There are several complex ways to solve this, but some possible simpler ones are:

1 - Have the SDK at least remember the last orderer (or peer) that worked and continue to use that one until it fails.  At which point the SDK can go through the list and select a new endpoint like it does today.  The benefit of this is the SDK only needs to remember one bit of information and there's no complex cases around removing possible nodes from the list, how often to recheck, when to add them back, etc.  The downside is this does not load balance at all, but neither does the current approach.

 

2 - Have the SDK continue to go through the list on every call, but randomize the list each time so that the orderer it picks will be different.  The benefit of this approach is the SDK doesn't have to remember anything since it's only changing the order of the list each time.  Downsides I see are the time it takes to randomize the list if done on every transaction (this could be negligible however) and the fact that if a high percentage of the orderers or peers are bad (2 bad out of 3 for example), you'd still hit the bad one around 67% of the time.

 

3 - Some variation of option 2 where the bad endpoint(s) are removed from the list and put back later.  The complexity here is you'd have to keep track of who you removed and periodically put them back after some amount of time.  One issue I see here is during a rolling restart you may end up in a case where ALL of them have been removed and none added back yet, so the edge cases here concern me.

 

These are what I came up with quickly.  I'm sure there are better ones.

 

A couple of other things:

1 - It'd be nice to get something simpler that improves the current behavior without much effort vs waiting for a more complex solution that may scale or load balance better, etc.
2 - I also believe that while it'd be nice for all SDKs to behave the same, I think the priority should be node, then java, then go or others.  In short, don't wait to fix it in all of them before releasing one of them.

 

Listing as high since we have users with this issue and since there's a big push to set up multiple distributed nodes for high availability but at med to high transaction rates, the sdk behavior still causes unacceptable delays if a component is taken offline.",,denyeart,harrisob@us.ibm.com,lesleyannj,ptippett,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1635,,FGJ-93,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8x",,,,Yes,Unset,11Sep to 18Sep,,,,,,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,lesleyannj,ptippett,yacovm,,,,,,dev,release-1.4,main,,,,,,,,true,"09/Sep/20 8:28 AM;yacovm;{quote}Have the SDK at least remember the last orderer (or peer) that worked and continue to use that one until it fails. At which point the SDK can go through the list and select a new endpoint like it does today. The benefit of this is the SDK only needs to remember one bit of information and there's no complex cases around removing possible nodes from the list, how often to recheck, when to add them back, etc. The downside is this does not load balance at all, but neither does the current approach.
{quote}
You can perhaps do a variation of this- if the list doesn't exist, fetch it. When you fetch the list, to re-arrange it randomly and then pick the next orderer in the list, try it, and if it fails go to the next, etc. When finding one that is ""good"", move it to the beginning of the list. It should provide some degree of load balancing across different clients.;;;","10/Sep/20 1:58 AM;harrisob@us.ibm.com;So what if we fetch the list and cache it for the user's acceptable time (default 5 minutes) and then on each NodeSDK submit, randomize the list. Check the connection of the first one on the randomized list and if successful send the commit request. If either actions fail, try the next on the list. When the connection check fails, remove the orderer from the list. If and when it becomes active again, discovery will put it on the fetched list.

This will provide fail over and load balancing.;;;","10/Sep/20 4:06 AM;denyeart;{quote}If and when it becomes active again, discovery will put it on the fetched list.{quote}

Service Discovery doesn't check liveness of ordering service nodes, since orderers don't participate in gossip. So the onus would be on the client to get the configured list of orderers from Service Discovery and manage the live/dead statuses, list reset, and handle special cases such as when all orderers get restarted (assumption is you wouldn't want to wait for the full 5 minute cycle to reset the list). This could all be done, but starts to get into the challenges and complexity that Paul mentioned in #3. Yacov's proposal is simpler, although doesn't load balance across orderers within the context of a single application client, only across multiple application clients.

Any of these options would be a big improvement, but to Paul's point complexity and speed of a fix should be considered.;;;","10/Sep/20 4:47 AM;ptippett;I was waiting to see how a node would get put back after being removed.  Too bad that doesn't work.  Having to manage removing nodes from the list then figuring out how quickly to add them back without something else handling that seems troublesome.

 

I like Yacov's proposal but would modify it to have the SDK keep reusing the last orderer that worked vs rearranging the list.  I guess they aren't much different other than if the one it's using fails, which one does it try next and whether the SDK has to remember anything other than the list itself.  I like the sticky approach because even if several orderers were dead, the SDK would quickly find a good one and as long as that one stayed working, nothing would need to change.

I was thinking about what happens each time the orderer the SDK is using fails.  It seems it could either move to the next one without touching the current list, or randomize the list again as if pulling it for the first time and start all over.

I suppose randomizing the list again would be unnecessary since each client would have a random list and if over time they all ended up on one or two orderers, a restart of that node would cause them all to scatter again.

Agree that it would only load balance if there were multiple clients, but it seems like without some sort of automatic health check that manages the list, load balancing between a single client is more complex and doesn't add that much more.

When would the list normally get refreshed?  For example, today, if I add a new orderer node to a cluster, when would the SDK pick that up in the list of possible orderer endpoints it could use?;;;","10/Sep/20 5:42 AM;denyeart;{quote}I like Yacov's proposal but would modify it to have the SDK keep reusing the last orderer that worked vs rearranging the list. {quote}

Yacov's proposal DOES have the SDK keep using the last orderer that worked. So I think we all agree it is a good and simple approach.

SDK requests fresh Service Discovery results every 5 minutes by default. So perhaps tweak Yacov's proposal to also refresh the list after each interval, and also if none of the list members are responding after trying them all. If the orderer ""currently in use"" is still in the refreshed list then continue using it. This would provide continuity of service, even if orderers all restart or if orderers are replaced.;;;","10/Sep/20 6:07 AM;ptippett;That sounds good to me.;;;","11/Sep/20 12:21 AM;harrisob@us.ibm.com;How about when we submit to be committed when using discovery:
 * fetch the list and cache it (default 5 minutes), connect to new orderers or reconnect to existing orderers that are disconnected
 * randomize the list
 * first pass through list, check connection status of the orderer, if connected, send the commit, if success we are done, else check next
 * if not done, second pass through list, try reconnect, if connected, send the commit, if success we are done, else check next

Notice how this will first try to use orderers first that are known connected, load balancing by randomizing

Notice how this will fail over to use another orderer and only try to reconnect after all known good orderers fail

Notice how this will reconnect an off line orderer during the refresh interval. An orderer that has been reconnected will now be marked as connected and will be available during the first pass for load balancing along with other connected orderers.

 ;;;","11/Sep/20 1:00 AM;denyeart;Ok, that does sound better Bret. It meets all the requirements, only slightly more complicated than Yacov's proposal, and provides randomized load balancing.;;;","11/Sep/20 1:21 AM;lesleyannj;Solution requested in 2.x and 1.4;;;","11/Sep/20 1:36 AM;ptippett;Agreed.  This sounds good.  Is the list randomized every 5 minutes or on every transaction?;;;","11/Sep/20 1:56 AM;harrisob@us.ibm.com;Every call, to load balance;;;","11/Sep/20 2:28 AM;yacovm;{quote}Every call, to load balance
{quote}
I am not sure it's such a good idea to do a discovery query prior to every transaction :)

 

Let's keep it once in a while.;;;",,,,,
2020-09-09T08:24:14.259Z - error: [Query]: evaluate - problem with query to peer peer0.org1.example.com:7051 error:TypeError: Cannot read property 'name' of undefined,FABN-1633,46007,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,harrisob@us.ibm.com,davidkel,davidkel,09/Sep/20 6:18 PM,10/Sep/20 3:24 AM,28/Oct/23 3:25 AM,10/Sep/20 3:24 AM,v2.x,,,,,v2.x,,,,0,,,,,,"Unexpected error message is seen when a query fails in node-sdk 2.2.2 (in this case querying a function that doesn't exist). You do get to see the original error message though but is subsequently followed by the error in the summary
{code:java}
2020.09.09-09:24:14.258 error [caliper] [connectors/v2/fabric-gateway] Failed to perform query transaction [queryCar] using arguments [0_3], with error: Error: error in simulation: transaction returned with failure: Error: You've asked to invoke a function that does not exist: queryCar
 at RoundRobinQueryHandler.evaluate (/home/ubuntu/.nvm/versions/node/v10.22.0/lib/node_modules/fabric-network/lib/impl/query/roundrobinqueryhandler.js:41:27)
 at process._tickCallback (internal/process/next_tick.js:68:7)
TypeError: Cannot read property 'name' of undefined
 at QueryImpl.evaluate (/home/ubuntu/.nvm/versions/node/v10.22.0/lib/node_modules/fabric-network/lib/impl/query/query.js:45:56)
 at process._tickCallback (internal/process/next_tick.js:68:7)
2020-09-09T08:24:14.259Z - error: [Query]: evaluate - problem with query to peer peer0.org1.example.com:7051 error:TypeError: Cannot read property 'name' of undefined
2020-09-09T08:24:14.259Z - error: [RoundRobinQueryHandler]: evaluate: message=Query failed. Errors: [""TypeError: Cannot read property 'name' of undefined""], stack=FabricError: Query failed. Errors: [""TypeError: Cannot read property 'name' of undefined""]{code}
It looks like the problem might be with this section of code in query.ts
{code:java}
for (const resultError of responses.errors) {
  results[resultError.connection.name] = resultError;
  logger.debug('%s - problem with query to peer %s error:%s', method, resultError.connection.name, resultError);
}
{code}
possibly because resultError doesn't contain a connection property ?

 

 ",,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g97:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"10/Sep/20 3:24 AM;harrisob@us.ibm.com;I am not able to reproduce. I used 2.2.2 with the following call
 
{color:#0000ff}try{color}{color:#000000} {{color}
{color:#0000ff}const{color}{color:#000000} resultBuffer = {color}{color:#0000ff}await{color}{color:#000000} contract.evaluateTransaction({color}{color:#a31515}'BADREAD'{color}{color:#000000}, assetKey);{color}
{color:#000000} } {color}{color:#0000ff}catch{color}{color:#000000} (readError) {{color}
{color:#000000} console.log({color}{color:#000000}readError{color}{color:#000000});{color}
{color:#000000} }{color}
 
{color:#000000}got the following error
{color:#cd3131}Error: error in simulation: transaction returned with failure: Error: You've asked to invoke a function that does not exist: BADREAD{color}{color};;;",,,,,,,,,,,,,,,,
addContractListener() - previous event is replayed,FABN-1634,46008,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,sschulz-t,sschulz-t,09/Sep/20 9:35 PM,10/Sep/20 12:11 AM,28/Oct/23 3:25 AM,09/Sep/20 11:54 PM,,,,,,,,,,0,,,,,,"I am using hlf 2.2, chaincode written in go and the fabric-sdk-node (fabric-network 2.2.2) as my client.

My go contract chaincode emits an event via:

 
{code:java}
func (s *MySmartContract) Test(ctx contractapi.TransactionContextInterface, key string) error {
  return ctx.GetStub().SetEvent(""EVENT"", []byte(key))
}{code}
 

On the node js side I attach to the events via:

 
{code:java}
..
const listener = async (event) => {
  if (event.eventName === 'EVENT') {
    console.log(""> INCOMING EVENT: "" + event.payload.toString())
  }
contract.addContractListener(listener)
..{code}
 

When I execute the following steps:

1)  peer chaincode invoke ...  -c '\{""Args"":[""Test"",""123""]}'

2) start my nodejs application

[nothing happens on the event print]

3)  peer chaincode invoke ...  -c '\{""Args"":[""Test"",""ABC""]}'

-> I will now get the following prints

 
{code:java}
> INCOMING EVENT: 123
> INCOMING EVENT: ABC
{code}
I expect to see only ABC.

 

4) I now close my app

5) restart my app

[no prints concerning events]

6) peer chaincode invoke ...  -c '\{""Args"":[""Test"",""XYZ""]}'

-> I will now get the following prints
{code:java}
> INCOMING EVENT: ABC
> INCOMING EVENT: XYZ
{code}
 

I am wondering why I see the last emitted Event replayed when after  I (re)started my application once a new event occurs. 

Is this by design?

 

One more thing: Is there an up to date documentation on the Event system? 

 ",,harrisob@us.ibm.com,sschulz-t,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01g9f:",,,,Unset,Unset,,,,,,,,,,,see description,,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,sschulz-t,,,,,,,,,,,,,,,,,,,,"09/Sep/20 11:54 PM;harrisob@us.ibm.com;That is the way the peer event service works, when a client sets up to start receiving events from the peer, which is done with the addContractListener, the peer starts sending new events based on the current (top or latest) block on the ledger unless the client specifies a specific start block.

https://hyperledger-fabric.readthedocs.io/en/release-2.2/peer_event_services.html;;;","10/Sep/20 12:11 AM;sschulz-t;ah ok, alright. In order not to receive these ""old"" events, I will specify the startblock to current+1.

thanks!

 ;;;",,,,,,,,,,,,,,,
Improve SDK load balancing and fail-over for endorsing peers,FABN-1635,46012,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,harrisob@us.ibm.com,lesleyannj,lesleyannj,09/Sep/20 11:57 PM,12/Sep/20 2:59 AM,28/Oct/23 3:25 AM,12/Sep/20 2:59 AM,,,,,,,,,,0,external,sdk-triaged,,,,"This is coming out of reported issue in mailing list https://lists.hyperledger.org/g/fabric/topic/76692756#8986

Network following configuration.

    Org 1 having 2 peers (both peers are endorsing)
    Org 2 having 2 Peer(both peers are endorsing)
    Endorsement  Policy: MAJORITY Endorsement
    Fabric Version: 2.0

For high availability, both of the peers in each org are endorsing peers.

When invoke tx with all peers up and running, the network is working as expected.

When stop one peer(peer0.org1), the Transaction is not getting submitted as SDK is not able to connect with peer0.org1. 

But peer1.org1 is already up and running, it can endorse transaction. The purpose of having multiple endorsing peers is high availability(In case if one peer is down, other can endorse tx). In this case, the transaction should have committed successfully, but it gave an error.

Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com, url:grpcs://localhost:7051

CCP for org 1 as below:

""peers"": [
""peer0.org1.example.com"",
""peer1.org1.example.com""
]

Work-around:
Remove peer0.org1.example.com from CCP(Common Connection Profile ) of org1, submit transaction successfully.

Confirmed:
Service discovery is being used.
Still same error restarting the API server.

Expectation:
When some endorsing peer fails in between and there are multiple endorsing peers in organizations, expect be able to submit transactions successfully.



Sounds like it might be an issue with the SDK, that is only querying the first peer to retrieve the discovery information and not attempting to query other peers in the event the first one fails.

Is it possible to target a specific peer when multiple are available in the CCP with which to query the discovery information.?

Is the onus on the client to failover to another peer for discovery information?

",,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1624,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1632,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8id3i",,,,Unset,Unset,4 Sep to 11 Sep 20,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,"09/Sep/20 11:59 PM;lesleyannj;FABN-1632 highlights possible solutions for an issue similar but for the orderer.;;;","12/Sep/20 2:59 AM;harrisob@us.ibm.com;a connection issue was not handled during the assignment of one of the peers that will be used for discovery;;;",,,,,,,,,,,,,,,
publish 1.4.13,FABN-1636,46104,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,12/Sep/20 12:05 AM,14/Sep/20 10:06 PM,28/Oct/23 3:25 AM,14/Sep/20 10:06 PM,,,,,,,,,,0,sdk-triaged,,,,,Publish release-1.4 at 1.4.13,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1z8idw",,,,Unset,Unset,11Sep to 18Sep,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Node engines approaching end of maintenance,FABN-1637,46119,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,nkl199,nkl199,15/Sep/20 11:23 PM,14/Oct/20 1:02 AM,28/Oct/23 3:25 AM,14/Oct/20 1:02 AM,v2.x,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"The supported node engines in the node-sdk packages are approaching end of maintenance:
- v12 is LTS
- v14 is current

More details here: [https://nodejs.org/en/about/releases/]


It would be nice is the packages for the master and supported release branches were updated to match the more recent node versions where possible",,bestbeforetoday,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qzr",,,,Unset,Unset,9Oct to 16Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,nkl199,,,,,,,,,dev,main,,,,,,,,,true,"03/Oct/20 12:18 AM;bestbeforetoday;I think what we have today is correct; only Node v10 and v12 are currently LTS releases. We should add v14 once it switches from a current development release to an active LTS release, and probably only remove v10 once it leaves LTS maintenance in 2021.

Any changes to the supported Node versions needs to have accompanying changes to the Node versions tested by the CI pipeline.;;;",,,,,,,,,,,,,,,,
v2.2.2 Node.js crashes on gateway with grpc-js,FABN-1639,46127,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid: Environment Issue,,harrisob@us.ibm.com,harrisob@us.ibm.com,18/Sep/20 5:16 AM,21/May/21 7:20 PM,28/Oct/23 3:25 AM,21/May/21 7:20 PM,,,,,,,,,,0,community-help-wanted,sdk-triaged,,,,"During the closing of the event service we get
{quote}node(19163,0x10a4c95c0) malloc: *** error for object 0x1047092a0: pointer being freed was not allocated
 node(19163,0x10a4c95c0) malloc: *** set a breakpoint in malloc_error_break to debug
 Abort trap: 6
{quote}
Looks related to the stream.cancel()

 

Used various versions of node and grpc-js. Does not fail with non-js version of grpc.",,bestbeforetoday,harrisob@us.ibm.com,ricba1995,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzqy",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,ricba1995,,,,,,,,,,,,,,,,,,,"19/Nov/20 8:10 PM;ricba1995;I had a similar issue. I was using Node 12.9.1 and I solved upgrading to 14.15.1;;;","21/May/21 7:20 PM;bestbeforetoday;It sounds like updated Node versions solve the issue, and we've updated the grpc-js version since this was observed, which might also help. The tests are currently passing so closing this for now. It can be reopened if the issue reappears.;;;",,,,,,,,,,,,,,,
failure within newEndorsementError,FABN-1640,46131,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,nkl199,nkl199,19/Sep/20 12:07 AM,23/Sep/20 1:09 AM,28/Oct/23 3:25 AM,23/Sep/20 1:09 AM,v2.1.0,,,,,,,,,0,node-SDK,sdk-triaged,,,,"During a performance test, the following error was observed:

```
2020.09.18-09:15:15.231 error [caliper] [adapters/fabric] 	Failed to perform submit transaction [emptyContract] using arguments [],  with error: TypeError: Cannot read property 'name' of undefined
    at newEndorsementError (/home/nkl199/HSM/node_modules/fabric-network/lib/transaction.js:33:39)
    at getResponsePayload (/home/nkl199/HSM/node_modules/fabric-network/lib/transaction.js:21:23)
    at Transaction.submit (/home/nkl199/HSM/node_modules/fabric-network/lib/transaction.js:207:28)
    at process._tickCallback (internal/process/next_tick.js:68:7)
2020-09-18T09:15:20.232Z - error: [Endorser]: sendProposal[nf373e5-peerorg1.ibpv2-test-cluster2-68e10f583f026529fe7a89da40169ef4-0000.us-south.containers.appdomain.cloud:7051] - nf373e5-peerorg1.ibpv2-test-cluster2-68e10f583f026529fe7a89da40169ef4-0000.us-south.containers.appdomain.cloud:7051 timed out after:30000
2020-09-18T09:15:20.233Z - error: [DiscoveryHandler]: _build_endorse_group_member >> G1:0 - error on endorsement to nf373e5-peerorg1.ibpv2-test-cluster2-68e10f583f026529fe7a89da40169ef4-0000.us-south.containers.appdomain.cloud:7051 error Error: REQUEST TIMEOUT
2020.09.18-09:15:20.233 error [caliper] [adapters/fabric] 	Failed to perform submit transaction [emptyContract] using arguments [],  with error: TypeError: Cannot read property 'name' of undefined
    at newEndorsementError (/home/nkl199/HSM/node_modules/fabric-network/lib/transaction.js:33:39)
    at getResponsePayload (/home/nkl199/HSM/node_modules/fabric-network/lib/transaction.js:21:23)
    at Transaction.submit (/home/nkl199/HSM/node_modules/fabric-network/lib/transaction.js:207:28)
    at process._tickCallback (internal/process/next_tick.js:68:7)

Emanating from:

```
function newEndorsementError(proposalResponse) {
    const errorInfos = [];
    for (const error of proposalResponse.errors) {
        error.peer = error.connection.name;
        error.status = 'grpc';
        errorInfos.push(error);
    }
 

My suspicion is that under load the connection can die, at which point there’s an error path that leads to {{error.connection}} not being defined. ",,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:9",,,,Unset,Unset,18Sep to 25Sep,,,,,,,,,,Stress test under resourced system using node sdk,,Unset,,,,,,Unset,,Unset,,(Please add usage information),nkl199,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-network override connection-options by the default options  ,FABN-1641,46135,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,yasser_mas,yasser_mas,23/Sep/20 9:55 AM,05/Feb/21 12:20 AM,28/Oct/23 3:25 AM,05/Feb/21 12:20 AM,v2.x,,,,,,,,,0,external,fabric-node-sdk,fabric-sdk-node,sdk-triaged,,"fabric-network override connection-options with the default options 

set 
connection-options -> grpc-wait-for-ready-timeout , fabric will wait for only 3 sec as default configuration 

2020-09-23T00:45:17.545Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer2.org2.example.com url:grpcs://localhost:8251 timeout:3000",,bestbeforetoday,harrisob@us.ibm.com,ricba1995,yasser_mas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzzzyzs",,,,Unset,Unset,1Feb to 8Feb,,,,,,,,,,"01- set `grpc-wait-for-ready-timeout` in connection option to be 20000 
02- stop peer 
03- start node client 

expected to wait for 20000 ms , but it fails after 3000 ms",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,ricba1995,yasser_mas,,,,,,,dev,main,,,,,,,,,true,"05/Oct/20 9:50 PM;harrisob@us.ibm.com;Which NodeSDK version are you working with;;;","05/Oct/20 11:16 PM;yasser_mas;V. 2.2.2,

 I'm trying to add it in `gateway.connect( ...)` under 'connection-options' object;;;","17/Oct/20 3:54 AM;harrisob@us.ibm.com;The high level API `fabric-network` does not set this low level setting on the low level API of `fabric-common`.

Have you tried changing the `fabric-common/config/default.json`
 
{color:#0451a5}""connection-options""{color}{color:#000000}: {{color}
{color:#0451a5}""grpc.max_receive_message_length""{color}{color:#000000}: {color}{color:#098658}-1{color}{color:#000000},{color}
{color:#0451a5}""grpc.max_send_message_length""{color}{color:#000000}: {color}{color:#098658}-1{color}{color:#000000},{color}
{color:#0451a5}""grpc.keepalive_time_ms""{color}{color:#000000}: {color}{color:#098658}120000{color}{color:#000000},{color}
{color:#0451a5}""grpc.http2.min_time_between_pings_ms""{color}{color:#000000}: {color}{color:#098658}120000{color}{color:#000000},{color}
{color:#0451a5}""grpc.keepalive_timeout_ms""{color}{color:#000000}: {color}{color:#098658}20000{color}{color:#000000},{color}
{color:#0451a5}""grpc.http2.max_pings_without_data""{color}{color:#000000}: {color}{color:#098658}0{color}{color:#000000},{color}
{color:#0451a5}""grpc.keepalive_permit_without_calls""{color}{color:#000000}: {color}{color:#098658}1{color}{color:#000000},{color}
{color:#0451a5}""grpc-wait-for-ready-timeout""{color}{color:#000000}: {color}{color:#098658}3000{color}{color:#000000},{color}
{color:#0451a5}""request-timeout""{color}{color:#000000} : {color}{color:#098658}45000{color}
{color:#000000} },{color}

another way to change the value is to do the following right after you create and connect to a gateway, this will change just the one low level connection option using the low level fabric-common/Client instance of the ""Gateway"".


{color:#0000ff}const{color}{color:#000000} myoptions = gateway.client.getConfigSetting({color}{color:#a31515}'connection-options'{color}{color:#000000});{color}
{color:#000000} myoptions[{color}{color:#a31515}'grpc-wait-for-ready-timeout'{color}{color:#000000}] = {color}{color:#098658}20000{color}{color:#000000};{color}
{color:#000000} gateway.client.setConfigSetting({color}{color:#a31515}'connection-options'{color}{color:#000000}, myoptions);{color}
 
{color:#000000}Also you could get access to the ""fabric-common/Client"" by doing a require, this could be done at anytime before the ""gateway"" creates a ""network"" instance.
{color}
 
{color:#0000ff}const{color}{color:#000000} Client = require({color}{color:#a31515}'fabric-common'{color}{color:#000000}).Client;{color}
{color:#0000ff}const{color}{color:#000000} myoptions = Client.getConfigSetting({color}{color:#a31515}'connection-options'{color}{color:#000000});{color}
{color:#000000} myoptions[{color}{color:#a31515}'grpc-wait-for-ready-timeout'{color}{color:#000000}] = {color}{color:#098658}200022{color}{color:#000000};{color}
{color:#000000} Client.setConfigSetting({color}{color:#a31515}'connection-options'{color}{color:#000000}, myoptions);{color};;;","17/Oct/20 4:45 AM;yasser_mas;I'm not agree with the first line, method connect in gateway class accepting `GatewayOptions`, and GatewayOptions interface accepting `{color:#de350b}connection-options{color}` , not only data types mentioned the connection options but also the implementation accepting connection options and adding it into `client.centralized_options` but it's not used or override as per the code comment and the expected behavior .
 

Please check the below snippets from fabric client sdk source code  



Gateway Class :
connect(config: Client | object, options: GatewayOptions): Promise<void>;
 
Gateway Options interface :
export interface GatewayOptions {
identity: string | Identity;
wallet?: Wallet;
identityProvider?: IdentityProvider;
clientTlsIdentity?: string;
tlsInfo?: {
certificate: string;
key: string;
};
discovery?: DiscoveryOptions;
eventHandlerOptions?: DefaultEventHandlerOptions;
queryHandlerOptions?: DefaultQueryHandlerOptions;
{color:#de350b}'connection-options'?: any;{color}
}


Gateway.connect(..) Implementation : 


// apply any connection options to the client instance for use
// internally by the client instance when building a complete set
// of connection options for an endpoint
// {color:#de350b}these will be merged with those from the config (default.json){color}
if (options['connection-options']) {
this.client.centralized_options = options['connection-options'];
logger.debug('%s - assigned connection options');
}
 



I know there are another ways to update config, but I have got an issue so I have created it 

I think this issue should be reopened or removing connection options from implementation and node types ;;;","16/Dec/20 5:55 PM;ricba1995;The issue persists. During some new data put, I get a REQUEST TIMEOUT. I tried to change this timeout value, which is probably low, but it doesn't work.

It probably gets overridden by Fabric in some way.;;;","04/Feb/21 11:43 PM;bestbeforetoday;Bret added some fixes to the _master_ branch, which I have merged and cherry-picked back to _release-2.2_;;;","05/Feb/21 12:19 AM;bestbeforetoday;[~ricba1995] [~yasser_mas] The fix should now be in published versions of the npm package tagged *unstable-2.2* (from *fabric-network@2.2.6-snapshot.2*);;;",,,,,,,,,,
Fabric node SDK will not retry to reconnect to the offline peers like java SDK ,FABN-1642,46136,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,yasser_mas,yasser_mas,23/Sep/20 10:15 AM,20/Aug/21 8:13 PM,28/Oct/23 3:25 AM,20/Aug/21 8:13 PM,,,,,,,,,,0,community-help-wanted,external,sdk-triaged,,,"Fabric node SDK will not retry to reconnect to the offline peers like java SDK 

If all peers which included in connection profile are stopped and try to open the client and connect to the network, it will throw the below errors : 

`Error: Failed to connect before the deadline on Discoverer- name:`
`waitForReady - Failed to connect to remote gRPC server:`
`Error: DiscoveryService has failed to return results:`

then the client will not try to reconnect same as java , java will try to reconnect till the peer starts and log the below line : 

`channel: mychannel, peerName: peer0.org2.example.com, url: grpcs://localhost:8051}, *attempts 2301*. UNAVAILABLE: io exception` 


also node will not retrieve the network object ( from calling gateway.connect() )  and of-course I can't get contract object and listen to blocks and contracts events , however java will do that !! 

Java will retrieve notwork object and I can listen to blocks and contract events, and it will start listening once any peer in the connection profile will be ready ",,harrisob@us.ibm.com,icarrascol,lesleyannj,yasser_mas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1657,,,,,,,,,,,,,,,,,,,,,,,"08/Mar/21 8:41 PM;yasser_mas;image-2021-03-08-13-41-40-226.png;https://jira.hyperledger.org/secure/attachment/18896/image-2021-03-08-13-41-40-226.png","08/Mar/21 8:43 PM;yasser_mas;image-2021-03-08-13-43-07-079.png;https://jira.hyperledger.org/secure/attachment/18897/image-2021-03-08-13-43-07-079.png","08/Mar/21 8:49 PM;yasser_mas;image-2021-03-08-13-49-51-043.png;https://jira.hyperledger.org/secure/attachment/18898/image-2021-03-08-13-49-51-043.png","08/Mar/21 8:51 PM;yasser_mas;image-2021-03-08-13-51-51-124.png;https://jira.hyperledger.org/secure/attachment/18899/image-2021-03-08-13-51-51-124.png","08/Mar/21 8:54 PM;yasser_mas;image-2021-03-08-13-54-51-826.png;https://jira.hyperledger.org/secure/attachment/18900/image-2021-03-08-13-54-51-826.png",,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i007i",,,,Unset,Unset,,,,,,,,,,,"01- Stop all peers which included in connection profile 
02- Start node client SDK which will do the below steps 
--- open connection ( gateway.connect(..) ) 
--- Get network (gateway.getNetwork(....))
--- Get contract ( network.getContract(...) ) 
--- Listen to block events ( network.addBlockListener ) 
--- Listen to contract events ( contract.addContractListener(...) ) 

expected the sdk will retry to reconnect to the peers and cache all listeners till any peer , then start listening , ( Same as Java behavior )  

the output it will throw some errors that can't connect to peer and get Discovery Service result  then the application freezes ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,icarrascol,lesleyannj,yasser_mas,,,,,,,,,,,,,,,,,,"02/Dec/20 12:22 AM;lesleyannj;[~yasser_mas]  Please confirm if any error is returned from get network to the application?  or is it just error is just logged and continues?

Also there has been several changes in this area.  Please provide behaviour seen with latest version.

Slightly different behaviour between node and java is not necessarily an issue as long as outcome is sensible.;;;","04/Dec/20 6:35 AM;harrisob@us.ibm.com;With v2, when using discovery the gateway.getNetwork() will fail if the discovery peer is not responding. The application will be able to catch the discovery error and will be able to retry if required.;;;","09/Jan/21 1:57 AM;icarrascol;sorry to revive this but how is the discovery peer specified?, i am having these errors with latest released version of the sdk and fabric, but instead of stopping all the peers i stop the first peer of the first org and the sdk throws this same errors.;;;","12/Jan/21 4:53 AM;harrisob@us.ibm.com;When the network instance is first initialized a list of peers will be defined from the connection profile. First choice for the list are the peers in the organization of the user that was used when the gateway is connected, second choice is all peers.  NodeSDK will try the next peer on the list if it gets an error during discovery, going through the list one time.

You will find that NodeSDK does not perform error recovery and retry on other operations. It reports the issue to the application and the application should decide what it wants to do next.

 ;;;","12/Jan/21 5:34 AM;icarrascol;on my case i have 4 orgs with one peer each, i stopped the peer of the org1 and used an user of org1 to operate with the sdk. the sdk tried to connect to the stopped peer as you said it picks one of the user organization and threw an error. `Error: DiscoveryService has failed to return results'.

it didnt try to use any other peer available on the list (other organization peers) to use for discovery. is this the correct behavior? and if it is is there a way to set the discovery to target the other peers, as gateway api doesnt have anything to set up a discovery target.;;;","08/Mar/21 8:43 PM;yasser_mas;I have used the latest SDK 2.2.5 and the issue still exists 
 * Client SDK will not try to reconnect to the peers 
 * Client SDK will not listen for any events 

This issue happens if you have started client after blockchain network , or if you restarted blockchain network and the client was running 

however Java SDK will retry to reconnect and listen to events till the blockchain network started 


exception if the blockchain network ( peers )  was  closed and the client started first 

!image-2021-03-08-13-41-40-226.png!

the exception if hyperledger fabric network stopped during the client working 

!image-2021-03-08-13-43-07-079.png!;;;","08/Mar/21 8:56 PM;yasser_mas;Please check JAVA SDK behavior 

Java will throw this exception during startup 

!image-2021-03-08-13-51-51-124.png!


then it will retry to reconnect and log the below lines utill the peer started 
!image-2021-03-08-13-49-51-043.png!

Once blockchain newtork started ( peer ) , java sdk will reconnect and start listening for the blocks and log the below lines 

!image-2021-03-08-13-54-51-826.png!



so JAVA SDK will handle the reconnection and event registration not like NodeJs SDK you have to do it by yourself  ;;;","09/Mar/21 11:02 PM;lesleyannj;Some differences do exist between SDK behaviours in some operations.  The upcoming Fabric Gateway work is aiming to address / reduce these occurances;;;",,,,,,,,,
Fabric node SDK not updating eventer list if all peers stopped or if new peers started,FABN-1643,46137,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,,yasser_mas,yasser_mas,23/Sep/20 10:38 AM,02/Dec/20 12:52 AM,28/Oct/23 3:25 AM,02/Dec/20 12:23 AM,,,,,,,,,,0,external,sdk-triaged,,,,"Fabric node SDK not updating eventer list if all peers stopped or if new peers started

Fabric node SDK only adding the connected peers for the client organization in eventer list and it will not update it if there are another peers are connected 

I have 3 peers for org2 ( peer0 , peer1 , peer2 )  

If I closed any peer before connecting to the gateway ( eg Peer0 ) , client will create new eventer for peer1 and peer2 and start listening for one of them, also it will log the below line 

`set current eventer Eventer- name: peer1.org2.example.com:8151, url:grpcs://localhost:8151, connected:true, connectAttempted:true`

then If I started peer0 the eventer list will not be updated !! , and after closing peer1 it will start listening for peer2 events if peer2 stopped it will not start listening to peer0 and log the below lines : 

event registrations 0
clear out the listener list
no current eventer - not shutting down stream


Also if peer1 and peer2 started neither block events nor contract events  will be published !! , Java SDK can update eventer even if all peers for this org are stopped I can listen to the events from the external peers ",,lesleyannj,yasser_mas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00zlk:9",,,,Unset,Unset,,,,,,,,,,,"01- Create network which has 3 orgs and each org has 3 peers 
02-  stop peer0 org2 
3- establish client connection for org2 and start listen for blocks and contract events 
4- Start peer0 Org2 
5- Stop peer1 and peer2 for org2 

expected result to set peer0 as eventer and start listening for blocks and contract events from this peer , 
the output : client will clear listener list and will not raise any events even if peer1 and peer2 started again !! 

also if all peers in that org are disconnected it will never try to listen to events from other peers in org1 or org3 

ps. java SDK will do the expected result !! ",,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,yasser_mas,,,,,,,,,,,,,,,,,,,,"02/Dec/20 12:23 AM;lesleyannj;Several enhancements have been made in this area.  Please re-open if behaviour is still seen.;;;",,,,,,,,,,,,,,,,
Fail to run many submitTransaction() the same time,FABN-1644,46143,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,harrisob@us.ibm.com,Frankonly,Frankonly,23/Sep/20 9:46 PM,20/Oct/20 9:53 PM,28/Oct/23 3:25 AM,20/Oct/20 9:53 PM,,,,,,,,,,0,external,sdk-triaged,,,,"SDK I use:
   ""fabric-ca-client"": ""^2.2.0"",
   ""fabric-network"": ""^2.2.0"",
  
 When I run the code below   !image-2020-09-23-20-48-09-791.png|width=955,height=166!
 The app can only handle first submission successfully but all others throw error ""No discovery results found""
  
 I found a solution is to use setTimeout for all submissions to have a 10ms interval between each two submissions.
 !image-2020-09-23-20-48-28-005.png|width=979,height=375!
 And I got result below:
  
 success: 997, fail: 3, discovery error: 1
  
 However, by setting a 10ms timeout, the upper limit of TPS of this app is fixed to 100. 
  
 Perhaps I used the Node SDK in a wrong way. Please tell me the correct use of submitting TXs in parallel. I want to figure out the real supporting TPS of my chaincode.
  
 Or it's a big drawback to be addressed.",,Frankonly,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1645,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"23/Sep/20 9:48 PM;Frankonly;image-2020-09-23-20-48-09-725.png;https://jira.hyperledger.org/secure/attachment/18806/image-2020-09-23-20-48-09-725.png","23/Sep/20 9:48 PM;Frankonly;image-2020-09-23-20-48-09-791.png;https://jira.hyperledger.org/secure/attachment/18805/image-2020-09-23-20-48-09-791.png","23/Sep/20 9:48 PM;Frankonly;image-2020-09-23-20-48-18-516.png;https://jira.hyperledger.org/secure/attachment/18807/image-2020-09-23-20-48-18-516.png","23/Sep/20 9:48 PM;Frankonly;image-2020-09-23-20-48-28-005.png;https://jira.hyperledger.org/secure/attachment/18808/image-2020-09-23-20-48-28-005.png",,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qy",,,,Unset,Unset,16Oct-23Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Frankonly,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"20/Oct/20 9:53 PM;harrisob@us.ibm.com;The fix for this issue is almost in, a new 2.2 should be cut by end of week;;;",,,,,,,,,,,,,,,,
Query failure when using discovery on multi-peer networks,FABN-1645,46153,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,nkl199,nkl199,25/Sep/20 7:06 PM,23/Oct/20 12:15 AM,28/Oct/23 3:25 AM,23/Oct/20 12:15 AM,v2.x,,,,,,,,,0,external,sdk-triaged,,,,"Bare bones scenario:
- One org
- 2 peers
- 1 peer with contract x, the other no contracts
- use node sdk to evaluate a transaction for contract x

Using the sdk query handlers, this results in query requests being sent to all peers, including the peer that does not actually contain the contract. This results in an error being returned `Failed to perform query transaction [emptyContract] using arguments [], with error: Error: cannot retrieve package for chaincode fixed-asset/1.0.0, error open /data/peer/chaincodes/fixed-asset.1.0.0: no such file or directory` ... which is expected.

If we consider the round robin handler, it actually gets stuck on calling the failing peer because it presumably only moves to the next known peer when a successful response is received. At this point all future queries are destined to fail.

It is my understanding that it is possible to determine which peers have contracts installed on during the discovery process, and therefore it is possible to route the evaluate/submit to peers that are capable of satisfying the request. 

This would be beneficial in terms of performance, since we would not be needlessly consuming peer/sdk resources sending requests to peers that we know will fail.

I do not believe that it should be the responsibility of a user to write their own complex query handler, inclusive of dealing with discovery, to cater for what is arguably a base scenario",,harrisob@us.ibm.com,lesleyannj,nkl199,yacovm,,,,,,,,,,,,,,FABN-1644,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1122,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qc",,,,Unset,Unset,16Oct-23Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,nkl199,yacovm,,,,,,,,,,,,,,,,,,"06/Oct/20 4:08 AM;harrisob@us.ibm.com;[~yacovm] does the peer discovery service know if the chaincode is installed on the local or remote peer ? Are the chaincodes listed in the state_info of the peer membership results only those that are installed ?

If that is how it works then we could add this info to the peers so that the high level query handlers can ask the channel instance for peers with mspid and also chaincode.;;;","06/Oct/20 4:48 AM;yacovm;Discovery should not return peers without chaincodes for endorsement queries. The situation you are describing is not supposed to be possible. Take a look at the logs and let's see what the peer returns from discovery.;;;","21/Oct/20 9:59 PM;lesleyannj;Changed included in #FABN-1646;;;",,,,,,,,,,,,,,
Concurrent transaction.evaluate calls fail,FABN-1646,46161,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,harrisob@us.ibm.com,nkl199,nkl199,29/Sep/20 1:41 AM,30/Oct/20 6:34 PM,28/Oct/23 3:25 AM,27/Oct/20 7:30 PM,v2.x,,,,,,,,,0,external,sdk-triaged,,,,"When submitting concurrent transaction.evaluate calls, for instance when performance testing, the evaluate call fails:
 Query failed. Errors: [""TypeError: Cannot read property 'name' of undefined""]
 at RoundRobinQueryHandler.evaluate (/home/ubuntu/caliper-workspace/node_modules/fabric-network/lib/impl/query/roundrobinqueryhandler.js:47:23)
 at process._tickCallback (internal/process/next_tick.js:68:7)

(both query handlers)

This is due to an error in the ServiceEndpoint, waitForReady call

 

*Update:*

Following test with released v2.2.3 SDK, the error is now:


{color:#de350b}Error: unexpected end of JSON input{color}{color:#de350b} at SingleQueryHandler.evaluate (/home/<user>/caliper/workspace/node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:41:27){color}



Tested using Caliper 0.4.1, bound to the 2.2.3 sdk-node, attempting to query existing items in the world state. Failure rate increases with increased load - same error observed each time.

 

 ",,bestbeforetoday,harrisob@us.ibm.com,lesleyannj,nkl199,,,,,,,,,,,,,,FABN-1625,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1662,FABN-1663,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzi",,,,Unset,Unset,16Oct-23Oct,23Oct to 30Oct,,,,,,,,,"Create a network
Run a caliper performance test, querying the world state",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,lesleyannj,nkl199,,,,,,,dev,main,,,,,,,,,true,"07/Oct/20 2:29 AM;harrisob@us.ibm.com;I am unable to reproduce this, I build an array of ""evaluateTransaction"" then do a Promise.all, test with 12 evals, still works, could I get a trace log of this failure. and how to make it fail.
 
{color:#0000ff}const{color}{color:#000000} evals = [];{color}
{color:#000000} evals.push(contractOrg1.evaluateTransaction({color}{color:#a31515}'ReadAsset'{color}{color:#000000}, assetKey));{color}
{color:#000000} evals.push(contractOrg1.evaluateTransaction({color}{color:#a31515}'ReadAsset'{color}{color:#000000}, assetKey));{color}
{color:#000000} evals.push(contractOrg1.evaluateTransaction({color}{color:#a31515}'ReadAsset'{color}{color:#000000}, assetKey));{color}
{color:#0000ff}const{color}{color:#000000} results = {color}{color:#0000ff}await{color}{color:#000000} Promise.all(evals);{color};;;","07/Oct/20 10:24 PM;nkl199;The errors coming back were buried behind the waitforready call

It is possible that we were driving at a much higher rate, will look at an easy recreate and get back to you;;;","08/Oct/20 10:54 PM;lesleyannj;Delivered to master.  To be delivered to 2.2 aswell.;;;","09/Oct/20 9:55 PM;nkl199;Re-tested with the changes, still get errors, with the following debug trace:

```

2020-10-09T12:42:10.887Z - debug: [ServiceEndpoint]: checkConnection[n4f2948-===:7051] - start - connected:true

2020-10-09T12:42:10.887Z - debug: [ServiceEndpoint]: waitForReady - start Endorser-n4f2948-peerorg1.===:7051 - grpcs:/===:7051

2020-10-09T12:42:10.887Z - debug: [ServiceEndpoint]: waitForReady - promise running n4f2948-peerorg1.===:7051 - grpcs://===:7051

2020-10-09T12:42:10.888Z - debug: [Endorser]: sendProposal[n4f2948-peerorg1===:7051] - Start ----n4f2948-peerorg1.===:7051 grpcs://n4f2948-peerorg1===:7051 timeout:30000

2020-10-09T12:42:10.888Z - debug: [Proposal]: send[fixed-asset] - about to send to all peers

2020-10-09T12:42:10.888Z - debug: [Proposal]: send[fixed-asset] - have results from peers

2020-10-09T12:42:10.888Z - debug: [Proposal]: send[fixed-asset] - Promise is rejected: Error: Broadcast Client n4f2948-peerorg1===:7051 grpcs://n4f2948-peerorg1===:7051 is not connected

TypeError: Cannot read property 'name' of undefined

    at QueryImpl.evaluate (/home/nkl199/caliper/workspace/node_modules/fabric-network/lib/impl/query/query.js:45:56)

    at process._tickCallback (internal/process/next_tick.js:68:7)

2020-10-09T12:42:10.888Z - error: [Query]: evaluate - problem with query to peer n4f2948-===:7051 error:TypeError: Cannot read property 'name' of undefined

```

So, following the change issues are observed:
- badly reported error (resulting in undefined.name being called for peer.name)
- connectivity loss to peer;;;","13/Oct/20 12:13 AM;harrisob@us.ibm.com;The issue was located within the ""ServiceEndpoint"" base class when the connection was being checked
Fix is being tested;;;","13/Oct/20 11:37 PM;harrisob@us.ibm.com;Testing is showing issues, more debug is required.;;;","27/Oct/20 7:15 PM;nkl199;Issue still present, appears to have been moved to a different point, but still seems that a connection is being terminated mid-stream, resulting in an incomplete transmission of data.;;;","27/Oct/20 7:30 PM;bestbeforetoday;The current error is not an SDK failure. Instead it is the SDK throwing an error to indicate an error response from the chaincode.
{noformat}
Failed to perform query transaction [getAsset] using arguments [client4_4000_448],  with error: Error: unexpected end of JSON input at SingleQueryHandler.evaluate (/home/<user>/caliper/workspace/node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:41:27){noformat}
So it looks like somewhere in the chaincode transaction function invocation an error with the message ""*unexpected end of JSON input*"" was generated, and this has been returned by the chaincode as an error response message. You would need to look at the server-side logs to get more detail on where the error occurred. Only the message text is returned to the client.;;;",,,,,,,,,
Type def for ChannelEventHub needs to be updated to match its implementation (Fabric SDK Node),FABN-1647,46162,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,rolivieri,rolivieri,29/Sep/20 2:52 AM,14/Oct/20 12:34 AM,28/Oct/23 3:25 AM,08/Oct/20 10:53 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"Latest version of the Fabric SDK for Node.js v1.4 (*v* *1.4.13*) does not have a reconnect() method in the type def for ChannelEventHub:
 * [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/types/index.d.ts]

However, in the docs for this version (v1.4) of the SDK, a reconnect() method is listed:
 * [https://hyperledger.github.io/fabric-sdk-node/release-1.4/ChannelEventHub.html#reconnect__anchor].

The reconnect() method also appears in the actual implementation of the ChannelEventHub class:
 * [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/lib/ChannelEventHub.js#L402] 

Therefore, opening this issue so that the type def for ChannelEventHub is updated to match its implementation.",,lesleyannj,rolivieri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:s",,,,Unset,Unset,2Oct-9Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,rolivieri,,,,,,,,,release-1.4,,,,,,,,,,true,"08/Oct/20 12:35 AM;lesleyannj;https://github.com/hyperledger/fabric-sdk-node/pull/350;;;","14/Oct/20 12:17 AM;rolivieri;Hello, is there a new version of the client SDK available with this fix yet?;;;","14/Oct/20 12:34 AM;lesleyannj;A 1.4 release is expected in the next few weeks.;;;",,,,,,,,,,,,,,
Mismatch between type def and the implementation - blockNumber (number vs. string) - Fabric SDK Node,FABN-1648,46163,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,rolivieri,rolivieri,29/Sep/20 2:59 AM,16/Oct/20 11:03 PM,28/Oct/23 3:25 AM,16/Oct/20 11:03 PM,,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"SDK version: Fabric SDK Node.js v1.4 (*v**1.4.13*)

The SDK documentation and the TypeScript method signature states that the *blockNumber* parameter for the *onEvent()* callback (event *listener* registration) should be a *number*:
 * [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/types/index.d.ts#L388] 
 [https://hyperledger.github.io/fabric-sdk-node/release-1.4/ChannelEventHub.html#registerChaincodeEvent__anchor]

However, we keep seeing that the onEvent() method callback keeps getting a *blockNumber* of the *string* type *instead*.

Looking at the actual implementation, the code decodes the value for the blockNumber as a string:
 * [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/lib/BlockDecoder.js#L538]

Therefore, there is a *mismatch* between type def and the actual implementation.

I am assuming the documentation and type def are correct... meaning, I am expecting the blockNumber to be a *number* and *not* a *string*.",,rolivieri,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyr",,,,Unset,Unset,16Oct-23Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rolivieri,,,,,,,,,,release-1.4,,,,,,,,,,true,"14/Oct/20 12:16 AM;rolivieri;Hello, will there be a new version of the client SDK available with the fix soon?;;;",,,,,,,,,,,,,,,,
Public v1.4 fabric-client npm package with latest tag,FABN-1649,46165,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,29/Sep/20 5:31 PM,01/Oct/20 1:25 AM,28/Oct/23 3:25 AM,01/Oct/20 1:25 AM,,,,,,,,,,0,sdk-triaged,,,,,"All of the v1.4 npm packages are published to with the *latest-1.4* tag; distinct from the v2.2 npm packages, which are published with the *latest* tag. However, there is no v2.2 release of the _fabric-client_ package, which has left the *latest* tag orphaned at a back-level version.

To avoid confusion, the v1.4 _fabric-client_ package should be tagged as both *latest-1.4* and *latest*.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gea:hx",,,,Unset,Unset,25Sep to 2Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
"gateway connect logs an error, but doesn't throw an error to say there was a problem with connection",FABN-1650,46168,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,davidkel,davidkel,30/Sep/20 7:49 PM,07/Oct/20 12:09 AM,28/Oct/23 3:25 AM,07/Oct/20 12:09 AM,v2.x,,,,,,,,,0,node-SDK,sdk-triaged,,,,"Is the not throwing an error intentional ? If so it's confusing to get an error log entry but the connect appears to work.

For example in networkconfig.ts the code here is


{code:java}
async function buildPeer(client: Client, peerName: string, peerConfig: any, config: any): Promise<void> {
     const method = 'buildPeer';
     logger.debug('%s  start  %s', method, peerName);
    const mspid = findPeerMspid(peerName, config);
     const options = await buildOptions(peerConfig);
     const endpoint = client.newEndpoint(options);
     try 
{         logger.debug('%s - about to connect to endorser %s url:%s mspid:%s', method, peerName, peerConfig.url, mspid);         // since this adds to the clients list, no need to save         const peer = client.getEndorser(peerName, mspid);         await peer.connect(endpoint);         logger.debug('%s - connected to endorser %s url:%s', method, peerName, peerConfig.url);     }
 catch (error) 
{         logger.error('%s - Unable to connect to the endorser %s due to %s', method, peerName, error);     }
}
{code}


 And there are other areas where the same pattern can be observed for instance `buildOrderer` in the same file as well as similar functions in DiscoveryService.js",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:u",,,,Unset,Unset,2Oct-9Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
fabric-network: TypeError: Illegal Invocation on transaction submit,FABN-1652,46203,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,balaji.viswanathan,balaji.viswanathan,13/Oct/20 9:17 PM,22/Oct/20 5:30 PM,28/Oct/23 3:25 AM,22/Oct/20 5:30 PM,,,,,,,,,,0,external,sdk-triaged,,,,"fabric-network module: v1.4.13

Node version: v12.15.0

HLF Network: IBP, v1.4.7-2

when using the fabric-networks higher level node sdk (version 1.4.13) to submit transactions, we are seeing a weird issue, where the 1st request succeeds but every subsequent request fails with the following error: TypeError: Illegal Invocation
 the stack trace is

 
{code:java}
2020-10-09T10:14:10.579Z - debug: [DiscoveryEndorsementHandler]: _endorse - starting layout plan 0
2020-10-09T10:14:10.579Z - debug: [DiscoveryEndorsementHandler]: _endorse_layout - start
2020-10-09T10:14:10.580Z - warn: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - endorsement failed - TypeError: Illegal invocation
2020-10-09T10:14:10.579Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - start
2020-10-09T10:14:10.579Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - send endorsement to peer1.example.org:7051
2020-10-09T10:14:10.579Z - debug: [Remote.js]: getUrl::grpcs://peer1.example.org:7051
2020-10-09T10:14:10.579Z - debug: [Peer.js]: sendProposal - Start ----peer1.example.org:7051 grpcs://peer1.example.org:7051
2020-10-09T10:14:10.580Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - send endorsement to peer2.example.org:7051
2020-10-09T10:14:10.580Z - debug: [Remote.js]: getUrl::grpcs://peer2.example.org:7051
2020-10-09T10:14:10.580Z - debug: [Peer.js]: sendProposal - Start ----peer2.example.org:7051 grpcs://peer2.example.org:7051
2020-10-09T10:14:10.581Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - not able to get a completed endorsement
2020-10-09T10:14:10.584Z - debug: [DiscoveryEndorsementHandler]: _execute_endorsements - endorsement failed: TypeError: Illegal invocation
at getCall (node_modules/grpc/src/client_interceptors.js:655:22)
at node_modules/grpc/src/client_interceptors.js:789:16
at node_modules/grpc/src/client_interceptors.js:1402:14
at _buildChain (node_modules/grpc/src/client_interceptors.js:1405:33)
at Object.getInterceptingCall (node_modules/grpc/src/client_interceptors.js:1367:10)
at ServiceClient.Client.makeUnaryRequest (node_modules/grpc/src/client.js:568:47)
at ServiceClient.method_func (node_modules/grpc/src/client.js:1000:43)
at node_modules/fabric-client/lib/Peer.js:127:25
at new Promise (<anonymous>)
at Peer.sendProposal (node_modules/fabric-client/lib/Peer.js:120:10)
at ChannelPeer.sendProposal (node_modules/fabric-client/lib/Channel.js:4052:21)
at node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:287:39
at processTicksAndRejections (internal/process/task_queues.js:94:5)
2020-10-09T10:14:10.584Z - debug: [DiscoveryEndorsementHandler]: _endorse - layout plan 0 did not complete successfully, try another layout plan
 
{code}
 

{{Subsequent invocations see the same error, but thrown from different places. For instance, post discovery_cache_time (5mins), the same error is thrown on discovery}}

 

{{We are caching Gateway, Network and Contract objects. Also accessing the underlying Channel object for txn id checks.}}

 

{{The above behaviour is seen per-channel. i.e., once an invoke starts failing for a channel, subsequent invocations to the same channel fail. However, at this point - an invocation to a new channel succeeds (and then follows the same behaviour of failures).}}",,balaji.viswanathan,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyi",,,,Unset,Unset,16Oct-23Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),balaji.viswanathan,bestbeforetoday,,,,,,,,,,,,,,,,,,,,"14/Oct/20 2:12 AM;bestbeforetoday;Could you check the versions of grpc being resolved with:
{noformat}
npm ls grpc{noformat}
It might also be useful to know the platform on which the Node.js client application is running.;;;","14/Oct/20 2:16 AM;bestbeforetoday;And do you have some minimal client code or client interaction steps that reproduce this error? For example, do you see the problem just creating a Gateway, Network and Contract, then submitting a transaction twice sequentially, or is there a more complex interaction required to trigger the issue?;;;","14/Oct/20 3:08 AM;balaji.viswanathan;grpc version is 1.24.2

The node.js client is running in a container (built off redhat base image). architecture would be amd64/linux. We tried running this both in ibm cloud k8s and a local docker connecting to the HLF network.;;;","14/Oct/20 3:11 AM;balaji.viswanathan;We create the Gateway, Network & Contract once and cache them in-memory. We have no issues constructing them the first time or using it to submit a txn. The client itself is invoked as part of a REST request, a single REST request is 1 blockchain txn. The subsequent REST request, picks the objects of cache and attempts to submit the txn (and fails).  The duration between the requests do not seem to matter.

I will try and add a sample client code soon.;;;","14/Oct/20 11:54 PM;bestbeforetoday;I've tried modifying one of the integration tests using service discovery to submit 10+ transactions sequentially, and run this locally (MacOS) using fabric-network@1.4.13 (with grpc@1.24.2) and Node v12.19.0. I don't see any error. This is going to be difficult to progress without being able to reproduce. If you have a simple sample that can used to reproduce the issue, or you manage to pin down some environment differences that trigger the issue, please update this issue.

If practical, it might also be worth migrating the v2.2, where the SDK uses a different (pure JavaScript) gRPC implementation.;;;","22/Oct/20 5:30 PM;bestbeforetoday;Please reopen if you can provide more information or a minimal sample that will allow the problem to be reproduced.;;;",,,,,,,,,,,
Bad calculation of next snapshot version for npm publish,FABN-1653,46204,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,13/Oct/20 11:40 PM,15/Oct/20 10:13 PM,28/Oct/23 3:25 AM,15/Oct/20 10:13 PM,,,,,,,,,,0,sdk-triaged,,,,,"The publish script calculates the next version to publish by looking at the existing versions, reverse sorting them and taking the first one:
{code:java}
nextVersion=$(npm view ""$1"" versions --json | awk -F . ""/\""${RELEASE_VERSION}/""'{
    ver=$NF
    sub(/\"".*/, """", ver)
    print ver+1
}' | sort -r | head -1)
{code}
This is a lexicographic sort so fails when the versions go beyond single digits, and 10 sorts as smaller than 9.

Instead, use the tail element in the order returned by the npm version view, which should go from lowest to highest version anyway.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qzw",,,,Unset,Unset,9Oct to 16Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,release-1.4,main,,,,,,,,true,,,,,,,,,,,,,,,,,
Metadata path passed in packaging,FABN-1654,46223,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,harrisob@us.ibm.com,Jakeeyturner,Jakeeyturner,21/Oct/20 6:01 PM,23/Oct/20 3:05 AM,28/Oct/23 3:25 AM,23/Oct/20 3:05 AM,,,,,,,,,,0,external,sdk-triaged,,,,"Hello,

 

We have the following code to package a smart contract (using the 'Package' class from 'fabric-client').

 
{code:java}
const pkg: any = await Package.fromDirectory({name: name,            version: version,            path: contractPath,            type: language as ChaincodeType,            metadataPath: metadataPath ? metadataPath : null        });
{code}
 

I'm just wondering what path I should be passing through to 'metadataPath' - is this the path to the 'META-INF' directory or the 'contract-metadata' directory?

 

For further context, we set it to be the META-INF path, which I suspect is why a user is seeing this - https://github.com/IBM-Blockchain/blockchain-vscode-extension/issues/2699",,harrisob@us.ibm.com,Jakeeyturner,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qy9",,,,Unset,Unset,16Oct-23Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,Jakeeyturner,,,,,,,,,,,,,,,,,,,,"23/Oct/20 3:05 AM;harrisob@us.ibm.com;The contract metadata did not exist when the packaging of fabric-client 1.4 was coded. Index information was the only known meta information.

This data must within the 'contractPath', and it will be packaged up.

If you wish to supply your own metadata, the following rules apply
 * it must be in a file called {{metadata.json}}
 * this must be in a directory called {{contract-metadata}}
 * this directory must be a peer of the package.json file of your contract


The packaging code uses the 'metadataPath' argument of your code snippet to build a 'META-INF' directory of the final package. It takes ALL files under this location that have ""*.json*"" extension and adds them to the package as /META-INF/<filePath>, where filePath is the part of the JSON path name that is under the  metadataPath.

if metadataPath is '/something/moresomething/mymeta' and a file is '/something/moresomething/mymeta/statedb/couchdb/indexes/index.json' then the package would contain '/META-INF/statedb/couchdb/indexes/index.json'.

 

Collection json files are read and the info placed not within the chaincode package, but placed into the gRPC request when instantiating.;;;",,,,,,,,,,,,,,,,
Failed to connect before the deadline on Endorser / Orderer - When load increase,FABN-1655,46229,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Duplicate,,aim8526,aim8526,22/Oct/20 3:37 PM,28/Oct/20 1:38 PM,28/Oct/23 3:25 AM,27/Oct/20 11:24 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Hi Team,

I am performing load test to Clinet Node-SDK of HLF 2.2 and got very less TPS (4-5 tps).
i had set strategy to sumbit orderer only (not wait till commit).

But when i run a single API or till 50 concurrent threads it works fine.

when I increase the concurrent thread count it gives discovery timeout failure errors.

Endorser and Orderer deadline etc. and at peers logs it says tls handshake timeout error.


Error: Failed to connect before the deadline on Endorser- name: peer0.org1.example.com, url:grpcs://localhost:7051, connected:false, connectAttempted:true



I had also increase commitTimeout & endorseTimeout in client while preparing gateway.

*Example:*
const connectOptions: GatewayOptions = {
wallet:wallet,
identity:identity,
eventHandlerOptions: {
commitTimeout:6000,
endorseTimeout:6000,
strategy:DefaultEventHandlerStrategies.NONE
// strategy: null
},
discovery: \{ enabled:true, asLocalhost:false }
}
awaitgateway.connect(connectionProfile, connectOptions);

Thanks in advance for your upcomming suggestions.",,aim8526,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzw",,,,Unset,Unset,23Oct to 30Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),aim8526,lesleyannj,,,,,,,,,,,,,,,,,,,,"27/Oct/20 11:22 PM;lesleyannj;Release 2.2.3 made improvements to areas mentioned (discovery and deadlines) that should resolve what is being seen above.  Please re-test with 2.2.3 and re-open if not resolved.;;;","27/Oct/20 11:24 PM;lesleyannj;Release 2.2.3 made improvements to areas mentioned (discovery and deadlines) that should resolve what is being seen above.  Please re-test with 2.2.3 and re-open if not resolved.;;;","28/Oct/20 1:38 PM;aim8526;Thanks [~lesleyannj] for your helpfull suggestion i will try and let u know.
should I change the version of Node-SDK as well Blockchain docker-images or only Node-SDK version ?;;;",,,,,,,,,,,,,,
Publish 2.2.3,FABN-1656,46231,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,22/Oct/20 9:56 PM,29/Oct/20 10:52 PM,28/Oct/23 3:25 AM,29/Oct/20 10:52 PM,,,,,,,,,,0,sdk-triaged,,,,,Publish npm package 2.2.3,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyx",,,,Unset,Unset,23Oct to 30Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Reconnect BlockListener automatically on peer disconnect,FABN-1657,46232,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,sapthasurendran,arner,arner,22/Oct/20 10:59 PM,20/Aug/21 8:13 PM,28/Oct/23 3:25 AM,18/Aug/21 7:11 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Applies to fabric-network NodeJS SDK v2.2.

*To reproduce*
 # Create network/org with one peer
 # Add block listener:
```
 {{network.addBlockListener(async (blockEvent: BlockEvent) => {}}
{{    console.log(blockEvent.blockNumber);}}
{{});}}
```
 # Delete peer pod / kill peer container
 # Invoke transaction.
 # Observe that the listener is disconnected.

*Issue*

Currently, the network reconnects automatically but the BlockListener is lost. Because there is no way (that I'm aware of) for the user to respond to a peer disconnect event, the user is forced to apply hacky solutions.

It seems (if I remember reading the SDK code correctly) that the event service tries to reconnect once, immediately, but this is often not enough (for instance on real peer or connectivity failure).

*Proposed solution*

Make the BlockListener reconnect automatically with retries. This would make it more robust. However, thinking of a truly resilient service, as a user I might _also_ want to be notified or be able to poll if the reconnection doesn't succeed or if there's other issues, so I can take measures on my end. Maybe one of the alternatives below could be a useful addition.

*Alternatives*
 * Make an error callback available, like with the transactionlistener (with a specific verifiable error for connection issues); or
 * Add an 'isConnected' flag to either the listener or the network, to allow for polling (but this alone may not be robust enough to cover temporary hiccups); or
 * Add a disconnected event to the Network so that the user can manually reconnect the BlockListener.

 ",,arner,bestbeforetoday,jtonline,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1642,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzm",,,,Yes,Unset,NEXT TODO ITEMS,,,,,,,,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),arner,bestbeforetoday,jtonline,lesleyannj,,,,,,,dev,main,,,,,,,,,true,"27/Oct/20 11:29 PM;lesleyannj;This reported scenario is when there is only 1 peer in the env.  This is not a expected standard scenario as it provides no failover etc.

However, suggested improvement to look at ensuring a reconnect is tried even in scenario with just 1 peer.;;;","27/Oct/20 11:31 PM;bestbeforetoday;The issue is triggered at this line:
 [https://github.com/hyperledger/fabric-sdk-node/blob/61a06dd6c95a4a13cb8b96921ce2f55dca2d7fc9/fabric-network/src/impl/event/blockeventsource.ts#L131]

If that deferred call to {{start()}} fails (which it will do *only* if _none_ of the eventing peers it wants to use are available), it just gives up and listeners are left in an orphaned state. There should be some logic that keeps retrying periodically on a reconnect until successful. On the initial connect it can just throw an error back to the application code that is registering the listener, so I’m not sure if the best behaviour is to continue doing that or to retry the same as for a reconnect.

Once a listener is registered, event errors should definitely be handled transparently by the event listening infrastructure and not surfaced to application code to deal with. We're trying to do all the fiddly low-level work on behalf of the application so they can focus on implementing business logic.;;;",,,,,,,,,,,,,,,
Run builds on Ubuntu 20.04,FABN-1658,46237,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,bestbeforetoday,bestbeforetoday,23/Oct/20 9:48 PM,30/Oct/20 12:58 AM,28/Oct/23 3:25 AM,26/Oct/20 10:07 PM,,,,,,,,,,0,sdk-triaged,,,,,"Ubuntu 20.04 has been LTS for some time and is now considered the default Ubuntu release for Azure Pipelines builds. To stay current we should run builds using Ubuntu 20.04 (rather than Ubuntu 18.04), at least in the master branch. Older branches could stay on Ubuntu 18.04, which would give us more platform coverage.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzy",,,,Unset,Unset,23Oct to 30Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Issues when trying to query another org's peer,FABN-1659,46239,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,denyeart,denyeart,23/Oct/20 11:56 PM,24/Oct/20 12:05 AM,28/Oct/23 3:25 AM,24/Oct/20 12:05 AM,,,,,,,,,,0,,,,,,"If the client's org does not have a peer, and they try to query another org's peer, there seems to be couple issues.

*Issue1:* Using service discovery with default query handler produces an error with no error message:
{code:java}
			await gateway.connect(ccp2, {
				wallet,
				identity: org1UserId,
				discovery: { enabled: true, asLocalhost: true }, // using asLocalhost as this gateway is using a fabric network deployed locally
				eventHandlerOptions: {strategy: DefaultEventHandlerStrategies.PREFER_MSPID_SCOPE_ALLFORTX}
			});
{code}
{code:java}
let result = await contract.evaluateTransaction('ReadAsset', id);
{code}
results in:
{code:java}
2020-10-23T14:31:30.059Z - error: [SingleQueryHandler]: evaluate: message=Query failed. Errors: [], stack=FabricError: Query failed. Errors: []
    at SingleQueryHandler.evaluate (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/asset-transfer-basic/application-javascript/node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:46:23)
    at Transaction.evaluate (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/asset-transfer-basic/application-javascript/node_modules/fabric-network/lib/transaction.js:275:49)
    at ContractImpl.evaluateTransaction (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/asset-transfer-basic/application-javascript/node_modules/fabric-network/lib/contract.js:178:45)
    at main (/Users/denyeart/work/src/github.com/hyperledger/fabric-samples/asset-transfer-basic/application-javascript/app-client.js:128:32)
    at processTicksAndRejections (internal/process/task_queues.js:97:5), name=FabricError
******** FAILED to run the application: FabricError: Query failed. Errors: []
{code}
 

*Issue2:* Using service discovery with a query handler results in TypeError: queryOptions.strategy is not a function.
{code:java}
			await gateway.connect(ccp2, {
				wallet,
				identity: org1UserId,
				discovery: { enabled: true, asLocalhost: true }, // using asLocalhost as this gateway is using a fabric network deployed locally
				eventHandlerOptions: {strategy: DefaultEventHandlerStrategies.PREFER_MSPID_SCOPE_ALLFORTX},
				queryHandlerOptions: {strategy: DefaultQueryHandlerStrategies.PREFER_MSPID_SCOPE_SINGLE}
			});
{code}
{code:java}
let result = await contract.evaluateTransaction('ReadAsset', id);
{code}
results in:
{code:java}
******** FAILED to run the application: TypeError: queryOptions.strategy is not a function
{code}",,denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gwj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,"24/Oct/20 12:04 AM;harrisob@us.ibm.com;PREFER_MSPID_SCOPE_SINGLE will be included in v2.2.3;;;",,,,,,,,,,,,,,,,
Bad error message if setEndorsingOrganizations() org has no peer up,FABN-1660,46240,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,denyeart,denyeart,24/Oct/20 12:11 AM,13/Nov/20 1:20 AM,28/Oct/23 3:25 AM,13/Nov/20 1:20 AM,,,,,,,,,,0,sdk-triaged,,,,,"*Scenario:* setEndorsingOrganizations() set to 'Org1MSP' but Org1 has no peers up.

Sample code:
{code:java}
let transaction = contract.createTransaction('CreateAsset');
 transaction.setEndorsingOrganizations('Org1MSP');
 await transaction.submit(id, 'yellow', '5', 'Tom', '1300');
{code}
Actual Result:
{code:java}
******** FAILED to run the application: TypeError: Cannot read property 'peers' of undefined
{code}
Expected Result:

It should return a user friendly error stating that no peers were found for the org.",,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrc",,,,Unset,Unset,6Nov-13Nov,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Set for snapshot for 2.2.4,FABN-1661,46249,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,27/Oct/20 4:51 AM,28/Oct/20 10:36 PM,28/Oct/23 3:25 AM,28/Oct/20 10:36 PM,,,,,,,,,,0,sdk-triaged,,,,,Set release-2.2 to publish snapshots for 2.2.4,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyyi",,,,Unset,Unset,23Oct to 30Oct,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Unhelpful chaincode error messages,FABN-1662,46250,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,nkl199,nkl199,27/Oct/20 7:47 PM,29/Oct/20 1:53 AM,28/Oct/23 3:25 AM,29/Oct/20 1:53 AM,v2.x,,,,,,,,,0,external,sdk-triaged,,,,"FABN-1646 was reopened due to the error message 



Failed to perform query transaction [getAsset] using arguments [client2_32000_305],  with error: Error: unexpected end of JSON input  at SingleQueryHandler.evaluate (/home/<user>/caliper/workspace/node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:41:27)

The reported error is coming from chaincode (in this case Go chaincode), but it was not obvious from the message that the root cause was chaincode.

It would have been easier for a user to diagnose if the error had alluded to the root of the error, such as:

`Chaincode Error: unexpected end of JSON input  at SingleQueryHandler.evaluate`",,lesleyannj,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1646,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,2.2.3,Unset,No,,,"1|i01ge9:qyzzr9",,,,Unset,Unset,23Oct to 30Oct,,,,,,,,,,"Create network with Go contract (caliper fixed-asset sample)

Perform get-asset benchmark

Observe errors",,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,nkl199,,,,,,,,,dev,main,,,,,,,,,true,"27/Oct/20 11:26 PM;lesleyannj;Believe error is being reported from ""throw Error(result.message);"" which give no indication that error is from chaincode on peer.

The debug line above "" logger.debug('%s - throw peer response status: %s message: %s', method, result.status, result.message); ""  would have provided more detail, but would have had to have debug switched on.

Improvement suggestion is to augment the message with details output to log before throwing error.
					

;;;","29/Oct/20 12:07 AM;lesleyannj;Change submitted to master and 2.2;;;",,,,,,,,,,,,,,,
Unable to send proposals to system chaincode,FABN-1663,46265,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,bestbeforetoday,bestbeforetoday,30/Oct/20 6:34 PM,24/Nov/20 10:55 PM,28/Oct/23 3:25 AM,24/Nov/20 10:55 PM,,,,,,,,,,0,external,sdk-triaged,,,,"FABN-1646 introduced into v2.2.3 of the Node SDK a check in Proposal.send() for the existence of the chaincode on a given peer in discovery results:
{code:java}
if (peer.hasChaincode(this.chaincodeId)) {
    promises.push(peer.sendProposal(signedEnvelope, requestTimeout));
} else {
    const chaincodeError = new Error(`Peer ${peer.name} is not running chaincode ${this.chaincodeId}`);
    peer.getCharacteristics(chaincodeError);
    promises.push(Promise.reject(chaincodeError));
}
{code}
It seems that system chaincodes are not included in discovery results so this prevents invocation of queries such as GetBlockByNumber on the qscc chaincode, with the following error:
{noformat}
[SingleQueryHandler]: evaluate: message=Query failed. Errors: [""Error: Peer peer.org:7051 is not running chaincode qscc""], stack=FabricError: Query failed. Errors: [""Error: Peer peer.org:7051 is not running chaincode qscc""]
    at SingleQueryHandler.evaluate (/.../node_modules/fabric-network/lib/impl/query/singlequeryhandler.js:46:23){noformat}
 This is a regression from v2.2.2",,bestbeforetoday,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1646,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf4",,,,Unset,Unset,20Nov to 29Nov,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,yacovm,,,,,,,,dev,main,,,,,,,,,true,"30/Oct/20 8:42 PM;yacovm;{quote}It seems that system chaincodes are not included in discovery results
{quote}
 

Since all peers have QSCC it makes no sense to ask discovery about whether they have it or not, since every peer has it.;;;","30/Oct/20 8:46 PM;bestbeforetoday;A fix probably should include adding a scenario test to query a system chaincode, such as *qscc*.;;;","30/Oct/20 11:26 PM;harrisob@us.ibm.com;Are all the system chaincodes listed somewhere ?;;;","30/Oct/20 11:46 PM;yacovm;In the [documentation|https://hyperledger-fabric.readthedocs.io/en/latest/smartcontract/smartcontract.html#system-chaincode].;;;","30/Oct/20 11:47 PM;yacovm;But keep in mind that VSCC and ESCC are not chaincodes in Fabric since v1.2 and also pre 1.2 they can not be invoked by clients.;;;","31/Oct/20 2:52 AM;harrisob@us.ibm.com;transaction.submits have never worked when using system chaincodes and discovery due to discovery not returning an endorsement plan. 
Should we force users to specify the peers when they submit transactions or should the SDK create an endorsement plan for system chaincodes since discovery will not. The user has turned on discovery for a reason and we should attempt to help them. 
If we were to create a plan, I am thinking that it should be select one peer from every organization (mspid) found using the 'local' discovery query as the source.
 ;;;",,,,,,,,,,,
SDK Support for Fabric 2.3.0 release.,FABN-1664,46270,,Task,Backlog,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,,lesleyannj,lesleyannj,30/Oct/20 11:55 PM,23/Mar/21 12:59 AM,28/Oct/23 3:25 AM,,,,,,,,,,,0,sdk-triaged,,,,,"HLFabric and SDKs releases are not coupled.

For that reason SDK client is not required to cut a specific 2.3.0 release or branch when HLF 2.3.0 is released or maintained.

HLF 2.3.x will be supported out of the SDK 2.2 LTR branch.

The following is required to enable this strategy:

 - update testing to include testing SDK 2.2  against 2.3
 - update documentation to clarify that 2.2 is the SDK release compatible with 2.3

Testing should consider and cover new functionality in fabric 2.3",,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzk",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,,,,,,,,,,,,"02/Dec/20 8:20 PM;lesleyannj;Same coverage of testing and documentation update is required for Java SDK and Gateway Java.;;;","02/Dec/20 8:21 PM;lesleyannj;Mailing list query https://lists.hyperledger.org/g/fabric/message/9349  (Using Fabric Java SDK with v2.3.0 breaks code )
;;;",,,,,,,,,,,,,,,
publish 1.4.14,FABN-1665,46291,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,05/Nov/20 11:50 PM,13/Nov/20 11:30 PM,28/Oct/23 3:25 AM,13/Nov/20 11:30 PM,,,,,,,,,,0,sdk-triaged,,,,,Publish the next version of release 1.4,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf7",,,,Unset,Unset,6Nov-13Nov,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Error: _pkcs11SkiToHandle[527]: no key with SKI while connecting to gateway when using HSM/PKCS11,FABN-1666,46302,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,harrisob@us.ibm.com,pooja_kamat,pooja_kamat,09/Nov/20 4:53 PM,07/Dec/20 11:00 PM,28/Oct/23 3:25 AM,07/Dec/20 11:00 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Error while connecting to gateway when using application user which stores identity in HSM.

Steps to reproduce : 
 # Create network components, Fabric CA, orderer and peers, all these components store private key on HSM.
 # Create channel, join channel, deploy chaincode.
 # Create an app user which will also store its identity on HSM.
 ##  Enroll a bootstrap admin.
 ## Register/enroll a new identity using the admin context - this app-user identity stores its private key in HSM.
 ## Connect to gateway using gateway.connect()

If we register/enroll a new user with HSM, the gateway is able to connect, but the same user which was already created in previous session is used, the gateway Throws error  ""no key with SKI"" error.

So we have to register/enroll a new client identity everytime we have to interact with the network.",,harrisob@us.ibm.com,pooja_kamat,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1590,,,,,,,,,,,,,,,,,,,,,,,,,,"11/Nov/20 3:58 PM;pooja_kamat;codeSnippet;https://jira.hyperledger.org/secure/attachment/18845/codeSnippet","11/Nov/20 3:57 PM;pooja_kamat;debugLogs;https://jira.hyperledger.org/secure/attachment/18844/debugLogs",,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6p",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,pooja_kamat,,,,,,,,,dev,main,,,,,,,,,true,"11/Nov/20 5:02 AM;harrisob@us.ibm.com;Could I get a SDK log trace, setting the following before running your node application

       export HFC_LOGGING='{""debug"":""console""}'

or put a file name instead of ""console"", the file does not have to exist, but the directories do

Could I see the code that registers/enrolls the user and stores it in the same wallet that is being used by the gateway connect ?;;;","11/Nov/20 6:30 AM;harrisob@us.ibm.com;I do not understand step 3, seems step 5 and 6 would be required before step 3 is possible, and what transaction will create and store an identity ?;;;","11/Nov/20 3:58 PM;pooja_kamat;[^debugLogs][^codeSnippet]PFA debug logs and code snippet.;;;","11/Nov/20 3:59 PM;pooja_kamat;Regarding step 3, have updated in description.;;;",,,,,,,,,,,,,
Payload no longer provided in Evaluation errors in SDK ,FABN-1667,46312,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,jambonrose,jambonrose,11/Nov/20 3:11 AM,07/Dec/20 11:00 PM,28/Oct/23 3:25 AM,07/Dec/20 11:00 PM,,,,,,,,,,0,sdk-triaged,,,,,"I am not clear whether:
 * this is a bug or an undocumented API change
 * if the problem stems from our mis-use of error handling between chaincode and Fabric SDK

We have a Golang chaincode transaction that acts like a REST GET call. Provided an ID, it tries to find the object by that ID. In the event of an error (missing object, permissions denied, etc) we return a Peer Response with the `shim.ERROR` code. To allow the application to understand what happened, the Peer Response Payload is given serialized JSON with an separate error code, error message, and other context.

This has worked fine with v1.4.x of the SDK. However, during our upgrade to v2 of the SDK, we have found that the error thrown by the SDK no longer contains the Peer Response Payload. Specifically, if we evaluate a transaction, and the Peer Response returns with a `shim.ERROR` code, the error thrown by the SDK does not include the payload with our application error data.
 * Is the omission to Peer Response Payload from the Fabric NodeJS SDK intentional?
 * Should we be returning errors from chaincode to the SDK in a different way (with `shim.OK`, for instance)?
 * Is there any documentation about proper error handling of chaincode errors?

Clarification:
Our original reason for duplication the status code (the Peer Response has a status code, and our serialized Payload has a status code) was due to behavior displayed by the SDK. If I recall correctly, the SDK failed to provide data to the application if a status code other than `shim.OK` or `shim.ERROR` was used. I have not tested whether this behavior is still present in the latest version of the SDK. Is this behavior intentional? Should we be able to use different status codes? This ties into one of my questions above: are these errors strictly for Fabric, and should our application/chaincode errors use `shim.OK` instead?

Thank you.",,bestbeforetoday,jambonrose,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf49",,,,Yes,Unset,7Dec-14Dec,,,,,,,,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,jambonrose,,,,,,,,,dev,main,,,,,,,,,true,"13/Nov/20 7:01 PM;bestbeforetoday;It seems the v2 Node SDK is not including in the Error thrown by *transaction.evaluate()* the *Payload* property of the protobuf *Response* message for error (unendorsed) proposal responses. This does not look to ever have been documented behaviour, but in v1.4 that property was included in the thrown Error object. I think we should include it in the Error object thrown by the v2 SDK too.

I would not recommend trying to use the status code on a proposal response to communicate application-level information. Even within Fabric their use is not very well defined and not very consistent across different language implementations. While they are modelled on HTTP status codes they are definitely not HTTP status codes. A success response simply means that the transaction proposal is endorsed by the peer while an error response indicates that endorsement failed.

It's really up to your application what pattern of communication suits you best. For the example of querying an asset by ID, implementation options might include:
 # Return a response with the asset or an error if the asset cannot be returned
 # Return a response with the asset if it exists, an empty response if the asset does not exist, or an error for failures accessing data
 # Return an application-defined payload that describes to the application the result of the query

I think it is perfectly valid for your chaincode to actively return a shim.Error for an error condition though. Just bear in mind that it's often viewed as bad security practice to return contextual information along with a remote error as this provides information about the server-side data and implementation that may be used by attackers.;;;","20/Nov/20 7:08 PM;bestbeforetoday;Note that for a transaction that is being submitted (i.e. updating the ledger) rather than evaluated (i.e. a query), a success response will indicate successful endorsement and that the transaction should be committed to the ledger. So you definitely want to return an error if the transaction does not execute successfully in this case.;;;",,,,,,,,,,,,,,,
gateway.evaluate should use timeouts from gateway options,FABN-1668,46326,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,nkl199,nkl199,17/Nov/20 2:35 AM,01/Dec/20 12:30 AM,28/Oct/23 3:25 AM,01/Dec/20 12:30 AM,Future,,,,,,,,,0,external,node-SDK,sdk-triaged,,,"The current `evaluate` logic (in 1.4 sdk) is:


{quote}async evaluate(...args) {
    verifyArguments(args);
    this._setInvokedOrThrow();
    const channel = this._contract.getNetwork().getChannel();
    const request = this._buildRequest(args);
    const commitTimeout = this._contract.getEventHandlerOptions().commitTimeout * 1000; // in ms
    const timeout = this._contract.gateway.getClient().getConfigSetting('request-timeout', commitTimeout);
    if (timeout < commitTimeout) {
        request.request_timeout = commitTimeout;
    }
    const query = newQuery(channel, request);
    return this._queryHandler.evaluate(query);
}{quote}
 
 
Meaning that timeout is coming from the client config setting, or a commit timeout. 

The query should really be pulling from the gateway options, just like the `submit` function on the gateway does, and use a sensible default if not present. 

A commit has no real point within a query.
 
 
 
 ",,harrisob@us.ibm.com,nkl199,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzr",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,inspect code on 1.4 release branch,,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,nkl199,,,,,,,,,release-1.4,,,,,,,,,,true,"21/Nov/20 1:39 AM;harrisob@us.ibm.com;How about we add a 'timeout' the same way it is in v2 to the queryHandlerOptions ? Default 30 seconds;;;","24/Nov/20 12:13 AM;nkl199;That would be much better :)

You might need to also cater for those taking inputs from connection profiles, since this is ""permitted"" in v1.4?;;;",,,,,,,,,,,,,,,
Insufficient connectin.yaml example property,FABN-1669,46334,,Documentation,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,Specia1,Specia1,Specia1,19/Nov/20 7:57 AM,25/Nov/20 11:05 PM,28/Oct/23 3:25 AM,25/Nov/20 11:05 PM,,,,,,,,,,0,external,sdk-triaged,,,,"In [commonconnectionprofile example in document|https://hyperledger.github.io/fabric-sdk-node/master/tutorial-commonconnectionprofile.html], despite the use of organizations, connection.yaml is not fully described about certificateAuthorities.

Therefore, we need to update the file.
 ",,lesleyannj,Specia1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-808,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6yc",,,,Unset,Unset,20Nov to 29Nov,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,Specia1,,,,,,,,,dev,main,,,,,,,,,true,"24/Nov/20 10:59 PM;lesleyannj;PR to master merged.  [~Specia1] please cherry pick to 2.2 branch.;;;","25/Nov/20 6:25 PM;Specia1;[~lesleyannj] 
Please check my cherry picked PR([https://github.com/hyperledger/fabric-sdk-node/pull/384)]

Thank you.;;;",,,,,,,,,,,,,,,
Wrong type definition for DiscoveryResults,FABN-1670,46335,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,20/Nov/20 3:06 AM,03/Dec/20 7:35 PM,28/Oct/23 3:25 AM,03/Dec/20 7:35 PM,,,,,,,,,,0,external,sdk-triaged,,,,"In *fabric-common*, the type definition for `*DiscoveryResults*` seems to be wrong.

 

The type definition is:
{code:js}
export interface DiscoveryResults {
                msps?: { [mspid: string]: DiscoveryResultMSPConfig };
                orderers?: { [mspid: string]: DiscoveryResultEndpoints };

                peersByOrg?: { [name: string]: DiscoveryResultPeers };

                endorsement_plans: DiscoveryResultEndorsementPlan[];

                timestamp: number;
} 
{code}
([https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-common/types/index.d.ts#L479])

 

On the other hand, the actual code which creates *DiscoveryResults* is:
{code:java}
if (result.config_result) {
  logger.debug(`${method} - process result - have configResult in ${index}`);
  const config = this._processConfig(result.config_result);
  this.discoveryResults.msps = config.msps;
  this.discoveryResults.orderers = await this._buildOrderers(config.orderers);
}
if (result.members) {
  logger.debug(`${method} - process result - have members in ${index}`);
  this.discoveryResults.peers_by_org = await this._processMembership(result.members);
}
if (result.cc_query_res) {
  logger.debug(`${method} - process result - have ccQueryRes in ${index}`);
  this.discoveryResults.endorsement_plan = await this._processChaincode(result.cc_query_res);
}
{code}
([https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-common/lib/DiscoveryService.js#L344])

 

To align with the actual code, the type definition should be fixed as follows:
 * peersByOrg?: -> peers_by_org?:
 * endorsement_plans: -> endorsement_plan?:",,lesleyannj,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6s",,,,Unset,Unset,30Nov-7Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,tatsu-sato,,,,,,,,,dev,main,,,,,,,,,true,"24/Nov/20 11:04 PM;lesleyannj;PR to master merged.  [~tatsu-sato] please cherry pick to 2.2 branch.;;;",,,,,,,,,,,,,,,,
Setting endorsing organizations fails without Service Discovery,FABN-1671,46336,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,chbtt,chbtt,chbtt,21/Nov/20 4:31 AM,25/Nov/20 9:16 PM,28/Oct/23 3:25 AM,25/Nov/20 9:16 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Our setup runs fabric-network v2.2.3 under Node v12.19.0.
 We connect a Gateway instance with
{code:javascript}
discovery: { enabled: false, asLocalhost: false }
{code}
and specify all available peers and orderers in a common connection profile JSON (Object).
 Now after getting a Network instance and from that a Contract instance, we want to submit a transaction to specific endorsing organizations by MSP-IDs with
{code:javascript}
contract.createTransaction(functionName)
        .setEndorsingOrganizations(...endorsingOrgs)
        .submit(...args)
{code}
where ""endorsingOrgs"" is an array of strings.
 We get the following error:
{quote}Stack:TypeError: Cannot read property 'name' of undefined
           at getEndorsers (/usr/src/api/node_modules/fabric-common/lib/Channel.js:317:39)
          at Array.map (<anonymous>)
          at Transaction.submit (/usr/src/api/node_modules/fabric-network/lib/transaction.js:202:62)
{quote}
The exact same setup works with Service Discovery enabled. We do believe to have identified the problem in [fabric-network/src/transaction.ts|https://github.com/hyperledger/fabric-sdk-node/blob/2c976df03ccc9b354bfd2edc1e809b9dbd7ca8dd/fabric-network/src/transaction.ts#L259] which calls getEndorsers() through map() seemingly resulting in _this_ to be undefined.
We did a quick search through the repository and could not find any other occurrence of this kind of behavior.",,chbtt,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6zy",,,,Unset,Unset,20Nov to 29Nov,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),chbtt,lesleyannj,,,,,,,,,dev,main,,,,,,,,,true,"21/Nov/20 5:07 AM;chbtt;[Pull Request|https://github.com/hyperledger/fabric-sdk-node/pull/379];;;","24/Nov/20 11:06 PM;lesleyannj;PR to master merged.  [~chbtt] please cherry pick to 2.2 branch.;;;","25/Nov/20 8:28 AM;chbtt;[cherry pick to 2.2|https://github.com/hyperledger/fabric-sdk-node/pull/382];;;",,,,,,,,,,,,,,
Wrong type and field names in docs/tutorials/query-peers.md,FABN-1672,46337,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,21/Nov/20 5:29 PM,03/Dec/20 7:35 PM,28/Oct/23 3:25 AM,03/Dec/20 7:35 PM,,,,,,,,,,0,external,sdk-triaged,,,,"A type and a field name in docs/tutorials/query-peers.md seems to be wrong.

 

This tutorial describes “query handling strategies“ by using the following sample code:
{code:js}
const { Gateway, QueryHandlerStrategies } = require('fabric-network');

const connectOptions = {
    query: {
        timeout: 3, // timeout in seconds
        strategy: QueryHandlerStrategies.MSPID_SCOPE_SINGLE
    }
}

const gateway = new Gateway();
await gateway.connect(connectionProfile, connectOptions); 
{code}
 

On the other hand, the actual type definition in fabric-network/src/gateway.ts is:
{code:js}
export interface GatewayOptions {
   (…)
    eventHandlerOptions?: DefaultEventHandlerOptions;
    queryHandlerOptions?: DefaultQueryHandlerOptions;
   (…)
}
{code}
 

To align with the actual code, the tutorial should be fixed as follows:
 - QueryHandlerStrategies -> DefaultQueryHandlerStrategies
 - query: { -> queryHandlerOptions: {",,lesleyannj,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6u",,,,Unset,Unset,30Nov-7Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,tatsu-sato,,,,,,,,,dev,main,,,,,,,,,true,"24/Nov/20 11:07 PM;lesleyannj;PR to master merged.  [~tatsu-sato] please cherry pick to 2.2 branch.;;;",,,,,,,,,,,,,,,,
Failed to evaluate transaction: Error: DiscoveryService has failed to return results,FABN-1673,46341,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Invalid,,piyushap,piyushap,24/Nov/20 9:55 PM,12/Apr/21 11:48 PM,28/Oct/23 3:25 AM,09/Dec/20 12:26 AM,,,,,,,,,,0,external,sdk-triaged,,,,"System Configuration:

Ubuntu 18.04

Minikube 1.14

Fabric v 2.0

I deployed hlf network on minikube . my network contains 2 org => acme.com and budget.com with Orderer type Solo. I have created 3 separate pods for each.

kubectl get all 
 NAME READY STATUS RESTARTS AGE
 pod/acme-orderer-0 1/1 Running 4 3d23h
 pod/acme-peer-0 2/2 Running 8 3d23h
 pod/budget-peer-0 2/2 Running 8 3d23h

NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE
 service/acme-orderer-clusterip ClusterIP 10.99.179.128 <none> 30750/TCP 3d23h
 service/acme-orderer-nodeport NodePort 10.110.240.75 <none> 30750:30750/TCP 3d23h
 service/acme-peer-1 LoadBalancer 10.110.21.0 10.110.21.0 5000:32693/TCP 30h
 service/acme-peer-clusterip ClusterIP 10.98.139.237 <none> 30751/TCP,30752/TCP 3d23h
 service/acme-peer-nodeport NodePort 10.107.178.142 <none> 30751:30751/TCP,30752:30752/TCP 3d23h
 service/acme-peer-service-1 LoadBalancer 10.108.235.61 10.108.235.61 30751:30595/TCP 31h
 service/acme-peer-svc LoadBalancer 10.96.69.124 10.96.69.124 3000:32017/TCP 30h
 service/budget-peer-clusterip ClusterIP 10.101.239.117 <none> 30851/TCP 3d23h
 service/budget-peer-nodeport NodePort 10.104.188.86 <none> 30851:30851/TCP,30852:30852/TCP 3d23h
 service/kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 3d23h
 service/svc-acme-orderer LoadBalancer 10.105.35.6 10.105.35.6 6000:32627/TCP 25h

NAME READY AGE
 statefulset.apps/acme-orderer 1/1 3d23h
 statefulset.apps/acme-peer 1/1 3d23h
 statefulset.apps/budget-peer 1/1 3d23h

And I am trying to connect this network using connection profile JSON which I mentioned below.
 {
 ""name"": ""first-network-acme"",
 ""version"": ""1.0.0"",
 ""client"": {
 ""organization"": ""AcmeMSP"",
 ""connection"": {
 ""timeout"": {
 ""peer"":

{ ""endorser"": ""6000"" }

}
 }
 },
 ""organizations"": {
 ""AcmeMSP"":

{ ""mspid"": ""AcmeMSP"", ""peers"": [ ""peer1.acme.com"" ], ""certificateAuthorities"": [ ] }

},
 ""peers"": {
 ""peer1.acme.com"": {
 ""url"": ""grpcs://10.96.69.124:3000"",

""tlsCACerts"":

{ ""pem"": ""-----BEGIN CERTIFICATE-----\n xxxxx key xxxxxx \n-----END CERTIFICATE-----\n"" }

,
 ""grpcOptions"":

{ ""ssl-target-name-override"": ""peer1.acme.com"", ""hostnameOverride"": ""peer1.acme.com"" }

}
 },
 ""channels"": {
 ""airlinechannel"":

{ ""orderers"": [ ""orderer.acme.com"" ], ""peers"": [ ""peer1.acme.com"" ] }

},
 ""orderers"": {
 ""orderer.acme.com"": {
 ""url"": ""grpcs://10.105.35.6:6000"",
 ""tlsCACerts"":

{ ""path"":""/home/user/Documents/blockchain-neo/project-Hyperledger/first-network/crypto-config/ordererOrganizations/acme.com/msp/tlscacerts/tlsca.acme.com-cert.pem"" }

,
 ""grpcOptions"":

{ ""ssl-target-name-override"": ""orderer.acme.com"" }

}

},
 ""certificateAuthorities"": {
 }
 }
  
 but after running query.js i getting below error 
 Error: Failed to connect before the deadline on Discoverer- name: peer1.acme.com, url:grpcs://peer1.acme.com:3000, connected:false, connectAttempted:true
 2020-11-24T12:23:54.568Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.acme.com url:grpcs://peer1.acme.com:3000 timeout:3000
 2020-11-24T12:23:54.569Z - error: [ServiceEndpoint]: ServiceEndpoint grpcs://peer1.acme.com:3000 reset connection failed :: Error: Failed to connect before the deadline on Discoverer- name: peer1.acme.com, url:grpcs://peer1.acme.com:3000, connected:false, connectAttempted:true
 2020-11-24T12:23:54.569Z - debug: [ServiceEndpoint]: checkConnection[Discoverer-peer1.acme.com] - end - connected:false
 2020-11-24T12:23:54.569Z - debug: [DiscoveryService]: send[airlinechannel] - processing discovery response
 2020-11-24T12:23:54.569Z - error: [DiscoveryService]: send[airlinechannel] - no discovery results
 Failed to evaluate transaction: Error: DiscoveryService has failed to return result",,harrisob@us.ibm.com,piyushap,ykh2k,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hcr:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,piyushap,ykh2k,,,,,,,,,,,,,,,,,,,"24/Nov/20 11:19 PM;harrisob@us.ibm.com;I do not understand why there are two different URL's for your peer, in the connection profile I see grpcs://10.96.69.124:3000, however in the error message I see grpcs://peer1.acme.com:3000 ?

Could we get a full debug trace, set the following before kicking off your node application, you may also log to a file by placing it's name instead of  console
     export HFC_LOGGING='{""debug"":""console""}'
;;;","25/Nov/20 4:02 PM;piyushap;Hello Bret, 

Below are the logs

2020-11-25T06:56:23.241Z - debug: Successfully constructed a winston logger with configurations debug=console
2020-11-25T06:56:23.467Z - debug: [crypto_ecdsa_aes]: Hash algorithm: SHA2, hash output size: 256
2020-11-25T06:56:23.738Z - debug: [Gateway]: in Gateway constructor
2020-11-25T06:56:23.738Z - debug: [Gateway]: connect - start
2020-11-25T06:56:23.739Z - debug: [Gateway]: connection options: \{""wallet"":{""providerRegistry"":{""providers"":{}},""store"":\{""storePath"":""/home/webwerks/Documents/blockchain-neo/DSG-Hyperledger/dsg/javascript/wallet""}},""identity"":""user1"",""discovery"":\{""enabled"":true,""asLocalhost"":true}}
2020-11-25T06:56:23.739Z - debug: [Client]: Client.constructor[gateway client] - start 
2020-11-25T06:56:23.739Z - debug: [Gateway]: connect - setting identity from wallet
2020-11-25T06:56:23.740Z - debug: [crypto_ecdsa_aes]: createKeyFromRaw - start
2020-11-25T06:56:23.743Z - debug: [crypto_ecdsa_aes]: createKeyFromRaw - have the key [Circular]
2020-11-25T06:56:23.743Z - debug: [crypto_ecdsa_aes]: createKeyFromRaw - start
2020-11-25T06:56:23.746Z - debug: [crypto_ecdsa_aes]: createKeyFromRaw - have the key [Circular]
2020-11-25T06:56:23.747Z - debug: [Gateway]: connect - using self signed setting for tls
2020-11-25T06:56:23.747Z - debug: [Client]: setTlsClientCertAndKey: gateway client - start
2020-11-25T06:56:23.747Z - debug: [Client]: setTlsClientCertAndKey: gateway client - generating self-signed TLS client certificate
2020-11-25T06:56:23.747Z - debug: [crypto_ecdsa_aes]: Hash algorithm: SHA2, hash output size: 256
2020-11-25T06:56:23.993Z - debug: [Gateway]: connect - NetworkConfig loading client from ccp
2020-11-25T06:56:23.993Z - debug: [NetworkConfig]: loadFromConfig - start
2020-11-25T06:56:23.994Z - debug: [NetworkConfig]: buildPeer - start - peer1.acme.com
2020-11-25T06:56:23.994Z - debug: [NetworkConfig]: findPeerMspid - start for peer1.acme.com
2020-11-25T06:56:23.994Z - debug: [NetworkConfig]: findPeerMspid - checking peer peer1.acme.com in org AcmeMSP
2020-11-25T06:56:23.994Z - debug: [NetworkConfig]: findPeerMspid - found mspid AcmeMSP for peer1.acme.com
2020-11-25T06:56:23.994Z - debug: [NetworkConfig]: buildOptions - start
2020-11-25T06:56:23.995Z - debug: [Client]: newEndpoint: gateway client - start
2020-11-25T06:56:23.995Z - debug: [Client]: getConnectionOptions: gateway client - start
2020-11-25T06:56:23.995Z - debug: [Client]: newEndpoint: gateway client grpc-wait-for-ready-timeout set to 3000
2020-11-25T06:56:23.995Z - debug: [Client]: newEndpoint: gateway client - ssl_target_name_override: peer1.acme.com
2020-11-25T06:56:23.996Z - debug: [Endpoint]: Endpoint.constructor - start 
2020-11-25T06:56:24.000Z - debug: [Client]: new endpoint url: grpcs://10.96.69.124:3000
2020-11-25T06:56:24.001Z - debug: [NetworkConfig]: buildPeer - about to connect to endorser peer1.acme.com url:grpcs://10.96.69.124:3000 mspid:AcmeMSP
2020-11-25T06:56:24.001Z - debug: [Client]: getEndorser: gateway client start name:peer1.acme.com
2020-11-25T06:56:24.001Z - debug: [Client]: getEndorser: gateway client create endorser name:peer1.acme.com
2020-11-25T06:56:24.001Z - debug: [Endorser]: Endorser.constructor[peer1.acme.com] - start 
2020-11-25T06:56:24.001Z - debug: [Client]: getEndorser: gateway client return endorser name:peer1.acme.com
2020-11-25T06:56:24.002Z - debug: [ServiceEndpoint]: connect[Endorser-peer1.acme.com] - start 
2020-11-25T06:56:24.002Z - debug: [ServiceEndpoint]: connect[Endorser-peer1.acme.com] - create the grpc service for peer1.acme.com
2020-11-25T06:56:24.005Z - debug: [ServiceEndpoint]: waitForReady - start Endorser-peer1.acme.com - grpcs://10.96.69.124:3000
2020-11-25T06:56:24.005Z - debug: [ServiceEndpoint]: waitForReady - promise running peer1.acme.com - grpcs://10.96.69.124:3000
2020-11-25T06:56:27.007Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Endorser- name: peer1.acme.com, url:grpcs://10.96.69.124:3000, connected:false, connectAttempted:true
2020-11-25T06:56:27.008Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.acme.com url:grpcs://10.96.69.124:3000 timeout:3000
2020-11-25T06:56:27.012Z - debug: [NetworkConfig]: loadFromConfig - end
2020-11-25T06:56:27.012Z - debug: [Gateway]: connect - end
2020-11-25T06:56:27.012Z - debug: [Gateway]: getNetwork - start
2020-11-25T06:56:27.012Z - debug: [Gateway]: getNetwork - create network object and initialize
2020-11-25T06:56:27.013Z - debug: [Client]: getChannel: gateway client start name:airlinechannel
2020-11-25T06:56:27.013Z - debug: [Client]: getChannel: gateway client create channel name:airlinechannel
2020-11-25T06:56:27.013Z - debug: [Channel]: Channel.constructor[airlinechannel] - start
2020-11-25T06:56:27.013Z - debug: [Channel]: Channel.constructor[airlinechannel] - channel name is good airlinechannel
2020-11-25T06:56:27.014Z - debug: [Channel]: Constructed Channel instance: name - airlinechannel
2020-11-25T06:56:27.014Z - debug: [Client]: getChannel: gateway client return channel name:airlinechannel
2020-11-25T06:56:27.014Z - debug: [Network]: constructor - start
2020-11-25T06:56:27.014Z - debug: [EventSourceManager]: constructor - network:airlinechannel
2020-11-25T06:56:27.014Z - debug: [BlockEventSource]: constructor - blockType:filtered
2020-11-25T06:56:27.015Z - debug: [BlockEventSource]: constructor - blockType:full
2020-11-25T06:56:27.015Z - debug: [BlockEventSource]: constructor - blockType:private
2020-11-25T06:56:27.015Z - debug: [Network]: _initialize - start
2020-11-25T06:56:27.015Z - debug: [Network]: _initializeInternalChannel - start
2020-11-25T06:56:27.015Z - debug: [Network]: _initializeInternalChannel - initialize with discovery
2020-11-25T06:56:27.015Z - debug: [Network]: _initializeInternalChannel - user has not specified discovery targets, check channel and client
2020-11-25T06:56:27.015Z - debug: [Channel]: getEndorsers[airlinechannel] - start
2020-11-25T06:56:27.015Z - debug: [Channel]: _getServiceEndpoints - start - AcmeMSP
2020-11-25T06:56:27.015Z - debug: [Client]: getEndorsers[gateway client] - start
2020-11-25T06:56:27.015Z - debug: [Channel]: _getServiceEndpoints - start - AcmeMSP
2020-11-25T06:56:27.015Z - debug: [Channel]: _getServiceEndpoints - Endorser mspid matched, added peer1.acme.com connected: false
2020-11-25T06:56:27.016Z - debug: [Network]: _initializeInternalChannel - using channel/client targets
2020-11-25T06:56:27.016Z - debug: [Client]: newDiscoverer: gateway client start name:peer1.acme.com
2020-11-25T06:56:27.016Z - debug: [Discoverer]: Discoverer.constructor[peer1.acme.com] - start 
2020-11-25T06:56:27.016Z - debug: [Client]: newDiscoverer: gateway client return new Discoverer name:peer1.acme.com
2020-11-25T06:56:27.016Z - debug: [ServiceEndpoint]: setEndpoint[Discoverer-peer1.acme.com] - start 
2020-11-25T06:56:27.016Z - debug: [ServiceEndpoint]: setEndpoint[Discoverer-peer1.acme.com] - endpoint has been set for peer1.acme.com-grpcs://10.96.69.124:3000
2020-11-25T06:56:27.016Z - debug: [Channel]: newDiscoveryService[airlinechannel] - start
2020-11-25T06:56:27.016Z - debug: [DiscoveryService]: DiscoveryService.constructor[airlinechannel] - start 
2020-11-25T06:56:27.016Z - debug: [ServiceAction]: ServiceAction.constructor - start [airlinechannel]
2020-11-25T06:56:27.017Z - debug: [DiscoveryService]: build[airlinechannel] - start
2020-11-25T06:56:27.017Z - debug: [IdentityContext]: serializeIdentity - start
2020-11-25T06:56:27.017Z - debug: [Client]: getClientCertHash: gateway client - start
2020-11-25T06:56:27.017Z - debug: [Client]: getClientCertHash: gateway client - using clientCert -----BEGIN CERTIFICATE-----
MIIBUzCB+6ADAgECAgEEMAoGCCqGSM49BAMCMBgxFjAUBgNVBAMMDWZhYnJpYy1j
b21tb24wIhgPMjAyMDExMjUwNTMzMDNaGA8yMDIwMTEyNTIzMzYyM1owGDEWMBQG
A1UEAwwNZmFicmljLWNvbW1vbjBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJnT
XNg9vhVpuSYoG5RP1xyr+dwzGOJwaSDQTnzDe2CVc+o3y1xSHGnRKDEespNUmB53
lFywuw7uJa5pXdb4Fj+jMjAwMAwGA1UdEwEB/wQCMAAwCwYDVR0PBAQDAgbAMBMG
A1UdJQQMMAoGCCsGAQUFBwMCMAoGCCqGSM49BAMCA0cAMEQCIAUFxaSbTWCBayX3
qysGOQAb0sm0SeHx3YvWltEMo9GWAiAqtSsn6T0o/FvJFDsT6/5N0VYyDFw3zsEs
qt12cMtnwg==
-----END CERTIFICATE-----

2020-11-25T06:56:27.018Z - debug: [DiscoveryService]: build[airlinechannel] - adding config query
2020-11-25T06:56:27.018Z - debug: [DiscoveryService]: build[airlinechannel] - adding peer membership query
2020-11-25T06:56:27.019Z - debug: [ServiceAction]: sign[DiscoveryService:airlinechannel] - start
2020-11-25T06:56:27.019Z - debug: [IdentityContext]: sign - start
2020-11-25T06:56:27.037Z - debug: [crypto_ecdsa_aes]: ecdsa signature: negative=0, words=[43651062, 66657223, 63043513, 15151915, 52949924, 56292551, 11045802, 51996085, 44103507, 1250047, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, negative=0, words=[31386929, 26945985, 12323406, 25831117, 45109099, 29143198, 6919410, 36305250, 26953139, 1803338], length=10, red=null, recoveryParam=1
2020-11-25T06:56:27.037Z - debug: [IdentityContext]: sign - end
2020-11-25T06:56:27.037Z - debug: [ServiceAction]: sign[DiscoveryService:airlinechannel] - end
2020-11-25T06:56:27.037Z - debug: [Network]: _initializeInternalChannel - will discover asLocalhost:true
2020-11-25T06:56:27.038Z - debug: [DiscoveryService]: send[airlinechannel] - start
2020-11-25T06:56:27.038Z - debug: [ServiceAction]: getSignedEnvelope[DiscoveryService:airlinechannel] - start
2020-11-25T06:56:27.038Z - debug: [DiscoveryService]: send[airlinechannel] - about to discover on grpcs://10.96.69.124:3000
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: checkConnection[Discoverer-peer1.acme.com] - start - connected:false
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: isConnectable[Discoverer-peer1.acme.com] - start 
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: isConnectable[Discoverer-peer1.acme.com] - this service endpoint has been assigned an endpoint, connect may be run
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: resetConnection[Discoverer-peer1.acme.com] - start - connected:false
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: disconnect[Discoverer-peer1.acme.com] - start on ServiceEndpoint
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: disconnect[Discoverer-peer1.acme.com] - end on ServiceEndpoint
2020-11-25T06:56:27.038Z - debug: [ServiceEndpoint]: resetConnection[Discoverer-peer1.acme.com] - create the grpc service for peer1.acme.com
2020-11-25T06:56:27.039Z - debug: [ServiceEndpoint]: waitForReady - start Discoverer-peer1.acme.com - grpcs://10.96.69.124:3000
2020-11-25T06:56:27.039Z - debug: [ServiceEndpoint]: waitForReady - promise running peer1.acme.com - grpcs://10.96.69.124:3000
2020-11-25T06:56:30.040Z - error: [ServiceEndpoint]: Error: Failed to connect before the deadline on Discoverer- name: peer1.acme.com, url:grpcs://10.96.69.124:3000, connected:false, connectAttempted:true
2020-11-25T06:56:30.040Z - error: [ServiceEndpoint]: waitForReady - Failed to connect to remote gRPC server peer1.acme.com url:grpcs://10.96.69.124:3000 timeout:3000
2020-11-25T06:56:30.040Z - error: [ServiceEndpoint]: ServiceEndpoint grpcs://10.96.69.124:3000 reset connection failed :: Error: Failed to connect before the deadline on Discoverer- name: peer1.acme.com, url:grpcs://10.96.69.124:3000, connected:false, connectAttempted:true
2020-11-25T06:56:30.041Z - debug: [ServiceEndpoint]: checkConnection[Discoverer-peer1.acme.com] - end - connected:false
2020-11-25T06:56:30.041Z - debug: [DiscoveryService]: send[airlinechannel] - processing discovery response
2020-11-25T06:56:30.041Z - error: [DiscoveryService]: send[airlinechannel] - no discovery results
Failed to evaluate transaction: Error: DiscoveryService has failed to return results;;;","26/Nov/20 1:32 AM;harrisob@us.ibm.com;Looks like you are using a self signed cert for the gateway's mutual TLS client cert. You may wish to enroll a TLS identity with your CA to pass to the gateway.connect(). 

// enroll a userid to get a TLS certificate / key  to be used by the gateway
      const tlsOptions: any = {
		trustedRoots: [],
		verify: false,
	};
	const caService: FabricCAServices = new FabricCAServices(fabricCAEndpoint, tlsOptions as any, caName);
	const req: any = {
		enrollmentID: 'admin', // using admin because it is already registered with the CA
		enrollmentSecret: 'adminpw',
		profile: 'tls', // THIS IS REALLY IMPORTANT
	};

	const enrollment: any = await caService.enroll(req);
	enrollment.key = enrollment.key.toBytes();

 // now store the TLS identity in the wallet so the gateway will have access to it
	const tlsIdentity: any = {
		credentials: {
		    certificate: enrollment.certificate,
		    privateKey: enrollment.key,
	        },
		mspId: 'Org1MSP',
		type: 'X509',
	};
	await wallet.put('tlsId', tlsIdentity);
	const enrollment: any = await caService.enroll(req);
	enrollment.key = enrollment.key.toBytes();

        await wallet.put('tlsId', tlsIdentity);
	

// now tell the gateway about the TLS identity that we stored above, this will be used on mutual TLS connections made by this gateway to peers and orderers
      const opts: GatewayOptions = {
		clientTlsIdentity: 'tlsId',
		discovery: {
			asLocalhost: true,
			enabled: true,
		},
		identity: userId,
		wallet,
	};
;;;","12/Apr/21 11:48 PM;ykh2k;[~piyushap] 
Could you help me with this question too?
I have close problem, hyperledger fabric instance is deployed on AWS EC2. I can enroll and register users from my local machine, but when I want to invoke, evaluate chaincode I get the next:




2021-04-12T14:32:47.700Z - debug: [Remote.js]: ** Remote instance url: grpcs://3.15.206.177:8051, name: 3.15.206.177:8051, options loaded are:: \{""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.keepalive_time_ms"":120000,""grpc.http2.min_time_between_pings_ms"":120000,""grpc.keepalive_timeout_ms"":20000,""grpc.http2.max_pings_without_data"":0,""grpc.keepalive_permit_without_calls"":1,""name"":""3.15.206.177:8051"",""grpc.ssl_target_name_override"":""3.15.206.177"",""grpc.default_authority"":""3.15.206.177""}
2021-04-12T14:32:47.700Z - debug: [Peer.js]: Peer.const - url: grpcs://3.15.206.177:8051 timeout: 45000 name:3.15.206.177:8051
2021-04-12T14:32:47.700Z - debug: [Peer.js]: _createClients - create peer endorser connection 3.15.206.177:8051
2021-04-12T14:32:47.700Z - debug: [Peer.js]: _createClients - create peer discovery connection 3.15.206.177:8051
2021-04-12T14:32:47.700Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:8051
2021-04-12T14:32:47.700Z - debug: [Channel.js]: /n adding a new peer --name: 3.15.206.177:8051 --URL: grpcs://3.15.206.177:8051
2021-04-12T14:32:47.702Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:8051
2021-04-12T14:32:47.702Z - debug: [Channel.js]: ChannelPeer.const - url: grpcs://3.15.206.177:8051
2021-04-12T14:32:47.702Z - debug: [Channel.js]: _buildDiscoveryPeers - peer:\{""mspid"":""Org1MSP"",""endpoint"":""3.15.206.177:8051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":true},""chaincodes"":[],""name"":""3.15.206.177:8051""}
2021-04-12T14:32:47.702Z - debug: [Channel.js]: _initialize - have interest of:\{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.702Z - debug: [Channel.js]: _discover - start
2021-04-12T14:32:47.702Z - debug: [Client.js]: _getSigningIdentity - admin parameter is boolean :true
2021-04-12T14:32:47.702Z - debug: [Client.js]: getClientCertHash - start
2021-04-12T14:32:47.702Z - debug: [Channel.js]: _discover - adding chaincodes/collection query
2021-04-12T14:32:47.706Z - debug: [crypto_ecdsa_aes]: ecdsa signature: negative=0, words=[7301449, 40218557, 41817664, 8252654, 62322359, 26455203, 49378057, 23880675, 19986208, 3618770, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, negative=0, words=[35295392, 2200225, 7938154, 55968711, 29126720, 11104011, 27223761, 41921029, 31083175, 638055], length=10, red=null, recoveryParam=1
2021-04-12T14:32:47.706Z - debug: [Peer.js]: sendDiscovery - Start
2021-04-12T14:32:47.832Z - debug: [Peer.js]: sendDiscovery - Received discovery response from peer ""grpcs://3.15.206.177:7051""
2021-04-12T14:32:47.832Z - debug: [Channel.js]: _discover - processing discovery response
2021-04-12T14:32:47.832Z - debug: [Channel.js]: _discover - parse discovery response
2021-04-12T14:32:47.832Z - debug: [Channel.js]: _discover - process results
2021-04-12T14:32:47.833Z - debug: [Channel.js]: _processDiscoveryChaincodeResults - start
2021-04-12T14:32:47.833Z - debug: [Channel.js]: _processDiscoveryChaincodeResults - found group: G0
2021-04-12T14:32:47.833Z - debug: [Channel.js]: _processPeers - found peer :3.15.206.177:7051
2021-04-12T14:32:47.833Z - debug: [Channel.js]: _processPeers - found ledger_height :5
2021-04-12T14:32:47.833Z - debug: [Channel.js]: _processPeers - found chaincode :\{""name"":""fabcar"",""version"":""1.0""}
2021-04-12T14:32:47.833Z - debug: [Channel.js]: _processDiscoveryChaincodeResults - found group: G1
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _processPeers - found peer :3.15.206.177:9051
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _processPeers - found ledger_height :5
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _processPeers - found chaincode :\{""name"":""fabcar"",""version"":""1.0""}
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _processDiscoveryChaincodeResults - layout :\{""G0"":1,""G1"":1}
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _discover - completed processing results
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _buildDiscoveryEndorsementPlan - build endorsement plan for \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _buildDiscoveryEndorsementPlan - endorsing peer group G0
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _buildPeerName - start
2021-04-12T14:32:47.834Z - debug: [Channel.js]: _buildUrl - start
2021-04-12T14:32:47.834Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:9051
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:10051
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:7051
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildPeerName - found existing peer grpcs://3.15.206.177:7051
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:8051
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildDiscoveryEndorsementPlan - peer:\{""mspid"":""Org1MSP"",""endpoint"":""3.15.206.177:7051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":true},""chaincodes"":[\{""name"":""fabcar"",""version"":""1.0""}],""name"":""3.15.206.177:7051""}
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildDiscoveryEndorsementPlan - endorsing peer group G1
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildPeerName - start
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildUrl - start
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:9051
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildPeerName - found existing peer grpcs://3.15.206.177:9051
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:10051
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:7051
2021-04-12T14:32:47.835Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:8051
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _buildDiscoveryEndorsementPlan - peer:\{""mspid"":""Org2MSP"",""endpoint"":""3.15.206.177:9051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":true},""chaincodes"":[\{""name"":""fabcar"",""version"":""1.0""}],""name"":""3.15.206.177:9051""}
2021-04-12T14:32:47.835Z - debug: [Channel.js]: _initialize - Added an endorsement plan for \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.835Z - debug: [Gateway]: in getOptions
2021-04-12T14:32:47.835Z - debug: [Channel.js]: getPeersForOrg - starting - using client mspid: Org1MSP
2021-04-12T14:32:47.836Z - debug: [SingleQueryHandler]: constructor: peers=[""3.15.206.177:7051"",""3.15.206.177:8051""]
2021-04-12T14:32:47.836Z - debug: [Gateway]: in getOptions
2021-04-12T14:32:47.836Z - debug: [Gateway]: in getOptions
2021-04-12T14:32:47.836Z - debug: [Channel.js]: getPeersForOrg - starting - using client mspid: Org1MSP
2021-04-12T14:32:47.836Z - debug: [EventHubFactory]: constructor: mychannel
2021-04-12T14:32:47.836Z - debug: [Network]: in getContract
2021-04-12T14:32:47.836Z - debug: [Contract]: in Contract constructor
2021-04-12T14:32:47.836Z - debug: [Gateway]: in getClient
2021-04-12T14:32:47.837Z - debug: [Client.js]: newTransactionID - no admin parameter, returning non admin TransactionID
2021-04-12T14:32:47.837Z - debug: [Client.js]: _getSigningIdentity - admin parameter is boolean :false
2021-04-12T14:32:47.837Z - debug: [TransactionID.js]: constructor - start
2021-04-12T14:32:47.837Z - debug: [TransactionID.js]: const - transaction_id 363666a4e969d27a11c26f91b3cad32a866c4dac87b4339297accdd0b6e05060
2021-04-12T14:32:47.837Z - debug: [Gateway]: in getOptions
2021-04-12T14:32:47.838Z - debug: [Gateway]: in getOptions
2021-04-12T14:32:47.838Z - debug: [Channel.js]: getPeersForOrg - starting - using client mspid: Org1MSP
2021-04-12T14:32:47.838Z - debug: [EventHubManager]: Factory Event Hubs: 0/0
2021-04-12T14:32:47.838Z - debug: [EventHubManager]: Replay Event Hubs: 0/0
2021-04-12T14:32:47.838Z - debug: [ChannelEventHub.js]: const 
2021-04-12T14:32:47.838Z - debug: [ChannelEventHub.js]: const 
2021-04-12T14:32:47.839Z - debug: [TransactionEventHandler]: constructor: transactionId = 363666a4e969d27a11c26f91b3cad32a866c4dac87b4339297accdd0b6e05060, options = \{""commitTimeout"":300}
2021-04-12T14:32:47.839Z - debug: [Gateway]: in getClient
2021-04-12T14:32:47.839Z - debug: [Channel.js]: sendTransactionProposal - start
2021-04-12T14:32:47.839Z - debug: [Channel.js]: %s - discovery is on and no targets
2021-04-12T14:32:47.839Z - debug: [Channel.js]: sendTransactionProposal - running with endorsement handler
2021-04-12T14:32:47.839Z - debug: [Channel.js]: _buildSignedProposal - start
2021-04-12T14:32:47.839Z - debug: [Channel.js]: _buildSignedProposal - adding function arg:createCar
2021-04-12T14:32:47.839Z - debug: [Channel.js]: _buildSignedProposal - adding arg
2021-04-12T14:32:47.839Z - debug: [Channel.js]: _buildSignedProposal - adding arg
2021-04-12T14:32:47.839Z - debug: [Channel.js]: _buildSignedProposal - adding arg
2021-04-12T14:32:47.840Z - debug: [Channel.js]: _buildSignedProposal - adding arg
2021-04-12T14:32:47.840Z - debug: [Channel.js]: _buildSignedProposal - adding arg
2021-04-12T14:32:47.840Z - debug: [Channel.js]: _buildSignedProposal - not adding the argument :: argbytes
2021-04-12T14:32:47.840Z - debug: [Channel.js]: _buildSignedProposal - chaincode ID:fabcar
2021-04-12T14:32:47.840Z - debug: [Client.js]: _getSigningIdentity - admin parameter is boolean :false
2021-04-12T14:32:47.840Z - debug: [Client.js]: getClientCertHash - start
2021-04-12T14:32:47.840Z - debug: [client-utils.js]: buildChannelHeader - type 3 channel_id mychannel tx_id NaN epoch null chaincode_id fabcar
2021-04-12T14:32:47.842Z - debug: [client-utils.js]: buildProposal - not adding a transientMap
2021-04-12T14:32:47.845Z - debug: [crypto_ecdsa_aes]: ecdsa signature: negative=0, words=[50468411, 63121665, 4371808, 57332992, 22912459, 48696630, 14398202, 25394426, 16721460, 715077, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, negative=0, words=[52562118, 55918761, 13474781, 62062772, 57700057, 63681475, 47748777, 31780166, 46884469, 1758747, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], length=10, red=null, recoveryParam=0
2021-04-12T14:32:47.846Z - debug: [Channel.js]: sendTransactionProposal - endorse with hint \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.846Z - debug: [DiscoveryEndorsementHandler]: endorse - start
2021-04-12T14:32:47.846Z - debug: [DiscoveryEndorsementHandler]: endorse - get endorsement plans for \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.846Z - debug: [Channel.js]: getEndorsementPlan - start - \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.846Z - debug: [Channel.js]: getDiscoveryResults - start
2021-04-12T14:32:47.846Z - debug: [Channel.js]: _merge_hints - key \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.846Z - debug: [Channel.js]: _merge_hints - found interest exist \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.846Z - debug: [Channel.js]: getDiscoveryResults - returning results
2021-04-12T14:32:47.846Z - debug: [Channel.js]: getEndorsementPlan - looking at plan_id of \{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.846Z - debug: [Channel.js]: getEndorsementPlan - found plan in known plans ::\{""chaincodes"":[{""name"":""fabcar""}]}
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _endorse - start
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _endorse - starting discovery endorsement plan
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _create_map - start for required
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _create_map - start for preferred
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _create_map - start for ignored
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _create_map - start for requiredOrgs
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _create_map - start for preferredOrgs
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _create_map - start for ignoredOrgs
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _endorse - preferred_height_gap setting is not a number
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - start
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - required:{}
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - preferred:{}
2021-04-12T14:32:47.847Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - ignored:{}
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - required_orgs:{}
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - preferred_orgs:{}
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - ignored_orgs:{}
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - sort: default
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - endorsement_plan:\{""chaincode"":""fabcar"",""groups"":{""G0"":{""peers"":[{""mspid"":""Org1MSP"",""endpoint"":""3.15.206.177:7051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":true},""chaincodes"":[\{""name"":""fabcar"",""version"":""1.0""}],""name"":""3.15.206.177:7051""}]},""G1"":\{""peers"":[{""mspid"":""Org2MSP"",""endpoint"":""3.15.206.177:9051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":true},""chaincodes"":[\{""name"":""fabcar"",""version"":""1.0""}],""name"":""3.15.206.177:9051""}]}},""layouts"":[\{""G0"":1,""G1"":1}],""plan_id"":""\{\""chaincodes\"":[{\""name\"":\""fabcar\""}]}"",""endorsements"":{}}
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups starting - group: G0 - size: 1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - start size:1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - not found in ignored list - peer:3.15.206.177:7051
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - keeping peer:3.15.206.177:7051
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - end size:1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups removed - group: G0 - size: 1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _sortPeerList - start - sort:default - size:1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups sorted - group: G0 - size: 1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _splitList - start size:1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _splitList - peer 3.15.206.177:7051 not found on preferred org list
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _splitList - not checking the preferred height gap
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _splitList - end - priority:0 - non_priority:1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups reordered - group: G0 - size: 1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _modify_groups starting - group: G1 - size: 1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - start size:1
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - not found in ignored list - peer:3.15.206.177:9051
2021-04-12T14:32:47.848Z - debug: [DiscoveryEndorsementHandler]: _removePeers - keeping peer:3.15.206.177:9051
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _removePeers - end size:1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _modify_groups removed - group: G1 - size: 1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _sortPeerList - start - sort:default - size:1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _modify_groups sorted - group: G1 - size: 1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _splitList - start size:1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _splitList - peer 3.15.206.177:9051 not found on preferred org list
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _splitList - not checking the preferred height gap
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _splitList - end - priority:0 - non_priority:1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _modify_groups reordered - group: G1 - size: 1
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _modify_groups - updated endorsement_plan:\{""chaincode"":""fabcar"",""groups"":{""G0"":{""peers"":[{""mspid"":""Org1MSP"",""endpoint"":""3.15.206.177:7051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":false},""chaincodes"":[\{""name"":""fabcar"",""version"":""1.0""}],""name"":""3.15.206.177:7051""}]},""G1"":\{""peers"":[{""mspid"":""Org2MSP"",""endpoint"":""3.15.206.177:9051"",""ledger_height"":{""low"":5,""high"":0,""unsigned"":false},""chaincodes"":[\{""name"":""fabcar"",""version"":""1.0""}],""name"":""3.15.206.177:9051""}]}},""layouts"":[\{""G0"":1,""G1"":1}],""plan_id"":""\{\""chaincodes\"":[{\""name\"":\""fabcar\""}]}"",""endorsements"":{}}
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _endorse - starting layout plan 0
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _endorse_layout - start
2021-04-12T14:32:47.849Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - start
2021-04-12T14:32:47.850Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - send endorsement to 3.15.206.177:7051
2021-04-12T14:32:47.850Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:7051
2021-04-12T14:32:47.850Z - debug: [Peer.js]: sendProposal - Start ----3.15.206.177:7051 grpcs://3.15.206.177:7051
2021-04-12T14:32:47.850Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G1:1 - start
2021-04-12T14:32:47.850Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G1:1 - send endorsement to 3.15.206.177:9051
2021-04-12T14:32:47.850Z - debug: [Remote.js]: getUrl::grpcs://3.15.206.177:9051
2021-04-12T14:32:47.850Z - debug: [Peer.js]: sendProposal - Start ----3.15.206.177:9051 grpcs://3.15.206.177:9051
2021-04-12T14:32:48.362Z - debug: [Peer.js]: sendProposal - Received proposal response from: grpcs://3.15.206.177:9051 status: Error: 14 UNAVAILABLE: failed to connect to all addresses
 at Object.exports.createStatusError (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/common.js:91:15)
 at Object.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:1209:28)
 at InterceptingListener._callNext (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:568:42)
 at InterceptingListener.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:618:8)
 at callback (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:847:24) {
 code: 14,
 metadata: [Metadata],
 details: 'failed to connect to all addresses'
}
2021-04-12T14:32:48.362Z - warn: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G1:1 - endorsement failed - Error: 14 UNAVAILABLE: failed to connect to all addresses
2021-04-12T14:32:48.362Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G1:1 - not able to get a completed endorsement
2021-04-12T14:32:48.363Z - debug: [Peer.js]: sendProposal - Received proposal response from: grpcs://3.15.206.177:7051 status: Error: 14 UNAVAILABLE: failed to connect to all addresses
 at Object.exports.createStatusError (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/common.js:91:15)
 at Object.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:1209:28)
 at InterceptingListener._callNext (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:568:42)
 at InterceptingListener.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:618:8)
 at callback (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:847:24) {
 code: 14,
 metadata: [Metadata],
 details: 'failed to connect to all addresses'
}
2021-04-12T14:32:48.369Z - warn: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - endorsement failed - Error: 14 UNAVAILABLE: failed to connect to all addresses
2021-04-12T14:32:48.369Z - debug: [DiscoveryEndorsementHandler]: _build_endorse_group_member >> G0:0 - not able to get a completed endorsement
2021-04-12T14:32:48.370Z - debug: [DiscoveryEndorsementHandler]: _execute_endorsements - endorsement failed: Error: 14 UNAVAILABLE: failed to connect to all addresses
 at Object.exports.createStatusError (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/common.js:91:15)
 at Object.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:1209:28)
 at InterceptingListener._callNext (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:568:42)
 at InterceptingListener.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:618:8)
 at callback (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:847:24) {
 code: 14,
 metadata: [Metadata],
 details: 'failed to connect to all addresses'
}
2021-04-12T14:32:48.372Z - debug: [DiscoveryEndorsementHandler]: _execute_endorsements - endorsement failed: Error: 14 UNAVAILABLE: failed to connect to all addresses
 at Object.exports.createStatusError (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/common.js:91:15)
 at Object.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:1209:28)
 at InterceptingListener._callNext (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:568:42)
 at InterceptingListener.onReceiveStatus (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:618:8)
 at callback (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/grpc/src/client_interceptors.js:847:24) {
 code: 14,
 metadata: [Metadata],
 details: 'failed to connect to all addresses'
}
2021-04-12T14:32:48.372Z - debug: [DiscoveryEndorsementHandler]: _endorse - layout plan 0 did not complete successfully, try another layout plan
2021-04-12T14:32:48.373Z - error: [DiscoveryEndorsementHandler]: _endorse - endorsement failed::Error: Endorsement has failed
 at DiscoveryEndorsementHandler._endorse (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:188:19)
 at processTicksAndRejections (internal/process/task_queues.js:97:5)
 at async Channel.sendTransactionProposal (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/fabric-client/lib/Channel.js:2835:22)
 at async Transaction.submit (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/node_modules/fabric-network/lib/transaction.js:185:19)
 at async main (/Users/ykh2k/github/fabric-init-1.4.9/fabric-samples/fabcar/javascript/javascript/invoke.js:41:9)
Failed to submit transaction: Error: Endorsement has failed

I also set up in my docker-compose-base.yaml file all vars

- CORE_PEER_GOSSIP_EXTERNALENDPOINT
 -> 3.15.206.177:10051 (appropriate port);;;",,,,,,,,,,,,,
Wrong type definitions on Discovery Service,FABN-1674,46344,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,tatsu-sato,tatsu-sato,tatsu-sato,25/Nov/20 8:40 AM,03/Dec/20 7:35 PM,28/Oct/23 3:25 AM,03/Dec/20 7:35 PM,,,,,,,,,,0,external,sdk-triaged,,,,"I found some type definitions on “Discovery Service” in *fabric-common/types/index.d.ts*
 that seem to be incorrect.

*[1]*
 In L 470-, *DiscoveryResultEndorsementPlan* is defined as the following:
{code:javascript}
export interface DiscoveryResultEndorsementPlan {
                chaincode: string;
                plan_id: string;
                groups: {
                                [groupName: string]: DiscoveryResultEndorsementGroup;
                };
                layouts: DiscoveryResultEndorsementLayout[];
}
{code}
 

On the other hand, the actual code does not seem to assign *`plan_id`*.
 ([https://github.com/hyperledger/fabric-sdk-node/blob/75507047d7bf7a41ccb112214264e470182c5f1b/fabric-common/lib/DiscoveryService.js#L453])

 

So, *`plan_id:`* should be *`plan_id?:`*.

 

*[2]*
 In L 479-, *DiscoveryResults* is defined as the following:
{code:javascript}
export interface DiscoveryResults {
                msps?: { [mspid: string]: DiscoveryResultMSPConfig };
                orderers?: { [mspid: string]: DiscoveryResultEndpoints };

                peers_by_org?: { [name: string]: DiscoveryResultPeers };

                endorsement_plan?: DiscoveryResultEndorsementPlan[];

                timestamp: number;
}
{code}

 On the other hand, the actual code manages *endorsement_plan* as *DiscoveryResultEndorsementPlan* instead of *DiscoveryResultEndorsementPlan[]*.
 ([https://github.com/hyperledger/fabric-sdk-node/blob/75507047d7bf7a41ccb112214264e470182c5f1b/fabric-common/lib/DiscoveryService.js#L356])

 

So, *`endorsement_plan?: DiscoveryResultEndorsementPlan[]`* should be　*`endorsement_plan?: DiscoveryResultEndorsementPlan`*.

 

*[3]*

In L 428, *DiscoveryResultMSPConfig* is defined as the following:
{code:javascript}
export interface DiscoveryResultMSPConfig {
                rootCerts: string;
                intermediateCerts: string;
                admins: string;
                id: string;
                orgs: string[];
                tlsRootCerts: string;
                tlsIntermediateCerts: string;
}
{code}
 

On the other hand, the actual code has *`name`* property and seems uses *`organizationalUnitIdentifiers`* instead of *`orgs`*.
 ([https://github.com/hyperledger/fabric-sdk-node/blob/75507047d7bf7a41ccb112214264e470182c5f1b/fabric-common/lib/DiscoveryService.js#L499])

 

So, *`name: string;`* should be added to the definition.
 Also, ` *orgs`* should be *`organizationalUnitIdentifiers`* .",,lesleyannj,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6vr",,,,Unset,Unset,30Nov-7Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,tatsu-sato,,,,,,,,,dev,main,,,,,,,,,true,"25/Nov/20 11:06 PM;lesleyannj;PR to master merged. [~tatsu-sato] please cherry pick to 2.2 branch.;;;",,,,,,,,,,,,,,,,
Index Creation not working for privata data using node SDK.,FABN-1675,46340,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,Rajatsharma,Rajatsharma,24/Nov/20 6:50 PM,20/Aug/21 8:09 PM,28/Oct/23 3:25 AM,20/Aug/21 8:09 PM,,,,,,,,,,0,community-help-wanted,external,sdk-triaged,,,"I use to install chaincode having private data using CLI, it used to work perfectly fine. 
 Then we shifted and started installing chaincode using Fabric Node SDK. Although the chaincode works fine, the index is not created in CouchDB and thus gets a warning in the peer too. 

I tried using [https://hyperledger.github.io/fabric-sdk-node/release-1.4/tutorial-metadata-chaincode.html,] this does not work. When I give the metadataPath as META-INF inside which at path META-INF/statedb/couchdb/collections/collectionPvtSys/indexes/defaultDocTypeDoc.json we have the private data index. The index is not created for private data. 

Is there anything I'm missing or does fabric not support index creation for chaincodes having private data from the node-sdk. 

File: defaultDocTypeDoc.json
{code:java}
{
  ""index"": {
    ""fields"": [
      ""doc_type""
    ]
  },
  ""ddoc"": ""_DefaultDocTypeDoc"",
  ""name"": ""_DefaultDocTypeIndex"",
  ""type"": ""json""
}
{code}
 

 ",,bestbeforetoday,harrisob@us.ibm.com,Rajatsharma,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i0004",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,harrisob@us.ibm.com,Rajatsharma,,,,,,,,,,,,,,,,,,,"09/Dec/20 1:17 AM;harrisob@us.ibm.com;First, The NodeSDK direction is to not provide administrative support, which includes chaincode installation. This function is not available with NodeSDK v2.  You may wish to continue to use the CLI.

Have you seen https://hyperledger.github.io/fabric-sdk-node/release-1.4/tutorial-metadata-chaincode.html;;;","20/Aug/21 8:09 PM;bestbeforetoday;v1.4 is no longer supported. CLI commands should be used for deployment tasks, and these seem to be working.;;;",,,,,,,,,,,,,,,
publish 1.4.15,FABN-1676,46384,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,04/Dec/20 3:14 AM,09/Dec/20 10:33 PM,28/Oct/23 3:25 AM,09/Dec/20 10:33 PM,,,,,,,,,,0,sdk-triaged,,,,,Publish new release of 1.4 as 1.4.15,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6m",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
publish 2.2.4,FABN-1677,46385,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,04/Dec/20 3:15 AM,08/Jan/21 12:38 AM,28/Oct/23 3:25 AM,11/Dec/20 6:13 PM,,,,,,,,,,0,sdk-triaged,,,,,publish new release of 2.2 as 2.2.4,,harrisob@us.ibm.com,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6n",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,,,,,,,,,main,,,,,,,,,,true,"08/Jan/21 12:38 AM;lesleyannj;See FABN-1679 for resetting snapshot after release publish.;;;",,,,,,,,,,,,,,,,
publish 2.3.0,FABN-1678,46386,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,04/Dec/20 3:20 AM,08/Dec/20 1:12 AM,28/Oct/23 3:25 AM,08/Dec/20 1:12 AM,,,,,,,,,,0,sdk-triaged,,,,,publish to NPM 2.3.0 packages tagged on NPM as latest-2.3 from master branch and tag master branch with 2.3.0,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6o",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
reset to 2.2.5 snapshot,FABN-1679,46411,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,10/Dec/20 6:02 AM,11/Dec/20 6:13 PM,28/Oct/23 3:25 AM,11/Dec/20 6:13 PM,,,,,,,,,,0,sdk-triaged,,,,,reset to publishing snapshot,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6qzy",,,,Unset,Unset,7Dec-14Dec,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Vulnerability in fabric-client dependency tar-stream,FABN-1680,46431,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Done,lesleyannj,denyeart,denyeart,16/Dec/20 6:39 AM,17/Dec/20 8:13 PM,28/Oct/23 3:25 AM,17/Dec/20 8:13 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Remote Memory Exposure High Severity in bl@2.2.0 
 introduced by fabric-client@1.4.9 > tar-stream@1.6.1 > bl@1.2.2 and 2 other path(s)
 This issue was fixed in versions: 2.2.1, 3.0.1, 4.0.3, 1.2.3

[https://github.com/advisories/GHSA-pp7h-53gx-mx7r]


 [https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-client/package.json#L42]

Appears to be fixed in latest tar-stream.

[https://github.com/mafintosh/tar-stream/commit/25e191eb66a9de5652947f8846acbd3648e21ef4]

Need to update fabric-client dependency and release a new version.",,andrew-coleman,bestbeforetoday,bretharrison,btl5037,denyeart,harrisob@us.ibm.com,lesleyannj,ptippett,,,,,,,,,Security issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,andrew-coleman,bestbeforetoday,bretharrison,btl5037,harrisob@us.ibm.com,lesleyannj,ptippett,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf4i",,,,Unset,Unset,14Dec-4Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,bretharrison,btl5037,denyeart,harrisob@us.ibm.com,lesleyannj,ptippett,,,release-1.4,,,,,,,,,,true,"16/Dec/20 12:18 PM;denyeart;Same thing reported here:

[https://github.com/hyperledger/fabric-sdk-node/security/dependabot/fabric-client/package-lock.json/bl/open]

, along with several others.;;;",,,,,,,,,,,,,,,,
Reset to snapshot 1.4.17,FABN-1681,46434,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,lesleyannj,lesleyannj,17/Dec/20 1:58 AM,18/Dec/20 7:28 PM,28/Oct/23 3:25 AM,18/Dec/20 7:28 PM,,,,,,,,,,0,sdk-triaged,,,,,,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzu",,,,Unset,Unset,14Dec-4Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Publish v1.4.16,FABN-1682,46435,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,lesleyannj,lesleyannj,17/Dec/20 2:01 AM,08/Jan/21 12:36 AM,28/Oct/23 3:25 AM,17/Dec/20 8:13 PM,,,,,,,,,,0,sdk-triaged,,,,,,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kz9",,,,Unset,Unset,14Dec-4Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,release-1.4,,,,,,,,,,true,"08/Jan/21 12:36 AM;lesleyannj;See FABN-1681 for Resetting Snapshot after release publish;;;",,,,,,,,,,,,,,,,
"Example code for fabric-sdk-node results in ""No endorsement plan available"" error",FABN-1683,46460,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Environment Issue,harrisob@us.ibm.com,mcoblenz,mcoblenz,29/Dec/20 7:42 AM,12/Jan/21 11:04 PM,28/Oct/23 3:25 AM,12/Jan/21 10:46 PM,,,,,,,,,,0,external,,,,,"The error shown below occurs when I try to submit a transaction. I'm using the simple Fabric network that is created by the IBM Blockchain Visual Studio Code plugin.
{code:java}
2020-12-28T21:44:08.172Z - error: [Channel.js]: Channel:mychannel received discovery error:failed constructing descriptor for chaincodes:<name:""Fabric-playground@0.0.12"" > 
2020-12-28T21:44:08.198Z - error: [DiscoveryEndorsementHandler]: endorse - no endorsement plan found for {""chaincodes"":[{""name"":""Fabric-playground@0.0.12""}]}
(node:62108) UnhandledPromiseRejectionWarning: Error: No endorsement plan available for {""chaincodes"":[{""name"":""Fabric-playground@0.0.12""}]}
    at DiscoveryEndorsementHandler.endorse (/Users/mcoblenz/code/Fabric-app/node_modules/fabric-client/lib/impl/DiscoveryEndorsementHandler.js:123:10)
    at async Channel.sendTransactionProposal (/Users/mcoblenz/code/Fabric-app/node_modules/fabric-client/lib/Channel.js:2835:22)
    at async Transaction.submit (/Users/mcoblenz/code/Fabric-app/node_modules/fabric-network/lib/transaction.js:184:19)
    at async /Users/mcoblenz/code/Fabric-app/app.js:64:31
{code}",,harrisob@us.ibm.com,lesleyannj,mcoblenz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hwj:",,,,Unset,Unset,,,,,,,,,,,"1. Start default network in VSCode IBM blockchain extension. 
2. Install chaincode that supports a ""recordTestResult"" operation with three string arguments.
2. Export wallet and connection profile from VSCode.
3. Use the following code to connect, as per the instructions (https://hyperledger.github.io/fabric-sdk-node/release-1.4/module-fabric-network.html). Note that I am using 1.4 because that version matches the one used by the most recent VSCode extension (1.0.40).

const wallet = new FileSystemWallet('/tmp/1OrgLocalwallet');
const gatewayOptions = {
    identity: 'admin',
    wallet,
};

const ccpFile = fs.readFileSync(""/tmp/1OrgLocalFabricOrg1Connection.json"");
const commonConnectionProfile = JSON.parse(ccpFile.toString());
const gateway = new Gateway();
gateway.connect(commonConnectionProfile, gatewayOptions);
await gateway.connect(commonConnectionProfile, gatewayOptions);
let network = await gateway.getNetwork(""mychannel"");
const chaincodeId = ""Fabric-playground@0.0.12""; // choose appropriate name and version
let contract = network.getContract(chaincodeId);
const transactionResult = await    
    contract.createTransaction(""recordTestResult"")
        .setTransient(null)
        .submit(""a"", ""b"", ""c"");

Expected: transaction should succeed.
Actual: see error message above.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,lesleyannj,mcoblenz,,,,,,,,,,,,,,,,,,,"05/Jan/21 11:51 AM;mcoblenz;It appears that adding this line of code addresses the problem:

 

*await* channel.initialize({discover:*false*, asLocalhost:*true*});

 ;;;","06/Jan/21 10:42 PM;lesleyannj;[~mcoblenz] can you provide the sample client code;;;","07/Jan/21 1:14 AM;harrisob@us.ibm.com;Does your network have the anchor peers defined ? ;;;","11/Jan/21 2:07 AM;mcoblenz;I don't know if my network has anchor  peers defined. I'm using the default 1Org configuration from the IBM Blockchain Visual Code Studio extension. 

 

I was able to get the following code working:

 

 
{code:java}
async function setup() {
   try {
       await gateway.connect(commonConnectionProfile, gatewayOptions);
       network = await gateway.getNetwork(""mychannel""); // match channel name in VSCode
       assert(network);
       let channel = network.getChannel();
// discover:false is critical here.
// otherwise you’ll try to connect to a discovery service,
// which is not configured.
       await channel.initialize({discover:false, asLocalhost:true});
       const chaincodeId = ""Fabric-playground""; // match “name” parameter in package.json in chaincode
       contract = network.getContract(chaincodeId);
       assert(contract);
   }
   catch (err) {
       console.log(""error occurred in setup: "");
       console.log(err);
   }
}
{code}
 


{{}};;;","12/Jan/21 1:35 AM;harrisob@us.ibm.com;I think the issue has something to do with the peer and it's Discovery Service, which relies on ""Gossip"" another service on the peers that exchanges information about the network with other peers.

https://hyperledger-fabric.readthedocs.io/en/release-2.2/gossip.html;;;","12/Jan/21 11:04 PM;mcoblenz;Please do not just close this; the documentation needs to be updated so that the example given works. I lost probably a day debugging this issue, which could have been easily prevented with correct example code.;;;",,,,,,,,,,,
EventHandler commitTimeout  option not honoured by submitInvoke,FABN-1685,46463,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,balaji.viswanathan,balaji.viswanathan,04/Jan/21 6:49 PM,15/Jan/21 12:54 AM,28/Oct/23 3:25 AM,15/Jan/21 12:54 AM,v1.4.4,,,,,,,,,0,external,fabric-network,sdk-triaged,,,"When using higher level apis (version 1.4.13) to submit txns in a HLF 1.4 network, the commitTimeout passed is not used.

Below is the gatewayConnect options i am setting
{quote}const gatewayConnectOptions =
Unknown macro: \{ identity}
,
 eventHandlerOptionsConfig:
 Unknown macro: \{ commitTimeout}
 ,
 queryHandlerOptionsConfig:
 Unknown macro: \{ strategyName}
 ,
 }
{quote}
into gateway object with

gw.connect(connProfile, gatewayConnectOptions

However, 
 txn.submit() does not honour this timeout and the txn once submitted(and at times - when the orderer drops the request) keeps waiting indefintely for a event. 

The expected behaviour is for the timeout to happen after 300 seconds.",,balaji.viswanathan,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzz",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),balaji.viswanathan,harrisob@us.ibm.com,,,,,,,,,dev,release-1.4,main,,,,,,,,true,"04/Jan/21 7:08 PM;balaji.viswanathan;The issue seems to be with how transaction is calling the strategy function

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/transaction.js#L163]

which passes 3 arguments, options as 3rd

{{const eventHandler = this._createTxEventHandler(this, network, options);

}}

while the strategy factory function takes 2, and hence picks the network object as options params

[https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/fabric-network/lib/impl/event/defaulteventhandlerstrategies.js#L41]
{quote}function NETWORK_SCOPE_ALLFORTX(transaction, options) { 

const network = transaction.getNetwork();
{quote}
causing it to print options as a [circular] object and use the default commitTimeout of 0 (i.e., no timeout).

{{2021-01-04T09:31:08.946Z - debug: [TransactionEventHandler]: constructor: transactionId = 83449508b0b60b5773f2f530abb6c6860fd46b9a616f238bf73005285034ff71, options = [Circular]}}

Since, network object is available in transaction, it does not need to be passed again.;;;","07/Jan/21 7:44 AM;harrisob@us.ibm.com;Could we get the full trace log.

 

We should not see the following when transactioneventhandler options has 'commitTimeout' of 0,

logger.debug('_setListenTimeout:', `setTimeout(${this.options.commitTimeout}) for transaction ${this.transactionId}`);;;;","07/Jan/21 1:56 PM;balaji.viswanathan;That's correct, exactly what led me down this path - Looks like TransactionEventHandler is not setting a timeout (we should see a _setListenTimeout log line).

 

debug: [TransactionEventHandler]: constructor: transactionId = 5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056, options = [Circular]

debug: [TransactionEventHandler]: _registerTxEventListeners: registerTxEvent(5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056) for event hub: peer1:7051
debug: [TransactionEventHandler]: _registerTxEventListeners: registerTxEvent(5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056) for event hub: peer2:7051
debug: [TransactionEventHandler]: waitForEvents called
debug: [TransactionEventHandler]: _onEvent: received event for ""5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056"" with code ""VALID""
debug: [TransactionEventHandler]: _strategySuccess: strategy success for transaction ""5d59c131cef89b6644d3ab381beac0cf3b1ca248b5af98b63a2c45bb7a168056""
debug: [TransactionEventHandler]: cancelListening called
debug: [TransactionEventHandler]: _onEvent: received event for ""be17a0f596911ada8bdcb0ed55accfae169c4a89b4c8f6a18f5d46730f367ca9"" with code ""VALID""
debug: [TransactionEventHandler]: _strategySuccess: strategy success for transaction ""be17a0f596911ada8bdcb0ed55accfae169c4a89b4c8f6a18f5d46730f367ca9""
debug: [TransactionEventHandler]: cancelListening called;;;","08/Jan/21 5:31 AM;harrisob@us.ibm.com;Thanks for the great debug on this issue;;;","08/Jan/21 5:33 AM;harrisob@us.ibm.com;When do you need a fix ?;;;","08/Jan/21 5:33 AM;harrisob@us.ibm.com;When do you need a fix ?;;;","08/Jan/21 4:02 PM;balaji.viswanathan;Thanks. We are on fabric-network 1.4.16/latest, if we can get this fix as part of 1.4.17/next release it would be great.;;;",,,,,,,,,,
Private data do not parsed correctly on deliverWihtPrivateData event,FABN-1686,46466,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Done,volodyad,volodyad,volodyad,06/Jan/21 12:07 AM,15/Jan/21 12:54 AM,28/Oct/23 3:25 AM,15/Jan/21 12:54 AM,v2.x,,,,,,,,,0,external,Needs-Review,sdk-triaged,,,"Private data was not parsed correctly, Long.fromValue(txIndex).toInt(); always returned zero. As a result, if block contains more than one transaction with private data, only one private data record was parsed (with index 0)

I have created PR with fix https://github.com/hyperledger/fabric-sdk-node/pull/401",,volodyad,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzw",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,"Run few transaction with private data and make sure transactions got into one block.
On nodejs subscribe on receive block event with include private data option
In parsed data in private data will have only one element in private data array, all others will be empty",,Unset,,,,,,Unset,,Unset,,(Please add usage information),volodyad,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
Discovery service fails to return results when a peer is down,FABN-1687,46469,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,andrew-coleman,icarrascol,icarrascol,08/Jan/21 12:39 AM,25/Aug/21 9:43 PM,28/Oct/23 3:25 AM,,v2.x,,,,,,,,,0,discovery,external,Needs-Review,sdk-triaged,,"i am doing some testing of the sdk with some peers down, considering that it should work if there are enough peers for endorsing even if some of them are down. i have a network with 4 organizations and 1 peer each, if i stop the peer of the first organization the discovery service fails with this error:
{code:java}
2021-01-07T15:31:05.745Z - error: [DiscoveryService]: send[pagare-channel] - no discovery results
{code}
[^newlog.txt]

i found out that the error is related to how discovery works, from the node sdk v1.4 documentation says this:
{code:java}
// no target specified, using the first peer with the discover role
// peer was added to the channel either by the 'addPeer' or when using
// a connection profile
{code}
so if the first peer with discover role found on the connection profile is down, seems like the sdk doesnt check for other discoverer peers and just dies.

if you want us to handle this error, on sdk v2 using gateway api there is no clear way to specify the target for discovery, at least i couldnt find anything on the documentation.",,bh4rtp,icarrascol,nekia,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"08/Jan/21 12:34 AM;icarrascol;newlog.txt;https://jira.hyperledger.org/secure/attachment/18876/newlog.txt",,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hyj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bh4rtp,icarrascol,nekia,,,,,,,,,,,,,,,,,,,"13/Jan/21 12:12 PM;bh4rtp;my test is even worse. if a peer is down, the whole fabric network cannot submit transactions any more. the crash fault tolerance test makes a critical failure.

it can be reproduced by the following setup and operations.

1) org1 has private data collection named Org1PrivateCollection.

2) peer0.org1 is an anchor peer.

3) set discovery options
{code:java}
{ enabled: true, asLocalhost: true }{code}
4) add discovery interest with
{code:java}
contract.addDiscoveryInterest({ name: 'mychaincode', collectionNames: ['Org1PrivateCollection'] });{code}
5) start fabric network and submit transactions by 30 clients concurrently.

6) kill peer0.org1 manually. then the sdk will report the following errrors. all the transactions will be stopped.
{code:java}
2021-01-13T01:45:40.488Z - error: [EventService]: unregisterEventListener[peer0.org1.example.com] - #1 - event listener was not found
2021-01-13T01:45:40.488Z - error: [EventService]: unregisterEventListener[peer0.org1.example.com] - #1 - event listener was not found
2021-01-13T01:45:40.488Z - error: [EventService]: unregisterEventListener[peer0.org1.example.com] - #1 - event listener was not found
2021-01-13T01:45:40.488Z - error: [EventService]: unregisterEventListener[peer0.org1.example.com] - #1 - event listener was not found
2021-01-13T01:45:40.488Z - error: [EventService]: unregisterEventListener[peer0.org1.example.com] - #1 - event listener was not found
2021-01-13T01:45:40.489Z - warn: [CommitListenerSession]: Error notifying listener: message=eventListener not found, stack=Error: eventListener not found{code};;;",,,,,,,,,,,,,,,,
Publish 1.4.17,FABN-1688,46476,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,11/Jan/21 11:58 PM,16/Jan/21 1:20 AM,28/Oct/23 3:25 AM,16/Jan/21 1:20 AM,,,,,,,,,,0,sdk-triaged,,,,,Publish new version of release-1.4,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzx",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),harrisob@us.ibm.com,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
As a user I shouldn't have to create a custom query handler to evaluate transactions on selected nodes,FABN-1689,46477,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,lquintai,lquintai,12/Jan/21 1:04 AM,27/Jan/21 11:52 PM,28/Oct/23 3:25 AM,27/Jan/21 11:52 PM,,,,,,,,,,0,external,,,,,"Currently there is no query handler option to evaluate transactions on user selected peers. This is possible on submit transaction.

 

This is a very basic behaviour, and the comments on the code seem to indicate it's implemented when in fact it is not, so it would be great to have it out of the box rather than the user having to implement it.

 

Comment I'm referring to in fabric-network:
{code:java}
/**
   * Evaluate a transaction function and return its results.
   * The transaction function will be evaluated on the endorsing peers but
   * the responses will not be sent to the ordering service and hence will
   * not be committed to the ledger.
   * This is used for querying the world state.
   * @async
   * @param {...string} [args] Transaction function arguments.
   * @returns {Promise<Buffer>} Payload response from the transaction function.
   */
 async evaluate(...args) { ... }
{code}
 

This should happen without a gateway disconnect, ie, the user should be decide which peers to evaluate the transaction on while already connected to the gateway.",,lesleyannj,lquintai,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i0b:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,lquintai,tatsu-sato,,,,,,,,,,,,,,,,,,,"12/Jan/21 11:03 PM;lesleyannj;[~lquintai]

SDK supported direction is abstracting away as much as possible from low-level infrastructure concerns.  The expectation is that client applications should not have to worry about individual peers - that’s an operational concern.

This direction is further emphasized in the new separate fabric-gateway component which is under development.

To qualify this feature addition a strong use-case would be required.;;;","27/Jan/21 11:49 PM;lquintai;The only user case I have is the extension, where we allow the user to select the peers they're interested in. This is a niche scenario, so not the strong use case required to go ahead with the implementation. It seems this is as designed and not a bug then, and we are actively preventing the user from doing it for a reason.;;;",,,,,,,,,,,,,,,
Empty txid for CONFIG type transactions,FABN-1690,46483,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,sigma67,sigma67,12/Jan/21 11:35 PM,17/Aug/21 6:54 PM,28/Oct/23 3:25 AM,17/Aug/21 6:54 PM,,,,,,,,,,0,community-help-wanted,external,sdk-triaged,,,"Hi, I'm using Hyperledger Explorer which uses fabric-network 2.2. For Fabric 2.3 test network, the txid field of CONFIG type transactions is empty for me. My transaction looks like this:


{code:json}
{
  ""payload"": {
    ""header"": {
      ""channel_header"": {
        ""type"": 1,
        ""version"": 0,
        ""timestamp"": ""2020-12-11T09:08:36.000Z"",
        ""channel_id"": ""mychannel"",
        ""tx_id"": """",
        ""epoch"": {
          ""low"": 0,
          ""high"": 0,
          ""unsigned"": true
        },
        ""extension"": {
          ""type"": ""Buffer"",
          ""data"": []
        },
        ""typeString"": ""CONFIG""
      },
      ""data"": {
      ""config"": {
        ""sequence"": {
          ""low"": 3,
          ""high"": 0,
          ""unsigned"": true
        },
        ""channel_group"": {
          ""version"": 0,
          ""groups"": {
            ""Application"": {
              ""version"": 1,
              ""groups"": {
                ""Org1MSP"": {
                  ""version"": 1,
                  ""groups"": {},
                  ""values"": {
                    ""AnchorPeers"": {
                      ""mod_policy"": ""Admins"",
                      ""version"": 0,
                      ""value"": {
                        ""anchor_peers"": [
                          {
                            ""host"": ""peer0.org1.example.com"",
                            ""port"": 7051
                          }
                        ]
                      }
                    },
...
{code}
(shortened and signature fields left out for brevity)

Relevant HL Explorer code can be found here (calling the SDK with queryBlock in l.378): https://github.com/hyperledger/blockchain-explorer/blob/master/app/platform/fabric/sync/SyncService.ts

It seems behind the scenes it uses a GetBlockByNumber transaction calling qscc contract:
https://github.com/hyperledger/blockchain-explorer/blob/5adaa939e6f3116511a9124d8caede8467bc75b7/app/platform/fabric/gateway/FabricGateway.ts#L314-L328
",,bestbeforetoday,sigma67,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i1n:",,,,Unset,Unset,,,,,,,,,,,Retrieve CONFIG transaction via QueryBlockByNumber tx to QSCC,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,sigma67,,,,,,,,,,,,,,,,,,,,"28/Jan/21 5:39 PM;sigma67;I have news from the Fabric maintainers, it seems to be a Fabric issue. In brief, CONFIG TX do not have a txid, so it is not a node-sdk issue imo. By Brett Logan, #fabric on RocketChat:

""There was a JIRA around this. Strictly speaking, config transactions do not require transaction IDs, but much tooling automatically generates them. The real issue is that the transaction id should have never been embedded into the transaction. It's derivable from the transaction contents (in fact, from the header contents), so encoding it in the transaction was a mistake.

But this is not the real issue. Config transactions are special, in that the thing the client submits is a delta (technically, a 'config update transaction'), which is preprocessed by the orderers into a new channel config, embedded into the blockchain as a 'config transaction'. Because the contents are generated by the orderer as a new transaction, the txid of the config transaction is unknown to the client, hence, naively waiting for the txid that the client generated (for the config update txn) to commit will not work.

You can find the config update tx embedded into the config tx generated by the orderer. This is used by the other orderers and peers to ensure that the orderer processed the update correctly.
https://jira.hyperledger.org/browse/FAB-15411
These are Jason Yellick's words, not mine, just to attribute them to the source"";;;","17/Aug/21 6:54 PM;bestbeforetoday;The Node SDK seems to be working correctly in this case, and any issue should probably be re-raised elsewhere (perhaps the qscc chaincode?) if required.;;;",,,,,,,,,,,,,,,
Publish v2.2.5,FABN-1691,46484,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,lesleyannj,lesleyannj,13/Jan/21 11:43 PM,15/Jan/21 12:45 AM,28/Oct/23 3:25 AM,15/Jan/21 12:45 AM,,,,,,,,,,0,sdk-triaged,,,,,Release notes https://github.com/hyperledger/fabric-sdk-node/blob/release-2.2/RELEASING.md,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzw",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Reset to snapshot 2.2.6,FABN-1692,46489,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,lesleyannj,lesleyannj,14/Jan/21 8:41 PM,15/Jan/21 1:26 AM,28/Oct/23 3:25 AM,15/Jan/21 1:26 AM,,,,,,,,,,0,sdk-triaged,,,,,Release notes https://github.com/hyperledger/fabric-sdk-node/blob/release-2.2/RELEASING.md,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzx",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,main,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Reset to snapshot 1.4.18,FABN-1693,46495,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,lesleyannj,lesleyannj,16/Jan/21 1:22 AM,16/Jan/21 2:16 AM,28/Oct/23 3:25 AM,16/Jan/21 2:16 AM,,,,,,,,,,0,sdk-triaged,,,,,Last action in process >  https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/RELEASING.md,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzxi",,,,Unset,Unset,11Jan to 18Jan,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
long response times when endorsers are down,FABN-1694,46498,,Bug,Unverified,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,,icarrascol,icarrascol,18/Jan/21 10:52 PM,27/Jan/21 11:22 PM,28/Oct/23 3:25 AM,,v2.x,,,,,,,,,0,community-help-wanted,external,node,sdk-triaged,,"hello, consider having an endorsing peer down, the sdk takes 3 seconds by default to wait for an answer of this peer every time a request is done. If more endorsing peers are down, it means 3 seconds more of waiting from what i tested. If i have 2 peers down a request takes +6 seconds, this means the check for the endorser status is being done in a sequence instead of in parallel. This behavior is a big hit to the performance of an application as on my case normal requests with all peers up take 1.8 seconds, a request with an endorsing peer down takes 4.8 seconds, and obviously more endorsingpeers down take +3s each. these endorsing peers that are down are not even required to endorse the transaction, but the status check is done at the start from what the logs say.",,icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i43:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),icarrascol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Program doesn't stop after unregistering a listener,FABN-1695,46503,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,bestbeforetoday,afrancoc2000,afrancoc2000,20/Jan/21 10:58 PM,22/Jan/21 6:30 PM,28/Oct/23 3:25 AM,22/Jan/21 6:30 PM,,,,,,,,,,0,external,,,,,"Hi, 

I'm using SDK 1.4, and I'm creating a listener I want to receive a message and close my program but when I do the unregister the program doesn't stop and I can't see in the documentation any other way to stop listening.

Here is the documentation I'm using as guide 

https://hyperledger.github.io/fabric-sdk-node/release-1.4/tutorial-listening-to-events.html

Here's my code 


{code:title=listener.ts|borderStyle=solid}
    const contract = await fabricService.getContract(user, contractName);

    const listener = await contract.addContractListener(
        'tests',
        'contract',
        (_error: Error, event: any, _blockNumber?: string, _transactionId?: string, _status?: string) => {
          console.log('message received');
          const data = (event.payload as Buffer).toString('utf8');
          expect(data).to.equal('xxxx');
          listener.unregister();
        }
    );

    listener.unregister();

{code}

I expected to end the program after de listener unregister but nothing happens and the program keeps running.

am I missing something? shouldn't the program stop?

Thanks",,afrancoc2000,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i57:",,,,Unset,Unset,,,,,,,,,,,create a test program with the code I am posting and run it.,,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,bestbeforetoday,,,,,,,,,,,,,,,,,,,,"22/Jan/21 12:11 AM;afrancoc2000;Hi, found out I shoud disconnect the gateway too.

Thanks.;;;","22/Jan/21 6:30 PM;bestbeforetoday;I'll close as it sounds like you have resolved your issue. Go ahead and reopen if not.;;;",,,,,,,,,,,,,,,
fabric-client replacement,FABN-1696,46516,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Won't Do,,arman19940326,arman19940326,28/Jan/21 1:13 AM,08/Feb/21 10:57 PM,28/Oct/23 3:25 AM,08/Feb/21 10:57 PM,,,,,,,,,,0,external,,,,,"Since the fabric-client package has been removed from the node SDK as of version 2.0, is there a way to do administrative tasks such as creating channels, joining peers, updating anchor peers, ... without CLI? I'm still using fabric-client v1.4 with HLF v2.2. I'm wondering if there's any way to do the aforementioned tasks without resorting to CLI.",,arman19940326,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i7f:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),arman19940326,lesleyannj,,,,,,,,,,,,,,,,,,,,"08/Feb/21 10:57 PM;lesleyannj;Direction is to use CLI for operation features.;;;",,,,,,,,,,,,,,,,
Discovery service error acces denied,FABN-1697,46532,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Highest,Won't Do,,divyabhanu,divyabhanu,02/Feb/21 11:14 PM,24/Feb/21 11:10 PM,28/Oct/23 3:25 AM,24/Feb/21 11:10 PM,,,,,,,,,,0,external,,,,,"i have a network deployed in kubernetes and trying to connect with node js sdk with fabric ca client so i have forwrded the port to local and trying to test the peer node but when going through logs i foundout these errors in fabric-peer node, not sure with what is causing the issue so please help with this

error: [DiscoveryService]: send[allorgs] - Channel:allorgs received discovery error:access denied
Failed to submit transaction: Error: DiscoveryService: allorgs error: access denied

PeerLogs:

WARN 058 principal deserialization failure (MSP swapMSP is unknown) for identity 0a07737761704d535012df062d2d2d2d2d424547494e2043455254494649434154452d2d2d2..


2021-02-02 13:49:24.394 UTC [discovery] processQuery -> WARN 059 got query for channel allorgs from 127.0.0.1:60644 but it isn't eligible: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied
2021-02-02 13:49:24.394 UTC [discovery] processQuery -> WARN 05a got query for channel allorgs from 127.0.0.1:60644 but it isn't eligible: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied

 

Configtx.yaml


---
Organizations:

    - &OrdererOrg
        Name: OrdererOrg
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/msp
        Policies:
            Readers:
                Type: Signature
                Rule: ""OR('OrdererMSP.member')""
            Writers:
                Type: Signature
                Rule: ""OR('OrdererMSP.member')""
            Admins:
                Type: Signature
                Rule: ""OR('OrdererMSP.admin')""

#Insert1
    - &Swap  
        Name: SwapMSP  
        ID: SwapMSP  
        MSPDir: crypto-config/peerOrganizations/swap/msp 
        Policies:  
            Readers: 
                Type: Signature 
                Rule: ""OR('SwapMSP.admin','SwapMSP.peer','SwapMSP.client')"" 
            Writers:  
                Type: Signature 
                Rule: ""OR('SwapMSP.admin','SwapMSP.client')"" 
            Admins:   
                Type: Signature 
                Rule: ""OR('SwapMSP.admin')"" 
            Endorsement:   
                Type: Signature 
                Rule: ""OR('SwapMSP.peer')"" 
        AnchorPeers:   
          - Host: peer0.swap 
            Port: 7051 

Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true

    Orderer: &OrdererCapabilities
        V2_0: true

    Application: &ApplicationCapabilities
        V2_0: true

Application: &ApplicationDefaults

    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: ""ANY Readers""
        Writers:
            Type: ImplicitMeta
            Rule: ""ANY Writers""
        Admins:
            Type: ImplicitMeta
            Rule: ""ANY Admins""
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: ""ANY Endorsement""
        Endorsement:
            Type: ImplicitMeta
            Rule: ""ANY Endorsement""

    Capabilities:
        <<: *ApplicationCapabilities

Orderer: &OrdererDefaults

    OrdererType: etcdraft

    Addresses:
    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: ""ANY Readers""
        Writers:
            Type: ImplicitMeta
            Rule: ""ANY Writers""
        Admins:
            Type: ImplicitMeta
            Rule: ""MAJORITY Admins""
        BlockValidation:
            Type: ImplicitMeta
            Rule: ""ANY Writers""


Channel: &ChannelDefaults

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: ""ANY Readers""
        Writers:
            Type: ImplicitMeta
            Rule: ""ANY Writers""
        Admins:
            Type: ImplicitMeta
            Rule: ""ANY Admins""

    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    AllOrgsChannel:
        Consortium: AllOrgsConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                #Insert5
                - *Swap     
            Capabilities:
                <<: *ApplicationCapabilities
    EtcdRaftOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                #Insert7
                - Host: orderer.swap 
                  Port: 7050 
                  ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap/tls/server.crt   
                  ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap/tls/server.crt     
                - Host: orderer.swap2 
                  Port: 7050 
                  ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap2/tls/server.crt   
                  ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap2/tls/server.crt     
                - Host: orderer.swap3 
                  Port: 7050 
                  ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap3/tls/server.crt   
                  ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap3/tls/server.crt     
                - Host: orderer.swap4 
                  Port: 7050 
                  ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap4/tls/server.crt   
                  ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap4/tls/server.crt     
                - Host: orderer.swap5 
                  Port: 7050 
                  ClientTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap5/tls/server.crt   
                  ServerTLSCert: crypto-config/ordererOrganizations/orderers/orderer.swap5/tls/server.crt     
            Addresses:
                #Insert8
                - orderer.swap:7050 
                - orderer.swap2:7050 
                - orderer.swap3:7050 
                - orderer.swap4:7050 
                - orderer.swap5:7050 

            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
        Consortiums:
            AllOrgsConsortium:
                Organizations:
                #Insert6
                - *Swap     
crypto-config.yaml
 
CA:
  OrganizationalUnit: admin
OrdererOrgs:
  - Name: Orderer
    Domain: """"
    Specs:
      #Insert1
    - CommonName: orderer.swap 
    - CommonName: orderer.swap2 
    - CommonName: orderer.swap3 
    - CommonName: orderer.swap4 
    - CommonName: orderer.swap5 

PeerOrgs:
 #Insert2
  - Name: Swap 
    Domain: swap 
    EnableNodeOUs: true  
    Template:  
      Count: 1 
    Users: 
      Count: 1 ",,divyabhanu,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01iaj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),divyabhanu,lesleyannj,,,,,,,,,,,,,,,,,,,,"08/Feb/21 10:55 PM;lesleyannj;As discovery requires identity to have write access.  First thing to check is that the identity being used has write access or the correct identity is being used in the code.;;;","24/Feb/21 11:10 PM;lesleyannj;Can be re-opened if using the correct identity is not the underlying problem.;;;",,,,,,,,,,,,,,,
Is it possible to package the Hyperledger Fabric chaincode using the node SDK?,FABN-1698,46528,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,afrancoc2000,afrancoc2000,02/Feb/21 1:40 AM,23/Apr/21 10:44 AM,28/Oct/23 3:25 AM,09/Feb/21 11:55 PM,,,,,,,,,,0,,,,,,"I use hyperledger fabric V1.4.10 I created a deployer app that installs and upgrades my chaincode using the node SDK API and everything works great but I am storing all my project compressed in a zip file as an artifact and I would like to have a smaller artifact to store, off course I'm adding the node modules, the js and the ts files, as I'm not completely sure if they are needed or not during deployment.

I would like to be able to do the same that is done using ""peer chaincode package"" from my deployer app to be able to package my code in an efficient way.

I have seen in the SDK a [BasePackager|https://hyperledger.github.io/fabric-sdk-node/release-1.4/BasePackager.html#toc0__anchor] class that seems to be able to package the code, but I can´t find any examples of how to use it.

Also looking inside the js code I found that the install method can receive a ChaincodeInstallRequest that can be a ChaincodePackageInstallRequest or a ChaincodePathInstallRequest.

Here's the code inside index.d.ts:


{code:javascript}

export interface ChaincodePackageInstallRequest {
    targets?: Peer[] | string[];
    channelNames?: string[] | string;
    txId?: TransactionId;
    chaincodePackage: Buffer;
}

export interface ChaincodePathInstallRequest {
    targets?: Peer[] | string[];
    channelNames?: string[] | string;
    txId?: TransactionId;
    chaincodeId: string;
    chaincodeVersion: string;
    chaincodePath: string;
    chaincodeType?: ChaincodeType;
    metadataPath?: string;
}

export type ChaincodeInstallRequest = ChaincodePackageInstallRequest | ChaincodePathInstallRequest;

{code}

So I was wondering, is it possible to use the SDK to package your code? or should I use the ""peer chaincode package"" option instead? Also, after packaging my code, can I use the SDK to install it? or do I need to do it using the ""peer chaincode install"" option better?

Thanks",,afrancoc2000,davidkhala,denyeart,lesleyannj,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i9v:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,davidkhala,denyeart,lesleyannj,silliman,,,,,,,,,,,,,,,,,"09/Feb/21 11:54 PM;denyeart;It is not possible to package and install with node sdk v2.x.

[~lesleyannj] [~sstone1]  Note the repeat request.;;;","10/Feb/21 12:10 AM;lesleyannj;[~denyeart]

Node SDK:
v1.4 - Admin functions, Install and Instantiate for old lifecycle existed in Fabric client. If you want new lifecycle then required to use fabric peer cli
v2.x – Fabric client and admin functions removed.  Admin functions only available via fabric peer cli or new community package for admin – Dave Khala Admin package;;;","10/Feb/21 12:23 AM;denyeart;[~lesleyannj] I forgot about the Dave Khala admin package... can you share a link? Should this be referenced in the node sdk docs?;;;","10/Feb/21 12:33 AM;lesleyannj;https://lists.hyperledger.org/g/fabric/topic/npm_khala_fabric_admin_admin/76007540?p=,,,20,0,0,0::recentpostdate%2Fsticky,,,20,2,0,76007540

;;;","23/Apr/21 10:44 AM;davidkhala;[~denyeart] Thanks for your reminds, we see some repeated requirements on nodejs admin capability on 2.0 and also inside TWGC. 

We have some disussion inside TWGC that after some cleansing work, it can be my pleasure to contribute them to hyperledger once ready. 

Due to a high barrier to be a hyperledger top level projects or even labs project, I personally will consider push it to https://github.com/hyperledger-twgc at first staging phase. 

Now it resides in https://github.com/davidkhala/fabric-common/tree/master/nodejs/admin;;;",,,,,,,,,,,,
Externalinsing pods and orderes in kubernetes cluster,FABN-1699,46583,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,divyabhanu,divyabhanu,19/Feb/21 3:04 PM,24/Feb/21 11:06 PM,28/Oct/23 3:25 AM,24/Feb/21 11:06 PM,,,,,,,,,,0,external,,,,,i have a network deployed in kubernetes and now i want to connect the peer and orderers with node sdk but externalising peers and orderers and trying to connect with grpcs is not working is it way meant to be like that or there is any way that i can use by external ip to connect to to peer and orderers,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ikz:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,,,,,,,,,,,,"24/Feb/21 11:06 PM;lesleyannj;Appears to be a environment setup question and out of the scope for SDK story.;;;",,,,,,,,,,,,,,,,
The constructor for HSMWalletMixin in HLF 1.4 doesn't have the correct variables,FABN-1700,46587,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,afrancoc2000,afrancoc2000,20/Feb/21 3:54 AM,05/Mar/21 9:15 PM,28/Oct/23 3:25 AM,26/Feb/21 7:02 PM,,,,,,,,,,0,external,sdk-triaged,,,,"Hi, 

I'm trying to connect to an HSM using fabric-network V1.4.17 looking at the HSMWalletMixin constructor there are no options to tell the class the library label and pin.
  
 Instead all these variables can be found in the X509WalletMixin.
  
 Here's the code in the class: 
  
{code:javascript}
export interface WalletMixin {} // tslint:disable-line:no-empty-interface

export class X509WalletMixin implements WalletMixin {
    public static createIdentity(mspId: string, certificate: string, privateKey: string): Identity;
    constructor(library?: string, slot?: string, pin?: string, userType?: string);
}

export class HSMWalletMixin implements WalletMixin {
    public static createIdentity(mspId: string, certificate: string): Identity;
    constructor();
}{code}
So I tried creating an HSM Wallet using the X509WalletMixin like below, but it created a regular wallet instead.
{code:javascript}
const hsmWalletMixin = new X509WalletMixin('/path/to/lib/libCryptoki2_64.so', 'slot', 'pin');
const wallet = new FileSystemWallet(walletPath, hsmWalletMixin);{code}
 
 So, How can create an HSM Wallet then? are there some environment variables like in this tutorial [hsm-kcs11 tutorial|https://hyperledger.github.io/fabric-sdk-node/release-1.4/tutorial-hsm-pkcs11.html]? by the way the link to the tar in the tutorial doesn't work.


 Thanks",,afrancoc2000,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzzzyzrzi",,,,Unset,Unset,8Feb to 15Feb,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,lesleyannj,,,,,,,,,release-1.4,,,,,,,,,,true,"24/Feb/21 2:41 AM;lesleyannj;Answered in Stack Overflow https://stackoverflow.com/questions/66283689/the-constructor-for-hsmwalletmixin-in-hlf-1-4-doesnt-have-the-correct-variables


Looking at the source code the implementation is correct https://github.com/hyperledger/fabric-sdk-node/blob/4ca22aa1a70f464c3a5b9c259542aa7fee651061/fabric-network/lib/impl/wallet/hsmwalletmixin.js#L40

What is not correct are the type definitions which is the code snippet you have posted.

It's only going to be an issue if you are using typescript in which case you will just have to not use the HSMWalletMixin type to ensure typescript doesn't try to do any validation.

;;;","24/Feb/21 3:01 AM;afrancoc2000;Sure but, aren't you going to fix the types file?;;;","05/Mar/21 9:15 PM;afrancoc2000;I can see the fix thank you!;;;",,,,,,,,,,,,,,
SDK Fabric Doc updates,FABN-1701,46601,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,lesleyannj,lesleyannj,lesleyannj,26/Feb/21 11:03 PM,23/Apr/21 9:52 PM,28/Oct/23 3:25 AM,23/Apr/21 9:52 PM,,,,,,,,,,0,sdk-triaged,,,,,Re-aligning SDK JS Docs with code defaults etc.,,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzo",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,dev,release-1.4,main,,,,,,,,true,,,,,,,,,,,,,,,,,
no key with SKI found using externa CA,FABN-1702,46604,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,afrancoc2000,afrancoc2000,28/Feb/21 4:09 AM,05/May/21 10:02 PM,28/Oct/23 3:25 AM,05/May/21 10:02 PM,,,,,,,,,,0,external,,,,,"Hi, I use hyperledger fabric 1.4 and I have a luna 6.3 HSM I want to initialize my wallet with the private keys inside the HSM but I get the no key with SKI found error. 

 

This is what I'm doing: 

 
 # Created my ECDSA private keys and CSR.
 # Imported my private keys into the HSM.
 # Signed the keys and generated certificates with my external trusted CA (not hyperledger CA)
# Stored the certificate in a key vault and imported it to use it in my app.
 # Created a wallet and tried to import my key using the certificate using this code:

 
{code:javascript}
const hsmWalletMixin = new HSMWalletMixin(library, slot, pin);
const hsmWallet = new InMemoryWallet(hsmWalletMixin);
const hsmIdentity = HSMWalletMixin.createIdentity('epm', certificate);

await wallet.import(userId, regularIdentity);
{code}

 Doing the import I get this error: 

{code:bash}
Error: _pkcs11SkiToHandle[525]: no key with SKI xxxxxx found
{code}
 
I have looked at issues [FABN-1590|https://jira.hyperledger.org/browse/FABN-1590] and [FABN-1666|https://jira.hyperledger.org/browse/FABN-1666] but I still don't understand how can I be able to recreate the context needed for the wallet to work. This is a real working HSM, not an in memory tool, I tried both the in memory wallet and the file system wallet. Am I missing some step doing this?

Thanks",,afrancoc2000,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ioj:",,,,Unset,Unset,,,,,,,,,,,"- Created my ECDSA private keys and CSR.
- Imported my private keys into the HSM.
- Signed the keys and generated certificates with my external trusted CA (not hyperledger CA)
- Stored the certificate in a key vault and imported it to use it in my app.
- Run the code",,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,denyeart,,,,,,,,,,,,,,,,,,,,"06/Mar/21 12:53 AM;afrancoc2000;Hi my HSM is a Thales Luna V6.3 I have tried importing my private key only, my private key and certificate in different steps, my private key and certificate on the same file, but still I get the same error is it a problem with the way I'm inserting the certificates in the HSM? or do you need to recreate some context in the app to import an existing key pair certificate in an HSM Wallet?

 

I was looking at this article [Peer failed getting private key|[https://lists.hyperledger.org/g/fabric/topic/peer_failed_getting_private/75093038]] looking at my certificate, I can see that it has an subject key id but the number I see doesn't match the number in the error, and I'm a bit lost because it says the skid its calculated from the private key but I only see it in the certificate extension.

 

This is the number I see in the skid from keyStore Explorer in the certificate: Key Identifier: 0xF9AE C4C7 7329 2C18 5616 F05A 9A89 8FBE AE54 9AD5

This is the error: no key with SKI 02174c678ed1911b86dee963b1423c324f0f43395878c56728eb7ccdda74ec66 found

Maybe its the same number in different formats but for me these two are both hexadecimal numbers, so is there a problem in the way I'm generating my certificate? why the two numbers are so different?

 ;;;","18/Mar/21 3:33 AM;afrancoc2000;Ok I checked with Thales what happened and foud out that when I imported the keys there is an id property that was empty and that I also needed to import the public key and set the same id.

Even then I was getting this error:

{code:javascript}
 key size mismatch, class: 256, ski: 384
{code}

That was happening because I was creating ECDSA certificates of 384 bit and probably there's a property that is not getting set with the key size. So tried again with a 256 key size key pair and everything worked.

So in brief, importing both the public key and the private key and setting the id property for them worked.

You can close the ticket now, sorry for the inconvenience.
;;;","05/May/21 10:02 PM;denyeart;[~davidkel] You may want to take a look, but I'll go ahead and close since the issue was resolved on user side.;;;",,,,,,,,,,,,,,
How can I set TLS communication in the client using an HSM,FABN-1703,46605,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,afrancoc2000,afrancoc2000,28/Feb/21 4:15 AM,20/Aug/21 5:58 PM,28/Oct/23 3:25 AM,20/Aug/21 5:58 PM,,,,,,,,,,0,external,,,,,"I use Hyperledger Fabric V1.4 and I'm moving all my private keys to an HSM. Looking at my code when I create a gateway to use my contracts I add a TLS certificate and a Private key, but the private key is required and with the HSM I wont get access to it, so how can I connect to my gateway?

This is how I connect to the gateway:
 
{code:javascript}
const gateway = new Gateway();
const ccpPath = path.resolve(this.ccpPath);
await gateway.connect(ccpPath, { wallet:this.wallet, identity: userId, discovery: { enabled: true, asLocalhost: this.asLocalhost } });
const client = gateway.getClient();
client.setTlsClientCertAndKey(identityUsuarioTLS.certificate, identityUsuarioTLS.privateKey);
{code}

I see that I can add a CryptoSuite, and I'm guessing with it I can tell the client it has an HSM for its private keys, but I don't see where can I tell the client what identity to use for the TLS communication.

Looking inside the code if I use the setTlsClientCertAndKey() without parameters then it creates and self-sign a certificate, but I already have one in my HSM.
 
{code:javascript}
setTlsClientCertAndKey(clientCert, clientKey) {
    logger.debug('setTlsClientCertAndKey - start');
    if (clientCert && clientKey) {
        this._tls_mutual.clientCert = clientCert;
        this._tls_mutual.clientKey = clientKey;
        this._tls_mutual.clientCertHash = null;
        this._tls_mutual.selfGenerated = false;
    } else {
        if (this._userContext) {
            logger.debug('setTlsClientCertAndKey - generating self-signed TLS client certificate');            
            // generate X509 cert pair
            // use the default software cryptosuite, not the client assigned cryptosuite, which may be
            // HSM, or the default has been set to HSM. FABN-830
            const key = Client.newCryptoSuite({software: true}).generateEphemeralKey();            
            this._tls_mutual.clientKey = key.toBytes();
            this._tls_mutual.clientCert = key.generateX509Certificate(this._userContext.getName());            
            this._tls_mutual.selfGenerated = true;
        }
    }
}
{code}

I haven't found documentation about this, so any help leading me in the right direction would be great.

Thanks",,afrancoc2000,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ior:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),afrancoc2000,bestbeforetoday,,,,,,,,,,,,,,,,,,,,"20/Aug/21 5:58 PM;bestbeforetoday;Unfortunately the gRPC APIs used by the client to make connections to Fabric nodes require both the client certificate and private key in order to create TLS connections.;;;",,,,,,,,,,,,,,,,
Calling Channel.sendTransaction() more than once with same request.proposal fails,FABN-1705,46649,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,17/Mar/21 6:03 AM,17/Mar/21 6:39 PM,28/Oct/23 3:25 AM,17/Mar/21 6:38 PM,,,,,,,,,,0,external,sdk-triaged,,,,"If the request.proposal argument has ByteBuffer type fields (which they typically will be at runtime), the decode process within Channel.buildEnvelope() changes the mark index for those ByteBuffers. This results in subsequent calls using the same request instance to produce different results. This appears to be a bug (or at least undesirable behaviour) in protobuf.js.

Affects the v1.4 SDK.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzzzyzrzk",,,,Unset,Unset,8Feb to 15Feb,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,release-1.4,,,,,,,,,,true,"17/Mar/21 6:39 PM;bestbeforetoday;Published in fabric-client v1.4.18-snapshot.5.;;;",,,,,,,,,,,,,,,,
Publish v1.4.18,FABN-1706,46663,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,lesleyannj,lesleyannj,23/Mar/21 7:47 PM,22/Apr/21 2:04 AM,28/Oct/23 3:25 AM,22/Apr/21 2:04 AM,,,,,,,,,,0,sdk-triaged,,,,,"Release notes https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/RELEASING.md
",,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjziwi",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Reset to snapshot 1.4.19,FABN-1707,46664,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,,lesleyannj,lesleyannj,23/Mar/21 7:48 PM,23/Apr/21 9:06 PM,28/Oct/23 3:25 AM,23/Apr/21 9:06 PM,,,,,,,,,,0,sdk-triaged,,,,,"Release notes https://github.com/hyperledger/fabric-sdk-node/blob/release-1.4/RELEASING.md
",,denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzix",,,,Unset,Unset,NEXT TODO ITEMS,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,"23/Apr/21 9:06 PM;denyeart;Done in [https://github.com/hyperledger/fabric-sdk-node/pull/448]{color:#1d1c1d} {color};;;",,,,,,,,,,,,,,,,
FabricCAServices.register() should set proper maxenrollments,FABN-1708,46684,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,conanoc,conanoc,29/Mar/21 6:48 PM,17/Aug/21 6:47 PM,28/Oct/23 3:25 AM,17/Aug/21 6:47 PM,,,,,,,,,,0,external,sdk-triaged,,,,"FabricCAServices.register() is setting default maxenrollments to 1.

[https://github.com/hyperledger/fabric-sdk-node/blob/main/fabric-ca-client/lib/FabricCAServices.js#L126]

 

This makes FabricCAServices.enroll() fail on the second try. The error message is also misleading cause it says { code: 20, message: 'Authentication failure' }

 

This should be changed to 0 or -1.

0 could make trouble because of FABN-520",,conanoc,denyeart,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j83:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),conanoc,denyeart,,,,,,,,,,,,,,,,,,,,"05/May/21 9:56 PM;denyeart;This is working as designed. Is there a reason why you'd want the second enrollment to succeed?;;;","10/May/21 11:04 AM;conanoc;In my case, I removed the wallet directory to test something. I tried second enrollment to create the wallet again. And I could not find the reason why the enrollment failed.

I had to remove the identity with fabric-ca-client CLI and re-register the same identity to resolve this issue.;;;",,,,,,,,,,,,,,,
add queryBlockByTxID api to fabric-sdk-node,FABN-1709,46703,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Won't Do,,radarlwd,radarlwd,11/Apr/21 5:23 PM,21/May/21 7:34 PM,28/Oct/23 3:25 AM,21/May/21 7:34 PM,,,,,,,,,,0,external,,,,,,,bestbeforetoday,radarlwd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jc3:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,radarlwd,,,,,,,,,,,,,,,,,,,,"21/May/21 7:34 PM;bestbeforetoday;The *qscc* system chaincode (available on all peers) provides a {{GetBlockByTxID}} transaction function, which can be evaluated as a regular transaction function with the transaction ID as the argument. It returns a serialized [common.Block|https://github.com/hyperledger/fabric-protos/blob/bf7411d3896c50b9b5487d40231731337b3f5a2e/common/common.proto#L142-L146] protobuf message.;;;",,,,,,,,,,,,,,,,
HSM key not persisted during enroll(),FABN-1710,46708,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkel,akafazov,akafazov,13/Apr/21 6:33 PM,02/Sep/21 10:51 PM,28/Oct/23 3:25 AM,22/Jun/21 11:41 PM,v2.x,,,,,,,,,0,external,,,,,"When using SoftHSM identity provider and cryptoSuite with FabricCAServices, there are no options passed from the enroll() function to generateEphemeralKey(). This leads to the privateKey not being persisted by the HSM (CKA_TOKEN = false) and the key is lost after the session is gone.

 

Affected versions: v2.2.5

 

 ",,akafazov,rkojima,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jd7:",,,,Unset,Unset,,,,,,,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),akafazov,rkojima,,,,,,,,,dev,main,,,,,,,,,true,"23/Apr/21 1:19 PM;rkojima;We also faced the same problem when using SoftHSM.

In addition to the reported one, we found an another problem on persistence. In the current implementation, HSMX509IdentityProvider assumes a private key in a wallet as an object handle, which however is not necessarily persistent across sessions according to PKCS#11 specification. Because of this, we cannot access to keys in SoftHSM token in a newly established PKCS session.

We believe that what should be stored in wallets are not object handles, but subject key identifiers (ski).
 As a quick fix, we put a ski into a wallet,
{code:javascript}
        // enroll as usual
        const enrollmentResults = await hsmCAClient.enroll(options);
        // from the enrollment results get the info to save
        const identity: HsmX509Identity = {
           credentials: {
             certificate: enrollmentResults.certificate,
-            privateKey: enrollmentResults.key.toBytes()
+            privateKey: enrollmentResults.key.toSKI()
           },
           mspId: 'org1',
           type: 'HSM-X.509'
        };
        await wallet.put('bob', identity);
{code}
and made following modification in hsmx509identity.js, so that the provider can reacquires an object handle to the key in HSM token on the PKCS session by looking up with ski.
{code:javascript}
@@ -85,10 +85,11 @@ class HsmX509Provider {
         }
         const user = new fabric_common_1.User(name);
         user.setCryptoSuite(this.cryptoSuite);
-        const handle = Buffer.from(identity.credentials.privateKey, 'hex');
+        const ski = Buffer.from(identity.credentials.privateKey, 'hex');
+        const handle = Buffer.from((await this.cryptoSuite.getKey(ski)).getHandle(), 'hex');
         const privateKey = new fabric_common_1.Pkcs11EcdsaKey({ priv: handle }, this.cryptoSuite.getKeySize());
         await user.setEnrollment(privateKey, identity.credentials.certificate, identity.mspId);
         return user;
     }
 }
{code}
We confirmed this enables the persisted key to being accessible across PKCS#11 sessions.;;;","25/Apr/21 7:26 PM;akafazov;Hi [~rkojima],

Yes, I can confirm your fix works for me. Thanks.;;;","26/Apr/21 11:15 PM;akafazov;I created a merge request for this - https://github.com/hyperledger/fabric-sdk-node/pull/450;;;",,,,,,,,,,,,,,
code hygience: fabric-client prune/remove in sdk-node,FABN-1711,46813,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkhala,davidkhala,davidkhala,23/Apr/21 10:49 AM,19/May/21 6:29 PM,28/Oct/23 3:25 AM,27/Apr/21 6:38 PM,v2.x,,,,,,,,,0,external,hygiene,,,,"As May will be EOL of Fabric 1.4 LTS, 
it is worhy to move out all appereance as a deprecated code linked to fabric-client npm package in main branch. ",,davidkhala,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jh7:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkhala,,,,,,,,,,dev,main,,,,,,,,,true,"27/Apr/21 6:37 PM;davidkhala;Done in 
https://github.com/hyperledger/fabric-sdk-node/pull/449;;;",,,,,,,,,,,,,,,,
First invoke failing when discovery is enabled,FABN-1712,46888,,Bug,Returned,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,,jsmiley,jsmiley,02/Jun/21 10:36 PM,02/Sep/21 10:48 PM,28/Oct/23 3:25 AM,,,,,,,,,,,0,external,,,,,"Versions:
 * fabric-network 2.2.5
 * fabric-peer 2.3.0
 * fabric-orderer 2.3.0

With a single peer network, when *Discovery* is *enabled*, the first invoke transaction sent from the SDK always fails with an error:
{code:java}
'Error: DiscoveryService: test-chaincode error: failed constructing descriptor for chaincodes:<name:""test-chaincode"" > '{code}
 
 After this first error, all other invoke transactions succeed without an issue.

Every time a new Gateway is created (i.e. our client is restarted) this problem appears again (first invoke transaction fails, and all others after this one work).
  
 We found a workaround to this bug for when we are using a valid chaincode id, but have since seen it reappear when testing using an invalid chaincode id.

We attempt to perform an invoke transaction with a chaincode id that does not exist. The first time it will fail with the error:
{code:java}
'error: [DiscoveryService]: send[foo] - Channel:default received discovery error:failed constructing descriptor for chaincodes:<name:""foo"" >' {code}
 Logs from the peer show:
{code:java}
peer 2021-06-01 12:07:28.787 UTC [discovery.lifecycle] DeployedChaincodes -> INFO 107 Chaincode foo isn't instantiated'
peer 2021-06-01 12:07:28.787 UTC [discovery.lifecycle] Metadata -> INFO 108 Chaincode foo isn't defined in channel default
couchdb [notice] 2021-06-01T12:07:28.787084Z nonode@nohost <0.18422.0> 57a08a15bc 127.0.0.1:5984 127.0.0.1 user GET /default_lscc/foo?attachments=true 404 ok 8 
peer 2021-06-01 12:07:28.787 UTC [discovery] chaincodeQuery -> ERRO 109 Failed constructing descriptor for chaincode chaincodes:<name:""foo"" > ,: No metadata was found for chaincode foo in channel default{code}
 

After this first run, all further attempts to perform an invoke with the same invalid id result in the correct error being thrown (make sure the chaincode foo has been successfully defined on channel default and try again: chaincode foo not found)",,bestbeforetoday,jsmiley,yacovm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jwj:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,jsmiley,yacovm,,,,,,,,,,,,,,,,,,,"05/Jun/21 9:50 AM;yacovm;I think that the bug here is actually that it returns to you ""make sure the chaincode foo has been successfully defined on channel default and try again"" because that error string is thrown from within the [endorser code|https://github.com/hyperledger/fabric/blob/main/core/endorser/endorser.go#L393] but it shouldn't had even reached that place since discovery didn't return a descriptor.

 

Anyway, this seems to me like an SDK bug.

 

 

[~davidkel]  / [~bestbeforetoday]  what do you make of this?

 ;;;","09/Jun/21 7:10 PM;bestbeforetoday;There was a Fabric bug that caused similar errors, but the fix should be included in v2.3.0: https://jira.hyperledger.org/browse/FAB-18194

We're certainly not seeing this behaviour in scenario tests but we don't run any test networks with only a single peer, so it's possible that's a trigger.

Could you try using the v2.2.6 SDK just some of the dependency updates that includes solve the issue for you?;;;",,,,,,,,,,,,,,,
C Compilers are now mandatory to use fabric node sdk,FABN-1713,46936,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,davidkel,davidkel,davidkel,14/Jun/21 5:04 PM,22/Jun/21 11:40 PM,28/Oct/23 3:25 AM,22/Jun/21 11:40 PM,v2.x,,,,,v2.x,,,,0,,,,,,"The C Compilers have been optional for a while allowing people to easily install and use the fabric node-sdk on platforms such as windows or mac. I think that 

FABN-1666 Allow HSM identity to be stored (#377)

may have broken this assuming that it used to work

Because the pkcs11 library is still declared as optional, the fabric node-sdk installs with only warnings (rather than fails) but then it fails at runtime to find the pkcs11 library

eg
{code:javascript}
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-common\lib\impl\bccsp_pkcs11.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-common\lib\User.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-common\index.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\lib\logger.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\lib\impl\query\query.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\lib\transaction.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\lib\contract.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\lib\network.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\lib\gateway.js
fabric-samples\asset-transfer-basic\application-javascript\node_modules\fabric-network\index.js
fabric-samples\asset-transfer-basic\application-javascript\app.js

{code}
It looks like this only applies to the 2.2 SDK
",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k63:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,"21/Jun/21 11:27 PM;davidkel;This has been fixed when FABN1710 was fixed;;;",,,,,,,,,,,,,,,,
Support persistence of in-flight transactions,FABN-1714,46945,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,16/Jun/21 12:10 AM,18/Jun/21 12:22 AM,28/Oct/23 3:25 AM,18/Jun/21 12:22 AM,,,,,,,,,,0,,,,,,"*As an* application developer
 *I want* to persist and reconstruct transactions that I submit
 *So that* I can workaround failure scenarios where the orderer loses a successfully submitted transactions, even in the event of a client-side application failure

In certain failure situations, a transaction that has been successfully received by the orderer may still be lost before it is committed to a block and distributed to peers. In this case a client application may (after failing to observe a commit corresponding to the submitted transaction ID) resubmit the same transaction to the orderer by simply calling {{submit()}} again on the same Transaction object. The use of the same Transaction object will mean the same transaction ID (and nonce) is used, and so if the first submit attempt does eventually commit, the second will be invalidated due to a duplicate transaction ID and there will be no duplication of committed work on the ledger.

A simplistic example of retrying the transaction submit on a timeout waiting for the commit status might be:

{code:javascript}
import { TimeoutError, Transaction } from 'fabric-network';

const transaction = contract.createTransaction('myTxFunction');
const result = await submitWithRetry(transaction, 'one', 'two', 'three');

async function submitWithRetry(transaction: Transaction, ...args: string[]): Promise<Buffer> {
    for (;;) {
        try {
            return await transaction.submit(...args);
        } catch (error) {
            if (!(error instanceof TimeoutError)) {
                throw error;
            }
        }
    }
}
{code}

However, if the client application terminates during this process, the client-side Transaction object will be lost and there is no mechanism to allow the client application to persist and reconstruct these Transaction objects to enable recovery from this client application termination without potentially losing transaction information.

This story suggests adding a {{serialize()}} method to the Transaction object to serialize its internal state, and a corresponing {{deserializeTransaction()}} method on the Contract to allow a Transaction to be reconstructed from this serialized form. The burden of persisting and resubmitting the transaction to mitigate the unreliability of the orderer still lies with the client application.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k83:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,,
License check does not run correctly in PR builds,FABN-1715,46957,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,18/Jun/21 5:40 PM,18/Jun/21 11:13 PM,28/Oct/23 3:25 AM,18/Jun/21 11:13 PM,,,,,,,,,,0,,,,,,The git diff used to identify new files to scan for license headers in {{scripts/npm_scripts/checkLicense.sh}} identifies no changes when PR builds are run. This results in successful PR that may later fail the build after the PR is merged.,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kar:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,dev,,,,,,,,,,true,,,,,,,,,,,,,,,,,
Application Hangs on exit,FABN-1716,46964,,Bug,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,bestbeforetoday,davidkel,davidkel,21/Jun/21 7:51 PM,29/Jun/21 5:29 PM,28/Oct/23 3:25 AM,25/Jun/21 9:42 PM,v2.x,,,,,v2.x,,,,0,,,,,,"I have a simple node-js application whoich would connect, perform a single evaluate and then a disconnect, and the process would end quite happily. However since 2.2.6 release the application now hangs and never exits. I can see the disconnect being called and it returning from that disconnect call.
{code:javascript}
try {
    await gateway.connect(ccp, {
        wallet: memoryWallet,
        identity: 'user1',
        discovery: discoveryOptions
    });

    const network = await gateway.getNetwork(channel);
    const contract = await network.getContract(contractName);
    const res = await contract.evaluateTransaction('myTx');
    console.log('res', res);
} catch(err) {
    console.log('ERROR', err)
} finally {
    console.log('calling disconnect');
    gateway.disconnect();
    console.log('disconnect returned');
}
{code}

log output at disconnect time

{noformat}
calling disconnect
2021-06-21T08:55:40.119Z - debug: [Gateway]: in disconnect
2021-06-21T08:55:40.121Z - debug: [Network]: _dispose - start
2021-06-21T08:55:40.127Z - debug: [Channel]: close[mychannel] - closing connections
2021-06-21T08:55:40.132Z - debug: [ServiceEndpoint]: disconnect[Endorser-peer0.org1.example.com:7051] - start on ServiceEndpoint
2021-06-21T08:55:40.147Z - debug: [ServiceEndpoint]: disconnect[Endorser-peer0.org1.example.com:7051] Endorser peer0.org1.example.com:7051 - closing grpc service connection peer0.org1.example.com:7051
2021-06-21T08:55:40.155Z - debug: [ServiceEndpoint]: disconnect[Endorser-peer0.org1.example.com:7051] - end on ServiceEndpoint
2021-06-21T08:55:40.169Z - debug: [ServiceEndpoint]: disconnect[Endorser-peer0.org2.example.com:9051] - start on ServiceEndpoint
2021-06-21T08:55:40.170Z - debug: [ServiceEndpoint]: disconnect[Endorser-peer0.org2.example.com:9051] Endorser peer0.org2.example.com:9051 - closing grpc service connection peer0.org2.example.com:9051
2021-06-21T08:55:40.174Z - debug: [ServiceEndpoint]: disconnect[Endorser-peer0.org2.example.com:9051] - end on ServiceEndpoint
2021-06-21T08:55:40.181Z - debug: [ServiceEndpoint]: disconnect[Committer-orderer.example.com:7050] - start on ServiceEndpoint
2021-06-21T08:55:40.196Z - debug: [ServiceEndpoint]: disconnect[Committer-orderer.example.com:7050] Committer orderer.example.com:7050 - closing grpc service connection orderer.example.com:7050
2021-06-21T08:55:40.200Z - debug: [ServiceEndpoint]: disconnect[Committer-orderer.example.com:7050] - end on ServiceEndpoint
disconnect returned
{noformat}

But this doesn't change between a previous version of the sdk that doesn't hang and a newer version that does",,bestbeforetoday,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kcb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,,,,,,,,,dev,main,,,,,,,,,true,"22/Jun/21 5:00 PM;bestbeforetoday;Could you give the *{{node --version}}* and *{{npm ls}}* output for your client application where the problem occurs.;;;","22/Jun/21 6:03 PM;davidkel;node version: v12.22.1
npm ls

{noformat}
227@1.0.0 C:\temp\227
+-- fabric-network@2.2.7
| +-- fabric-common@2.2.7
| | +-- callsite@1.0.0
| | +-- elliptic@6.5.4
| | | +-- bn.js@4.12.0
| | | +-- brorand@1.1.0
| | | +-- hash.js@1.1.7
| | | | +-- inherits@2.0.4 deduped
| | | | `-- minimalistic-assert@1.0.1 deduped
| | | +-- hmac-drbg@1.0.1
| | | | +-- hash.js@1.1.7 deduped
| | | | +-- minimalistic-assert@1.0.1 deduped
| | | | `-- minimalistic-crypto-utils@1.0.1 deduped
| | | +-- inherits@2.0.4
| | | +-- minimalistic-assert@1.0.1
| | | `-- minimalistic-crypto-utils@1.0.1
| | +-- fabric-protos@2.2.7 deduped
| | +-- js-sha3@0.8.0
| | +-- jsrsasign@8.0.24
| | +-- long@4.0.0 deduped
| | +-- nconf@0.11.3
| | | +-- async@1.5.2
| | | +-- ini@2.0.0
| | | +-- secure-keys@1.0.0
| | | `-- yargs@16.2.0
| | |   +-- cliui@7.0.4
| | |   | +-- string-width@4.2.2 deduped
| | |   | +-- strip-ansi@6.0.0
| | |   | | `-- ansi-regex@5.0.0
| | |   | `-- wrap-ansi@7.0.0
| | |   |   +-- ansi-styles@4.3.0
| | |   |   | `-- color-convert@2.0.1
| | |   |   |   `-- color-name@1.1.4
| | |   |   +-- string-width@4.2.2 deduped
| | |   |   `-- strip-ansi@6.0.0 deduped
| | |   +-- escalade@3.1.1
| | |   +-- get-caller-file@2.0.5
| | |   +-- require-directory@2.1.1
| | |   +-- string-width@4.2.2
| | |   | +-- emoji-regex@8.0.0
| | |   | +-- is-fullwidth-code-point@3.0.0
| | |   | `-- strip-ansi@6.0.0 deduped
| | |   +-- y18n@5.0.8
| | |   `-- yargs-parser@20.2.9
| | +-- UNMET OPTIONAL DEPENDENCY pkcs11js@1.2.5
| | | `-- UNMET OPTIONAL DEPENDENCY nan@2.14.2
| | +-- promise-settle@0.3.0
| | +-- sjcl@1.0.8
| | +-- winston@2.4.5
| | | +-- async@1.0.0
| | | +-- colors@1.0.3
| | | +-- cycle@1.0.3
| | | +-- eyes@0.1.8
| | | +-- isstream@0.1.2
| | | `-- stack-trace@0.0.10
| | `-- yn@4.0.0
| +-- fabric-protos@2.2.7
| | +-- @grpc/grpc-js@1.3.2
| | | `-- @types/node@15.12.4
| | +-- @grpc/proto-loader@0.6.2
| | | +-- @types/long@4.0.1
| | | +-- lodash.camelcase@4.3.0
| | | +-- long@4.0.0 deduped
| | | +-- protobufjs@6.11.2 deduped
| | | `-- yargs@16.2.0 deduped
| | `-- protobufjs@6.11.2
| |   +-- @protobufjs/aspromise@1.1.2
| |   +-- @protobufjs/base64@1.1.2
| |   +-- @protobufjs/codegen@2.0.4
| |   +-- @protobufjs/eventemitter@1.1.0
| |   +-- @protobufjs/fetch@1.1.0
| |   | +-- @protobufjs/aspromise@1.1.2 deduped
| |   | `-- @protobufjs/inquire@1.1.0 deduped
| |   +-- @protobufjs/float@1.0.2
| |   +-- @protobufjs/inquire@1.1.0
| |   +-- @protobufjs/path@1.1.2
| |   +-- @protobufjs/pool@1.1.0
| |   +-- @protobufjs/utf8@1.1.0
| |   +-- @types/long@4.0.1 deduped
| |   +-- @types/node@15.12.4 deduped
| |   `-- long@4.0.0 deduped
| +-- long@4.0.0
| `-- nano@9.0.3
|   +-- @types/tough-cookie@4.0.0
|   +-- axios@0.21.1
|   | `-- follow-redirects@1.14.1
|   +-- axios-cookiejar-support@1.0.1
|   | +-- is-redirect@1.0.0
|   | `-- pify@5.0.0
|   +-- qs@6.10.1
|   | `-- side-channel@1.0.4
|   |   +-- call-bind@1.0.2
|   |   | +-- function-bind@1.1.1
|   |   | `-- get-intrinsic@1.1.1 deduped
|   |   +-- get-intrinsic@1.1.1
|   |   | +-- function-bind@1.1.1 deduped
|   |   | +-- has@1.0.3
|   |   | | `-- function-bind@1.1.1 deduped
|   |   | `-- has-symbols@1.0.2
|   |   `-- object-inspect@1.10.3
|   `-- tough-cookie@4.0.0
|     +-- psl@1.8.0
|     +-- punycode@2.1.1
|     `-- universalify@0.1.2
`-- js-yaml@4.1.0
  `-- argparse@2.0.1
{noformat}
;;;","23/Jun/21 2:26 AM;bestbeforetoday;I can reproduce using Node v12.22.1 and v14.17.1. I've identified a path where a connection timeout to an orderer (in Committer.js) is not cleared correctly after connection, but fixing this doesn't resolve the problem. I am seeing two grpc-js subchannels left in the interval event queue at the end my client application run so best guess is that changes in recent grpc-js versions have caused this behaviour. I'm not yet sure whether this is due to something not being closed correctly by the Node SDK code that didn't matter previously, or whether it's a new feature/bug in grpc-js or protobufjs used to create the gRPC service stubs.;;;","23/Jun/21 10:20 PM;bestbeforetoday;Moving back to @grpc/grpc-js v1.1.8 appears to resolve the issue. Bug report raised with grpc-js here:

https://github.com/grpc/grpc-node/issues/1825;;;",,,,,,,,,,,,,
"jsrsasign vulnerabilties in fabric-network, common, ca-client etc npm package",FABN-1719,47026,,Bug,To Do,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,davidkhala,jhoos70,jhoos70,14/Jul/21 5:53 PM,22/Sep/21 2:41 AM,28/Oct/23 3:25 AM,,v2.x,,,,,,,,,1,external,,,,,jsrsasign needs to be updated because of critical vulnerability CVE-2021-30246,,bestbeforetoday,davidkhala,jhoos70,sapthasurendran,smeyerzu,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1720,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kob:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkhala,jhoos70,sapthasurendran,smeyerzu,,,,,,,,,,,,,,,,,"13/Aug/21 6:12 PM;bestbeforetoday;The Node SDK doesn't use RSA signatures so should not be affected by this vulnerability, but it is a pain to have vulnerabilities flagged up and it would definitely be good to get to the latest version of jsrsasign. The issue we have right now is that API changes in v9+ of jsrsasign break the Node SDK, so SDK code needs to be modified to allow migration to current jsrsasign versions.;;;","13/Aug/21 6:27 PM;sapthasurendran;[~davidkhala]  Could you please confirm if you have started working on this issue ? ;;;","13/Aug/21 11:43 PM;davidkhala;[~sapthasurendran] Yes Saptha, please assign me of this issue.;;;","22/Sep/21 2:41 AM;bestbeforetoday;As we move from Jira to GitHub issues, I suggest we track this work against this issue reporting the same problem:

https://github.com/hyperledger/fabric-sdk-node/issues/500;;;",,,,,,,,,,,,,
RSA signature validation vulnerability in jsrsasign  <10.2.0 ,FABN-1720,47028,,Task,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,High,Duplicate,,k93uwmrkxc3j5fr78wy7myj8k76p9c,k93uwmrkxc3j5fr78wy7myj8k76p9c,16/Jul/21 7:47 AM,02/Sep/21 10:50 PM,28/Oct/23 3:25 AM,20/Jul/21 1:41 AM,,,,,,,,,,0,external,,,,,"I ran npm audit today on Cactus and this popped up:

[https://npmjs.com/advisories/1672]
{code:java}
jsrsasign  <10.2.0
Severity: critical
RSA signature validation vulnerability - https://npmjs.com/advisories/1672
No fix available
node_modules/jsrsasign
  fabric-ca-client  *
  Depends on vulnerable versions of jsrsasign
  node_modules/fabric-ca-client
    fabric-client  *
    Depends on vulnerable versions of fabric-ca-client
    Depends on vulnerable versions of jsrsasign
    node_modules/fabric-client
  fabric-common  >=2.1.1-snapshot.390
  Depends on vulnerable versions of jsrsasign
  node_modules/fabric-common
    fabric-network  >=1.4.19-snapshot.1
    Depends on vulnerable versions of fabric-common
    node_modules/fabric-network

{code}
Appears to be similar to https://jira.hyperledger.org/browse/FABN-1568 but they are not the same as far as I can tell.

 ",,jhoos70,k93uwmrkxc3j5fr78wy7myj8k76p9c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FABN-1719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kor:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jhoos70,k93uwmrkxc3j5fr78wy7myj8k76p9c,,,,,,,,,,,,,,,,,,,,"20/Jul/21 1:24 AM;jhoos70;See https://jira.hyperledger.org/browse/FABN-1719;;;","20/Jul/21 1:41 AM;k93uwmrkxc3j5fr78wy7myj8k76p9c;[~jhoos70] Oh, my bad. I did a search for jsrsasign but I only noticed the older one in the search results not this that you just linked. https://jira.hyperledger.org/browse/FABN-1720 can be closed as a duplicate then, thanks for the info!;;;","20/Jul/21 1:41 AM;k93uwmrkxc3j5fr78wy7myj8k76p9c;https://jira.hyperledger.org/browse/FABN-1719;;;",,,,,,,,,,,,,,
typescript definition missing for BlockDecoder,FABN-1722,47103,,Story,In Progress,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,,jscode017,jscode017,jscode017,27/Jul/21 1:27 PM,02/Sep/21 10:49 PM,28/Oct/23 3:25 AM,,,,,,,,,,,0,external,,,,,"I am trying to use the [BlockDecoder|https://github.com/hyperledger/fabric-sdk-node/blob/main/fabric-common/lib/BlockDecoder.js] for my hyperledger mentorship.
But it seems that the type definition is missing.",,jscode017,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kqb:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jscode017,tatsu-sato,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Support for different type of crypto suite,FABN-1724,47110,,Story,Closed,FABN,Fabric SDK Node,software,andrew-coleman,,,Medium,Done,Pritam 12,Pritam 12,Pritam 12,30/Jul/21 2:12 AM,02/Sep/21 10:50 PM,28/Oct/23 3:25 AM,13/Aug/21 8:19 PM,,,,,,,,,,0,external,,,,,"currently there are two of Identity provider supported by fabric node sdk .
 # Simple X509Identity
 #  HSMX509Identity

Apart from them custom identity can be implemented by simply implementing `IdentityProvider` interface (exported by fabric-network pkg).

 So, I am trying to implement a custom identity provided by `Vault Transit Engine` and HSM via PKCS#11 Proxy. But `sign(key: ICryptoKey, digest: Buffer): Buffer;` function of *`*ICryptoSuite*`* is a synchronous function . I think it should a asynchronous function so that other kind of identity provider can easily be implemented.

 

I can think of two solution 
 # Change `ICryptoSuite`  interface to support asynchronous sign function , but this approach will require me to read the fabric-common pkg and change so code there.
 # Devise a way to convert a synchronous to asynchronous call, (but this definitely not good idea)

Is there any better approach to this problem ? please share",,Pritam 12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01krv:",,,,Unset,Unset,,,,,,,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),Pritam 12,,,,,,,,,,dev,,,,,,,,,,true,,,,,,,,,,,,,,,,,
