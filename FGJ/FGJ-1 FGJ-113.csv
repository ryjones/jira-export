Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Fix Version/s,Due Date,Votes,Labels,Labels,Labels,Description,Environment,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Watchers,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Inward issue link (Blocks),Inward issue link (Cloners),Inward issue link (Cloners),Outward issue link (Cloners),Inward issue link (Duplicate),Outward issue link (Duplicate),Inward issue link (Relates),Inward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Custom field (Business Value),Custom field (Commit Levels),Custom field (Current Status),Custom field (Design),Custom field (Design Status),Custom field (Documentation Impact),Custom field (Documentation Status),Custom field (Epic Color),Custom field (Epic Link),Custom field (Epic Name),Custom field (Epic Status),Custom field (Executed),Custom field (Found in Commit),Custom field (Function Test Status),Custom field (Must Fix),Custom field (Original story points),Custom field (Parent Link),Custom field (Rank),Custom field (Release Note),Custom field (Release Note Required),Custom field (Root Cause Analysis),Custom field (SDK Impact),Custom field (Sample/Tutorial),Sprint,Sprint,Sprint,Sprint,Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (System Test Impact),Custom field (Target end),Custom field (Target start),Custom field (Team),Custom field (Team),Custom field (Test Plan),Custom field (Test Result),Custom field (Test Result Details),Custom field (Test Type),Custom field (Triaged),Custom field (Usage),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Programming model - Java SDK,FGJ-1,36828,Epic,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,17/Jan/19 1:07 AM,26/Jul/19 9:38 PM,28/Oct/23 2:21 AM,26/Jul/19 9:38 PM,v2.0.0,v2.0.0,,3,,,,"This epic adds the new programming model that was introduced in v1.4 for the Node SDK to the Java SDK.  All concepts should be consistent between the two languages and, where possible, classes and method signatures should be as close as possible, subject to differences in language idioms.

The concepts that underpin the new programming model together with an in-depth tutorial are described here:

[https://hyperledger-fabric.readthedocs.io/en/release-1.4/developapps/developing_applications.html]

The high-level API for the Node SDK is documented here:

[https://fabric-sdk-node.github.io/release-1.4/module-fabric-network.html]

 

A straw man proposal for the Java version of this API is summarised below:

 
{code:java}
package: org.hyperledger.fabric.network

class Gateway {
   Gateway()
   void connect(NetworkConfig config, Map<String, ?>, options)
   void disconnect()
   Network getNetwork(String networkName)
   User getCurrentIdentity()
   Map<String, ?> getOptions()
   HFClient getClient()
} 

interface Network {
   Contract getContract(String chaincodeID, String name)
}
 
interface Contract {
   Transaction createTransaction(String name)
   CompletionStage<String> submitTransaction(String name, String… args)
   CompletionStage<String> evaluateTransaction(String name, String… args)
}
 
interface Transaction {
   String getName()
   String getTransactionID()
   void setTransient(Map<String, byte[]> transientData)
   CompletionStage<String> submit(String… args)
   CompletionStage<String> evaluate(String… args)
} 
 
class FileSystemWallet implements Wallet {
   FileSystemWallet(String path)
   void import(String label, User identity)
   User export(String label)List list()
   void delete(String label)
   boolean exists(String label)
} 
 
class InMemoryWallet implements Wallet {
   InMemoryWallet()
   void import(String label, User identity)
   User export(String label)
   List list()
   void delete(String label)
   boolean exists(String label)
}  
 
package: org.hyperledger.fabric.network.api 

interface Wallet {
   void import(String label, User identity)
   User export(String label)
   List list()
   void delete(String label)
   boolean exists(String label)
}
{code}
 ",,andrew-coleman,bestbeforetoday,dcrough13,gennadyl,heatherp,mcoblenz,rickr,sstone1,,,,,,,,,,,,,,,,,,"07/Feb/19 7:06 PM;andrew-coleman;fabric-sdk-programming-model.pdf;https://jira.hyperledger.org/secure/attachment/16735/fabric-sdk-programming-model.pdf",,,,Development in progress.,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-3,,Programming model - Java SDK,To Do,No,,Unset,No,,,"1|i0074f:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,dcrough13,gennadyl,heatherp,mcoblenz,rickr,sstone1,,,,,,,,,,,,,"17/Jan/19 6:14 PM;gennadyl;We can look into Spring Data implementation of java client side:
https://github.com/IBM-Blockchain/fabric-spring-sdk/
It takes little bit different approach, but both can be integrated together.  ;;;","21/Jan/19 11:31 PM;rickr;Please open a separate project both in gerrit and in Jira for this work. 
Thanks
;;;","08/Feb/19 12:41 AM;bestbeforetoday;I caught a few key comments during the playback, listed below with my personal thoughts on each for discussion (in {color:#00875a}green{color}):
 # {color:#0747a6}Not keen on providing wallets. Prefer to let application code decide how to manage their credentials rather than take on burden of maintaining our own wallet code.{color}
 ** {color:#00875a}Fair concern. As I understand it, the aim is to provide some out-of-the-box implementations to accelerate adoption while still allowing application code to manage credentials themselves if they prefer. I am not hearing any argument against this.{color}
 # {color:#0747a6}Prefer to have submitTransaction() return a Future that the caller can decide to wait for or use later. Easier for application to work in a non-blocking mode if required.{color}
 ** {color:#00875a}Fair comment, and either could work. submitTransaction() encapsulates both Channel.sendProposal() and Channel.sendTransaction(). The former is a synchronous blocking call in the existing API, so there is not consistency of sync vs. async there today. It should be relatively straightforward for client code to invoke submitTransaction() asynchronously using CompletableFuture.supplyAsync(), and this also allows the client to control thread management if they desire. So having submitTransaction() as a blocking call may provide a simpler starting point (no need to worry about futures) while also allowing greater control if needed. What do you think?{color}
 # {color:#0747a6}Want new API in a separate JAR from low-level API. Concern about overhead of additional code and dependencies for users of only the low-level API.{color}
 ** {color:#00875a}A few KB of additional class files will live in the JAR on disk, but will not be loaded unless the application code makes use of them. Any dependencies (of which there are currently none) would never live in the same JAR and would not even need to be present unless the application code made use of capabilities that required them. Having multiple JARs that need to be kept in version sync certainly makes the user's life more complex. I do not understand this concern.{color};;;",,,,,,,,,,,,,
"As an application developer, I want to submit a transaction to a fabric network using a single API method call",FGJ-2,37797,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,20/Feb/19 12:53 AM,13/Mar/19 5:39 PM,28/Oct/23 2:21 AM,13/Mar/19 1:24 AM,v2.0.0,v2.0.0,,0,,,,"* create package org.hyperledger.fabric.network
 * unit test infrastructure; coverage 100%
 * Gateway, Network, Contract,  Transaction API classes
 * use default commit event notifications
 * implementation of in-memory wallet
 * implementation of filesystem wallet
 * integration test",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00cfr:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"13/Mar/19 1:24 AM;andrew-coleman;https://gerrit.hyperledger.org/r/c/30037/;;;",,,,,,,,,,,,,,,
"As an application developer using the v2.0 programming model, I want a choice of commit event notification strategies",FGJ-3,37799,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,andrew-coleman,andrew-coleman,20/Feb/19 12:56 AM,17/May/19 3:19 AM,28/Oct/23 2:21 AM,17/May/19 3:19 AM,v2.0.0,v2.0.0,,0,,,,"* implement a pluggable mechanism
 * implement the four strategies 
 ** MSPID_SCOPE_ALLFORTX Listen for all on your org
 ** MSPID_SCOPE_ANYFORTX - Listen for any on your org
 ** CHANNEL_SCOPE_ALLFORTX - Listen for all peers in the channel
 ** CHANNEL_SCOPE_ANYFORTX - Listen for any peers in the channel

 * unit and integration tests
 * documentation",,andrew-coleman,,,,,,,,,,,,,,,,FABJ-434,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00cg7:",,,,Unset,Unset,Fabric Sprint 1,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
"As an application developer using the v2.0 programming model, I want clear samples for the API",FGJ-4,37800,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,20/Feb/19 12:58 AM,31/Jul/19 5:24 PM,28/Oct/23 2:21 AM,26/Jul/19 12:10 AM,v2.0.0,v2.0.0,,0,,,,"Implementation of fabcar sample.

Implementation of the Commercial Paper sample",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00cgf:",,,,Unset,Unset,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,true,"23/Jul/19 5:50 PM;andrew-coleman;fabcar sample: [https://gerrit.hyperledger.org/r/c/fabric-samples/+/32450];;;",,,,,,,,,,,,,,,
"As an application developer using the v2.0 programming model, I want to use my own plug-in event handler",FGJ-5,37802,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,andrew-coleman,andrew-coleman,20/Feb/19 1:02 AM,26/Jul/19 12:28 AM,28/Oct/23 2:21 AM,26/Jul/19 12:28 AM,v2.0.0,v2.0.0,,0,,,,"Enable support for pluggable event handlers in the gateway options

Create a sample event handler plugin",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00cgv:",,,,Unset,Unset,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
"As an application developer using the v2.0 programming model, I want to be able to pass in transient data to the transaction",FGJ-6,37803,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,20/Feb/19 1:06 AM,07/May/19 5:32 PM,28/Oct/23 2:21 AM,07/May/19 5:32 PM,v2.0.0,v2.0.0,,0,,,,"Support private data collections by adding the ability to pass transient data via the submitTransaction function.

Implement the setTransient() method in the Transaction class",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00ch3:",,,,Unset,Unset,,,,,(Please add steps to reproduce),5.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"03/May/19 2:45 AM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/31197/];;;",,,,,,,,,,,,,,,
"As an application developer using the v2.0 programming model, I want a choice of query handler strategies",FGJ-7,37804,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,andrew-coleman,andrew-coleman,20/Feb/19 1:11 AM,17/May/19 3:20 AM,28/Oct/23 2:21 AM,17/May/19 3:20 AM,v2.0.0,v2.0.0,,0,,,,Implement the pluggable query handler capability as described in https://jira.hyperledger.org/browse/FABN-1094,,andrew-coleman,,,,,,,,,,,,,,,,FABJ-434,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00chb:",,,,Unset,Unset,,,,,(Please add steps to reproduce),8.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
FGJ scenario test to auto-generate crypto material,FGJ-8,38425,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,13/Mar/19 11:52 PM,01/May/19 10:29 PM,28/Oct/23 2:21 AM,14/Mar/19 12:44 AM,v2.0.0,v2.0.0,,0,,,,Add a stage to the scenario (cucumber) test to automatically generate the crypto material before starting up fabric,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00fvz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"14/Mar/19 12:45 AM;andrew-coleman;https://gerrit.hyperledger.org/r/c/30059/;;;",,,,,,,,,,,,,,,
Update .gitignore,FGJ-9,38433,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,,andrew-coleman,andrew-coleman,14/Mar/19 12:40 AM,14/Mar/19 12:44 AM,28/Oct/23 2:21 AM,14/Mar/19 12:44 AM,,,,0,,,,Add the auto generated crypto material to the .gitignore file,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00fxr:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"14/Mar/19 12:44 AM;andrew-coleman;https://gerrit.hyperledger.org/r/c/30064/;;;",,,,,,,,,,,,,,,
Ignore IntelliJ project files,FGJ-10,38437,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,14/Mar/19 2:25 AM,14/May/19 10:59 PM,28/Oct/23 2:21 AM,14/May/19 10:59 PM,,,,0,,,,"IntelliJ stores project files in a *.idea* directory, which should be git ignored.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cgc:",,,,Unset,Unset,Fabric Sprint 1,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Add javadoc to FGJ,FGJ-11,38449,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,14/Mar/19 6:54 PM,15/Mar/19 6:40 PM,28/Oct/23 2:21 AM,15/Mar/19 6:40 PM,v2.0.0,v2.0.0,,0,,,,,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00g0n:",,,,Unset,Unset,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
"As an application developer using the v2.0 programming model, I want to subscribe to chaincode/transaction/block events",FGJ-12,38495,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,andrew-coleman,andrew-coleman,15/Mar/19 6:53 PM,18/Jul/19 5:50 PM,28/Oct/23 2:21 AM,18/Jul/19 5:50 PM,v2.0.0,v2.0.0,,0,,,,"Implement the event handling capabilities in the high level node SDK:
 * Create an API to subscribe to and handle all event types
 * Framework to catch up (replay) missed events

Full unit test coverage

Cucumber scenario tests - aim for same 'feature' files as the node js implementation

Javadoc documentation and tutorial.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00g9r:",,,,Unset,Unset,,,,,(Please add steps to reproduce),20.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
scenario test should cleanup fabric containers afterwards,FGJ-13,38578,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,20/Mar/19 1:08 AM,20/Mar/19 1:56 AM,28/Oct/23 2:21 AM,20/Mar/19 1:56 AM,v2.0.0,v2.0.0,,0,,,,"hook into the pre- and post- integration-test maven phases to properly manage the

startup and shutdown of the fabric docker containers",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00grb:",,,,Unset,Unset,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"20/Mar/19 1:54 AM;andrew-coleman;https://gerrit.hyperledger.org/r/c/30231/;;;",,,,,,,,,,,,,,,
Change cucumber tests to use TLS network,FGJ-14,38750,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,26/Mar/19 10:57 PM,29/Apr/19 9:05 PM,28/Oct/23 2:21 AM,29/Apr/19 9:05 PM,v2.0.0,v2.0.0,,0,,,,,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00hr3:",,,,Unset,Unset,,,,,(Please add steps to reproduce),2.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"26/Mar/19 11:00 PM;andrew-coleman;https://gerrit.hyperledger.org/r/c/30414/;;;",,,,,,,,,,,,,,,
"As an application developer using the gateway SDK, I want to utilize 'service discovery' to discover endorsing peers",FGJ-15,38794,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,27/Mar/19 6:57 PM,02/May/19 5:31 PM,28/Oct/23 2:21 AM,02/May/19 5:31 PM,v2.0.0,v2.0.0,,0,,,,"Implement gateway option to enable/disable service discovery (default is enabled)

Unit tests and scenario test",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00i07:",,,,Unset,Unset,,,,,(Please add steps to reproduce),3.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"29/Apr/19 9:04 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/31123/];;;",,,,,,,,,,,,,,,
Maven tests fail consistently due to java.lang Assertion Error,FGJ-16,39426,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Low,Invalid: Works as Expected,,sambhavdutt,sambhavdutt,22/Apr/19 2:12 AM,16/Jul/19 9:42 PM,28/Oct/23 2:21 AM,16/Jul/19 9:42 PM,,,,0,ci-failure,,,"There have been consistent fails observed during _mvn install_  java.lang Asserion error has been observed in all fails.

*Branch:* master
*Platform:* x86_64
*Error Snippet:*

{code:java}
00:02:27.110 [INFO] --- maven-surefire-plugin:2.22.1:test (setup) @ fabric-gateway-java ---
00:02:27.110 [INFO] 
00:02:27.110 [INFO] -------------------------------------------------------
00:02:27.110 [INFO]  T E S T S
00:02:27.110 [INFO] -------------------------------------------------------
00:02:27.372 [INFO] Running scenario.SetupScenarioTest
00:02:35.492 [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 6.716 s <<< FAILURE! - in scenario.SetupScenarioTest
00:02:35.492 [ERROR] startFabric  Time elapsed: 6.709 s  <<< FAILURE!
00:02:35.492 java.lang.AssertionError: expected:<1> but was:<0>
00:02:35.492 	at scenario.SetupScenarioTest.startFabric(SetupScenarioTest.java:9)
00:02:35.492 
00:02:35.492 [INFO] 
00:02:35.492 [INFO] Results:
00:02:35.492 [INFO] 
00:02:35.492 [ERROR] Failures: 
00:02:35.492 [ERROR]   SetupScenarioTest.startFabric:9 expected:<1> but was:<0>
00:02:35.492 [INFO] 
00:02:35.492 [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0
00:02:35.492 [INFO] 
00:02:35.492 [INFO] ------------------------------------------------------------------------
00:02:35.492 [INFO] BUILD FAILURE
00:02:35.492 [INFO] ------------------------------------------------------------------------
00:02:35.492 [INFO] Total time: 28.971 s
00:02:35.492 [INFO] Finished at: 2019-04-21T16:14:05Z
00:02:35.492 [INFO] ------------------------------------------------------------------------
00:02:35.492 [ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.1:test (setup) on project fabric-gateway-java: There are test failures.
00:02:35.492 [ERROR] 
00:02:35.492 [ERROR] Please refer to /w/workspace/fabric-gateway-java-merge-x86_64/gopath/src/github.com/hyperledger/fabric-gateway-java/target/surefire-reports for the individual test results.
00:02:35.492 [ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
00:02:35.492 [ERROR] -> [Help 1]
00:02:35.492 [ERROR] 
00:02:35.492 [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
00:02:35.492 [ERROR] Re-run Maven using the -X switch to enable full debug logging.
{code}

*Build Log*

https://jenkins.hyperledger.org/sandbox/me/my-views/view/all/job/fabric-gateway-java-merge-x86_64/1/consoleFull",,andrew-coleman,bestbeforetoday,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,c09495ad06463b21585a83bd64c2eee0395b5b81,Unset,No,,,"1|i00ln3:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,sambhavdutt,,,,,,,,,,,,,,,,,,"16/Jul/19 9:42 PM;bestbeforetoday;I am currently seeing both verification and merge builds passing successfully so I think this problem is resolved. Please reopen if it is still an issue.;;;",,,,,,,,,,,,,,,
Modify Jenkinsfile for merge job,FGJ-17,39578,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,02/May/19 2:34 AM,10/May/19 5:45 AM,28/Oct/23 2:21 AM,10/May/19 5:45 AM,,,,0,ci-failure,,,Modify Jenkinsfile to disable the jar file publish. This is a temporary change until the configuration is set in Jenkins to publish jar files.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00me7:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
submitTransaction: chaincode error message not included in GatewayException,FGJ-18,39748,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,10/May/19 12:11 AM,14/May/19 7:52 PM,28/Oct/23 2:21 AM,14/May/19 7:52 PM,v2.0.0,v2.0.0,,0,,,,"If a chaincode function returns an error response, then the error message doesn't get included in the Gateway exception.  Instead, you just get a generic 'no valid responses received' message.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00ncv:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"14/May/19 7:52 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/31301/];;;",,,,,,,,,,,,,,,
Support YAML format of CCP file,FGJ-19,39805,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,14/May/19 7:41 PM,14/May/19 11:15 PM,28/Oct/23 2:21 AM,14/May/19 11:15 PM,v2.0.0,v2.0.0,,0,,,,"The Builder.networkConfig() method takes a path to a CCP file.  Currently only the JSON format is supported.

This task extends it to support YAML format.  It should automatically detect the format and parse it accordingly.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00nov:",,,,Unset,Unset,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"14/May/19 7:50 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/31356/];;;",,,,,,,,,,,,,,,
Create wallet identities from PEM files,FGJ-20,39809,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,14/May/19 11:13 PM,15/May/19 6:12 AM,28/Oct/23 2:21 AM,15/May/19 6:12 AM,v2.0.0,v2.0.0,,0,,,,"Simplify the creation of wallet identities by overloading the Wallet.Identity.createIdentity() method with a version that takes java.io.Reader parameters for the cert and private key PEMs.

This allows PEMs to be read directly from the filesystem or other storage without the user having to read and parse the contents of the files.",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00npr:",,,,Unset,Unset,,,,,(Please add steps to reproduce),1.0,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"14/May/19 11:15 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/31362/];;;",,,,,,,,,,,,,,,
Path errors in CI publish scripts,FGJ-21,39820,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,andrew-coleman,andrew-coleman,15/May/19 5:22 PM,03/Jul/19 12:52 AM,28/Oct/23 2:21 AM,03/Jul/19 12:52 AM,v2.0.0,v2.0.0,,0,,,,Path fixes are required for publication scripts for Javadoc and Nexus,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00nrz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Modify the Nexus publish CI script,FGJ-22,40136,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,sambhavdutt,sambhavdutt,sambhavdutt,25/May/19 12:50 AM,14/Jun/19 3:39 AM,28/Oct/23 2:21 AM,14/Jun/19 3:39 AM,,,,0,,,,Modify the publish script to publish gateway-javadoc and gateway jar artifact to Nexus.,,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00p78:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,sambhavdutt,,,,,,,,dev,main,,,,,,,,,true,"14/Jun/19 3:35 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/fabric-gateway-java/+/31536/;;;","14/Jun/19 3:39 AM;rameshthoomu;I am not sure why to modify the CI script.. I don't see any information in the description or in the summary.

Observed errors while CI job is trying to publish fabric-gateway-java aritifacts to nexus snapshot url. After debugging the issue, it came to know that the credentials were configured in nexus3 but the CI script is trying to publish jar's to nexus2. With Tim Jhonson help, created credentials in nexus2 and updated the script to publish.;;;",,,,,,,,,,,,,,
Use peer organization information from channel,FGJ-23,40386,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,04/Jun/19 11:27 PM,05/Jun/19 9:48 PM,28/Oct/23 2:21 AM,05/Jun/19 9:48 PM,,,,0,,,,"Make use of new methods added to Channel to expose peer organization information, and remove the peer organization tracking code in the Network implementation.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,FABJ-434,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00cgd:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Update the CI scripts for gateway-java,FGJ-24,40450,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,sambhavdutt,sambhavdutt,sambhavdutt,07/Jun/19 1:45 AM,05/Oct/19 2:05 AM,28/Oct/23 2:21 AM,05/Oct/19 2:05 AM,,,,0,,,,Update the CI scripts for gateway-java job. Theseare minor changes and will not affect the existing tests.,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00qrw:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sambhavdutt,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Update Publish doc CI scripts,FGJ-26,40576,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,rameshthoomu,rameshthoomu,rameshthoomu,14/Jun/19 3:17 AM,14/Jun/19 5:26 PM,28/Oct/23 2:21 AM,14/Jun/19 5:26 PM,,,,0,,,,Update GH credential Variable Names in Jenkinsfile and publish API docs CI script. These variables Name are configured in Jenkins global configuration.,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rfg:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),rameshthoomu,,,,,,,,,dev,main,,,,,,,,,true,"14/Jun/19 3:42 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/fabric-gateway-java/+/31901/;;;",,,,,,,,,,,,,,,
CI scripts do not LF standards,FGJ-27,40601,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,vijaypunugubati,tijohnson,tijohnson,17/Jun/19 11:45 AM,05/Oct/19 2:24 AM,28/Oct/23 2:21 AM,05/Oct/19 2:24 AM,,,,0,,,,They need clean up' to meet formatting standards. They do now use standard bash arguments (-eu -o pipeline). At least one script contains references to '$?' when 'e' is set (they are incmpatible). Have me review the changes before they are merged.,,bestbeforetoday,tijohnson,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00rkc:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,tijohnson,vijaypunugubati,,,,,,,,,,,,,,,,,,"05/Oct/19 2:10 AM;bestbeforetoday;Are we planning to do anything with this issue or can it be closed?

Close it;;;","05/Oct/19 2:23 AM;vijaypunugubati;As we are migrating to the new CI tool and build process, the existing CI scripts don't need to be modified. Closing the issue to be won't do.;;;",,,,,,,,,,,,,,
Support CCPs with no channel information when discovery is enabled,FGJ-28,40878,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,03/Jul/19 12:54 AM,03/Jul/19 6:08 PM,28/Oct/23 2:21 AM,03/Jul/19 6:08 PM,,,,0,,,,,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00t0s:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"03/Jul/19 6:08 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-gateway-java/+/32161];;;",,,,,,,,,,,,,,,
Add LICENCE file etc,FGJ-29,40900,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,03/Jul/19 6:10 PM,23/Jul/19 9:43 PM,28/Oct/23 2:21 AM,23/Jul/19 9:43 PM,,,,0,,,,"Add the following files to the repo:

LICENCE

CODE_OF_CONDUCT.md

CONTRIBUTING.md

MAINTAINERS.md",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-1,,,No,,Unset,No,,,"1|i00t5o:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,"03/Jul/19 6:11 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-gateway-java/+/32174];;;",,,,,,,,,,,,,,,
fabric-gateway-java artifact publishing,FGJ-30,40977,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,jtonline,jtonline,10/Jul/19 11:39 PM,05/Oct/19 2:00 AM,28/Oct/23 2:21 AM,05/Oct/19 2:00 AM,,,,0,,,,fabric-gateway-java currently has a group ID of org.hyperledger.fabric and an artifact ID of fabric-gateway-java (which is good) however it seems to be being published to nexus.hyperledger.org in the wrong location (as if the group ID is org.hyperledger.fabric-gateway-java),,heatherp,jtonline,vijaypunugubati,,,,,,,,,,,,,,,,,,,,,,,"30/Jul/19 9:04 PM;jtonline;image-2019-07-30-13-03-59-946.png;https://jira.hyperledger.org/secure/attachment/17632/image-2019-07-30-13-03-59-946.png",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00tlw:",,,,Unset,Unset,,,,,"Add a fabric-gateway-java dependency where it is not available locally, e.g.

implementation 'org.hyperledger.fabric:fabric-gateway-java:1.4.0-SNAPSHOT'

",,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,jtonline,vijaypunugubati,,,,,,,dev,main,,,,,,,,,true,"26/Jul/19 6:27 PM;jtonline;Reopened to switch back to the right group ID once we have permission to publish there;;;","29/Jul/19 11:22 PM;heatherp;[~vijaypunugubati];;;","30/Jul/19 12:33 AM;vijaypunugubati;I think that's not possible while downloading the artifacts jenkins use the metadata.xml file for the directory, which should be independent for the projects fabric, gateway-java, cc-java.

 

This project doesn't have the 1.4 branch but why the version is 1.4.0;;;","30/Jul/19 1:38 AM;jtonline;Hi,

I'm not sure what you are saying is not possible? If it's really not possible to publish several jars with different artifact IDs from different projects using the same group ID (which sounds pretty odd to me), it would be better to use subgroups than completely different group IDs, i.e.
 * org.hyperledger.fabric.chaincode:fabric-chaincode-java
 * org.hyperledger.fabric.gateway:fabric-gateway-java
 * org.hyperledger.fabric.sdk:fabric-sdk-java;;;","30/Jul/19 3:37 AM;vijaypunugubati;you are suggesting to keep these folders https://nexus.hyperledger.org/content/repositories/snapshots/org/hyperledger/

inside `org/hyperledger/fabric` right. Then the nexus link will be like the below
may i know particular reason for this suggestion to keep common groupID

https://nexus.hyperledger.org/content/repositories/snapshots/org/hyperledger/fabric/fabric

[https://nexus.hyperledger.org/content/repositories/snapshots/org/hyperledger/fabric/fabric-gateway-java]

[https://nexus.hyperledger.org/content/repositories/snapshots/org/hyperledger/fabric/fabric-chaincode-java|https://nexus.hyperledger.org/content/repositories/snapshots/org/hyperledger/fabric/fabric-gateway-java]

There are multiple scripts have to be changed in CI for this change while getting artifacts.

 ;;;","30/Jul/19 9:07 PM;jtonline;We would prefer something like sawtooth, which has the following...

!image-2019-07-30-13-03-59-946.png!

i.e. several artifacts under the same group ID. I notice that they don't appear to be using the nexus repository, so perhaps it's just that that's introducing the restriction on one artifact per group ID? The sdk currently uses oss.sonatype.org for snapshots anyway, so perhaps it would be better to move everything there instead. Do you know who has access to that repository?

 ;;;",,,,,,,,,,
Specify network config as a stream,FGJ-31,41230,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,,bestbeforetoday,bestbeforetoday,16/Jul/19 9:49 PM,18/Jul/19 12:45 AM,28/Oct/23 2:21 AM,18/Jul/19 12:45 AM,,,,0,,,,"*As a* client application developer
*I want* to specify the gateway's network configuration as an input stream
*So that* I can use the gateway with a network configuration that is not in a file on the filesystem",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00u2s:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Support for Peer/Org targetting,FGJ-32,41249,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,davidkel,davidkel,17/Jul/19 5:17 PM,13/Aug/19 9:13 PM,28/Oct/23 2:21 AM,13/Aug/19 9:09 PM,,v2.0.0,,0,,,,"When using Private Data Collections there is a requirement to send proposals containing private data only to orgs that are part of the private data collection. If it were sent to all orgs then there is the potential for orgs not part of the PDC to have visibility of that data (even if it is in the transientMap) and the level of trust may not extend to hoping that org doesn't try to capture this information.

When a submit is made it should be possible to list the orgs that should only receive this data or discovery should be enhanced to capture private data collections so the decision can be made automatically. ",,bestbeforetoday,davidkel,,,,,,,,,,,,,,,,,,,,,,,FABN-1344,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00u6k:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,davidkel,,,,,,,,dev,main,,,,,,,,,true,"26/Jul/19 1:29 AM;bestbeforetoday;I think there may be similar requirements related to state-based endorsement, where the client may want to specify certain organisations (or a number of peers within those organisations) to endorse a given proposal.

I was thinking of allowing the endorsing peers to be specified on the Transaction object prior to calling submit(). No magic but it at least provides the tools for the client application code to dictate how endorsement is done. What do you think?;;;",,,,,,,,,,,,,,,
Java sdk should mimic node asLocalHost functionality,FGJ-33,41255,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,heatherp,heatherp,17/Jul/19 8:17 PM,15/Jan/20 2:05 AM,28/Oct/23 2:21 AM,15/Jan/20 2:05 AM,,,,1,sdk-triaged,,,"When attempting to submit a transaction through a client app using the java sdk, I see:
{noformat}
Caused by: org.hyperledger.fabric.sdk.exception.TransactionException: Channel mychannel, send transaction failed on orderer OrdererClient{id: 14, channel: mychannel, name: orderer.example.com:17053, url: grpcs://orderer.example.com:17053}. Reason: UNAVAILABLE: Unable to resolve host orderer.example.com{noformat}
Because I don't have `order.example.com` specified in `/etc/hosts`, nor orderer specified in my connection profile, and there's no option to set `asLocalHost` as there is with node.

I think this needs some thought/discussion if we don't want to provide the same `asLocalHost` functionality available in node. i.e. some docs to explain the setup needed, or a better explained error message?

If the answer is to have orderer specified in the connection profile, then this shouldn't be closed until I've raised an issue with the vscode extension, to ensure they specify the orderer in the local_fabric connection profile, as and when they properly support the new programming model in java

 ",,andrew-coleman,heatherp,rolivieri,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00u7w:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,heatherp,rolivieri,,,,,,,dev,main,,,,,,,,,true,"17/Jul/19 9:32 PM;heatherp;1) I can get it to work if I specify both orderers and channels in my connection profile
2) if I specify single peer, ca and orderer in /etc/hosts, and add a `builder.discovery(true);` line to my app, I get an endorsement policy failure, which I guess could be local_fabric (vscode extension network) related;;;","08/Oct/19 6:13 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-sdk-java/+/33886]

 

The fix provides a new environment variable to translate discovered endpoints to localhost:
{code}
export ORG_HYPERLEDGER_FABRIC_SDK_SERVICE_DISCOVERY_AS_LOCALHOST=true{code};;;","22/Oct/19 6:22 PM;heatherp;needs java docs updates before it can be closed;;;",,,,,,,,,,,,,
Testing only JARs on runtime build path,FGJ-34,41353,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,sstone1,sstone1,22/Jul/19 11:33 PM,26/Jul/19 9:17 PM,28/Oct/23 2:21 AM,26/Jul/19 9:17 PM,,,,0,,,,"The runtime dependencies of the Fabric Gateway Java project, according to Maven, are:

{code}
animal-sniffer-annotations-1.17.jar			fabric-gateway-java-1.4.0-SNAPSHOT.jar			jaxb-api-2.2.11.jar					netty-common-4.1.32.Final.jar
apache-log4j-extras-1.2.17.jar				fabric-sdk-java-1.4.5-SNAPSHOT.jar			jsr305-3.0.2.jar					netty-handler-4.1.32.Final.jar
apiguardian-api-1.0.0.jar				grpc-context-1.17.1.jar					junit-4.12.jar						netty-handler-proxy-4.1.30.Final.jar
bcpkix-jdk15on-1.60.jar					grpc-core-1.17.1.jar					junit-platform-commons-1.4.2.jar			netty-resolver-4.1.32.Final.jar
bcprov-jdk15on-1.60.jar					grpc-netty-1.17.1.jar					junit-platform-engine-1.4.2.jar				netty-tcnative-boringssl-static-2.0.20.Final.jar
byte-buddy-1.9.7.jar					grpc-protobuf-1.17.1.jar				junit-platform-launcher-1.4.2.jar			netty-transport-4.1.32.Final.jar
byte-buddy-agent-1.9.7.jar				grpc-protobuf-lite-1.17.1.jar				junit-vintage-engine-5.4.2.jar				objenesis-2.6.jar
checker-compat-qual-2.5.2.jar				grpc-stub-1.17.1.jar					log4j-1.2.17.jar					opencensus-api-0.17.0.jar
commons-cli-1.4.jar					gson-2.7.jar						milagro-crypto-java-0.4.0.jar				opencensus-contrib-grpc-metrics-0.17.0.jar
commons-codec-1.10.jar					guava-26.0-android.jar					mockito-core-2.24.0.jar					opentest4j-1.1.1.jar
commons-compress-1.18.jar				hamcrest-core-1.3.jar					netty-buffer-4.1.32.Final.jar				proto-google-common-protos-1.0.0.jar
commons-io-2.6.jar					httpclient-4.5.6.jar					netty-codec-4.1.32.Final.jar				protobuf-java-3.6.1.jar
commons-logging-1.2.jar					httpcore-4.4.10.jar					netty-codec-http-4.1.32.Final.jar			protobuf-java-util-3.6.1.jar
commons-math3-3.6.1.jar					j2objc-annotations-1.1.jar				netty-codec-http2-4.1.32.Final.jar			snakeyaml-1.23.jar
error_prone_annotations-2.2.0.jar			javax.json-1.1.4.jar					netty-codec-socks-4.1.30.Final.jar
{code}

JUnit shouldn't be in this list - is it scoped correctly?",,sstone1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00uq4:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),sstone1,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Default query and commit handlers that work if client org has no peers,FGJ-35,41446,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,,bestbeforetoday,bestbeforetoday,26/Jul/19 9:53 PM,30/Sep/20 12:43 AM,28/Oct/23 2:21 AM,30/Sep/20 12:43 AM,,,,0,sdk-triaged,,,"*As a* client application developer
*I want* the default query and commit handlers to work if there are no peers in my client identity's organisation
*So that* the initial development experience is as simple as possible and works for all client scenarios

The MSPID_SCOPE_ALL_FOR_TX commit handler and MSPID_SCOPE_SINGLE query handlers fail if the client identity's organisation does not have any peers. Propose adding new default handlers that:
 * If the client's organisation has peers, behave as the existing defaults;
 * Otherwise, use all network peers (e.g. NETWORK_SCOPE_ALL_FOR_TX).",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6z:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,"30/Sep/20 12:43 AM;bestbeforetoday;Resolved by PR: https://github.com/hyperledger/fabric-gateway-java/pull/64;;;",,,,,,,,,,,,,,,
Disconnection from fabric could occur,FGJ-36,41744,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,davidkel,davidkel,13/Aug/19 1:24 AM,30/Aug/19 12:54 AM,28/Oct/23 2:21 AM,30/Aug/19 12:54 AM,,,,0,,,,"In the Node SDK to ensure that unexpected disconnection doesn't occur you would set the following grpc properties (reasonable values also provided)
{noformat}
""grpcOptions"": {
""grpc.keepalive_time_ms"": 120000,
""grpc.http2.min_time_between_pings_ms"": 120000,
""grpc.keepalive_timeout_ms"": 20000,
""grpc.http2.max_pings_without_data"": 0,
""grpc.keepalive_permit_without_calls"": 1
},
{noformat}

for fabric-gateway java, similar grpc options may be required to ensure connection isn't lost as described here
https://github.com/hyperledger/fabric-sdk-java/#firewalls-load-balancers-network-proxies
these properties may need to be set for discovered peers/orderers as well somehow as it won't be enough just to set it on the peer used for channel discovery.",,andrew-coleman,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wqz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,davidkel,,,,,,,,dev,main,,,,,,,,,true,"20/Aug/19 9:58 PM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-sdk-java/+/33039];;;",,,,,,,,,,,,,,,
No error reported for getNetwork when discovery false,FGJ-37,41756,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,ibmmqmet,ibmmqmet,13/Aug/19 5:42 PM,20/Nov/20 12:49 AM,28/Oct/23 2:21 AM,20/Nov/20 12:49 AM,,,,0,external,sdk-triaged,,"When an unknown channel is given to gateway.getNetwork() it seems to go on to create the channel and is then continually polling it even though gateway.discovery was set to false.

I was expecting an error that I could in turn report.

Using latest version from github

 ",,ibmmqmet,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wtn:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ibmmqmet,lesleyannj,,,,,,,,,,,,,,,,,,,"20/Nov/20 12:49 AM;lesleyannj;Closing - intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
NPE submitting transaction when discovery=true,FGJ-38,41757,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,ibmmqmet,ibmmqmet,13/Aug/19 5:49 PM,17/Oct/19 8:52 PM,28/Oct/23 2:21 AM,02/Oct/19 6:54 PM,,,,1,,,,"I caught this NPE submitting a transaction. The gateway builder discovery is set true. It works OK when discovery=false (the channel is known in the config file).

Caused by: java.lang.NullPointerException
 at org.hyperledger.fabric.sdk.Channel.sendTransactionProposalToEndorsers(Channel.java:3990)
 at org.hyperledger.fabric.gateway.impl.TransactionImpl.submit(TransactionImpl.java:90)
 at org.hyperledger.fabric.gateway.impl.ContractImpl.submitTransaction(ContractImpl.java:50)
 at com.ibm.mq.runmqbcb.bc.BCGateway.bcInvoke(BCGateway.java:297)

 

Debug trace isn't showing anything particularly useful before that point.",,andrew-coleman,ibmmqmet,yuriiuhlanov,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00wtv:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,ibmmqmet,yuriiuhlanov,,,,,,,dev,main,,,,,,,,,true,"29/Aug/19 9:01 PM;yuriiuhlanov;Also encountered that issue. Despite documentation omits it, there is the fifth role of a peer, that you want to add to start using the peer in discovery. This is: 

*discover: true*

**I will open an issue to add it to the docs. 

So your channels section of connection profile file could look like this:

channels:
  my-channel:
    orderers:
      - orderer1-org1
    peers:
      peer1-org1:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
        *discover: true*;;;","29/Aug/19 9:13 PM;ibmmqmet;Documentation is one thing but this Gateway SDK should either reject the request if it's not properly configured with an appropriate diagnostic, or trap the NPE to return an exception, or the underlying Fabric SDK should return an exception that propagates upwards. 

 ;;;","29/Aug/19 9:23 PM;yuriiuhlanov;Fair point. Will you raise the issue regarding that? I suspect, there might multiple problems occur if the configuration is not complete enough.

My [subtask|https://jira.hyperledger.org/browse/FGJ-42] is ready, you can see it =);;;","21/Sep/19 12:11 AM;andrew-coleman;[https://gerrit.hyperledger.org/r/c/fabric-sdk-java/+/33634];;;",,,,,,,,,,,,
suggested improvements to wallet interface,FGJ-39,41791,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,davidkel,davidkel,14/Aug/19 7:41 PM,23/Sep/19 7:07 PM,28/Oct/23 2:21 AM,23/Sep/19 7:07 PM,,,,0,,,,"In the following code
{code}
		/**
		 * Get the user's private key
		 *
		 * @return private key.
		 */
		PrivateKey getPrivateKey();

		/**
		 * Creates an identity suitable for storing in a Wallet.
		 * @param mspId The MSPID associated with the identity
		 * @param certificate The public certificate PEM
		 * @param privateKey The private key
		 * @return the identity
		 */
		static Identity createIdentity(String mspId, String certificate, PrivateKey privateKey) {
			return new WalletIdentity(mspId, certificate, privateKey);
		}
{code}
The createIdentity method seems odd to have a String for a cert and an object for a private key. Given Fabric interaction using pem formats for both when importing/exporting and also storing in the MSP structure, I don't think this method makes sense. 
This may also apply to the getPrivateKey method as well but not sure but thought I would mention it.",,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00x0r:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Network configuration error not reported at correct level,FGJ-40,41792,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,ibmmqmet,ibmmqmet,14/Aug/19 8:12 PM,20/Nov/20 12:49 AM,28/Oct/23 2:21 AM,20/Nov/20 12:49 AM,,,,1,external,sdk-triaged,,"I had a connection.json with some missing components. When trying to access the server, there was a failure. It was only by turning on info level logging that I found the problem:

2019-08-14 01:52:15.016 PDT [INFO] NetworkConfig.reconstructChannel: Processing peer peer0.org2.example.com
2019-08-14 01:52:15.017 PDT [INFO] Unable to load channel configuration from connection profile: Error constructing channel mychannel. Peer peer0.org2.example.com not defined in configuration

 

That message, from GatewayImpl ought to be at least a warning level so I can report it without needing to always have INFO level enabled.",,ibmmqmet,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v74:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),ibmmqmet,lesleyannj,,,,,,,,,,,,,,,,,,,"20/Nov/20 12:49 AM;lesleyannj;Closing - intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
Duplicate mount points when building the project,FGJ-41,41883,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,,oborovyk,oborovyk,20/Aug/19 1:51 AM,02/Oct/19 6:35 PM,28/Oct/23 2:21 AM,02/Oct/19 6:35 PM,,,,1,,,,"Docker is failing inside  SetupScenarioTest after Starting Fabric
{code:java}
// docker-compose -f src/test/fixtures/docker-compose/docker-compose-tls.yaml -p node up 
WARNING: The DOCKER_IMG_TAG variable is not set. Defaulting to a blank string.
WARNING: The DOCKER_DEBUG variable is not set. Defaulting to a blank string.
WARNING: The THIRDPARTY_IMG_TAG variable is not set. Defaulting to a blank string.
ERROR: Duplicate mount points: [/Users/user/development/fabric-gateway-java/src/test/fixtures/crypto-material:/etc/hyperledger/config:rw, /Users/user/development/fabric-gateway-java/src/test/fixtures/crypto-material:/etc/hyperledger/config:rw]
{code}
System Version: macOS 10.14.6 (18G87)

docker-compose version 1.24.1, build 4667896b

Works fine with docker-compose < 1.20

Docker info
{code:java}
// Client: Docker Engine - Community
 Version:           19.03.1
 API version:       1.40
 Go version:        go1.12.5
 Git commit:        74b1e89
 Built:             Thu Jul 25 21:18:17 2019
 OS/Arch:           darwin/amd64
 Experimental:      falseServer: Docker Engine - Community
 Engine:
  Version:          19.03.1
  API version:      1.40 (minimum version 1.12)
  Go version:       go1.12.5
  Git commit:       74b1e89
  Built:            Thu Jul 25 21:17:52 2019
  OS/Arch:          linux/amd64
  Experimental:     true
 containerd:
  Version:          v1.2.6
  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb
 runc:
  Version:          1.0.0-rc8
  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683{code}",,andrew-coleman,oborovyk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00xgr:",,,,Unset,Unset,,,,,Launch mvn install in the project root folder,,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,oborovyk,,,,,,,,dev,main,,,,,,,,,true,"02/Oct/19 6:35 PM;andrew-coleman;resolved by [https://gerrit.hyperledger.org/r/c/fabric-gateway-java/+/33830];;;",,,,,,,,,,,,,,,
Thread is blocked for 3 seconds times eventing peers during each submit,FGJ-43,42125,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,yuriiuhlanov,yuriiuhlanov,30/Aug/19 1:48 AM,20/Nov/20 12:39 AM,28/Oct/23 2:21 AM,20/Nov/20 12:39 AM,,,,1,external,sdk-triaged,,"[here|https://github.com/hyperledger/fabric-gateway-java/blob/master/src/main/java/org/hyperledger/fabric/gateway/impl/NetworkImpl.java#L180] channel shutdown is called with argument force=false that leads to [the thread being blocked for 3 seconds|[https://github.com/hyperledger/fabric-sdk-java/blob/8044bac1bfe9baf9d6360b067e0d6b5445cc953d/src/main/java/org/hyperledger/fabric/sdk/PeerEventServiceClient.java#L142]] each time an eventing peer is shut down.

 

logs:
{code:java}
2019-08-29 12:33:29.880 TRACE 15 --- [pool-5-thread-1] org.hyperledger.fabric.sdk.Channel       : Sending block event 'Channel my-channel eventqueue got block event with block number: 3 for channel: my-channel, from Peer{ id: 19, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP}' to block listener BLOCK_LISTENER_HANDLEa5f477f1-0feb-43c6-9921-8d4ed7c3318eBLOCK_LISTENER_HANDLE
2019-08-29 12:33:29.881 TRACE 15 --- [nio-9090-exec-3] o.h.fabric.sdk.ServiceDiscovery          : Service discovery shutdown.
2019-08-29 12:33:29.881 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Channel       : RemovePeerInternal Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} from channel Channel{id: 14, name: my-channel}
2019-08-29 12:33:29.881 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Channel       : Channel my-channel removing mapping peer Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} to mspid org1MSP
2019-08-29 12:33:29.881 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Peer          : Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} unset Channel{id: 14, name: my-channel}
2019-08-29 12:33:29.881 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Peer          : Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} is shutting down.
2019-08-29 12:33:29.881 TRACE 15 --- [nio-9090-exec-3] o.hyperledger.fabric.sdk.EndorserClient  : EndorserClient{id: 18, channel: my-channel, name:peer1-org1, url: grpcs://peer1-org1:7051} grpc channel isActive: true, isShutdown: false, isTerminated: false, state: READY 
2019-08-29 12:33:29.882 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Peer          : Peer Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} removing endorser client EndorserClient{id: 18, channel: my-channel, name:peer1-org1, url: grpcs://peer1-org1:7051}, isActive: true
2019-08-29 12:33:29.882 TRACE 15 --- [nio-9090-exec-3] o.hyperledger.fabric.sdk.EndorserClient  : EndorserClient{id: 18, channel: my-channel, name:peer1-org1, url: grpcs://peer1-org1:7051} shutdown called force: false, shutdown: false, managedChannel: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=25, target=peer1-org1:7051}}
2019-08-29 12:33:29.884 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Peer          : Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} is shutting down PeerEventServiceClient{id: 23, channel: my-channel, peerName: peer1-org1, url: grpcs://peer1-org1:7051}
2019-08-29 12:33:29.884 DEBUG 15 --- [nio-9090-exec-3] o.h.fabric.sdk.PeerEventServiceClient    : PeerEventServiceClient{id: 23, channel: my-channel, peerName: peer1-org1, url: grpcs://peer1-org1:7051} is shutting down.
2019-08-29 12:33:29.884 DEBUG 15 --- [nio-9090-exec-3] o.h.fabric.sdk.PeerEventServiceClient    : DeliverResponse onCompleted PeerEventServiceClient{id: 23, channel: my-channel, peerName: peer1-org1, url: grpcs://peer1-org1:7051} setting done.
2019-08-29 12:33:32.885 DEBUG 15 --- [nio-9090-exec-3] o.h.fabric.sdk.PeerEventServiceClient    : PeerEventServiceClient{id: 23, channel: my-channel, peerName: peer1-org1, url: grpcs://peer1-org1:7051} is down.
2019-08-29 12:33:32.885 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Peer          : Peer{ id: 17, name: peer1-org1, channelName: my-channel, url: grpcs://peer1-org1:7051, mspid: org1MSP} is shut down.
2019-08-29 12:33:35.889 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Orderer       : Shutting down Orderer{id: 15, channelName: my-channel, name:orderer1-org1, url: grpcs://orderer1-org1:7050}
2019-08-29 12:33:35.889 TRACE 15 --- [nio-9090-exec-3] o.hyperledger.fabric.sdk.OrdererClient   : OrdererClient{id: 26, channel: my-channel, name: orderer1-org1, url: grpcs://orderer1-org1:7050} grpc channel isActive: true, isShutdown: false, isTerminated: false, state: READY 
2019-08-29 12:33:35.889 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Orderer       : Channel my-channel removing orderer client Orderer{id: 15, channelName: my-channel, name:orderer1-org1, url: grpcs://orderer1-org1:7050}, isActive: true
2019-08-29 12:33:35.889 TRACE 15 --- [nio-9090-exec-3] o.hyperledger.fabric.sdk.OrdererClient   : OrdererClient{id: 26, channel: my-channel, name: orderer1-org1, url: grpcs://orderer1-org1:7050} shutdown called force: true, shutdown: false, managedChannel: ManagedChannelOrphanWrapper{delegate=ManagedChannelImpl{logId=45, target=orderer1-org1:7050}}
2019-08-29 12:33:35.890 DEBUG 15 --- [nio-9090-exec-3] org.hyperledger.fabric.sdk.Orderer       : Shutting down Orderer{id: 16, channelName: my-channel, name:orderer1-org2, url: grpcs://orderer1-org2:7050}
2019-08-29 12:33:35.890  INFO 15 --- [pool-5-thread-1] org.hyperledger.fabric.sdk.Channel       : Channel my-channel eventThread shutting down. shutdown: true  thread: pool-5-thread-1 
{code}
you can see a jump from 29 to 32 seconds in the middle. The other peer logs were removed for simplicity, but it added another 3 seconds from 32 to 35.

 

 ",,bestbeforetoday,rolivieri,yuriiuhlanov,,,,,,,,,,,,,,,,,,,FGJ-68,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6x:i",,,,Unset,Unset,,,,,"1. Run an app with at least one eventing peer.
2. Submit a transaction using Gateway",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,rolivieri,yuriiuhlanov,,,,,,,,,,,,,,,,,,"19/Sep/19 6:14 PM;bestbeforetoday;If the channel is being shutdown then this suggests that you are closing your Gateway after submitting a transaction. If you want to submit subsequent transactions (as the same identity) then you should be reusing the same Gateway, Network and Contract instances, and not closing the Gateway.;;;","19/Sep/19 11:45 PM;yuriiuhlanov;[~bestbeforetoday] The issue describes a 3-second delay during the channel shutdown and not the reason why anybody wants to do or not do to it. Please check it once again.;;;","20/Sep/19 1:19 AM;bestbeforetoday;Since the channel shutdown should only be happening when the client application is being shut down, a 3 second delay to allow connections to clean themselves up neatly doesn't seem like a show stopper to me. We could change the channel shutdown to be a forced shutdown but this doesn't seem clearly preferable.;;;","24/Sep/19 4:15 PM;yuriiuhlanov;[~bestbeforetoday] Now I get your point. Do you suggest to always keep channels open for each identity that signs transactions in an app?;;;","05/Oct/19 1:59 AM;bestbeforetoday;Yes, I suggest keeping the Gateway for each identity you are connecting with for the lifetime of the session of interaction with the Fabric network.;;;",,,,,,,,,,,
Method not readable - submitTransaction,FGJ-44,42165,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,paranjan,paranjan,03/Sep/19 1:27 AM,12/Nov/19 11:00 PM,28/Oct/23 2:21 AM,12/Nov/19 11:00 PM,,,,0,sdk-triaged,,,"Extracted sendResponseToOrderer() method to improve readability.

CR provided.",,bestbeforetoday,paranjan,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00z6b:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,paranjan,,,,,,,,,,,,,,,,,,,"03/Sep/19 2:38 AM;paranjan;CR Link: https://gerrit.hyperledger.org/r/c/fabric-gateway-java/+/33339;;;","12/Nov/19 11:00 PM;bestbeforetoday;The supplied code change was not in a form we were happy to merge and there has been no follow-up activity for a while so closing this issue. Feel free to reopen if you want to pursue this change.;;;",,,,,,,,,,,,,,
WalletTest Junit breaking,FGJ-45,42162,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,,paranjan,paranjan,02/Sep/19 7:31 PM,01/Oct/19 11:12 PM,28/Oct/23 2:21 AM,01/Oct/19 11:12 PM,,,,0,,,,"testGet() of WalletTest in fabric-gateway-java fails. I am using windows.

The failure happens as the Assert method is not able to compare strings with newlines.

Comparing certificates with isEqualToNormalizingNewlines() instead of isEqualTo() fixes the problem.

CR provided.

Screenshot of broken test:

 

!image-2019-09-02-16-01-37-063.png!

 ",,andrew-coleman,paranjan,,,,,,,,,,,,,,,,,,,,,,,,"02/Sep/19 7:31 PM;paranjan;image-2019-09-02-16-01-37-063.png;https://jira.hyperledger.org/secure/attachment/17747/image-2019-09-02-16-01-37-063.png",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00z5n:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,paranjan,,,,,,,,dev,main,,,,,,,,,true,"01/Oct/19 11:12 PM;andrew-coleman;resolved by [https://gerrit.hyperledger.org/r/c/fabric-gateway-java/+/33335];;;",,,,,,,,,,,,,,,
Prepare 1.4 release to maven,FGJ-46,42489,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,andrew-coleman,andrew-coleman,25/Sep/19 9:53 PM,03/Oct/19 12:18 AM,28/Oct/23 2:21 AM,03/Oct/19 12:18 AM,,,,0,,,,"Release 1.4.5 of fabric-sdk-java

Release 1.4.0 of fabric-gateway-java",,andrew-coleman,ibmmqmet,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010tf:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,ibmmqmet,,,,,,,,,,,,,,,,,,,"03/Oct/19 12:18 AM;andrew-coleman;Released

<dependency>
 <groupId>org.hyperledger.fabric</groupId>
 <artifactId>fabric-gateway-java</artifactId>
 <version>1.4.0</version>
</dependency>;;;",,,,,,,,,,,,,,,
Run the builds on Windows,FGJ-47,42510,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Won't Do,,davidkel,davidkel,26/Sep/19 10:16 PM,09/Oct/19 9:30 PM,28/Oct/23 2:21 AM,09/Oct/19 9:30 PM,,,,0,,,,With the imminent move to azure pipelines there is an opportunity to run the builds against more than just ubuntu/linux on intel. The first thought would be to run the builds on native windows,,davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i010wz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),davidkel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Move fabric-gateway-java to azure pipelines/github,FGJ-48,42521,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,heatherp,heatherp,27/Sep/19 7:32 PM,27/Nov/19 8:52 PM,28/Oct/23 2:21 AM,27/Nov/19 8:52 PM,v2.0.0,,,0,sdk-triaged,,,"* Migrate from jenkins to azure pipelines for CI
 * Move to Github pull requests for code changes
 * Ensure this move is circulated with maintainers where relevant
 * Move both release-1.4 and master
 * Update any contributing guidelines to explain how to contribute using these tools",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-52,,,No,,Unset,No,,,"1|i010zf:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dev,main,,,,,,,,,true,"27/Nov/19 8:52 PM;heatherp;I'm closing this, because we've done everything in the list above.
What we haven't done is enabled publishing via azure, which I've raised here: https://jira.hyperledger.org/browse/FGJ-64
That should include removing the Jenkinsfile completely, then jenkins/gerrit references can be truly dead;;;",,,,,,,,,,,,,,,
TLS credentials not set for peers found by service discovery,FGJ-49,42566,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,bestbeforetoday,bestbeforetoday,01/Oct/19 11:28 PM,20/Nov/20 12:50 AM,28/Oct/23 2:21 AM,20/Nov/20 12:50 AM,,,,1,sdk-triaged,,,The Gateway needs an option to specify the TLS identity (similar to the Node SDK). The TLS identity certificate and private key should be set as *clientCertBytes* and *clientCertBytes* properties set on created channels using *Channel.setServiceDiscoveryProperties()*.,,bestbeforetoday,dcrough13,lesleyannj,silliman,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0116r:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,dcrough13,lesleyannj,silliman,,,,,,,,,,,,,,,,,"20/Nov/20 12:50 AM;lesleyannj;Closing - intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
Publish v1.4.0 release of fabric-gateway-java,FGJ-50,42585,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Duplicate,andrew-coleman,andrew-coleman,andrew-coleman,02/Oct/19 7:19 PM,02/Oct/19 11:45 PM,28/Oct/23 2:21 AM,02/Oct/19 11:45 PM,,,,0,,,,,,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i011aj:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
FGJ merge build fails sporadically,FGJ-51,42588,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,andrew-coleman,andrew-coleman,02/Oct/19 9:49 PM,22/Oct/19 6:10 PM,28/Oct/23 2:21 AM,22/Oct/19 6:10 PM,,,,0,,,,"The fabric-gateway-java merge build fails about half the time - repeated remerge often sorts it out.

[https://jenkins.hyperledger.org/view/fabric-gateway-java/job/fabric-gateway-java-merge-x86_64/]

 

It fails with the following:
*13:15:33*  [ERROR] Submit transaction using MSPID_SCOPE_ALLFORTX commit handler  Time elapsed: 160.748 s  <<< FAILURE!*13:15:33*  java.lang.AssertionError: expected null, but was:<org.hyperledger.fabric.gateway.ContractException: transaction returned with failure: Error: MSPID_SCOPE_ALLFORTX does not exist>",,andrew-coleman,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-52,,,No,,Unset,No,,,"1|i011b7:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Improve java gateway/sdk testing,FGJ-52,42590,Epic,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,,heatherp,heatherp,02/Oct/19 10:09 PM,27/Nov/19 11:01 PM,28/Oct/23 2:21 AM,27/Nov/19 11:01 PM,v2.0.0,v2.0.0,,0,sdk-triaged,,,"Following from the recent build troubles that have been impacting us recently, we have had an initial session where we have tried to encapsulate current issues and outline possible solutions. Further sessions will involve conversations on everything below, and breaking down larger identified issues.
  
 *As-is Status*
 Builds
 - Unreliable (timeouts)
 - Difficult to determine point of failure (logging issue)
 - Too long to complete
 - Zero confidence in build result
 - Fabric build pulls and runs all sdk tests
  
  
 SDK (node/java)
 - e2e test failures obfuscated
  
  
 *Desired Status*
 Build
 - Reliable fast builds
  
  
 SDK
 - Common isolated testing
 - Focused and fast (to complete) tests",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,FAB-16790,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,ghx-label-10,,Improve java gateway/sdk testing,To Do,No,,Unset,No,,,"1|i011bn:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,"27/Nov/19 11:01 PM;heatherp;This epic was primarily to track work and possible improvements as a result of moving to azure pipelines for CI. There are some checkstyle/coverage/publishing issues that are still valid, and they are on the backlog so I've removed them from this epic and we'll get to them in due course, so closing this epic;;;",,,,,,,,,,,,,,,
Provide a subset of java gateway tests for fabric to run,FGJ-53,42592,Test Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Low,Invalid,,heatherp,heatherp,02/Oct/19 10:19 PM,27/Nov/19 10:51 PM,28/Oct/23 2:21 AM,27/Nov/19 10:51 PM,v2.0.0,v2.0.0,,0,sdk-triaged,,,"We need to agree on a subset of our cucumber tests to give to the fabric base repository, replacing the tests it currently runs.

Need to liaise with the integration refactoring going on in fabric currently too",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-52,,,No,,Unset,No,,,"1|i011c3:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,"05/Nov/19 1:17 AM;heatherp;This will be revisited when I've heard from the fabric test team on their plans to refactor fabric's integration test suite;;;","27/Nov/19 10:50 PM;heatherp;Closing this, because based on what I'm hearing from the interop test team, I don't think we need to provide them with a subset of tests to run. I can revisit it if that changes;;;",,,,,,,,,,,,,,
Add checkstyle to the build,FGJ-54,42594,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,heatherp,heatherp,02/Oct/19 10:23 PM,26/Oct/19 1:16 AM,28/Oct/23 2:21 AM,26/Oct/19 1:16 AM,,,,0,sdk-triaged,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,FGJ-52,,,No,,Unset,No,,,"1|i011cj:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
OrderedBlockEventSource.toString() needs synchronisation,FGJ-55,42686,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,09/Oct/19 6:16 PM,11/Oct/19 12:29 AM,28/Oct/23 2:21 AM,11/Oct/19 12:29 AM,,,,0,,,,"{noformat}
ScenarioSteps.java:356      java.util.ConcurrentModificationException at java.util.TreeMap$KeySpliterator.forEachRemaining(TreeMap.java:2757) at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566) at org.hyperledger.fabric.gateway.impl.event.OrderedBlockEventSource.toString(OrderedBlockEventSource.java:102) at java.lang.String.valueOf(String.java:2994) at java.lang.StringBuilder.append(StringBuilder.java:131) at org.hyperledger.fabric.gateway.impl.event.ReplayListenerSession.toString(ReplayListenerSession.java:80) at java.lang.String.valueOf(String.java:2994) at java.lang.StringBuilder.append(StringBuilder.java:131) at java.util.AbstractMap.toString(AbstractMap.java:559) at java.lang.String.valueOf(String.java:2994) at java.lang.StringBuilder.append(StringBuilder.java:131) at org.hyperledger.fabric.gateway.impl.NetworkImpl.toString(NetworkImpl.java:186) at java.lang.String.valueOf(String.java:2994) at java.lang.StringBuilder.append(StringBuilder.java:131) at scenario.ScenarioSteps.getBlockEvent(ScenarioSteps.java:508) at ✽.a block event should be received(classpath:scenario/Events.feature:40){noformat}
 ",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i011tf:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Use AssertJ in scenario tests,FGJ-56,42692,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Invalid,bestbeforetoday,bestbeforetoday,bestbeforetoday,10/Oct/19 12:43 AM,26/Oct/19 2:03 AM,28/Oct/23 2:21 AM,26/Oct/19 2:03 AM,,,,0,sdk-triaged,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i011ur:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,"26/Oct/19 2:03 AM;bestbeforetoday;Done.;;;",,,,,,,,,,,,,,,
Programmatic access to peer responses on failure to submit transaction,FGJ-57,42715,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,11/Oct/19 12:54 AM,20/Nov/19 8:01 PM,28/Oct/23 2:21 AM,20/Nov/19 8:01 PM,,,,2,sdk-triaged,,,"*As a* client application
 *I want* to access proposal responses on failure to submit a transaction
 *So that* I can more effectively diagnose and report failures

Several scenarios should be considered:
 # *Discovery disabled:* currently bad proposal response messages are logged and, if no successful responses are received, the response messages are included in the exception string returned.
 # *Discovery enabled:* currently a generic endorsement failure message is returned. The discovery option *inspectResult* should be set to *true* so that response messages are returned from the call to *sendTransactionProposalToEndorsers()*.
 # *Commit failure:* It would be useful to include proposal responses in the exception thrown as a result of the commit handler receiving an invalid commit event.",,bestbeforetoday,dcrough13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i011yz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,dcrough13,,,,,,,,dev,main,,,,,,,,,true,"11/Oct/19 1:17 AM;dcrough13;At minimum, equivalence with the functionality currently provided by fabric-sdk-java is desired. Thank you for opening this ticket!;;;","14/Nov/19 2:25 AM;bestbeforetoday;PR: [https://github.com/hyperledger/fabric-gateway-java/pull/12];;;","20/Nov/19 8:01 PM;bestbeforetoday;Release 1.4 PR: [https://github.com/hyperledger/fabric-gateway-java/pull/13];;;",,,,,,,,,,,,,
Ability to build a gateway without a wallet,FGJ-58,42727,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,mrudav.shukla,aatkddny,aatkddny,11/Oct/19 10:33 PM,24/Apr/20 2:32 AM,28/Oct/23 2:21 AM,11/Feb/20 7:24 PM,,,,0,external,sdk-triaged,,"As an organization that manages its own identities, the ability to create a gateway (using the gateway builder) and to add a user identity (whether as an Identity or as a User) to the builder without the overhead of creating a Wallet is desirable.

The current #identity method requires said wallet. 
Something that allows the Identity to be passed directly would be of use.",,aatkddny,bestbeforetoday,mrudav.shukla,,,,,,,,,,,,,,,,,,,,,,FABN-1546,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01217:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),aatkddny,bestbeforetoday,mrudav.shukla,,,,,,,dev,main,,,,,,,,,true,"14/Jan/20 7:31 PM;bestbeforetoday;For implementation, I suggest the following overload of the identity() method in Gateway.Builder (implemented in GatewayImpl.Builder):
{code:java}
public Builder identity(Identity identity);
{code}
Since currently only X509Identity is supported, I think this should be sufficient to allow the Gateway to be connected without the use of a wallet. If/when types are added that require configuration of an accompanying IdentityProvider (such as HsmX509Identity), an additional overload that allows both an Identity and an IdentityProvider to be specified will be required but no need to worry about this now.;;;","30/Jan/20 11:09 PM;mrudav.shukla;Hi [~bestbeforetoday], I am planning to implement this as follows:
 # Override the identity() method in the builder with the instance of Identity as the only parameter
 # Check for null and return appropriate message in the exception if it is null
 # Check if the provider for the identity type and return appropriate message in the exception if it is not an X509Identity
 # Initialize the identity for the builder and return the builder
 # Write respective tests in GatewayImpl

 

Please let me know if this approach sounds right. I will assign the ticket and start working accordingly.;;;","01/Feb/20 7:06 PM;bestbeforetoday;That approach sounds good to me;;;","01/Feb/20 7:21 PM;mrudav.shukla;Ok. Will start working on this.;;;","03/Feb/20 6:14 PM;mrudav.shukla;[~bestbeforetoday]: Done with code and unit tests. Shall I also write all the scenario tests for features such as Commit, Events, Discovery, etc without using Wallet identity?;;;","04/Feb/20 10:30 PM;bestbeforetoday;If you want to get your hands into the scenario tests then you could add one scenario to *FabCar.feature* that uses this method of adding an identity to submit and evaluate a transaction. If not then probably unit test similar to *GatewayBuilderTest.testBuilderWithWalletIdentity()* is sufficient for a change of this type.;;;","05/Feb/20 2:03 PM;mrudav.shukla;[~bestbeforetoday]: Created a PR: [https://github.com/hyperledger/fabric-gateway-java/pull/34];;;",,,,,,,,,
Simplified wallet structure,FGJ-59,42959,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,23/Oct/19 9:48 PM,09/Dec/20 12:48 AM,28/Oct/23 2:21 AM,14/Dec/19 12:51 AM,v2.0.0,v2.0.0,,0,sdk-triaged,,,"*As a* client application developer
*I want* a simple structure for both the wallet code and persistent data
*So that* I can easily develop new wallet implementations that are compatible across SDKs

Java equivalent of the simplified wallet implementation in v2.0 of the Node SDK, delivered in this story: https://jira.hyperledger.org/browse/FABN-1353

This is necessary for the v2.0 release of the Java SDK to maintain portability of wallets between Node and Java SDKs.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,FABN-1353,,FGJ-92,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012tn:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Add code coverage to the build,FGJ-60,42963,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,bestbeforetoday,bestbeforetoday,24/Oct/19 12:10 AM,19/Nov/20 7:24 PM,28/Oct/23 2:21 AM,19/Nov/20 7:24 PM,,,,0,sdk-triaged,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i012ub:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Mismatch in Gateway initialization json,FGJ-61,42998,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,aatkddny,aatkddny,25/Oct/19 10:29 PM,20/Nov/20 12:51 AM,28/Oct/23 2:21 AM,20/Nov/20 12:51 AM,,,,0,external,sdk-triaged,,"Arguably this could be attributed to IBP2 - so may be vendor specific and OOS.

The gateway builder requires network configuration json.
It then creates an HFClient and gets the network doing the Network#loadFromConfig... 

One can start then pulling networks (channels) and from there Contracts - which give you a view to the chaincode.

At least one implementation of the network configuration json is channel oriented - you get a different configuration per channel - rather than network oriented.

This means that one needs a Gateway per Channel rather than per Network.
That's not particularly scalable since the Gateway is already implemented by User and User may be a party to many channels.
",,aatkddny,andrew-coleman,heatherp,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6y:r",,,,Unset,Unset,,,,,"Needs IBP2 configuration. Compare network connection json for two channels with different parties.  
Unsure as to applicability vis-a-vis other vendors. Obviously manually created connection json doesn't suffer from this issue.",,Unset,,,,,,Unset,,Unset,,(Please add usage information),aatkddny,andrew-coleman,heatherp,lesleyannj,,,,,,,,,,,,,,,,,"12/Nov/19 10:40 PM;andrew-coleman;Not sure I fully understand this.  The network config doesn't require any channel information for this to work (as is the case with IBP2).  As a minimum, there needs to be information on the Org and at least one peer (the gateway peer) in order to invoke discovery.  From that it can access multiple network channels.

Please could you post your sample config json and client code that you believe demonstrates this problem?  Thanks.;;;","12/Nov/19 10:58 PM;aatkddny;It's pretty simple to understand. 
I'll use the IBP2 example since it's the one I'm having an issue with. 
You'll forgive me if I don't post real connection profiles on a public stage. 

Imagine a consortium with 4 orgs A,B,C,D and two channels I and J.
I has parties A,B,C and J has parties A,B,D

For simplicity we will consider only User X at org A. Extrapolate for the rest.
There exists two sets of returned channel config json for Org A. 
One for I listing peers for A,B,C and one for J with info for A,B,D. 

It used to be that you'd put all the consortium orgs into the network config and the channel piece would say which were members of this channel. Now only members of this channel are returned.  

As written, UserX needs two gateways if they want to interact with both I and J. 
One to interact with I and one to interact with J. There's no supplemental #loadFromNetworkConfig that I can find to add a second channel to the gateway.
This is going to lead to an unneeded proliferation of gateway objects when the client (HFClient) already supports multiple channels.


;;;","20/Nov/20 12:51 AM;lesleyannj;Closing - intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,
Checkstyle for test code,FGJ-62,43028,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Low,Won't Do,,bestbeforetoday,bestbeforetoday,29/Oct/19 7:51 PM,19/Nov/20 7:24 PM,28/Oct/23 2:21 AM,19/Nov/20 7:24 PM,,,,0,sdk-triaged,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0133f:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Release Fabric Gateway Java v1.4.1,FGJ-63,43210,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Highest,Done,andrew-coleman,heatherp,heatherp,07/Nov/19 7:09 PM,14/Nov/19 8:34 PM,28/Oct/23 2:21 AM,14/Nov/19 8:34 PM,,,,0,sdk-triaged,,,"Need to update the dependencies for MQ:


*netty-codec-http*  - MQ is currently at level *4.1.38*, ASOC recommendation is to update to ** netty *4.1.42* (see ** [*CVE-2019-16869*|https://nvd.nist.gov/vuln/detail/CVE-2019-16869])
 *commons_compress* - we are currently at Commons-Compress 1.18, ASOC recommends to update to version 1.19  (see [*CVE-2019-12402*|https://nvd.nist.gov/vuln/detail/CVE-2019-12402])
 
 *commons-codec* - MQ is currently at 1.11 (used by Blockchain) - however the details links to [+{color:#0000ff}https://issues.apache.org/jira/browse/CODEC-55{color}+] which says this may not be an issue for most usages after all.
 
bcpkix-jdk15on (and its dependency bcprov-jdk15on.jar)  - from 1.63 to 1.64
 jetty-util - from  9.3.25.v20180904 to 9.3.27.v20190418",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0142j:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable publishing using azure,FGJ-64,43482,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,heatherp,heatherp,27/Nov/19 8:51 PM,19/Nov/20 7:24 PM,28/Oct/23 2:21 AM,19/Nov/20 7:24 PM,v2.0.0,,,0,sdk-triaged,,,"We're not yet publishing using azure, and we should be.
This work should also include removing the Jenkinsfile completely, so it's clear our CI is run using azure",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6x:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Use 2.0 Fabric and Java SDK in master branch,FGJ-65,43496,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,andrew-coleman,bestbeforetoday,bestbeforetoday,30/Nov/19 12:59 AM,05/Dec/19 11:16 PM,28/Oct/23 2:21 AM,05/Dec/19 11:16 PM,v2.0.0,v2.0.0,,0,sdk-triaged,,,"Currently the master branch still depends on v1.4 of the low level Java SDK, and integration tests are run against latest (v1.4) Fabric images. The master branch should:
 # Depend on v2.0 of fabric-sdk-java.
 # Build should pull down v2 Fabric (particularly node/javaenv) images and run integration tests against these.",,andrew-coleman,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i015ij:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,bestbeforetoday,,,,,,,,dev,main,,,,,,,,,true,"05/Dec/19 11:16 PM;andrew-coleman;[https://github.com/hyperledger/fabric-gateway-java/pull/16];;;",,,,,,,,,,,,,,,
Publish API docs for multiple releases,FGJ-66,43688,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,13/Dec/19 1:54 AM,17/Dec/19 11:17 PM,28/Oct/23 2:21 AM,17/Dec/19 11:17 PM,,,,0,,,,"Currently the API documentation is published to [https://fabric-gateway-java.github.io/]

For consistency with other projects, it should now be published to [https://hyperledger.github.io/fabric-gateway-java]

API documentation must be published (to different sub-directories) for both release-1.4 and master branches.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0167n:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Relocate documentation,FGJ-67,43753,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,18/Dec/19 1:14 AM,18/Dec/19 8:51 PM,28/Oct/23 2:21 AM,18/Dec/19 8:51 PM,,v2.0.0,,0,,,,"API documentation was previously published to: [https://fabric-gateway-java.github.io/]

It is now published to: [https://hyperledger.github.io/fabric-gateway-java/]

To aid the transition to the new site and avoid people inadvertently continuing to use the old, outdated content:
 * Replace old site content with links to the new site.
 * Change all links (readthedocs, GitHub project README.md etc.) to point to the new site.",,bestbeforetoday,mastersingh24,,,,,,,,,,,,,,,,,,,,,FABN-1428,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016kj:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,mastersingh24,,,,,,,,mergify/bp/release-2.2/pr-4374,release-2.5,release-2.4,main,mergify/bp/release-2.2/pr-3750,mergify/bp/release-2.5/pr-3782,mergify/bp/release-2.4/pr-3646,,,,true,"18/Dec/19 8:51 PM;mastersingh24;[https://github.com/hyperledger/fabric/pull/434];;;",,,,,,,,,,,,,,,
Fabric sample ClientApp.java terminate too slow,FGJ-68,43769,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Duplicate,,Unicow,Unicow,19/Dec/19 7:29 AM,08/Jan/20 12:22 AM,28/Oct/23 2:21 AM,08/Jan/20 12:22 AM,,,,0,external,,,The java program takes too long to terminate after submitting transaction.,,heatherp,Unicow,,,,,,,,,,,,,,,,,,,FGJ-43,,,,,"19/Dec/19 7:30 AM;Unicow;ClientApp.java;https://jira.hyperledger.org/secure/attachment/18042/ClientApp.java",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i016nn:",,,,Unset,Unset,,,,,"From the fabcar samples, modify the ClientApp.java to execute only 

contract.submitTransaction(""createCar"", ""CAR10"", ""VW"", ""Polo"", ""Grey"", ""Mary"");

and add a dummy System.out after the above code.
 
1) ./startFabric.sh
2) Compile the java/src/main/java/org/example/ java files.
3) java EnrollAdmin.java
4) java RegisterUser.java
5) ClientApp.java

The transaction is completed successfully, the dummy print is shown in the console but the java application takes 5-10 seconds to terminate.
",,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,Unicow,,,,,,,,,,,,,,,,,,,"19/Dec/19 7:39 PM;Unicow;Running some tests, the problem is that  the gateway.close() takes time to finish.

This cod: 

{color:#cc7832}try{color}(Gateway gateway = builder.connect())  \{... }

closes the resources automatically.

Although, putting the statement inside the try block  the program terminates immediately.

{color:#cc7832}try{color} {
 Gateway gateway = builder.connect();
......
};;;","08/Jan/20 12:22 AM;heatherp;Hi [~Unicow] - the maintainers believe this is a duplicate of FGJ-43, so duping. Let us know if you disagree;;;",,,,,,,,,,,,,,
Add compatability matrix to documentation,FGJ-69,43917,Documentation,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,heatherp,heatherp,10/Jan/20 1:29 AM,21/Jan/20 7:05 PM,28/Oct/23 2:21 AM,21/Jan/20 7:05 PM,v2.0.0,v2.0.0,,0,sdk-triaged,,,"This could exist as a wider effort across all fabric components and therefore exist in readTheDocs?
For now, let's discuss adding a table into our docs, readMe perhaps? Explaining what versions of fabric/java we support - at least to point RC users at when we frequently get asked",,heatherp,,,,,,,,,,,,,,,,,,,,,,FABCJ-269,FABN-1446,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s66",,,,Unset,Unset,20-27 Jan 20,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Remove all compile warnings,FGJ-70,43954,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,11/Jan/20 1:10 AM,24/Jan/20 6:36 PM,28/Oct/23 2:21 AM,24/Jan/20 6:36 PM,v2.0.0,v2.0.0,,0,sdk-triaged,,,"_As a_ contributor
_I want_ to have no compile warnings
_So that_ I can identify if new warnings are introduced and maintain high code quality",,bestbeforetoday,,,,,,,,,,,,,,,,FABJ-509,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s6c",,,,Unset,Unset,20-27 Jan 20,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,"14/Jan/20 7:43 PM;bestbeforetoday;Delivered most of the required changes in this PR: [https://github.com/hyperledger/fabric-gateway-java/pull/27|https://github.com/hyperledger/fabric-gateway-java/pull/27]

Only outstanding piece of work is to remove deprecated use of ChaincodeID in TransactionImpl. This requires a release of fabric-sdk-java that includes FABJ-509, and changing the dependency to use that new version, since the currently released version of fabric-sdk-java does not allow send of transaction proposals when using discovery without ChaincodeID being specified.;;;",,,,,,,,,,,,,,,
Confirm service discovery certificate spec ,FGJ-71,44014,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Low,Won't Do,,heatherp,heatherp,17/Jan/20 10:22 PM,30/Sep/20 12:45 AM,28/Oct/23 2:21 AM,30/Sep/20 12:45 AM,v2.0.0,,,0,sdk-triaged,,,"We hit an issue with the node-sdk under FABN-1403 where the certificates returned by service discovery didn't contain a new line character and therefore our parsing of them wasn't good enough. This required us to do a release with a new fix out.

We need to confirm whether we're expecting service discovery to return certificates in this format. 

1) If not, migrate this issue to a fabric one and discuss with appropriate channels
 -2) If yes, ensure our parsing across sdks is sufficient-",,bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6y:i",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,heatherp,,,,,,,,,,,,,,,,,,,"14/Feb/20 2:02 AM;heatherp;[~lesleyannj] has checked this out herself :D so we're confident that the gateway-java isn't going to suffer from the same issue that the node-sdk did. 
We should still confirm the service discovery spec though, so I'll keep this on the backlog, but this isn't inherently a gateway-java problem;;;","30/Sep/20 12:45 AM;bestbeforetoday;Java SDK will work either way.;;;",,,,,,,,,,,,,,
Release v2.0.0 gateway-java,FGJ-72,44032,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,bestbeforetoday,heatherp,heatherp,20/Jan/20 9:10 PM,24/Jan/20 8:26 PM,28/Oct/23 2:21 AM,24/Jan/20 8:26 PM,v2.0.0,v2.0.0,,0,sdk-triaged,,,Needs to include an update to azure pipelines file to ensure it recognises the release,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s98",,,,Unset,Unset,20-27 Jan 20,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve submitTransaction Javadoc,FGJ-73,44110,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,bestbeforetoday,bestbeforetoday,23/Jan/20 6:45 PM,20/Nov/20 12:51 AM,28/Oct/23 2:21 AM,,,,,0,community-help-wanted,sdk-triaged,,"*As an* application developer
 *I want* the Javadoc to describe that commit handlers determine how transaction submit waits for commit events before returning
 *So that* I don't need to consult additional documentation or RocketChat to understand behaviour",,bestbeforetoday,lesleyannj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0183v:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,lesleyannj,,,,,,,,,,,,,,,,,,,"20/Nov/20 12:51 AM;lesleyannj;Intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
Enable Java  11 in the builds,FGJ-74,44112,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Low,Done,heatherp,heatherp,heatherp,23/Jan/20 7:34 PM,29/Feb/20 12:16 AM,28/Oct/23 2:21 AM,29/Feb/20 12:16 AM,v2.0.0,,,0,sdk-triaged,,,"Our new compatibility matrix says we support Java ""8+"" as we have done some work towards supporting Java 11. We should enable some LTS version of Java in the builds, and update the table.
We may need the same task in the java-sdk builds too",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6zi",,,,Unset,Unset,21st-28th Feb 2020,28th-6th March 2020,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dev,release-1.4,main,,,,,,,,true,,,,,,,,,,,,,,,,
Update Docker configuration for master branch,FGJ-75,44113,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,heatherp,heatherp,23/Jan/20 7:38 PM,19/Nov/20 7:25 PM,28/Oct/23 2:21 AM,19/Nov/20 7:25 PM,v2.0.0,,,0,sdk-triaged,,,"Fabric 2.0 now uses 2-digit version numbers for Docker images, as follows:
* hyperledger/fabric-ca:1.4
* hyperledger/fabric-orderer:2.0
* hyperledger/fabric-peer:2.0
* hyperledger/fabric-tools:2.0

It should be sufficient to just specify the correct image versions in the docker configuration. No local re-tagging should be required. No images should need to be explicitly pulled for baseos, ccenv, javaenv or nodeenv.",,heatherp,,,,,,,,,,,,,,,,,,,,FGJ-76,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6s:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Don't pull and re-tag Fabric 2.0 Docker images in master build,FGJ-76,44154,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Duplicate,,bestbeforetoday,bestbeforetoday,28/Jan/20 7:31 PM,28/Jan/20 7:52 PM,28/Oct/23 2:21 AM,28/Jan/20 7:52 PM,,,,0,,,,"Released Fabric Docker images now exist in DockerHub with tags matching the core.yaml used internally by Fabric to specify Fabric 2.0 Docker images so builds should work out of the box, without pulling down and re-tagging pre-release Docker images.",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,FGJ-75,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i00v6t:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need a way to pass --is-init with a transaction,FGJ-77,44185,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,EdMoffatt,EdMoffatt,30/Jan/20 6:59 PM,31/Jan/20 8:25 PM,28/Oct/23 2:21 AM,31/Jan/20 8:25 PM,v2.0.0,,,0,,,,"v2 lifecycle allows a definition to include the {{init-required}} flag, which means that the first transaction to be submitted must pass the {{isInit}} flag.

Can't see a way to do this with the SDKs at the moment, so I think you'd need to turn to the CLIs to get a committed contract started if you'd set the {{init-required}} flag. (Transactions without the flag will fail until one _with_ the flag has been completed). Should we add the ability to do this to the SDKs?",,EdMoffatt,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i018gz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),EdMoffatt,heatherp,,,,,,,,,,,,,,,,,,,"31/Jan/20 8:25 PM;heatherp;Hey Ed, so amongst the maintainers, we think this is an administrative task and therefore doesn't belong in the SDK apis. We are planning on creating a fabric-admin package, in node, to provide some apis for administrative tasks, which this functionality will live. We're not planning on creating the equivalent in java, so I'm closing this;;;",,,,,,,,,,,,,,,
Release gateway-java 1.4.3,FGJ-78,44296,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,heatherp,heatherp,07/Feb/20 8:22 PM,13/Feb/20 12:42 AM,28/Oct/23 2:21 AM,12/Feb/20 10:59 PM,,,,0,sdk-triaged,,,,,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q7",,,,Unset,Unset,7-14th Feb 2020,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,release-1.4,,,,,,,,,,true,,,,,,,,,,,,,,,,
HSM-managed identities,FGJ-79,44318,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,mrudav.shukla,bestbeforetoday,bestbeforetoday,11/Feb/20 7:46 PM,20/Nov/20 12:52 AM,28/Oct/23 2:21 AM,,,,,1,community-help-wanted,sdk-triaged,,"*As a* client developer
*I want* to use identities managed by a Hardware Security Module to connect to Fabric
*So that* private keys are only held in a Hardware Security Module for security

A prototype of integrating the Gateway with an HSM is found at:
* https://github.com/ldesrosi/java-marbles-client

Note that this uses the v1.4 fabric-gateway-java API, which had an old wallet framework. This story should integrate with the new (v2.0) wallet framework, which should make things easier.

HSM support is already present in the Node SDK, and the implementation here should broadly follow the same pattern. An overview of the wallet architecture (including HSM-managed identities) can be found attached to this Jira:
* https://jira.hyperledger.org/browse/FABN-1353

User guide for using HSM-managed identities in the Node SDK can be found at:
* https://hyperledger.github.io/fabric-sdk-node/master/tutorial-wallet.html

So the following are required:
* Add an *HsmX509Identity* type and associated *HsmX509IdentityProvider* to manage serialization and connection configuration.
* Expose an *IdentityProviderRegistry* on the wallet to allow a configured *HsmX509IdentityProvider* to be added.
* Change the GatewayImpl code to use the wallet provider registry to obtain an appropriate identity provider for the selected identity.
* Add a scenario test that uses an HSM-managed identity where the private key is stored in SoftHSM.",,bestbeforetoday,dcrough13,lesleyannj,mrudav.shukla,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i0192z:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,dcrough13,lesleyannj,mrudav.shukla,,,,,,,,,,,,,,,,,"24/Feb/20 1:44 PM;mrudav.shukla;Hi [~bestbeforetoday]

Two questions here:
 # In the implementation of IdentityProvider, we’ve got a method for setting the user context which is utilized when we create Gateway. In this method, we first create an enrollment (X509) and use this enrollment for creating an instance of the gateway user. And for creating an enrollment we need the certificate and the private key for the identity. How do we access the private key here considering HSMIdentity will consist of mspId and Certificate?
 # For exposing an identity registry over the Wallet, I’m planning to use an inner class which will help in accessing and updating the provider registry. Will this be a good approach?;;;","20/Nov/20 12:52 AM;lesleyannj;Expected to be easier to address when new Fabric Gateway work available - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,
Update com.puppycrawl.tools:checkstyle to >8.29,FGJ-80,44595,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Done,heatherp,heatherp,heatherp,17/Mar/20 8:20 PM,18/Mar/20 1:18 AM,28/Oct/23 2:21 AM,18/Mar/20 1:18 AM,v2.0.0,,,0,sdk-triaged,,,"We've got a github security dependency alert: 


h5. [GHSA-763g-fqq7-48wg|https://github.com/advisories/GHSA-763g-fqq7-48wg]
moderate severity
*Vulnerable versions:* < 8.29
*Patched version:* 8.29
Due to an incomplete fix for [CVE-2019-9658|https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9658], checkstyle was still vulnerable to XML External Entity (XXE) Processing.


Not needed in the 1.4 branch, as it's at 8.29 there",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzx33q:s7q6z5zu",,,,Unset,Unset,13th-21st Mar 20,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Release v2.1.0,FGJ-81,44666,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,heatherp,heatherp,heatherp,26/Mar/20 11:41 PM,24/Apr/20 5:14 PM,28/Oct/23 2:21 AM,24/Apr/20 5:14 PM,v2.0.0,,,0,sdk-triaged,,,"Fabric v2.1.0 is due mid-April, potentially earlier. So before Easter let's have done the following list. We're going to release from master, essentially making it like a release-2.x branch, until we're due an LTS branch, at which point we'd fork a master branch again.
 * -Ensure we're testing against Fabric v2.1 (should be pulling *2.1*, not *2.1.0*)-
 * -Update docs, references to v2.0.0 etc-
 * -Release, usual stuff: release notes, version number change etc-

-*Above covered by Pr #45*-
 * -Release via maven (?) and tag the commit in github-

 * -update fabric-samples to use our 2.1.0 version -- [-https://github.com/hyperledger/fabric-samples/pull/166-]
 * -Finally: version bump to 2.1.1-snapshots - PR #47-",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ab7:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dev,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,main,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,true,,,,,,,,,,,,,,,,
"As a java application developer, I would like access to the transactionID of a transaction",FGJ-82,44759,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,heatherp,heatherp,09/Apr/20 5:52 PM,22/Apr/20 1:29 AM,28/Oct/23 2:21 AM,22/Apr/20 1:29 AM,,,,0,sdk-triaged,,,"Under FABN-1536, we implemented access to the transactionID of a transaction, we should make this available across the SDKs, including gateway-java",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01arv:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enable the SDK to select the Endorsing Orgs instead of Peers,FGJ-83,44838,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,braduf,braduf,18/Apr/20 1:12 PM,20/Nov/20 12:53 AM,28/Oct/23 2:21 AM,,v2.0.0,,,0,community-help-wanted,external,sdk-triaged,"Add the following function to the Transaction class:
h4. setEndorsingOrganizations(orgs)
Set the organizations that should be used for endorsement when this transaction is submitted to the ledger. Peers that are in the organizations will be used for the endorsement. This will override the setEndorsingPeers if previously called. Setting the endorsing organizations will not override discovery, however it will filter the peers provided by discovery to be those in these organizatons.
Just as was implemented in the Node.js SDK in https://jira.hyperledger.org/browse/FABN-1425. It would be very helpful to have in the Java Gateway too when using private data and SBE.",,braduf,lesleyannj,,,,,,,,,,,,,,,,,,,FABJ-526,,,,,,,,,,(Please add high level design or a link to the design),Unset,Yes,Unset,,,,,No,,Unset,No,,,"1|hzy5af:i",,,,Yes,Unset,,,,,(Please add steps to reproduce),,Yes,,,,,,Unset,,Unset,,(Please add usage information),braduf,lesleyannj,,,,,,,,,,,,,,,,,,,"20/Nov/20 12:53 AM;lesleyannj;Intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
FabCar in fabric-samples@master is still relying on 1.4.3,FGJ-84,44925,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,lehors,heatherp,heatherp,24/Apr/20 12:56 AM,19/Nov/20 7:19 PM,28/Oct/23 2:21 AM,19/Nov/20 7:19 PM,,,,0,sdk-triaged,,,"This should be v2.1.0 in fabric-samples@master.
When I enabled this, seems like there will be breaking changes, see below for examples, so not as simple as just editing the pom.xml:


[ERROR] COMPILATION ERROR : 
 
[ERROR] /home/vsts/work/1/s/fabcar/java/src/main/java/org/example/RegisterUser.java:[13,45] cannot find symbol 
 
 symbol: class Identity 
 
 location: interface org.hyperledger.fabric.gateway.Wallet 
 
[ERROR] /home/vsts/work/1/s/fabcar/java/src/main/java/org/example/EnrollAdmin.java:[11,45] cannot find symbol 
 
 symbol: class Identity 
 
 location: interface org.hyperledger.fabric.gateway.Wallet 
 
[ERROR] /home/vsts/work/1/s/fabcar/java/src/main/java/org/example/RegisterUser.java:[39,39] cannot find symbol 
 
 symbol: method createFileSystemWallet(java.nio.file.Path) 
 
 location: interface org.hyperledger.fabric.gateway.Wallet 
 
[ERROR] /home/vsts/work/1/s/fabcar/java/src/main/java/org/example/RegisterUser.java:[42,44] cannot find symbol 
 
 symbol: method exists(java.lang.String) 
 
 location: variable wallet of type org.hyperledger.fabric.gateway.Wallet 
 
[ERROR] /home/vsts/work/1/s/fabcar/java/src/main/java/org/example/RegisterUser.java:[48,36] cannot find symbol 
 
 symbol: method exists(java.lang.String) 
 
 location: variable wallet of type org.hyperledger.fabric.gateway.Wallet 
 
[ERROR] /home/vsts/work/1/s/fabcar/java/src/main/java/org/example/RegisterUser.java:[54,17] cannot find symbol 
 
 symbol: class Identity 
 
 ",,heatherp,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01bbf:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),heatherp,,,,,,,,,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-6.11.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/tough-cookie-4.1.3,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/semver-6.3.1,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/grpc/grpc-js-1.8.17,dependabot/go_modules/high-throughput/application-go/google.golang.org/grpc-1.53.0,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/word-wrap-1.2.4,dependabot/npm_and_yarn/asset-transfer-basic/rest-api-typescript/protobufjs-and-fabric-network-7.2.4,dependabot/go_modules/asset-transfer-basic/application-go/google.golang.org/grpc-1.53.0,,,true,,,,,,,,,,,,,,,,
Security vulnerabilities found in open source dependencies in fabric-sdk-java & fabric-gateway-java  ,FGJ-85,44980,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,RaewynM,RaewynM,01/May/20 2:13 AM,14/May/20 5:31 PM,28/Oct/23 2:21 AM,13/May/20 4:38 PM,,,,0,external,sdk-triaged,,"{quote}I see your team have recently created  [fabric-sdk-java/2.1.0|https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.1.0] on 21st April and [+fabric-gateway-java+/2.1.0|file:///C:/Users/RaewynMackenzie/AppData/Local/Temp/notes97E53A/%3C!--%20https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java%20--%3E] on 22nd April. 
We were planning on pulling in [+fabric-gateway-java+/2.1.0|file:///C:/Users/RaewynMackenzie/AppData/Local/Temp/notes97E53A/%3C!--%20https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java%20--%3E] to our next MQ LTS release, which has a dependency on the open source packages in [fabric-sdk-java/2.1.0|https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.1.0].

However, I noticed yesterday that the fabric-sdk-java and fabric-gateway-java 2.1.0 levels still have dependencies on some back level open source packages and compile dependencies, some of which we are getting security vulnerability hits on our ASOC scan of the 1.48 versions.

In  [fabric-sdk-java|https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.1.0] the two issues I know of so far are:  * [+netty-codec-http2+ 4.1.41.Final|https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.41.Final] - needs to be upgraded to (at least) [+{color:#0000ff}netty-codec-http2{color}+|https://mvnrepository.com/artifact/io.netty/netty-codec-http2] 4.1.4.6 or 4.1.49, due to a high CVE score of 9.8 (this may solve the netty-handler dependency vulnerability too)
 * [snakeyaml 1.25|https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.25] - needs to be updated to [snakeyaml 1.26|https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.26]

There may also be other vulnerabilities in dependencies of fabric-sdk-java & fabric-gateway-java, as we have not been able to scan your latest versions of these yet. If possible could you please security scan and upgrade any other open source pacakages that have security vulnerabilities?
{quote}
{quote} ** We will need new versions of fabric-sdk-java & fabric-gateway-java by the end of May at the latest, in order to meet our code cut of date for our upcoming MQ LTS release, thanks.
{quote}",,andrew-coleman,lesleyannj,RaewynM,,,,,,,,,,,,,,,,,,,,,,,"08/May/20 1:43 AM;RaewynM;MQv9x (OpenSource)_20200507_17_41_35.html;https://jira.hyperledger.org/secure/attachment/18323/MQv9x+%28OpenSource%29_20200507_17_41_35.html","08/May/20 1:41 AM;RaewynM;image-2020-05-07-17-41-05-527.png;https://jira.hyperledger.org/secure/attachment/18322/image-2020-05-07-17-41-05-527.png",,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:w",,,,Unset,Unset,7May to 14May,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,lesleyannj,RaewynM,,,,,,,dev,release-1.4,main,,,,,,,,true,"05/May/20 12:33 AM;RaewynM;[~andrew-coleman] [~lesleyannj] - I believe you are taking over coordinating updates to the fabric-gateway and fabric-sdk java packages when [~heatherp] leaves?

Please note that in addition to the two security vulnerabilities I put in the description, today we ran ASOC Open Source scan against the version of our code containing the latest fabric-sdk-java, and it also had security vulnerability hits on these two pre-reqs:
 * bcprov-jdk15on.jar - Upgrade to version 1.64 (CVE-2019-17359 - score 7.5)
 * commons-codec.jar - Upgrade to version commons-codec:commons-codec:1.13

(Note I see commons-codec is no longer used in fabric-sdk-java/2.1.0, but is it still a pre-req for cloudant-client in fabric-gateway-java 2.1.0. So could you please update cloudant-client from 2.18 to 2.19 (which appears to have removed the commons-codec pre-req).

Also there are a number of other open source packages that are not at their latest levels, could you please scan and update some of these as well (at least some of the minor level upgrades).;;;","08/May/20 1:34 AM;RaewynM;[~andrew-coleman] [~lesleyannj] - {color:#1d1c1d}could you please provide updated versions of fabric-gateway-java and fabric-sdk-java (with the requested four updates) by the end of next week (15th May)? Then we could include your new version in our MQ code in time to be merged and included in our open source legal scans, thanks.{color}

{color:#1d1c1d}FYI [~ibmmqmet] {color};;;","08/May/20 1:43 AM;RaewynM;These are the current four security vulnerabilities we are getting in our ASOC open source scan in the MQ Blockchain (ie in fabric-gateway-java 2.1.0) : [https://cloud.appscan.com/AsoCUI/serviceui/main/myapps/oneapp/37123a43-cce4-4a0c-8752-72daede7e6bd/issues]  :

!image-2020-05-07-17-41-05-527.png![^MQv9x (OpenSource)_20200507_17_41_35.html];;;","13/May/20 4:44 PM;andrew-coleman;The following packages have now been released:

fabric-gateway-java v2.1.1

fabric-gateway-java v1.4.4

fabric-sdk-java v2.1.1

fabric-sdk-java v1.4.9

 

Note that in fabric-sdk-java v2.1.1 the dependency bcprov-jdk15on.jar has been downgraded to v1.62 to avoid the security vulnerability that was introduced in v1.63.  Upgrading to a later version caused some test failures.  This downgrade was also done in the v1.4.x branch last November.

 ;;;","13/May/20 5:41 PM;RaewynM;[~andrew-coleman] thanks for making the updates. When can we expect the new versions to be visible on Maven?;;;","14/May/20 5:31 PM;lesleyannj;[~RaewynM] looks like they are in Maven now.;;;",,,,,,,,,,
[Feature Request] Make available TxID to client,FGJ-86,45009,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,newint,newint,07/May/20 4:40 AM,20/May/20 2:09 AM,28/Oct/23 2:21 AM,20/May/20 2:06 AM,,,,0,external,sdk-triaged,,"h3. Description
Real world environments can have strict limits on connection liveness time. If such limitation exists, usually it is smaller than block creation time.
In this case, we can immediately return transaction simulation response, listen to block events and see if our transaction was indeed successfully committed to the ledger.

h3. Problem
To achieve behaviour described above, we would like to get easy access to TxID. Because TxID is generated on the client side, it should be easy to access. There is an extremely dirty solution, where we add TxID in response of the chaincode execution.

h3. Deliverables
- Provide possibility to client which submits transaction to get access to generated TxID.

h3. Solution Idea
Add to Transaction interface
{code}
String getTxID();
{code}
",,bestbeforetoday,newint,,,,,,,,,,,,,,,,,,,,,,,FABN-1536,,,,,,(Please add high level design or a link to the design),Unset,No,Unset,,,,,No,,Unset,No,,,"1|i01b83:6",,,,Yes,Unset,7May to 14May,15 May to 22 May 2020,,,(Please add steps to reproduce),,No,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,newint,,,,,,,,dev,main,,,,,,,,,true,"20/May/20 2:09 AM;bestbeforetoday;Released in v2.1.2 of fabric-gateway-java;;;",,,,,,,,,,,,,,,
More security vulnerabilities found in open source dependencies in fabric-sdk-java & fabric-gateway-java,FGJ-87,45230,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,RaewynM,RaewynM,10/Jun/20 1:33 AM,12/Jun/20 11:13 PM,28/Oct/23 2:21 AM,11/Jun/20 9:42 PM,,,,0,external,sdk-triaged,,"We have recently pulled in [+fabric-gateway-java+/2.1.1|file:///C:/Users/RaewynMackenzie/AppData/Local/Temp/notes97E53A/%3C!--%20https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java%20--%3E] into our in development IBM MQ LTS release (due out next month), which has a dependency on the open source packages in [fabric-sdk-java/2.1.1|https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.1.0].

However, we are now getting some new security vulnerability hits in our ASOC Open Source scan.

There is one new issue in the *fabric-gateway-java 2.1.1* package:
 * *commons-codec 1.6* this is a dependency of *cloudant-client:jar:2.19.0* - however it appears there are no later versions of cloudant-client available ?

There are three new issues in the *fabric-sdk-java 2.1.1* package:
 * *Log4j 1.2.17* CVE-2019-17571 (score 9.8). ASOC recommends to update to log4j-core:2.0-alpha1 
 * *log4j-core 1.2.17* CVE-2020-9488 (score 3.7) ASOC recommends to update to log4j-core:2.13.2
 * *bcprov-jdk15on.jar* - ASOC scan report says that 1.63 is vulnerable to CVE-2019-17359 (score 7.5) ASOC recommends to upgrade to version org.bouncycastle:bcprov-jdk15on:1.64 - however I believe fabric-sdk-java only still uses 1.62 (as you had problems upgrading to 1.64), or can you update to 1.65?

See attached ASOC report with details - look for the open source packages with the following directory path: *mqm/mqbc/prereqs/*

*[^MQv9x (OpenSource)_20200609_17_20_28.pdf]*

Note these fixes are required urgently as our final code fix cut off date is next Friday 19th June, thanks

FYI [~andrew-coleman] [~ibmmqmet] [~mcastle]

 ",,andrew-coleman,RaewynM,,,,,,,,,,,,,,,,,,,,,,,,"10/Jun/20 1:34 AM;RaewynM;MQv9x (OpenSource)_20200609_17_20_28.pdf;https://jira.hyperledger.org/secure/attachment/18350/MQv9x+%28OpenSource%29_20200609_17_20_28.pdf",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b83:1o",,,,Unset,Unset,5 June to 12 June,,,,Run ASOC Open Source scan on your code,,Unset,,,,,,Unset,,Unset,,(Please add usage information),andrew-coleman,RaewynM,,,,,,,,dev,main,,,,,,,,,true,"11/Jun/20 9:42 PM;andrew-coleman;Version 2.1.3 of fabric-sdk-java and fabric-gateway-java have now been published

[https://repo1.maven.org/maven2/org/hyperledger/fabric/fabric-gateway-java/2.1.3/]

All of the dependencies have been updated apart from *bcprov-jdk15on.jar* which remains at 1.62 for reasons previously explained.  This version does not have the vulnerability that was introduced in 1.63.;;;","11/Jun/20 11:12 PM;RaewynM;Thanks [~andrew-coleman] for fast turnaround. We will take a look.

Also, can you tell me whether you are doing any sort of regular vulnerability scans on your fabric code?;;;","12/Jun/20 11:13 PM;RaewynM;Hi [~andrew-coleman] I see that you have now added [commons codec 1.14|https://mvnrepository.com/artifact/commons-codec/commons-codec/1.14]

to the dependency list for  [Fabric Gateway Java|https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java] » [2.1.3|https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java/2.1.3]

Will this override the commons-codec 1.6 (which is a dependency of [com.cloudant|https://mvnrepository.com/artifact/com.cloudant] » [cloudant-client |https://mvnrepository.com/artifact/com.cloudant/cloudant-client] [2.19.0?)|https://mvnrepository.com/artifact/com.cloudant/cloudant-client/2.19.0]

FYI [~ibmmqmet]

 ;;;",,,,,,,,,,,,,
Document release process,FGJ-88,45551,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,jtonline,jtonline,03/Jul/20 11:04 PM,02/Dec/20 1:18 AM,28/Oct/23 2:21 AM,,,,,0,sdk-triaged,,,Add {{RELEASING.md}} file in root of repo documenting the current release process,,jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i0009",,,,Unset,Unset,3 Jul to 10 Jul,10 Jul to 24 Jul,23 Jul to 7 Aug,7 Aug to 14 Aug,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jtonline,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Doc updates for v2.2 release,FGJ-89,45631,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,17/Jul/20 11:16 PM,17/Jul/20 11:41 PM,28/Oct/23 2:21 AM,17/Jul/20 11:41 PM,,,,0,,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01enf:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Flush FileCheckpointer data to disk on save,FGJ-90,45718,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Invalid,bestbeforetoday,bestbeforetoday,bestbeforetoday,29/Jul/20 10:57 PM,29/Jul/20 11:01 PM,28/Oct/23 2:21 AM,29/Jul/20 11:01 PM,,,,0,,,,Explicitly flush to disk after saving updated state in FileCheckpointer to provide better data integrity in the event of a failure,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01f03:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,,,,,,,,,,,,"29/Jul/20 11:01 PM;bestbeforetoday;Already done by flush of the writer;;;",,,,,,,,,,,,,,,
Scheduled builds,FGJ-91,45815,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Low,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,13/Aug/20 5:32 PM,18/Aug/20 11:00 PM,28/Oct/23 2:21 AM,18/Aug/20 11:00 PM,,,,0,sdk-triaged,,,"*As a* maintainer
*I want* regular scheduled builds to run
*So that* integration issues with Fabric can be identified",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhqi",,,,Unset,Unset,7 Aug to 14 Aug,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,release-1.4,main,,,,,,,,true,,,,,,,,,,,,,,,,
Wallets.newFileSystemWallet(walletDirectory) results empty,FGJ-92,45925,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,iamksseo,iamksseo,24/Aug/20 5:43 PM,09/Dec/20 12:48 AM,28/Oct/23 2:21 AM,09/Dec/20 12:48 AM,,,,0,,,,"I have created a wallet folder <my-dir-path>/wallet/ in advance. (created by nodejs) 
{code:java}
$ tree wallet/
wallet/
`-- User1
 |-- 154daf09a587ad21e9b502923052999589c7cc73eeaab6e955825b3042d60408-priv
 |-- 154daf09a587ad21e9b502923052999589c7cc73eeaab6e955825b3042d60408-pub
 `-- User1{code}
Modified pom.xml to include dependency.
{code:java}
<dependency>
 <groupId>org.hyperledger.fabric</groupId>
 <artifactId>fabric-gateway-java</artifactId>
 <version>2.2.0</version>
 </dependency>{code}
And, I followed the simple example below.

[https://hyperledger.github.io/fabric-gateway-java/]

But,
{code:java}
Wallet wallet = Wallets.newFileSystemWallet(walletDirectory){code}
seem to have a problem. wallet is empty.

 

Here is my dev environment. 
{code:java}
$ cat /etc/centos-release
CentOS Linux release 7.7.1908 (Core)

$ java -version
openjdk version ""1.8.0_242""
OpenJDK Runtime Environment (build 1.8.0_242-b08)
OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)

$ mvn -v
Apache Maven 3.0.5 (Red Hat 3.0.5-17)
Maven home: /usr/share/maven
Java version: 1.8.0_191, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-0.el7_5.x86_64/jre
Default locale: ko_KR, platform encoding: EUC-KR
OS name: ""linux"", version: ""3.10.0-862.14.4.el7.x86_64"", arch: ""amd64"", family: ""unix""
{code}
 

 How can I fix this  error. 

  

 

 ",,bestbeforetoday,ehuarotop,iamksseo,,,,,,,,,,,,,,,,,,,,FGJ-59,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fu3:",,,,Unset,Unset,,,,,"Here is my code block
```
// Load an existing wallet holding identities used to access the network.
        Path walletDirectory = Paths.get(""<my-dir-path>"", ""wallet"");

        Wallet wallet = Wallets.newFileSystemWallet(walletDirectory);
        for(String id:wallet.list()) {
            System.out.print(id + "" "");
        }
        System.out.println(""wallet list: "" + wallet.list());

        // Path to a common connection profile describing the network.
        Path networkConfigFile = Paths.get(""<my-dir-path>"", ""connection-profile.yaml"");

        // Configure the gateway connection used to access the network.
        Gateway.Builder builder = Gateway.createBuilder()
                .identity(wallet, ""User1"")
                .networkConfig(networkConfigFile)
                .discovery(true);   // default: disable
```
The result is:
```
wallet list: []
Exception in thread ""main"" java.lang.IllegalArgumentException: Identity not found in wallet: User1
        at org.hyperledger.fabric.gateway.impl.GatewayImpl$Builder.identity(GatewayImpl.java:114)
        at org.hyperledger.fabric.gateway.impl.GatewayImpl$Builder.identity(GatewayImpl.java:66)
        at hello.Sample.main(Sample.java:40)
```",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,ehuarotop,iamksseo,,,,,,,,,,,,,,,,,,"25/Aug/20 5:51 PM;iamksseo;I have re-created a wallet folder <my-dir-path>/wallet/ with java-SDK.

And works well.;;;","02/Sep/20 12:16 AM;bestbeforetoday;The wallet structure you have in a v1.4 format wallet. You are using the v2 SDK which uses a different (simplified) wallet format.

There is a JavaScript utility that can be used to translate old format file system wallets to the new format: [https://github.com/bestbeforetoday/fabric-wallet-migration];;;","08/Dec/20 3:08 PM;ehuarotop;Hi Everyone,

I'm experiencing the exact same problem, could you please bring me more detailed information on how to solve it? Either with the wallet migration or via Java SDK please?.

Thank you.;;;","08/Dec/20 11:24 PM;bestbeforetoday;[~ehuarotop] If you can build/run a simple Node.js script, you can use the sample code in the README for the [fabric-wallet-migration|[https://github.com/bestbeforetoday/fabric-wallet-migration]] project to create a v2 file-system wallet directory from your existing v1.4 file-system wallet directory. You would need to write a bit of JavaScript that includes the example {{migrateWallet()}} function and also some code that calls {{migrateWallet()}} with the existing (v1.4) and target (v2) wallet directories as arguments.;;;","09/Dec/20 12:38 AM;ehuarotop;Hi [~bestbeforetoday], actually yesterday I've managed to use the wallet from java with fabric-gateway-java (version 1.4.5) . Now, I'm trying to reproduce the same code inside spring framework environment, and even I'm using the same code that in the java code, I'm getting the following error:

*java.lang.IllegalStateException: The gateway identity must be set*

As I said, running an standalone java application with the example code runs correctly, and I can submit and evaluate transactions on the blockchain network, but when I'm trying to use it from spring framework the mentioned error appears. Do you any clue about what is possibly happening?

I'll be looking to your reply.

Thank you.;;;","09/Dec/20 12:46 AM;bestbeforetoday;[~ehuarotop] it sounds like your standalone environment is using the fabric-gateway-java v1.4 while your Spring framework environment is using fabric-gateway-java v2.x. The on-disk wallet format changed between these versions. It would be possible to write an adapter in Java similar to the Node.js adapter in fabric-wallet-migration, or you can just use fabric-wallet-migration to create a v2.x format copy of an existing v1.4 file-system wallet.;;;",,,,,,,,,,
Improve SDK load balancing and fail-over for ordering service nodes,FGJ-93,46102,Task,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Won't Do,,lesleyannj,lesleyannj,11/Sep/20 8:50 PM,07/Oct/20 10:11 PM,28/Oct/23 2:21 AM,07/Oct/20 10:11 PM,,,,0,sdk-triaged,,,"Following enhancement for #FABN-1632 to try for consistency across all SDKs.

Currently, at least for the Node SDK, when using service discovery and selecting which orderer to use when submitting a transaction, the SDK will iterate through the list of available orderers in the same sequence on each transaction.

 

This is far from ideal since if the orderer(s) at the front of the list are offline, the application will need to wait for those to time out and for the SDK to find a good orderer on each and every transaction.  Users are reporting that this causes delays in their application.",,denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,,,FABN-1632,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gea:hwi",,,,Unset,Unset,2Oct-9Oct,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,"22/Sep/20 12:50 AM;denyeart;Implementation in Node.js SDK was completed in FABN-1632 , would be good to have a similar implementation for Java SDK.;;;","07/Oct/20 10:10 PM;lesleyannj;Looking at the Java SDK code it appears a change is not required.  

Java SDK:
* It will try all the orderers when submitting a transaction so an offline orderer should not prevent successful transaction commit.
* By default the order it tries orderers is randomised on every request.

In Summary:
SDK needs to send a transaction to ordering, it pulls the list of all known orderers, randomizes the list, then rolls through 1-n.  I suppose if it tries them all it errors out.  Then next request (or if client retries) it'll randomize again and repeat.

So theoretically as long as 1 orderer is good, the transaction would succeed.  The one possible downside is performance...it'd keep trying the dead orderers over and over again (depending on how it randomized the list) and would need to wait however long for a failure before moving on.

Given above behaviour, it was agreed a change/modification is not critical.
;;;",,,,,,,,,,,,,,
Java SDK is triggering the contract event listener callback if the transaction is invalid ,FGJ-94,46172,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,yasser_mas,yasser_mas,01/Oct/20 1:36 AM,08/Oct/20 6:14 PM,28/Oct/23 2:21 AM,08/Oct/20 6:14 PM,,,,0,external,sdk-triaged,,"Node SDK is not triggering the contract event listener  callback if the transaction is {color:#de350b}invalid{color} (eg. MVCC_READ_CONFLICT ) 


it's {color:#de350b}filtering valid transactions only{color} , however java SDK trigger the contract event listeners callbacks even if the transaction is valid or no ",,bestbeforetoday,yasser_mas,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01gea:hvi",,,,Unset,Unset,2Oct-9Oct,,,,"01- Register contract event listener 
02- Submit 5 concurrent transactions targeting the same asset key which will cause MVCC_READ_CONFLICT error 
03- Contract event listener callback will fired only once for the first valid transaction .",,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,yasser_mas,,,,,,,,dev,release-1.4,main,,,,,,,,true,"06/Oct/20 10:19 PM;bestbeforetoday;The intention of the contract event listener is to allow business processes to be triggered in response to transactions. For example, a transaction is committed to record a customer orderer being placed, and a business process needs to be triggered (by a contract listener) to satisfy this order. So a contract event listener should only be triggered by successfully committed transactions, and this seems to be a bug in the Java SDK behaviour.;;;","06/Oct/20 10:20 PM;bestbeforetoday;If you want to examine all transactions, including ones that are not successfully committed, you can use a block listener and iterate over all the transactions within the block.;;;","07/Oct/20 2:13 AM;yasser_mas;I think It would be better if contract events triggered for all transactions ( Valid or not ), because the event has transaction status already and I can check if the transaction is valid or not. 

Also the second approach will not be suitable for my business case, because in contract event I can set the event payload which it will be processed/aggregated data from the tx execution, but block events I think it will provide only transaction parameters and read write set, I can't get the aggregated data like contract events.  ;;;","07/Oct/20 8:23 PM;bestbeforetoday;Peer eventing only delivers block events. Everything you see in the contract events presented to you by the SDK is contained within a block event, including the chaincode event payload. The one caveat to this is that the payload is not included in *filtered* events, only in *full* events.;;;",,,,,,,,,,,,
Run builds on Ubuntu 20.04,FGJ-95,46234,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,23/Oct/20 6:02 PM,30/Oct/20 4:10 PM,28/Oct/23 2:21 AM,28/Oct/20 10:40 PM,,,,0,sdk-triaged,,,,,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzr",,,,Unset,Unset,23Oct to 30Oct,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Security vulnerability found in fabric-sdk-java httpclient dependency,FGJ-96,46269,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,lesleyannj,RaewynM,RaewynM,30/Oct/20 11:51 PM,09/Nov/20 7:46 PM,28/Oct/23 2:21 AM,04/Nov/20 11:53 PM,,,,0,external,sdk-triaged,,"We are currently using [+fabric-gateway-java+/2.2.0|file:///C:/Users/RaewynMackenzie/AppData/Local/Temp/notes97E53A/%3C!--%20https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java%20--%3E] in IBM MQ CD release (due out next month), which has a dependency on the open source packages in [fabric-sdk-java/2.2.1|https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.1.0].

However, we have this week had a new security vulnerability hit in our ASOC Open Source scan.

There is one new issues in the *fabric-sdk-java 2.1.1* package:
 * *httpclient.jar*  4.5.12**
CVE:[ https://vuln.whitesourcesoftware.com/vulnerability/CVE-2020-13956 (*score 6.5)*|https://vuln.whitesourcesoftware.com/vulnerability/CVE-2020-13956]

ASOC recommends to upgrade to version org.apache.httpcomponents:httpclient:*4.5.13*

In addition there is still this issue:
 * *bcprov-jdk15on.jar* - ASOC scan report says that 1.63 is vulnerable to CVE-2019-17359 (score 7.5) . ASOC recommends to upgrade to version org.bouncycastle:bcprov-jdk15on:1.66 . However fabric-sdk-java still uses 1.62 (which I believe is not vulnerable), due to issues upgrading . Do you have any plans to try upgrading to the latest level 1.66?

See attached ASOC report with details - look for the open source packages with the following directory path: *mqm/mqbc/prereqs/*

*[^MQv9x (OpenSource)_20200609_17_20_28.pdf] [^MQv9x (OpenSource)_20201030_14_43_29.pdf]*

Note these fixes are required urgently as our code fix cut off date is today, but we have a couple of weeks where we could pull in stop ship fixes if necessary, thanks.

FYI [~andrew-coleman] [~ibmmqmet] [~mcastle]",,bestbeforetoday,lesleyannj,RaewynM,,,,,,,,,,,,,,,,,,,,,,,"30/Oct/20 11:48 PM;RaewynM;MQv9x (OpenSource)_20201030_14_43_29.pdf;https://jira.hyperledger.org/secure/attachment/18834/MQv9x+%28OpenSource%29_20201030_14_43_29.pdf",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzra",,,,Unset,Unset,30Oct-6Nov,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,lesleyannj,RaewynM,,,,,,,dev,release-1.4,main,,,,,,,,true,"03/Nov/20 7:18 PM;lesleyannj;httpclient update to 4.5.13 in master, 2.2 and 1.4 branches of fabric-sdk-java.

No change regarding bcprov-jdk15on.jar

Once fabric-sdk-java releases available they will be picked up by fabric-gateway-java;;;","03/Nov/20 9:21 PM;RaewynM;Thanks [~lesleyannj] , will there not need to be a new specific version of fabric-gateway-java as well, or does this happen automatically now?;;;","04/Nov/20 11:42 PM;bestbeforetoday;v2.2.3 of fabric-sdk-java is now released with the update to the httpclient dependency:
 * [https://github.com/hyperledger/fabric-sdk-java/releases/tag/v2.2.3]
 * [https://repo1.maven.org/maven2/org/hyperledger/fabric-sdk-java/fabric-sdk-java/2.2.3/]

This should be picked up by projects using current fabric-gateway-java versions.;;;","09/Nov/20 7:46 PM;RaewynM;Thanks [~lesleyannj] and [~bestbeforetoday] , for your quick response this has now fixed the httpclient security issue in our ASOC Open Source scan. FYI  [~ibmmqmet];;;",,,,,,,,,,,,
"Java SDK support for Service Discovery endorsement ""NoPrivateReads""",FGJ-97,45605,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,denyeart,denyeart,15/Jul/20 2:01 AM,20/Nov/20 12:54 AM,28/Oct/23 2:21 AM,,,,,0,community-help-wanted,external,sdk-triaged,"SDKs can pass collection names to the Service Discovery endorsement service, so that service discovery considers peer collection membership and collection level endorsement policy (if set).

The SD endorsement flag ""NoPrivateReads"" can also be passed to indicate to SD that peers that are not members of the collection can also be considered, e.g. in the case of blind writes which is sometimes used to transfer an asset from one org's collection to another org's collection.",,denyeart,lesleyannj,,,,,,,,,,,,,,,,FABG-986,,FABN-1596,,,,,FAB-17308,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwrme:i1",,,,Unset,Unset,10 Jul to 24 Jul,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,,,,,,,,,,,,,,,,,,,"20/Nov/20 12:54 AM;lesleyannj;Intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
Service discovery for private data collection in Java SDK,FGJ-98,45929,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,xnxiexn,xnxiexn,25/Aug/20 2:58 PM,20/Nov/20 12:54 AM,28/Oct/23 2:21 AM,,,,,0,community-help-wanted,external,sdk-triaged,"In Hyperledger Fabric, does Java SDK support finding query peers for private data collection (PDC) by utilizing service discovery.

In a channel consisting of 2 orgs (org1 and org2), if I create a PDC for org1 only, only the peers in org1 hold the private data. If in PDC collection profile I specify memberReadOnly=false, it allows org2 users to query org1 peer to read the private data. But this requires the support of service discovery in peers and Fabric Java SDK.

The objective we'd like to accomplish is in client side as org2 user, via Java SDK, when calling chaincode to read the private data, the SDK will automatically connect to org1 peer.

Is there a plan to implement this functionality.

Thank you.",,lesleyannj,xnxiexn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01fuz:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,xnxiexn,,,,,,,,,,,,,,,,,,,"20/Nov/20 12:54 AM;lesleyannj;Intended to be addressed under new Fabric Gateway work - see https://github.com/hyperledger/fabric-rfcs/pull/32;;;",,,,,,,,,,,,,,,
"JavaDoc API Search works, but returns a page that gets 404",FGJ-99,46350,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,jtonline,calanais,calanais,25/Nov/20 9:06 PM,29/Apr/21 4:02 AM,28/Oct/23 2:21 AM,29/Apr/21 4:02 AM,,,,0,sdk-triaged,,,If you enter a term in the search box (tested on 2.2) then the 'quick lookahead' pop-up appears with the classes as expcted... Selecting the one you want though takes you to a 404,,calanais,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzj",,,,Unset,Unset,NEXT TODO ITEMS,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),calanais,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Failed to send transaction to the orderer ,FGJ-100,46370,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Invalid: Test Error,,liqi20,liqi20,02/Dec/20 8:10 PM,05/Jan/21 11:17 PM,28/Oct/23 2:21 AM,05/Jan/21 11:17 PM,,,,0,external,,,"I use fabric 1.4.4 to develop java applications deployed on multiple hosts. I use Java gateway SDK to invoke transactions.

I tried the following two ways :
{code:java}
result = contract.submitTransaction(""userRegister"",mspId,username,pubkey,attribute,period,sigPK);{code}
{code:java}
result = contract.createTransaction(""userRegister"").setEndorsingPeers(network.getChannel().getPeers(EnumSet.of(Peer.PeerRole.ENDORSING_PEER))).submit(mspId,username,pubkey,attribute,period,sigPK);{code}
However, I got the error: *Failed to send transaction to the orderer*
{code:java}
org.hyperledger.fabric.gateway.ContractException: Failed to send transaction to the ordererorg.hyperledger.fabric.gateway.ContractException: Failed to send transaction to the orderer at org.hyperledger.fabric.gateway.impl.TransactionImpl.submit(TransactionImpl.java:114) at org.example.User.userRegister(User.java:137) at org.example.Main.main(Main.java:80)Caused by: java.util.concurrent.ExecutionException: java.lang.IllegalArgumentException: The proposal responses have 3 inconsistent groups with 0 that are invalid. Expected all to be consistent and none to be invalid. at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395) at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2022) at org.hyperledger.fabric.gateway.impl.TransactionImpl.submit(TransactionImpl.java:108) ... 2 moreCaused by: java.lang.IllegalArgumentException: The proposal responses have 3 inconsistent groups with 0 that are invalid. Expected all to be consistent and none to be invalid. at org.hyperledger.fabric.sdk.Channel.sendTransaction(Channel.java:5233) ... 3 more{code}
How can I solve this problem? （I can use the cli container to submit transactions normally.)

I didn't find any error logs in peers and orderers. 

My peer logs are:
{code:java}
2020-12-02 10:34:57.173 UTC [endorser] callChaincode -> INFO 08b [mychannel][f3070a30] Entry chaincode: name:""cscc"" 
2020-12-02 10:34:57.174 UTC [endorser] callChaincode -> INFO 08c [mychannel][f3070a30] Exit chaincode: name:""cscc""  (1ms)
2020-12-02 10:34:57.174 UTC [comm.grpc.server] 1 -> INFO 08d unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=39.99.139.15:41838 grpc.code=OK grpc.call_duration=2.396418ms
2020-12-02 10:34:58.427 UTC [endorser] callChaincode -> INFO 08e [mychannel][d8d1a4cb] Entry chaincode: name:""cbfm-go"" 
2020-12-02 10:34:58.644 UTC [endorser] callChaincode -> INFO 08f [mychannel][d8d1a4cb] Exit chaincode: name:""cbfm-go""  (217ms)
2020-12-02 10:34:58.645 UTC [comm.grpc.server] 1 -> INFO 090 unary call completed grpc.service=protos.Endorser grpc.method=ProcessProposal grpc.peer_address=39.99.139.15:41838 grpc.code=OK grpc.call_duration=218.781865ms
2020-12-02 10:35:09.993 UTC [comm.grpc.server] 1 -> INFO 091 streaming call completed grpc.service=protos.Deliver grpc.method=Deliver grpc.peer_address=39.99.139.15:41842 error=""context finished before block retrieved: context canceled"" grpc.code=Unknown grpc.call_duration=12.650603036s
{code}
My sdk version is:
{code:java}
<!-- https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java --> <dependency> <groupId>org.hyperledger.fabric</groupId> <artifactId>fabric-gateway-java</artifactId> <version>1.4.1</version> </dependency>
{code}
 My connection profile likes that:
{code:java}
---
name: first-network-org1
version: 1.0.0
client:
 organization: Org1
 connection:
 timeout:
 peer:
 endorser: '300'
 orderer: '300'
channels:
 mychannel:
 orderers:
 - orderer.example.com
 - orderer2.example.com
 - orderer5.example.com
 peers:
 peer0.org1.example.com:
 endorsingPeer: true
 chaincodeQuery: true
 ledgerQuery: true
 eventSource: true
 peer1.org1.example.com:
 endorsingPeer: true
 chaincodeQuery: true
 ledgerQuery: true
 eventSource: true
 peer2.org1.example.com:
 endorsingPeer: true
 chaincodeQuery: true
 ledgerQuery: true
 eventSource: true
organizations:
 Org1:
 mspid: Org1MSP
 peers:
 - peer0.org1.example.com
 - peer1.org1.example.com
 - peer2.org1.example.com
 certificateAuthorities:
 - ca.org1.example.com
orderers:
 orderer.example.com:
 url: grpcs://39.99.136.35:7050
 orderer2.example.com:
 url: grpcs://39.99.139.15:7050
 orderer5.example.com:
 url: grpcs://39.99.136.35:8050
peers:
 peer0.org1.example.com:
 url: grpcs://39.99.136.35:7051
 tlsCACerts:
 pem: |
 -----BEGIN CERTIFICATE-----
 MIICVjCCAf2gAwIBAgIQQyai/ZMOsPmaF7/+k96YMTAKBggqhkjOPQQDAjB2MQsw
 CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
 YW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0GA1UEAxMWdGxz
 Y2Eub3JnMS5leGFtcGxlLmNvbTAeFw0yMDEyMDExMDI2MDBaFw0zMDExMjkxMDI2
 MDBaMHYxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH
 Ew1TYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMR8wHQYD
 VQQDExZ0bHNjYS5vcmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0D
 AQcDQgAEHGZFcRyXjU9pilmUNVXn2nr/shNTwfKhBC2phNA9/rcli7e2z5ivezxk
 WTcbfsO2jYjrVgtfgKdcjmYcrt0fOqNtMGswDgYDVR0PAQH/BAQDAgGmMB0GA1Ud
 JQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1Ud
 DgQiBCBFisEWV/sdUpKXc+4sndDELBLTIP06CjgD+nGqniDFZDAKBggqhkjOPQQD
 AgNHADBEAiAyj7+5+0vW0V4Ncf71UQuRDRdEAzhAB4ZWzKHPOjPPqAIgdsGPzOYU
 /bhQzljQFz7PtvuwSkdeTUryfOK6E0yTCNs=
 -----END CERTIFICATE-----

 grpcOptions:
 ssl-target-name-override: peer0.org1.example.com
 hostnameOverride: peer0.org1.example.com
 peer1.org1.example.com:
 url: grpcs://39.99.139.15:9051
 tlsCACerts:
 pem: |
 -----BEGIN CERTIFICATE-----
 MIICVjCCAf2gAwIBAgIQQyai/ZMOsPmaF7/+k96YMTAKBggqhkjOPQQDAjB2MQsw
 CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
 YW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0GA1UEAxMWdGxz
 Y2Eub3JnMS5leGFtcGxlLmNvbTAeFw0yMDEyMDExMDI2MDBaFw0zMDExMjkxMDI2
 MDBaMHYxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH
 Ew1TYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMR8wHQYD
 VQQDExZ0bHNjYS5vcmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0D
 AQcDQgAEHGZFcRyXjU9pilmUNVXn2nr/shNTwfKhBC2phNA9/rcli7e2z5ivezxk
 WTcbfsO2jYjrVgtfgKdcjmYcrt0fOqNtMGswDgYDVR0PAQH/BAQDAgGmMB0GA1Ud
 JQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1Ud
 DgQiBCBFisEWV/sdUpKXc+4sndDELBLTIP06CjgD+nGqniDFZDAKBggqhkjOPQQD
 AgNHADBEAiAyj7+5+0vW0V4Ncf71UQuRDRdEAzhAB4ZWzKHPOjPPqAIgdsGPzOYU
 /bhQzljQFz7PtvuwSkdeTUryfOK6E0yTCNs=
 -----END CERTIFICATE-----

 grpcOptions:
 ssl-target-name-override: peer1.org1.example.com
 hostnameOverride: peer1.org1.example.com
 peer2.org1.example.com:
 url: grpcs://39.99.136.35:8051
 tlsCACerts:
 pem: |
 -----BEGIN CERTIFICATE-----
 MIICVjCCAf2gAwIBAgIQQyai/ZMOsPmaF7/+k96YMTAKBggqhkjOPQQDAjB2MQsw
 CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
 YW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0GA1UEAxMWdGxz
 Y2Eub3JnMS5leGFtcGxlLmNvbTAeFw0yMDEyMDExMDI2MDBaFw0zMDExMjkxMDI2
 MDBaMHYxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH
 Ew1TYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMR8wHQYD
 VQQDExZ0bHNjYS5vcmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0D
 AQcDQgAEHGZFcRyXjU9pilmUNVXn2nr/shNTwfKhBC2phNA9/rcli7e2z5ivezxk
 WTcbfsO2jYjrVgtfgKdcjmYcrt0fOqNtMGswDgYDVR0PAQH/BAQDAgGmMB0GA1Ud
 JQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1Ud
 DgQiBCBFisEWV/sdUpKXc+4sndDELBLTIP06CjgD+nGqniDFZDAKBggqhkjOPQQD
 AgNHADBEAiAyj7+5+0vW0V4Ncf71UQuRDRdEAzhAB4ZWzKHPOjPPqAIgdsGPzOYU
 /bhQzljQFz7PtvuwSkdeTUryfOK6E0yTCNs=
 -----END CERTIFICATE-----
 
 grpcOptions:
 ssl-target-name-override: peer2.org1.example.com
 hostnameOverride: peer2.org1.example.com
certificateAuthorities:
 ca.org1.example.com:
 url: https://39.99.136.35:7054
 caName: ca-org1
 tlsCACerts:
 pem: |
 -----BEGIN CERTIFICATE-----
 MIICUDCCAfegAwIBAgIQTTRuNzhtFTYcnNcx7tvW7zAKBggqhkjOPQQDAjBzMQsw
 CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
 YW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eu
 b3JnMS5leGFtcGxlLmNvbTAeFw0yMDEyMDExMDI2MDBaFw0zMDExMjkxMDI2MDBa
 MHMxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T
 YW4gRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMRwwGgYDVQQD
 ExNjYS5vcmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
 2I6BUwdREbY+r+iuvAA+RR9whFvgq1Mf4JxzUPRpMyM7rBHRg2VzxMDfyKrxlwOM
 UCg/G753fQj8uhfGZShMLqNtMGswDgYDVR0PAQH/BAQDAgGmMB0GA1UdJQQWMBQG
 CCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBH
 lrjSEFmKYD+0E9BibQ+uws+1MvAk9CQZyqhtBMlCbzAKBggqhkjOPQQDAgNHADBE
 AiBuaZADanASfpq5EGShBchYOC2MpHXNnWCuJ86bppC01wIgMOlfeSbxWVRCjLZU
 VubfuAj26SSUpnvQQJ6bBDgiwJY=
 -----END CERTIFICATE-----

 
 httpOptions:
 verify: false
{code}
 Thanks a lot for any help !!!!!",,bestbeforetoday,liqi20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01hhv:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,liqi20,,,,,,,,,,,,,,,,,,,"04/Dec/20 7:15 PM;bestbeforetoday;This error suggests that some of the proposal responses received from peers either had different read/write sets or returned different transaction response payloads. This might be because the ledger state accessed by the transaction was different on different peers, or the transaction function implementation might be non-deterministic. The {{ContractException}} returned should have all the proposal responses attached so you can dig through those to figure out how they are different.;;;",,,,,,,,,,,,,,,
Security vulnerability found in fabric-sdk-java grpc-netty guava dependency,FGJ-101,46444,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,lesleyannj,RaewynM,RaewynM,23/Dec/20 2:16 AM,27/Mar/21 2:06 AM,28/Oct/23 2:21 AM,22/Jan/21 6:38 PM,,,,0,external,sdk-triaged,,"IBM MQ currently uses fabric-gateway-java 2.2.0 which pulls in fabric-sdk-java 2.2.3 which has a dependency on grpc-netty 1.31, which has a dependency on guava:jar:29.0-android.

We have been notified of a new security vulnerability  in our ASOC Open Source scan in guava.jar, so *could you please update to grpc-netty 1.31*  ie:
 Name: CVE-2020-8908
 Description: A temp directory creation vulnerability exist in Guava versions prior to 30.0 allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava com.google.common.io.Files.createTempDir(). The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. We recommend updating Guava to version 30.0 or later, or update to Java 7 or later, or to explicitly change the permissions after the creation of the directory if neither are possible.
 Resolution: Upgrade to version v30.0
 URL: [https://vuln.whitesourcesoftware.com/vulnerability/CVE-2020-8908]
  In addition, our ASOC scans are still complaining about *bcprov-jdk15on.jar* which is still at 1.62 in fabric-sdk-java *(*ASOC scan report says that 1.63 is vulnerable to CVE-2019-17359 (score 7.5)

I notice in the [bouncy-castle latest release|https://www.bouncycastle.org/latest_releases.html] they mention other security vulnerabilities (introduced at 1.65) but fixed in the latest release (1.68), so could you please review whether your back level version 1.62 has any vulnerabilities, and update it if necessary.

Lastly, I notice that a number of other fabric-sdk-java dependencies are now out of date, so could you please review and update any of these as necessary as well, thanks.

 

Note these fixes will be required early Jan 2021, in time for our legal code scan on 15th Jan, thanks in advance.

FYI [~andrew-coleman] [~ibmmqmet] [~mcastle]",,lesleyannj,RaewynM,,,,,,,,,,,,,,,,FGJ-105,,,,,,,,"04/Jan/21 7:25 PM;RaewynM;fabric-gateway dep tree file.txt;https://jira.hyperledger.org/secure/attachment/18870/fabric-gateway+dep+tree+file.txt",,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01ge9:qyzzrf6kzzzzzzz",,,,Unset,Unset,18Jan to 25Jan,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),lesleyannj,RaewynM,,,,,,,,dev,,,,,,,,,,true,"04/Jan/21 7:27 PM;RaewynM;Hi [~lesleyannj] I meant to say above ""Could you please update to the *latest version of grpc-netty to pick up the latest version of guava version 30 or higher""* however I notice that the latest versions of grpc-netty (eg 1.34) do not appear to use guava version 30 or higher. Is there a way you can code to ensure the latest version of guava is used?

This is the current dependency list we pull in:[^fabric-gateway dep tree file.txt]

FYI [~ibmmqmet];;;","04/Jan/21 8:05 PM;RaewynM;In addition, there is another Bouncy Castle security vulnerability found in 1.65 and 1.66, although this may not affect the compile dependency version 1.62 that you use  ie 
| | https://vuln.whitesourcesoftware.com/vulnerability/CVE-2020-28052)
 
|;;;","06/Jan/21 2:32 AM;lesleyannj;[~RaewynM]

It would appear that grpc-netty 1.34.1 isn't enough to pull in guava 30.0-android

https://mvnrepository.com/artifact/io.grpc/grpc-netty/1.34.1 has a runtime dependency on guava 29.0-android;;;","06/Jan/21 7:45 PM;lesleyannj;[~ibmmqmet] [~RaewynM]

We don’t want to add a dependency on an unreleased version.  

It is suspected that if we add an explicit dependency in our project on guava v30.0 then it will conflict with the grpc-java dependency. 

As it is a transitive dependency and not an explicit dependency in our project, any consumer of fabric-sdk-java (or fabric-gateway-java) could do the same in their own project;;;","07/Jan/21 12:32 AM;RaewynM;Hi [~lesleyannj] thanks for investigation.  [~ibmmqmet] doesn't want to override the version of guava we ship in MQ either, as there's too many opportunities for breakage as we have no idea how it is used by the underlying components. I see that [https://vuln.whitesourcesoftware.com/vulnerability/CVE-2020-8908] has a CVSS score of 3.3 so I will see if we need a PSIRT raised to track this issue. In the meantime, we need to keep an eye on when  *grpc-netty* is next updated to use guava 30.0-android (or is there anyway you could ask them to update their dependency?);;;","07/Jan/21 1:04 AM;lesleyannj;Ack;;;","14/Jan/21 12:36 AM;lesleyannj;[~ibmmqmet] [~RaewynM]

It looks like grpc-netty 1.35.0 was release 16hrs ago and it pulls in guava 30.0-android

Testing now. - Failed  

Version doesn't appear to be in maven yet https://mvnrepository.com/artifact/io.grpc/grpc-netty
;;;","14/Jan/21 3:25 AM;RaewynM;Thanks [~lesleyannj] please keep us updated as to your progress and whether you may have a new fabric versions available this week that we could pick up.;;;","22/Jan/21 12:51 AM;lesleyannj;Looks like three dependency updates required to keep dependencies in sync:

1.31.0 to 1.35.0
<grpc.version>1.35.0</grpc.version><!-- CURRENT_GRPC_VERSION -->   which pulls in guava 30.0-android via grpc-netty

and 2 changes to io.netty

2.0.30 to 2.0.34
       <groupId>io.netty</groupId>
            <artifactId>netty-tcnative-boringssl-static</artifactId>
            <version>2.0.34.Final</version>

4.1.49.Final to 4.1.52.Final
     <groupId>io.netty</groupId>
            <artifactId>netty-codec-http2</artifactId>
            <version>4.1.52.Final</version>;;;","22/Jan/21 6:38 PM;lesleyannj;[~ibmmqmet] [~RaewynM] changes pushed to master and 2.2 branches;;;","22/Jan/21 8:12 PM;RaewynM;Thanks [~lesleyannj] . However when I look in [https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.2.4] on Maven, it doesn't show those updated dependency versions yet - or are they just not showing in Maven yet for some reason?

And will [https://mvnrepository.com/artifact/org.hyperledger.fabric/fabric-gateway-java/2.2.1] dynamically pick up the new fabric-sdk-java 2.2.4?

Also can you let me know whether you made any other dependency updates other than those listed above? (as I will need to request OSSC legal clearance for these new levels).

[~ibmmqmet] could you please review and pick up the new dependencies with the latest fabric-gateway-java, for our current release, thanks.;;;","22/Jan/21 8:19 PM;lesleyannj;We will have to do a 2.x release.

Only the changes documented above were made.;;;","22/Jan/21 8:51 PM;RaewynM;[~lesleyannj] when you said ""We will have to do a 2.x release."", did you mean for fabric-gateway-java and/or fabric-sdk-java?

So should this Jira issue remain open until the updated fabric-gateway-java is available for us to pick up?;;;","22/Jan/21 9:04 PM;lesleyannj;fabric-sdk-java 2.x release and then the fabric-gateway-java will pick up.;;;","25/Jan/21 7:57 PM;lesleyannj;[~RaewynM] fabric-sdk-java release 2.2.5 now available ;;;","25/Jan/21 11:47 PM;RaewynM;[~lesleyannj] Thanks for that.

Will fabric-gateway-java 2.2.1 automatically pick up fabric-sdk-java 2.2.5, or do we need to wait for an updated version of fabric-gateway-java as well?  

FYI [~ibmmqmet];;;"
Contract.submitTransaction() does not wait for commit,FGJ-102,46520,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Invalid: Works as Expected,,conanoc,conanoc,28/Jan/21 6:08 PM,10/Feb/21 11:22 AM,28/Oct/23 2:21 AM,09/Feb/21 7:16 PM,,,,0,external,,,"Test env:

fabric-gateway-java version: 1.4.5

chaincode: Fabcar

submitTransaction() usually wait for commit and it took about 2s in my test env.

 
{code:java}
contract.submitTransaction(""createCar"", carNumber, ""VW"", ""Polo"", ""Grey"", randomOwner)
{code}
 

 

Problem:

Create 10 thread and call submitTransaction() on each thread, then it does not wait for commit.

It took only 200ms for submitTransaction() return.

9 thread does not show this behavior. It start after 10 thread. Is there any magic number for the concurrent call of submitTransaction() ?

 

Test code snippet:

 
{code:java}
Gateway.Builder builder = Gateway.createBuilder();
builder.identity(wallet, userId).networkConfig(networkConfigPath).discovery(true);

// create a gateway connection
Gateway gateway = builder.connect();

// get the network and contract
Network network = gateway.getNetwork(""defaultchannel"");
Contract contract = network.getContract(""fabcar"");

ExecutorService executor = Executors.newFixedThreadPool(threadCount);
List<Callable<Object>> transactions = new ArrayList<>();
for (int i = 0; i < threadCount; i++) {
   transactions.add(new WriteTx(i * requestCount, contract));
}

System.out.println(""Start write tx ..."");
long start = System.currentTimeMillis();
executor.invokeAll(transactions);
long end = System.currentTimeMillis();
System.out.println(""Write tx finished."");
System.out.println(threadCount * requestCount + "" tx in "" + (end - start) + ""ms"");
{code}
 

 
{code:java}
    public static class WriteTx implements Callable<Object> {
      int startIndex;
      Contract contract;

      public WriteTx(int startIndex, Contract contract) {
         this.startIndex = startIndex;
         this.contract = contract;
      }

      @Override
      public Object call() {
         String randomOwner = ""Owner"" + new Random().nextInt(1000);
         for (int i=0; i < requestCount; i++) {
            String carNumber = ""CAR"" + (startIndex + i);
            try {
               byte [] result = contract.submitTransaction(""createCar"", carNumber, ""VW"", ""Polo"", ""Grey"", randomOwner);
String(result));
            } catch(Exception e) {
               System.out.println(carNumber + "" failed with error: "" + e.getMessage());
            }
         }

         return null;
      }
   }
{code}
 

 ",,bestbeforetoday,conanoc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01i8b:",,,,Unset,Unset,,,,,,,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,conanoc,,,,,,,,,,,,,,,,,,,"09/Feb/21 7:15 PM;bestbeforetoday;I suspect that what you are seeing here is that your orderer has a threshold set of 10 transactions before committing a block. When you are pushing a lower number of concurrent transactions, the orderer is waiting for a configured timeout for more transactions to arrive before committing a block containing the transactions it has received so far.;;;","09/Feb/21 7:16 PM;bestbeforetoday;This seems to be behaving as expected. Please reopen if you can see that the transactions really have not been committed before the submit unblocks.;;;","10/Feb/21 11:22 AM;conanoc;Thank you for the explanation.;;;",,,,,,,,,,,,,
Return transaction status on commit failure,FGJ-103,46600,Story,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,ndr_brt,ndr_brt,ndr_brt,26/Feb/21 7:45 PM,27/Apr/21 11:45 PM,28/Oct/23 2:21 AM,23/Apr/21 11:39 PM,,,,0,community-help-wanted,sdk-triaged,,"at the moment, it's not possible to understand what kind of error is causing ContractException.

e.g. if a transaction fails by concurrent modification (status 11), it's impossible for the caller of contract.submitTransaction to know that.",,bestbeforetoday,denyeart,ndr_brt,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|hzwqrk:5iwr4rb0zylai",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,ndr_brt,,,,,,,dev,main,,,,,,,,,true,"26/Feb/21 8:18 PM;bestbeforetoday;Right now that transaction validation code is getting swallowed by the fabric-gateway code. There is a work-around you could employ, which is to implement your own commit handler so you deal with the committed transactions directly and can pull out whatever information you need:

[https://hyperledger.github.io/fabric-gateway-java/release-2.2/org/hyperledger/fabric/gateway/spi/CommitHandlerFactory.html|https://hyperledger.github.io/fabric-gateway-java/release-2.2/org/hyperledger/fabric/gateway/spi/CommitHandlerFactory.html]

There is sample code linked there that you can just cut & paste.

You register the default handler on the Gateway connect:

[https://hyperledger.github.io/fabric-gateway-java/release-2.2/org/hyperledger/fabric/gateway/Gateway.Builder.html#commitHandler(org.hyperledger.fabric.gateway.spi.CommitHandlerFactory)|https://hyperledger.github.io/fabric-gateway-java/release-2.2/org/hyperledger/fabric/gateway/Gateway.Builder.html#commitHandler(org.hyperledger.fabric.gateway.spi.CommitHandlerFactory)]

Or you can register a specific handler to use per transaction invocation:

[https://hyperledger.github.io/fabric-gateway-java/release-2.2/org/hyperledger/fabric/gateway/Transaction.html#setCommitHandler(org.hyperledger.fabric.gateway.spi.CommitHandlerFactory)|https://hyperledger.github.io/fabric-gateway-java/release-2.2/org/hyperledger/fabric/gateway/Transaction.html#setCommitHandler(org.hyperledger.fabric.gateway.spi.CommitHandlerFactory)]

But I agree that having the exception thrown from the submit include this information for you would be nicer.;;;","26/Feb/21 8:40 PM;bestbeforetoday;h3. Implementation suggestion
 * Define a {{CommitException}} as a subclass of the {{ContractException}}, and which includes the {{BlockEvent.TransactionEvent}}. Calling code can pull the transaction status and any other information they might want from that event object
 * The code change is probably just in {{CommitHandlerImpl.onTxEvent()}}
 * Also declare the exception explicitly on {{Contract.submitTransaction()}} and {{Transaction.submit()}} along with accompanying Javadoc
 * Unit test in {{TransactionTest}};;;","26/Feb/21 10:02 PM;ndr_brt;To avoid signature breaking changes, I added the already existent `TransactionEventException` as the root cause of `ContractException`.

https://github.com/hyperledger/fabric-gateway-java/pull/72;;;","27/Feb/21 2:48 AM;bestbeforetoday;Having a new subclass of ContractException should not have broken anyone since ContractException is already declared as thrown, but chaining the exception is a fine alternative too. (y);;;","01/Mar/21 4:45 PM;ndr_brt;Yes, you're right. I fixed the DCO check;;;","24/Apr/21 12:44 AM;denyeart;[~ndr_brt] [~andrew-coleman]  [~bestbeforetoday] 

It looks like [https://github.com/hyperledger/fabric-gateway-java/pull/76] was merged into release-2.2. In the other repositories, we typically fix in main branch and then backport to release-2.2.  Is this process not followed in fabric-gateway-java? Or was this just an exception and we need to now forward-port to main branch?;;;","24/Apr/21 8:18 AM;bestbeforetoday;[~denyeart] that is a cherry-pick to release-2.2 of a commit in the main branch;;;","24/Apr/21 10:00 PM;denyeart;Ah right, sorry I didn't notice the main commit since it was more than a month ago!;;;",,,,,,,,
Security vulnerabilities found in fabric-sdk-java netty dependencies,FGJ-105,46682,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,andrew-coleman,RaewynM,RaewynM,27/Mar/21 2:06 AM,07/Jun/21 10:00 PM,28/Oct/23 2:21 AM,23/Apr/21 8:49 PM,,,,0,external,sdk-triaged,,"IBM MQ currently uses fabric-gateway-java 2.2.1 which pulls in fabric-sdk-java 2.2.5 The following dependencies have been found to have security vulnerabilities according to our ASOC scans:

1) *netty-handler.jar* CVE https://vuln.whitesourcesoftware.com/vulnerability/CVE-2021-21290 Date created Mar 9, 2021, 9:21:37 AM  
Resolution: Upgrade to version io.netty:netty-codec-http:4.1.59.Final
 
2) *netty-codec-http.jar* CVE https://vuln.whitesourcesoftware.com/vulnerability/CVE-2021-21290 Date created Mar 9, 2021, 9:21:37 AM
Resolution: Upgrade to version io.netty:netty-codec-http:4.1.59.Final
 
3) *bcprov-jdk15on.jar* CVE https://vuln.whitesourcesoftware.com/vulnerability/CVE-2019-17359 Date created Jun 6, 2020, 10:42:53 AM  - I have raised this before. The CVE complains about an issue at 1.63 though this is still at level 1.62. However it would be good if this could be updated to the latest level (ie. 1.68)
Thanks in advance.

FYI [~andrew-coleman] [~ibmmqmet] [~lesleyannj] ",,denyeart,lesleyannj,RaewynM,,,,,,,,,,,,,,,FGJ-108,FGJ-110,FGJ-101,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01b8a:jyzzhjzii",,,,Unset,Unset,NEXT TODO ITEMS,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),denyeart,lesleyannj,RaewynM,,,,,,,,,,,,,,,,,,"27/Mar/21 2:35 AM;lesleyannj;netty-codec-http2 was updated to 4.1.60 in PR https://github.com/hyperledger/fabric-sdk-java/pull/120
;;;","23/Apr/21 8:49 PM;denyeart;And it was updated in main branch in [https://github.com/hyperledger/fabric-sdk-java/pull/123]

Closing.;;;","23/Apr/21 9:56 PM;RaewynM;Thanks [~lesleyannj] and [~denyeart] , however I don't see a new version of fabric-sdk-java on Maven yet containing an updated level that we could pick up for MQ. The last level I see is [https://mvnrepository.com/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.2.5] dated Jan 2021, which only has the older netty-codec-http2 version of  [4.1.52.Final|https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.52.Final] (or is a new version of fabric-sdk-java due to be released to Maven soon?)

I also have another new Open Source security vulnerability I need to add, is it possible to reopen this Jira issue and add the one below, or would you prefer me to raise a new Jira issue? ie 

CVE-2021-29425 - found in commons-io:jar:2.6

Description: 
In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.

Resolution: 
Upgrade to version commons-io:commons-io:2.7
URL: https://vuln.whitesourcesoftware.com/vulnerability/CVE-2021-29425
CVE Base Score: 5.3 MEDIUM

FYI [~ibmmqmet];;;","23/Apr/21 10:07 PM;lesleyannj;[~andrew-coleman] ^;;;","23/Apr/21 10:10 PM;denyeart;We typically close a Jira when a fix is merged, not when the fix is released, but I see your point [~RaewynM] .  Please open a separate Jira for the new issue.

[~bestbeforetoday]  [~andrew-coleman] sounds like we need a fabric-sdk-java v2.2.6 release published once the commons-io is updated.;;;",,,,,,,,,,,
netty version confilct,FGJ-106,46689,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,High,Duplicate,,grapebaba,grapebaba,31/Mar/21 5:57 PM,11/Jun/21 2:38 AM,28/Oct/23 2:21 AM,11/Jun/21 2:38 AM,,,,0,external,,,"This project has a dependency org.hyperledger.fabric-sdk-java:fabric-sdk-java, but it seems it doesn't specific the version. The latest org.hyperledger.fabric-sdk-java:fabric-sdk-java version currently in mvn repo is 2.2.5, when import org.hyperledger.fabric:fabric-gateway-java:2.2.0 in project, there is an error about noclassdef of some netty class. 

 

The workround is exclude the org.hyperledger.fabric-sdk-java:fabric-sdk-java:2.2.5 and import org.hyperledger.fabric-sdk-java:fabric-sdk-java:2.2.0 separately.",,bestbeforetoday,grapebaba,,,,,,,,,,,,,,,,,,,FGJ-111,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01j97:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,grapebaba,,,,,,,,,,,,,,,,,,,"05/May/21 10:34 PM;bestbeforetoday;I am not sure what conflict you are seeing. _fabric-gateway-java_ does not reference any netty code directly. Only _fabric-sdk-java_ makes use of netty. So whatever netty version is depended on by the version of _fabric-sdk-java_ that is resolved by Maven should work.

Is it possible that you have a netty dependency in your own project? That would affect the versions of dependencies resolved. It may also be worth clearing your local Maven repository to ensure up-to-date dependencies are being downloaded.

Regardless, please try using the latest version of _fabric-gateway-java_ to see if that works OK for you. If you still encounter issues, could you include a stacktrace for the error so I can see where in the code the problem is occurring?;;;","11/Jun/21 2:38 AM;bestbeforetoday;Based on your error description, I think the linked Jira is reporting the same issue. The other Jira contains much more information to allow the problem to be identified and a fix attempted so I'll close this one as the duplicate so we can track it in the place with the most useful information.

If they turn out to be different issues, feel free to reopen this Jira when you have more information to help diagnose the problem.;;;",,,,,,,,,,,,,,
Enable/Disable filtered block event from Gateway.Builder options,FGJ-107,46801,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,roberto.cangiamila,roberto.cangiamila,21/Apr/21 5:57 PM,11/May/21 8:01 PM,28/Oct/23 2:21 AM,,,v2.0.0,,0,external,,,"I've submitted a PR ([https://github.com/hyperledger/fabric-gateway-java/pull/75)] to enable/disable filtered block event from Gateway.Builder options;

What do you think about?

Thanks!!!!",,bestbeforetoday,roberto.cangiamila,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jfv:",,,,No,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,roberto.cangiamila,,,,,,,,,,,,,,,,,,,"27/Apr/21 9:51 PM;bestbeforetoday;Record of prior conversation by email...

The main branch is the ongoing development branch so its content is more current than the release-2.2 branch. This is true for both fabric-sdk-java and fabric-gateway-java. The release-2.2 branch may contain more recent commits, such as release commits when a new release is published from that branch.

The main branch is where new function should be delivered and then cherry-picked back to release branches as appropriate. In general we don't want to regress functionality in later releases compared to older releases so to add new functionality to release-1.4 we would want to deliver it first in main, then cherry-pick back to both release-2.2 and release-1.4.

On the implementation, ideally it should be the choice of the client application whether they want to receive filtered or full (or with private data) block events so the Network.addBlockListener() method would either have an overload that allowed the event type to be specified, or there would be a parallel Network.addFilteredBlockListener() method to receive filtered rather than full blocks. This would provide a similar API to the Node SDK where listener options provided to Network.addBlockListener() allow the block type to be specified:

[https://hyperledger.github.io/fabric-sdk-node/release-2.2/module-fabric-network.Network.html#addBlockListener]

Unfortunately, as you've probably noticed, the low-level fabric-sdk-java eventing implementation has a one-to-one relationship between a Peer and a PeerEventServiceClient, and the PeerEventServiceClient receives either filtered or full blocks based on the PeerOptions. The API described above would make it possible for a client to simultaneously attach listeners for both filtered and full blocks, but the low-level implementation currently allows only one. This could be solved in a few different ways, although all of them are probably quite a bit of work.

The low-level eventing could be reworked to provide a cleaner mechanism for registering listeners for different event types. This would allow the event type to be specified on the call to Channel.registerBlockListener() and probably changing the one-to-one relationship between Peer and PeerEventServiceClient for the cleanest implementation.

You could do some trickery in the higher-level code to create a second version of the Peer configured for filtered eventing, similar to how event replay is handled by ReplayListenerSession, although this is really just a work-around to the limitations of the low-level eventing:

[https://github.com/hyperledger/fabric-gateway-java/blob/8e8c2a8d34aca5357119caf5fea47088f5e203ca/src/main/java/org/hyperledger/fabric/gateway/impl/event/ReplayListenerSession.java#L37]

I think that, while changing the NetworkConfig implementation and having a global flag in the high level API to toggle filtered and full blocks is a simpler approach, this is definitely not the ideal solution. Remember also that the NetworkConfig often only populates a subset of the network nodes as typically the connection profile will only contain a ""bootstrap"" set of network nodes and then service discovery is used at runtime to locate all nodes.;;;",,,,,,,,,,,,,,,
commons-io security vulnerability found in fabric-sdk-java dependencies,FGJ-108,46816,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,RaewynM,RaewynM,23/Apr/21 10:21 PM,23/Apr/21 11:38 PM,28/Oct/23 2:21 AM,23/Apr/21 11:38 PM,,,,0,external,sdk-triaged,," 

Following on from https://jira.hyperledger.org/browse/FGJ-108 our weekly MQ ASOC Whitesource scan has found another new Open Source security vulnerability in one of the fabric-sdk-java dependencies commons-io: 
CVE-2021-29425 - found in commons-io:jar:2.6

Description: 
 In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.

Resolution: 
 Upgrade to version commons-io:commons-io:2.7
 URL: [https://vuln.whitesourcesoftware.com/vulnerability/CVE-2021-29425]
 CVE Base Score: 5.3 MEDIUM

FYI [~andrew-coleman] [~ibmmqmet] [~lesleyannj] ",,bestbeforetoday,denyeart,lesleyannj,RaewynM,,,,,,,,,,,,,,,,FGJ-105,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jhv:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,lesleyannj,RaewynM,,,,,,dev,main,,,,,,,,,true,"23/Apr/21 11:38 PM;bestbeforetoday;Updated to commons-io:2.8.0;;;",,,,,,,,,,,,,,,
v2.2 Javadoc includes internal packages,FGJ-109,46871,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,bestbeforetoday,bestbeforetoday,19/May/21 6:52 PM,20/May/21 12:22 AM,28/Oct/23 2:21 AM,20/May/21 12:22 AM,,,,0,,,,"The [published Javadoc for for v2.2|https://hyperledger.github.io/fabric-gateway-java/release-2.2/] includes the following internal packages:
* org.hyperledger.fabric.gateway.impl.commit
* org.hyperledger.fabric.gateway.impl.event
* org.hyperledger.fabric.gateway.impl.identity
* org.hyperledger.fabric.gateway.impl.query",,bestbeforetoday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01jsr:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,,,,,,,,,dev,main,,,,,,,,,true,,,,,,,,,,,,,,,,
Security vulnerability CVE-2021-21409 found in fabric-sdk-java netty dependency,FGJ-110,46912,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,RaewynM,RaewynM,07/Jun/21 9:59 PM,20/Aug/21 3:04 AM,28/Oct/23 2:21 AM,18/Jun/21 5:25 PM,,,,0,external,sdk-triaged,,"IBM MQ currently uses fabric-gateway-java 2.2.1 which pulls in fabric-sdk-java 2.2.5. Since https://jira.hyperledger.org/browse/FGJ-105 and https://jira.hyperledger.org/browse/FGJ-108 have been fixed and netty was updated to 4.1.60 in fabric-sdk-java 2.2.6, the following additional security vulnerability has been found, according to our ASOC scan:

1) *netty-codec-http2.jar*
URL: [https://vuln.whitesourcesoftware.com/vulnerability/CVE-2021-21409]
Resolution: Upgrade to version io.netty:netty-codec-http2:4.1.61.Final
(Although I notice the latest version available is : [https://mvnrepository.com/artifact/io.netty/netty-codec-http2/4.1.65.Final] )
 
Could you please update Netty again and let [~ibmmqmet] and myself know when the latest version of fabric-sdk-java is available, thanks.
FYI [~andrew-coleman] [~denyeart]",,bestbeforetoday,denyeart,ibmmqmet,lesleyannj,RaewynM,,,,,,,,,,,,,FGJ-113,,FGJ-105,,,,,FGJ-111,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k0r:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,ibmmqmet,lesleyannj,RaewynM,,,,,,,,,,,,,,,,"11/Jun/21 2:47 AM;bestbeforetoday;I am attempting to rationalise the dependencies slightly to address the issue with Gradle dependency resolution raised in FGJ-111. The (attempted) fix for that issue may (or may not!) also resolve this issue as a side-effect.;;;","16/Jun/21 7:59 PM;RaewynM;Hi [~bestbeforetoday] have you been able to make this update? We ideally need a fix and the updated version of fabric-sdk-java to be  available this week, to meet our MQ release code cut off date, thanks. FYI [~ibmmqmet];;;","17/Jun/21 1:43 AM;bestbeforetoday;[~RaewynM] [~ibmmqmet] I staged a release containing the fix to [FGJ-11|https://jira.hyperledger.org/browse/FGJ-111] last week but am waiting for confirmation from the reporter that it solves the problem in their environment. It is passing all of the tests so if you can confirm that it also solves your vulnerability, I can go ahead and release it ASAP. The staged release is at:

https://oss.sonatype.org/content/repositories/orghyperledgerfabric-sdk-java-1059/;;;","17/Jun/21 2:36 AM;RaewynM;Thanks [~bestbeforetoday] .

[~ibmmqmet] are you able to tell whether [https://oss.sonatype.org/content/repositories/orghyperledgerfabric-sdk-java-1059/org/hyperledger/fabric-sdk-java/fabric-sdk-java/2.2.7/] now contains netty-codec-http2:4.1.61.Final ? Thanks;;;","17/Jun/21 4:14 PM;ibmmqmet;That version doesn't seem to include the netty packages at all. I hope it's deliberate that it's been removed from the pom file. But I can't check whether it actually works without pulling down the entire dependency tree - there seem to be additional references lower in the chain which have lower version numbers and if this package is no longer overriding them, then it could get into an even worse state than before.

 

And this 2.2.7 version doesn't seem to have been released to a repo where mvn commands can pull it from.;;;","17/Jun/21 7:12 PM;bestbeforetoday;The explicit dependency on netty-codec-http2 was removed as this is not used directly by fabric-sdk-java, and the version mismatch with other gRPC libraries appears to cause version resolution issues for projects built with Gradle. I guess it was added explicitly at some point to avoid a vulnerability in a version of that transient dependency. This is something that a client project is free to do if necessary so I am not convinced that fabric-sdk-java is the correct place to do this.

The dependency on grpc-netty was changed to grpc-netty-shaded since I don't think there is any expectation that the client runs on Android -- in fact the README explicitly states that Android is not supported -- and the non-Android gRPC libraries have fewer transient dependencies in which security vulnerabilities may occur.

A client project built against this pre-release has this Maven dependency tree:
{noformat}
[INFO] \- org.hyperledger.fabric:fabric-gateway-java:jar:2.2.2:compile
[INFO]    +- org.hyperledger.fabric-sdk-java:fabric-sdk-java:jar:2.2.7:compile (version selected from constraint [2.2.0,2.3.0))
[INFO]    |  +- io.netty:netty-tcnative-boringssl-static:jar:2.0.39.Final:compile
[INFO]    |  +- io.grpc:grpc-netty-shaded:jar:1.38.0:compile
[INFO]    |  |  \- io.grpc:grpc-core:jar:1.38.0:compile (version selected from constraint [1.38.0,1.38.0])
[INFO]    |  |     +- com.google.android:annotations:jar:4.1.1.4:runtime
[INFO]    |  |     \- io.perfmark:perfmark-api:jar:0.23.0:runtime
[INFO]    |  +- io.grpc:grpc-protobuf:jar:1.38.0:compile
[INFO]    |  |  +- io.grpc:grpc-api:jar:1.38.0:compile
[INFO]    |  |  |  \- io.grpc:grpc-context:jar:1.38.0:compile
[INFO]    |  |  +- com.google.code.findbugs:jsr305:jar:3.0.2:compile
[INFO]    |  |  +- com.google.api.grpc:proto-google-common-protos:jar:2.0.1:compile
[INFO]    |  |  +- io.grpc:grpc-protobuf-lite:jar:1.38.0:compile
[INFO]    |  |  +- com.google.guava:guava:jar:30.1-android:compile
[INFO]    |  |  |  +- com.google.guava:failureaccess:jar:1.0.1:compile
[INFO]    |  |  |  +- com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava:compile
[INFO]    |  |  |  +- org.checkerframework:checker-compat-qual:jar:2.5.5:compile
[INFO]    |  |  |  \- com.google.j2objc:j2objc-annotations:jar:1.3:compile
[INFO]    |  |  +- com.google.errorprone:error_prone_annotations:jar:2.4.0:compile
[INFO]    |  |  \- org.codehaus.mojo:animal-sniffer-annotations:jar:1.19:runtime
[INFO]    |  +- io.grpc:grpc-stub:jar:1.38.0:compile
[INFO]    |  +- com.google.protobuf:protobuf-java:jar:3.17.3:compile
[INFO]    |  +- com.google.protobuf:protobuf-java-util:jar:3.17.3:compile
[INFO]    |  +- org.bouncycastle:bcpkix-jdk15on:jar:1.69:compile
[INFO]    |  |  +- org.bouncycastle:bcprov-jdk15on:jar:1.69:compile
[INFO]    |  |  \- org.bouncycastle:bcutil-jdk15on:jar:1.69:compile
[INFO]    |  +- commons-logging:commons-logging:jar:1.2:compile
[INFO]    |  +- commons-cli:commons-cli:jar:1.4:compile
[INFO]    |  +- org.apache.commons:commons-compress:jar:1.20:compile
[INFO]    |  +- commons-io:commons-io:jar:2.8.0:compile
[INFO]    |  +- org.apache.logging.log4j:log4j-core:jar:2.14.0:compile
[INFO]    |  |  \- org.apache.logging.log4j:log4j-api:jar:2.14.0:compile
[INFO]    |  +- org.apache.logging.log4j:log4j-1.2-api:jar:2.14.0:compile
[INFO]    |  +- org.apache.httpcomponents:httpclient:jar:4.5.13:compile
[INFO]    |  |  \- org.apache.httpcomponents:httpcore:jar:4.4.13:compile
[INFO]    |  +- com.spotify:futures-extra:jar:4.2.0:compile
[INFO]    |  +- com.google.api:api-common:jar:1.9.0:compile
[INFO]    |  |  \- com.google.auto.value:auto-value-annotations:jar:1.7:compile
[INFO]    |  +- org.glassfish:javax.json:jar:1.1.4:compile
[INFO]    |  +- org.yaml:snakeyaml:jar:1.26:compile
[INFO]    |  +- org.miracl.milagro.amcl:milagro-crypto-java:jar:0.4.0:compile
[INFO]    |  |  \- org.apache.commons:commons-math3:jar:3.6.1:compile
[INFO]    |  +- javax.xml.bind:jaxb-api:jar:2.3.1:compile
[INFO]    |  |  \- javax.activation:javax.activation-api:jar:1.2.0:compile
[INFO]    |  \- javax.annotation:javax.annotation-api:jar:1.3.2:compile
[INFO]    +- commons-codec:commons-codec:jar:1.14:compile
[INFO]    \- com.cloudant:cloudant-client:jar:2.19.0:compile
[INFO]       +- com.google.code.gson:gson:jar:2.8.2:compile
[INFO]       \- com.cloudant:cloudant-http:jar:2.19.0:compile
{noformat};;;","17/Jun/21 8:18 PM;ibmmqmet;OK. I've managed to get my update scripts pointed at this repository and it's downloaded those same levels. Building against that newer set of prereqs works but I can't actually test that the changes work at the moment because of unrelated problems with the network. Assuming it does run, it does look cleaner without those netty packages.;;;","17/Jun/21 8:25 PM;bestbeforetoday;This code passes the integration / scenario tests, so clients using it can interact successfully with Fabric. If it satisfies your code vulnerability scans then I can release it to Maven Central. Let me know if/when you want me to do that.;;;","18/Jun/21 5:25 PM;bestbeforetoday;I ran an OWASP scan on my client project with a dependency on the pre-release of fabric-sdk-java and it showed zero vulnerabilities.

The dependency update is released in fabric-sdk-java v2.2.7:
* https://github.com/hyperledger/fabric-sdk-java/releases/tag/v2.2.7
* https://search.maven.org/artifact/org.hyperledger.fabric-sdk-java/fabric-sdk-java/2.2.7/jar;;;","18/Jun/21 7:38 PM;RaewynM;Thanks [~bestbeforetoday] . Will the latest fabric-gateway-java 2.2.2 automatically pick up the latest fabric-sdk-java 2.2.7?  (MQ currently uses fabric:fabric-gateway-java:jar:2.2.1 and fabric-sdk-java:fabric-sdk-java:jar:2.2.5)

[~ibmmqmet] could you please pull the latest fabric packages in to MQ today, if you haven't started already, thanks.;;;","19/Jun/21 1:15 AM;bestbeforetoday;Yes, fabric-gateway-java v2.2.2 will automatically pick up the latest v2.2.x release of fabric-sdk-java;;;",,,,,
java.lang.NoSuchMethodError: io.netty.buffer.PooledByteBufAllocator.<init>,FGJ-111,46921,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,indranil32,indranil32,10/Jun/21 1:31 AM,25/Apr/22 2:59 AM,28/Oct/23 2:21 AM,18/Jun/21 5:15 PM,,,,0,external,,,"Local setup as per - [https://hyperledger-fabric.readthedocs.io/en/release-2.2/test_network.html]

[https://hyperledger-fabric.readthedocs.io/en/release-1.1/prereqs.html]

 
{code:java}
$ docker --version
Docker version 19.03.8, build afacb8b

$ docker-compose --version
docker-compose version 1.25.5, build 8a1c60f6

$ go version
go version go1.14 windows/amd64

$ node --version
v10.16.3

$ npm --version
6.9.0

$ python --version
Python 2.7.17

$ peer version
peer:
 Version: 2.3.2
 Commit SHA: 0022e8fd8
 Go version: go1.15.7
 OS/Arch: windows/amd64
 Chaincode:
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger

{code}
Client Application dependency
{code:java}
dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.hyperledger.fabric:fabric-gateway-java:2.2.1'
    // PLEASE NOTICE I AM USING SPRING BOOT
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
{code}
Error
{code:java}
org.hyperledger.fabric.sdk.exception.ProposalException: getConfigBlock for channel mychannel failed with peer peer0.org1.example.com. Status FAILURE, details: Channel Channel{id: 1, name:
mychannel } Sending proposal with transaction: 227ac21c1d271ebcd252c3f7e261c998f0fab426ed6ea0a80e4c4aa96675dba3 to Peer{ id: 2, name: peer0.org1.example.com, channelName: mychannel , url: grpcs
://localhost:7051, mspid: Org1MSP} failed because of: gRPC failure=Status{code=INTERNAL, description=Panic! This is a bug!, cause=java.lang.NoSuchMethodError: io.netty.buffer.PooledByteBufAllocator.<init>(ZIIIIIIZ)V
at io.grpc.netty.Utils.createByteBufAllocator(Utils.java:172)
{code}
Dependency Tree / Detailed Stack Trace attached

 ",,bestbeforetoday,indranil32,kentbull,,,,,,,,,,,,,,,,,,,FGJ-106,FGJ-110,,,"10/Jun/21 1:31 AM;indranil32;deps-tree.txt;https://jira.hyperledger.org/secure/attachment/19012/deps-tree.txt","10/Jun/21 1:31 AM;indranil32;full-stack-trace.txt;https://jira.hyperledger.org/secure/attachment/19013/full-stack-trace.txt",,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01k2r:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,indranil32,kentbull,,,,,,,dev,main,,,,,,,,,true,"10/Jun/21 1:58 AM;bestbeforetoday;Thank you for the detailed information. Do you see the same error using fabric-gateway-java:2.2.2?;;;","10/Jun/21 12:26 PM;indranil32;Same error with 2.2.2. 

Works with 2.1.1.;;;","10/Jun/21 7:19 PM;bestbeforetoday;It looks like a dependency resolution issue. Perhaps a difference between Maven (used to build fabric-sdk-java) and Gradle (which you are using). fabric-sdk-java has an explicit dependency on io.netty:netty-codec-http2:4.1.60.Final and that is what I am seeing resolved as a dependency of a Maven project I have built that depends on org.hyperledger.fabric:fabric-gateway-java:2.2.2. Your dependency tree shows io.netty:netty-codec-http2:4.1.51.Final resolved, I guess since that is the version specified by io.grpc:grpc-netty:1.35.0.

The failure actually occurs accessing classes in io.netty:netty-buffer, which is a dependency of io.netty:netty-codec-http2. In my environment I see that resolved as io.netty:netty-buffer:4.1.60.Final whereas yours is io.netty:netty-buffer:4.1.51.Final.

Maven uses the version of the closest dependency to your project in the tree of dependencies, so I expect the fabric-sdk-java dependency version to win, which is what I am seeing using Maven. Gradle seems to be doing something different.

As a short-term fix, you might be able to workaround the issue by adding some explicit dependencies in your project. Longer term I'm going to see if I can either remove some explicit dependencies from fabric-sdk-java, or at least better align the fabric-sdk-java dependencies with the transitive dependencies used by gRPC.;;;","11/Jun/21 6:13 PM;bestbeforetoday;[~indranil32] I have staged a v2.2.7 pre-release build at:

https://oss.sonatype.org/content/repositories/orghyperledgerfabric-sdk-java-1059/

Is it possible for you to try this out to see if it resolves the dependency issues for you?;;;","25/Apr/22 2:59 AM;kentbull;This was helpful, thank you. I just explicitly added a dependency on the latest version of `netty-buffer` and set my mavenBom to use a GRPC version of 1.43.2

{code:groovy}
extra[""grpcVersion""] = ""1.43.2""
dependencyManagement {
	imports {
		///... other deps
		mavenBom(""io.grpc:grpc-bom:${property(""grpcVersion"")}"")
	}
}
dependencies {
    implementation(""io.netty:netty-buffer:4.1.76.Final"")
}
{code}
;;;",,,,,,,,,,,
PeerEventServiceClient to make connections with peers from same as client organization,FGJ-112,46977,Story,Backlog,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,,,jital,jital,24/Jun/21 2:18 PM,02/Sep/21 10:48 PM,28/Oct/23 2:21 AM,,,,,0,external,,,"Currently PeerEventServiceClient in gateway java connects with peers of all organizations. This behavior needs to be modified to connecting to peers of client's organization. 


Open Questions
if there are no eventing peers in client's organization, what should the behavior be?",,jital,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kez:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),jital,,,,,,,,,,,,,,,,,,,,"24/Jun/21 2:20 PM;jital;Pasting from chat [~bestbeforetoday] 


The Node SDK is implemented differently and only tries to pull events from a single peer at a time. It may be a bit ambitious to try to make such a big change to the Java SDK. 

The pool of peers selected for eventing by the Node SDK is limited to the peers in the client's org (unless there are no peers in their org, in which case all network peers are considered). An approach similar to this might be more practical for the Java SDK. 

So only peers in the client's org are marked as having the {{PeerRole.EVENT_SOURCE }}role, and that role is not included for peers in other orgs. 
So the SDK would still be actively receiving events from multiple peers, but only peers in the client's org.

 Just need to consider the case where the client's org does not have any peers, and how to deal with that. A simple option might be to have a configuration flag, but this makes it much easier for clients to get it wrong and be confused why eventing isn't working. Better would be to be able to detect that condition automatically and react appropriatel;;;",,,,,,,,,,,,,,,
Security vulnerability CVE-2021-36090 found in fabric-sdk-java commons-compress dependency,FGJ-113,47122,Bug,Closed,FGJ,Fabric Gateway Java,software,andrew-coleman,,,Medium,Done,bestbeforetoday,RaewynM,RaewynM,20/Aug/21 3:04 AM,28/Aug/21 12:32 AM,28/Oct/23 2:21 AM,27/Aug/21 10:39 PM,,,,0,external,sdk-triaged,,"IBM MQ currently uses fabric-gateway-java 2.2.2 which pulls in fabric-sdk-java 2.2.7.

Our recent MQ ASOC Open Source scans show a new *commons-compress* issue raised on 24th July, saying we need to update commons-compress from 1.20 to 1.21 in fabric-sdk-java.

https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-36090 has a CVSS score of 7.5, 
  
 Could you please update the commons-compress level (and any other dependencies that need updating) and let [~ibmmqmet] and myself know when the latest version of fabric-sdk-java is available, thanks.
 FYI [~andrew-coleman] [~denyeart]",,bestbeforetoday,denyeart,ibmmqmet,lesleyannj,RaewynM,,,,,,,,,,,,,,,FGJ-110,,,,,,,,,,,(Please add high level design or a link to the design),Unset,Unset,Unset,,,,,No,,Unset,No,,,"1|i01kub:",,,,Unset,Unset,,,,,(Please add steps to reproduce),,Unset,,,,,,Unset,,Unset,,(Please add usage information),bestbeforetoday,denyeart,ibmmqmet,lesleyannj,RaewynM,,,,,,,,,,,,,,,,"27/Aug/21 6:38 PM;RaewynM;hi [~bestbeforetoday] it looks like this *commons-compress* pre-req level update to 1.21 has been done now in fabric-sdk-java 2.2.8, thanks. Was it done under this github issue or elsewhere?

FYI [~ibmmqmet];;;","27/Aug/21 10:38 PM;bestbeforetoday;[~RaewynM] It was actually happened as part of a fix for a chaincode-related build failure to satisfy the vulnerability checks currently running in the _main_ branch builds: https://github.com/hyperledger/fabric-sdk-java/pull/143

So not specifically to address this issue but, since it does solve this, I'll close it out. Thanks for the spot!;;;","28/Aug/21 12:32 AM;RaewynM;Thanks [~bestbeforetoday];;;",,,,,,,,,,,,,
